	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc7612a --dep-file=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\.IfxCcu6.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -DNDEBUG -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --no-warnings=542 --make-target=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.src ..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c"
	.compiler_name		"ctc"
	;source	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c'

	
$TC16X
	.sdecl	'.zrodata.IfxCcu6..6.cnt',data,rom
	.sect	'.zrodata.IfxCcu6..6.cnt'
	.align	2
.6.cnt:	.type	object
	.size	.6.cnt,4
	.word	-268205024
	.sdecl	'.zrodata.IfxCcu6..7.cnt',data,rom
	.sect	'.zrodata.IfxCcu6..7.cnt'
	.align	2
.7.cnt:	.type	object
	.size	.7.cnt,4
	.word	1182794752
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_connectTrigger',code,cluster('IfxCcu6_connectTrigger')
	.sect	'.text.IfxCcu6.IfxCcu6_connectTrigger'
	.align	2
	
	.global	IfxCcu6_connectTrigger

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	     2   * \file IfxCcu6.c
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	     3   * \brief CCU6  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	     4   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	     5   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	     7   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	     9   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    10   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    15   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    16   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    22   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    24   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    25  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    26  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    27  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    28  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    29  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    30  #include "IfxCcu6.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    31  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    32  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    33  /*-------------------------Function Implementations---------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    34  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    36  void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger)
; Function IfxCcu6_connectTrigger
.L89:
IfxCcu6_connectTrigger:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    37  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    38      unsigned mosel = ccu6->MOSEL.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    39      uint16   shift = (uint16)outputLine;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    40      uint16   data  = 2 * selectedTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    41  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    42      if (ccu6 == &MODULE_CCU61)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    43      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    44          data = data + 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    45      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    46  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    47      mosel         = ccu6->MOSEL.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    48      __ldmst_c(&mosel, (0x7U << shift), (data << shift));
	mov	d0,#7
	ld.w	d15,[a4]12
.L475:
	sh	d0,d0,d4
	ld.w	d15,[a4]12
.L244:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     2   * \file IfxCpu_Intrinsics.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     3   * \ingroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     4   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     5   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     7   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     9   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    10   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    14   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    15   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    16   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    22   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    23   * \defgroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    24   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    26   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    27  #ifndef IFXCPU_INTRINSICS_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    28  #define IFXCPU_INTRINSICS_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    29  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    30  #include "Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    31  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    32  #if defined(__DCC__)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    33  #include "IfxCpu_IntrinsicsDcc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    34  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    35  #elif defined(__GNUC__)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    36  #include "IfxCpu_IntrinsicsGnuc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    38  #elif defined(__TASKING__)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    39  #include "IfxCpu_IntrinsicsTasking.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    41  #else
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    42  #error Compiler unsupported
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    43  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    45  #define IFX_ALIGN_8   (1)            // Align on 8 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    46  #define IFX_ALIGN_16  (2)            // Align on 16 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    47  #define IFX_ALIGN_32  (4)            // Align on 32 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    48  #define IFX_ALIGN_64  (8)            // Align on 64 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    49  #define IFX_ALIGN_256 (32)           // Align on 256 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    50  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    51  #define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    52  #define Ifx_AlignOn64(Size)  ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    53  #define Ifx_AlignOn32(Size)  ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    54  #define Ifx_AlignOn16(Size)  ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    55  #define Ifx_AlignOn8(Size)   ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    57  #define Ifx_COUNTOF(x)       (sizeof(x) / sizeof(x[0]))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    59  //______________________________________________________________________________
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    61  /** Convert context pointer to address pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    62   * \param[in] cx context pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    63   * \return address pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    64   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    65  IFX_INLINE void *__cx_to_addr(uint32 cx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    66  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    67      uint32 seg_nr = __extru(cx, 16, 4);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    68      return (void *)__insert(seg_nr << 28, cx, 6, 16);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    69  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    70  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    71  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    72  /** Convert address pointer to context pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    73   * \param[in] addr address pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    74   * \return context pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    75   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    76  IFX_INLINE uint32 __addr_to_cx(void *addr)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    77  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    78      uint32 seg_nr, seg_idx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    79      seg_nr  = __extru((int)addr, 28, 4) << 16;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    80      seg_idx = __extru((int)addr, 6, 16);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    81      return seg_nr | seg_idx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    82  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    84  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    85  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    86  IFX_INLINE void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    87  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    88      *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
	mov	d1,#-1
	lea	a15,0xf0002b00
.L476:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     2   * \file IfxCpu_Intrinsics.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     3   * \ingroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     4   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     5   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     7   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     9   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    10   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    14   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    15   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    16   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    22   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    23   * \defgroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    24   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    26   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    27  #ifndef IFXCPU_INTRINSICS_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    28  #define IFXCPU_INTRINSICS_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    29  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    30  #include "Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    31  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    32  #if defined(__DCC__)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    33  #include "IfxCpu_IntrinsicsDcc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    34  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    35  #elif defined(__GNUC__)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    36  #include "IfxCpu_IntrinsicsGnuc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    38  #elif defined(__TASKING__)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    39  #include "IfxCpu_IntrinsicsTasking.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    41  #else
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    42  #error Compiler unsupported
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    43  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    45  #define IFX_ALIGN_8   (1)            // Align on 8 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    46  #define IFX_ALIGN_16  (2)            // Align on 16 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    47  #define IFX_ALIGN_32  (4)            // Align on 32 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    48  #define IFX_ALIGN_64  (8)            // Align on 64 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    49  #define IFX_ALIGN_256 (32)           // Align on 256 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    50  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    51  #define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    52  #define Ifx_AlignOn64(Size)  ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    53  #define Ifx_AlignOn32(Size)  ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    54  #define Ifx_AlignOn16(Size)  ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    55  #define Ifx_AlignOn8(Size)   ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    57  #define Ifx_COUNTOF(x)       (sizeof(x) / sizeof(x[0]))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    59  //______________________________________________________________________________
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    61  /** Convert context pointer to address pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    62   * \param[in] cx context pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    63   * \return address pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    64   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    65  IFX_INLINE void *__cx_to_addr(uint32 cx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    66  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    67      uint32 seg_nr = __extru(cx, 16, 4);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    68      return (void *)__insert(seg_nr << 28, cx, 6, 16);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    69  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    70  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    71  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    72  /** Convert address pointer to context pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    73   * \param[in] addr address pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    74   * \return context pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    75   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    76  IFX_INLINE uint32 __addr_to_cx(void *addr)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    77  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    78      uint32 seg_nr, seg_idx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    79      seg_nr  = __extru((int)addr, 28, 4) << 16;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    80      seg_idx = __extru((int)addr, 6, 16);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    81      return seg_nr | seg_idx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    82  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    84  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    85  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    86  IFX_INLINE void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    87  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    88      *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
	xor	d1,d0
.L477:
	and	d15,d1
	eq.a	d1,a4,a15
.L423:
	sha	d5,#1
.L422:
	add	d1,d5
.L478:
	sha	d1,d1,d4
.L479:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     2   * \file IfxCpu_Intrinsics.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     3   * \ingroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     4   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     5   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     7   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	     9   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    10   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    14   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    15   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    16   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    22   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    23   * \defgroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    24   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    26   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    27  #ifndef IFXCPU_INTRINSICS_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    28  #define IFXCPU_INTRINSICS_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    29  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    30  #include "Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    31  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    32  #if defined(__DCC__)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    33  #include "IfxCpu_IntrinsicsDcc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    34  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    35  #elif defined(__GNUC__)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    36  #include "IfxCpu_IntrinsicsGnuc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    38  #elif defined(__TASKING__)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    39  #include "IfxCpu_IntrinsicsTasking.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    41  #else
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    42  #error Compiler unsupported
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    43  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    45  #define IFX_ALIGN_8   (1)            // Align on 8 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    46  #define IFX_ALIGN_16  (2)            // Align on 16 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    47  #define IFX_ALIGN_32  (4)            // Align on 32 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    48  #define IFX_ALIGN_64  (8)            // Align on 64 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    49  #define IFX_ALIGN_256 (32)           // Align on 256 bit Boundary
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    50  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    51  #define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    52  #define Ifx_AlignOn64(Size)  ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    53  #define Ifx_AlignOn32(Size)  ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    54  #define Ifx_AlignOn16(Size)  ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    55  #define Ifx_AlignOn8(Size)   ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    57  #define Ifx_COUNTOF(x)       (sizeof(x) / sizeof(x[0]))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    59  //______________________________________________________________________________
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    61  /** Convert context pointer to address pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    62   * \param[in] cx context pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    63   * \return address pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    64   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    65  IFX_INLINE void *__cx_to_addr(uint32 cx)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    66  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    67      uint32 seg_nr = __extru(cx, 16, 4);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    68      return (void *)__insert(seg_nr << 28, cx, 6, 16);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    69  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    70  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    71  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    72  /** Convert address pointer to context pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    73   * \param[in] addr address pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    74   * \return context pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    75   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    76  IFX_INLINE uint32 __addr_to_cx(void *addr)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    77  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    78      uint32 seg_nr, seg_idx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    79      seg_nr  = __extru((int)addr, 28, 4) << 16;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    80      seg_idx = __extru((int)addr, 6, 16);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    81      return seg_nr | seg_idx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    82  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    84  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    85  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    86  IFX_INLINE void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    87  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu_Intrinsics.h	    88      *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
	and	d0,d1
.L424:
	or	d15,d0

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    49      ccu6->MOSEL.U = mosel;
	st.w	[a4]12,d15
.L245:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    50  }
	ret
.L232:
	
__IfxCcu6_connectTrigger_function_end:
	.size	IfxCcu6_connectTrigger,__IfxCcu6_connectTrigger_function_end-IfxCcu6_connectTrigger
.L136:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_disableModulationOutput',code,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.text.IfxCcu6.IfxCcu6_disableModulationOutput'
	.align	2
	
	.global	IfxCcu6_disableModulationOutput

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    51  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    52  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    53  void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut)
; Function IfxCcu6_disableModulationOutput
.L91:
IfxCcu6_disableModulationOutput:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    54  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    55      uint32 shift, mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    56  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    57      if (timer != IfxCcu6_TimerId_t13)
	jeq	d4,#1,.L2
.L655:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    58      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    59          if (channelOut != IfxCcu6_ChannelOut_cout3)
	jeq	d5,#6,.L3
.L656:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    60          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    61              shift          = channelOut;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    62              mask           = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    63              ccu6->MODCTR.U = ccu6->MODCTR.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    64          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    65          else
	j	.L4
.L2:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    66          {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    67      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    68      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    69      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    70          if (channelOut != IfxCcu6_ChannelOut_cout3)
	jeq	d5,#6,.L5
.L657:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    71          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    72              shift          = channelOut + 8;
	add	d5,d5,#8
.L4:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    73              mask           = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    74              ccu6->MODCTR.U = ccu6->MODCTR.U & ~(mask);
	mov	d0,#1
	ld.w	d15,[a4]128
.L658:
	sha	d0,d0,d5
.L659:
	mov	d1,#-1
	xor	d0,d1
.L660:
	and	d15,d0
	st.w	[a4]128,d15
.L3:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    75          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    76          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    77          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    78              ccu6->MODCTR.B.ECT13O = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    79          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    80      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    81  }
	ret
.L5:
	ld.bu	d15,[a4]129
.L661:
	insert	d15,d15,#0,#7,#1
	st.b	[a4]129,d15
.L662:
	ret
.L401:
	
__IfxCcu6_disableModulationOutput_function_end:
	.size	IfxCcu6_disableModulationOutput,__IfxCcu6_disableModulationOutput_function_end-IfxCcu6_disableModulationOutput
.L211:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_enableModulationOutput',code,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.text.IfxCcu6.IfxCcu6_enableModulationOutput'
	.align	2
	
	.global	IfxCcu6_enableModulationOutput

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    82  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    83  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    84  void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut)
; Function IfxCcu6_enableModulationOutput
.L93:
IfxCcu6_enableModulationOutput:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    85  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    86      uint32 shift, mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    87  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    88      if (timer != IfxCcu6_TimerId_t13)
	jeq	d4,#1,.L7
.L667:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    89      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    90          if (channelOut != IfxCcu6_ChannelOut_cout3)
	jeq	d5,#6,.L8
.L668:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    91          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    92              shift          = channelOut;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    93              mask           = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    94              ccu6->MODCTR.U = ccu6->MODCTR.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    95          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    96          else
	j	.L9
.L7:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    97          {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    98      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	    99      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   100      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   101          if (channelOut != IfxCcu6_ChannelOut_cout3)
	jeq	d5,#6,.L10
.L669:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   102          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   103              shift          = channelOut + 8;
	add	d5,d5,#8
.L9:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   104              mask           = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   105              ccu6->MODCTR.U = ccu6->MODCTR.U | (mask);
	mov	d0,#1
	ld.w	d15,[a4]128
.L670:
	sha	d0,d0,d5
.L671:
	or	d15,d0
	st.w	[a4]128,d15
.L8:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   106          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   107          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   108          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   109              ccu6->MODCTR.B.ECT13O = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   110          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   111      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   112  }
	ret
.L10:
	ld.bu	d15,[a4]129
.L672:
	or	d15,#128
	st.b	[a4]129,d15
.L673:
	ret
.L406:
	
__IfxCcu6_enableModulationOutput_function_end:
	.size	IfxCcu6_enableModulationOutput,__IfxCcu6_enableModulationOutput_function_end-IfxCcu6_enableModulationOutput
.L216:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_enableModule',code,cluster('IfxCcu6_enableModule')
	.sect	'.text.IfxCcu6.IfxCcu6_enableModule'
	.align	2
	
	.global	IfxCcu6_enableModule

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   113  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   114  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   115  void IfxCcu6_enableModule(Ifx_CCU6 *ccu6)
; Function IfxCcu6_enableModule
.L95:
IfxCcu6_enableModule:	.type	func
	mov.aa	a15,a4
.L426:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   116  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   117      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L425:
	mov	d15,d2
.L428:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   118      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d15
	call	IfxScuWdt_clearCpuEndinit
.L427:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   119      ccu6->CLC.U = 0x00000000;
	mov	d0,#0
	st.w	[a15],d0
.L678:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   120      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d15
	call	IfxScuWdt_setCpuEndinit

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   122      /* Wait until module is enabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   123      while (IfxCcu6_isModuleEnabled(ccu6) == FALSE)
.L12:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    24   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    35   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    36  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    39  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    43  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    51  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    55  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    60   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    62  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    73   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    75  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    81  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    83   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    85  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    90  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    92   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    94  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   106   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   108  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   118  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   121   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   123  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   131   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   133  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   145   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   147  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   161   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   187   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   189  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   198  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   203  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   212   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   214  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   223   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   225  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   229  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   231   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   233  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   240   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   242  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   258  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   261   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   270   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   272  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   278  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   281   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   283  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   289  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   292   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   305  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   307   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   309  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   316   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   345   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   347  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   351  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   364   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   366  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   375  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   382  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   388   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   394   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   401   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   407   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   413   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   419   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   431   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   437   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   443   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   449   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   451  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   457   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   459  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   464   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   466  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   486   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   488  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   493   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   495  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   501   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   503  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   508   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   510  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   515   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   517  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   522   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   539   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   547   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   549  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   555   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   562   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   569   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   571  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   576   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   578  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   583   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   585  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   590   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   592  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   597   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   599  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   604   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   606  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   611   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   613  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   618   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   620  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   633   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   641   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   650   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   652  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   662   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   679   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   681  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   687   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   689  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   695   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   705   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   707  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   712   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   714  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   719   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   721  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   728   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   735   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   761   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   763  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   768   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   770  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   774   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   776  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   782   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   784  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   789   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   791  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   815   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   817  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   833   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   835  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   840   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   842  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   846   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   848  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   853   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   855  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   889   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   891  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   896   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   898  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   902   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   904  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   910   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   912  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   917   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   919  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   924   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   926  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   931   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   933  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   938   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   940  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   951   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   953  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   959   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   961  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   966   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   968  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   972   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   974  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   978   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   980  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   985   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   997   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1020  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1028  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1035  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1042  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1070  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1082  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1090  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1101  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1120  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1127  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1164  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1179  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1187  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1217  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1230  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1241  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1247  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1251  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1260  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1266  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1300  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1307  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1314  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1326  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1337  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1356  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1365  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1388  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1389  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1408  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1428  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1440  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1446  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1456  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1463  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1468  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1475  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1484  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1489  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1505  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1506  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1512  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1513  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1519  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1533  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1540  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1545  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1551  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1552  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1558  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1565  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1572  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1573  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1579  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1580  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1586  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1587  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1593  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1594  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1600  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1601  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1607  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1608  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1614  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1615  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1621  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1622  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1628  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1629  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1636  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1642  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1649  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1650  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1657  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1663  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1670  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1671  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1677  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1678  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1685  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
	ld.bu	d15,[a15]
.L415:
	jnz.t	d15:1,.L12
.L679:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   124      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   125  }
	ret
.L411:
	
__IfxCcu6_enableModule_function_end:
	.size	IfxCcu6_enableModule,__IfxCcu6_enableModule_function_end-IfxCcu6_enableModule
.L221:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getCaptureRegisterValue',code,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.text.IfxCcu6.IfxCcu6_getCaptureRegisterValue'
	.align	2
	
	.global	IfxCcu6_getCaptureRegisterValue

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   126  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   127  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   128  uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; Function IfxCcu6_getCaptureRegisterValue
.L97:
IfxCcu6_getCaptureRegisterValue:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   129  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   130      uint32 value = 0;
	mov	d2,#0
.L429:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   131  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   132      switch (channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   133      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   134      case 0:
	jeq	d4,#0,.L13
.L613:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   135      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   136          value = ccu6->CC60R.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   137          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   138      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   139      case 1:
	jeq	d4,#1,.L14
.L614:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   140      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   141          value = ccu6->CC61R.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   142          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   143      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   144      case 2:
	jeq	d4,#2,.L15
.L615:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   145      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   146          value = ccu6->CC62R.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   147          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   148      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   149      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   151      return value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   152  }
	ret
.L13:
	ld.w	d2,[a4]48
.L616:
	ret
.L14:
	ld.w	d2,[a4]52
.L617:
	ret
.L15:
	ld.w	d2,[a4]56
.L618:
	ret
.L378:
	
__IfxCcu6_getCaptureRegisterValue_function_end:
	.size	IfxCcu6_getCaptureRegisterValue,__IfxCcu6_getCaptureRegisterValue_function_end-IfxCcu6_getCaptureRegisterValue
.L186:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getCaptureShadowRegisterValue',code,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.text.IfxCcu6.IfxCcu6_getCaptureShadowRegisterValue'
	.align	2
	
	.global	IfxCcu6_getCaptureShadowRegisterValue

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   155  uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; Function IfxCcu6_getCaptureShadowRegisterValue
.L99:
IfxCcu6_getCaptureShadowRegisterValue:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   157      uint32 value = 0;
	mov	d2,#0
.L430:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   159      switch (channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   160      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   161      case 0:
	jeq	d4,#0,.L20
.L623:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   162      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   163          value = ccu6->CC60SR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   164          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   165      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   166      case 1:
	jeq	d4,#1,.L21
.L624:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   167      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   168          value = ccu6->CC61SR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   169          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   170      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   171      case 2:
	jeq	d4,#2,.L22
.L625:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   172      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   173          value = ccu6->CC62SR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   174          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   175      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   176      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   178      return value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   179  }
	ret
.L20:
	ld.w	d2,[a4]64
.L626:
	ret
.L21:
	ld.w	d2,[a4]68
.L627:
	ret
.L22:
	ld.w	d2,[a4]72
.L628:
	ret
.L382:
	
__IfxCcu6_getCaptureShadowRegisterValue_function_end:
	.size	IfxCcu6_getCaptureShadowRegisterValue,__IfxCcu6_getCaptureShadowRegisterValue_function_end-IfxCcu6_getCaptureShadowRegisterValue
.L191:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getIndex',code,cluster('IfxCcu6_getIndex')
	.sect	'.text.IfxCcu6.IfxCcu6_getIndex'
	.align	2
	
	.global	IfxCcu6_getIndex

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   181  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   182  sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6)
; Function IfxCcu6_getIndex
.L101:
IfxCcu6_getIndex:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   183  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   184      sint32 result = -1, index;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   185  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   186      for (index = 0; index < IFXCCU6_NUM_MODULES; index++)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   187      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   188          if (IfxCcu6_indexMap[index].module == ccu6)
	mov	d2,#-1
	movh.a	a15,#@his(IfxCcu6_indexMap)
.L431:
	lea	a15,[a15]@los(IfxCcu6_indexMap)
.L633:
	mov.a	a2,#1
.L27:
	ld.a	a5,[a15]
.L634:
	jne.a	a5,a4,.L28
.L635:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   189          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   190              result = IfxCcu6_indexMap[index].index;
	ld.w	d2,[a15]4
.L636:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   191              break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   192          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   193      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   195      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   196  }
	ret
.L28:
	lea	a15,[a15]8
	loop	a2,.L27
.L637:
	ret
.L387:
	
__IfxCcu6_getIndex_function_end:
	.size	IfxCcu6_getIndex,__IfxCcu6_getIndex_function_end-IfxCcu6_getIndex
.L196:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getSrcAddress',code,cluster('IfxCcu6_getSrcAddress')
	.sect	'.text.IfxCcu6.IfxCcu6_getSrcAddress'
	.align	2
	
	.global	IfxCcu6_getSrcAddress

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   197  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   198  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   199  volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest)
; Function IfxCcu6_getSrcAddress
.L103:
IfxCcu6_getSrcAddress:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   200  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   201      sint32                 moduleIdx = IfxCcu6_getIndex(ccu6);
	mov	d15,d4
	call	IfxCcu6_getIndex
.L432:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   202      volatile Ifx_SRC_SRCR *srcr;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   203      srcr = &(MODULE_SRC.CCU6.CCU6[moduleIdx].SR0);
	ld.w	d0,.6.cnt
.L642:
	sha	d2,#4
.L433:
	add	d0,d2
.L643:
	mov.a	a15,d0
.L644:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   204      return &(srcr[serviceRequest]);
	addsc.a	a2,a15,d15,#2
.L645:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   205  }
	ret
.L392:
	
__IfxCcu6_getSrcAddress_function_end:
	.size	IfxCcu6_getSrcAddress,__IfxCcu6_getSrcAddress_function_end-IfxCcu6_getSrcAddress
.L201:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_readTimer',code,cluster('IfxCcu6_readTimer')
	.sect	'.text.IfxCcu6.IfxCcu6_readTimer'
	.align	2
	
	.global	IfxCcu6_readTimer

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   206  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   208  uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; Function IfxCcu6_readTimer
.L105:
IfxCcu6_readTimer:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   209  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   210      uint32 result = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   211  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   212      if (timer != IfxCcu6_TimerId_t13)
	jeq	d4,#1,.L32
.L650:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   213      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   214          result = ccu6->T12.U;
	ld.w	d2,[a4]32
.L434:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   215      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   216      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   217      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   218          result = ccu6->T13.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   219      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   221      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   222  }
	ret
.L32:
	ld.w	d2,[a4]80
.L435:
	ret
.L396:
	
__IfxCcu6_readTimer_function_end:
	.size	IfxCcu6_readTimer,__IfxCcu6_readTimer_function_end-IfxCcu6_readTimer
.L206:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_resetModule',code,cluster('IfxCcu6_resetModule')
	.sect	'.text.IfxCcu6.IfxCcu6_resetModule'
	.align	2
	
	.global	IfxCcu6_resetModule

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   223  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   225  void IfxCcu6_resetModule(Ifx_CCU6 *ccu6)
; Function IfxCcu6_resetModule
.L107:
IfxCcu6_resetModule:	.type	func
	mov.aa	a15,a4
.L437:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   227      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L436:
	mov	d8,d2
.L439:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   228  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   229      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L438:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   230      ccu6->KRST0.B.RST = 1;          /* Only if both Kernel reset bits are set a reset is executed */
	ld.bu	d15,[a15]244
.L684:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   231      ccu6->KRST1.B.RST = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   232      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
.L440:
	or	d15,#1
	st.b	[a15]244,d15
.L685:
	ld.bu	d15,[a15]240
.L686:
	or	d15,#1
	st.b	[a15]240,d15
.L687:
	call	IfxScuWdt_setCpuEndinit

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   233  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   234      while (0 == ccu6->KRST0.B.RSTSTAT)  /* Wait until reset is executed */
.L35:
	ld.bu	d15,[a15]244
.L688:
	jz.t	d15:1,.L35
.L689:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   235  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   236      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   238      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L690:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   239      ccu6->KRSTCLR.B.CLR = 1;            /* Clear Kernel reset status bit */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   240      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
	ld.bu	d15,[a15]236
.L441:
	or	d15,#1
	st.b	[a15]236,d15
.L691:
	j	IfxScuWdt_setCpuEndinit
.L419:
	
__IfxCcu6_resetModule_function_end:
	.size	IfxCcu6_resetModule,__IfxCcu6_resetModule_function_end-IfxCcu6_resetModule
.L226:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_routeInterruptNode',code,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.text.IfxCcu6.IfxCcu6_routeInterruptNode'
	.align	2
	
	.global	IfxCcu6_routeInterruptNode

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   241  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   242  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   244  void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest)
; Function IfxCcu6_routeInterruptNode
.L109:
IfxCcu6_routeInterruptNode:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   245  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   246      if ((source == IfxCcu6_InterruptSource_cc60RisingEdge) || (source == IfxCcu6_InterruptSource_cc60FallingEdge))
	jeq	d4,#0,.L36
.L484:
	jne	d4,#1,.L37
.L36:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   247      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   248          ccu6->INP.B.INPCC60 = serviceRequest;
	ld.bu	d15,[a4]172
.L485:
	insert	d15,d15,d5,#0,#2
	j	.L38
.L37:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   249      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   250      else if ((source == IfxCcu6_InterruptSource_cc61RisingEdge) || (source == IfxCcu6_InterruptSource_cc61FallingEdge))
	jeq	d4,#2,.L39
.L486:
	jne	d4,#3,.L40
.L39:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   251      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   252          ccu6->INP.B.INPCC61 = serviceRequest;
	ld.bu	d15,[a4]172
.L487:
	insert	d15,d15,d5,#2,#2
	j	.L41
.L40:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   253      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   254      else if ((source == IfxCcu6_InterruptSource_cc62RisingEdge) || (source == IfxCcu6_InterruptSource_cc62FallingEdge))
	jeq	d4,#4,.L42
.L488:
	jne	d4,#5,.L43
.L42:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   255      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   256          ccu6->INP.B.INPCC62 = serviceRequest;
	ld.bu	d15,[a4]172
.L489:
	insert	d15,d15,d5,#4,#2
	j	.L44
.L43:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   257      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   258      else if ((source == IfxCcu6_InterruptSource_correctHallEvent))
	mov	d15,#12
.L490:
	jne	d15,d4,.L45
.L491:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   259      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   260          ccu6->INP.B.INPCHE = serviceRequest;
	ld.bu	d15,[a4]172
.L492:
	insert	d15,d15,d5,#6,#2
.L44:
.L41:
.L38:
	st.b	[a4]172,d15
.L493:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   261      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   262      else if ((source == IfxCcu6_InterruptSource_trap) || (source == IfxCcu6_InterruptSource_wrongHallEvent))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   263      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   264          ccu6->INP.B.INPERR = serviceRequest;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   265      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   266      else if ((source == IfxCcu6_InterruptSource_t12OneMatch) || (source == IfxCcu6_InterruptSource_t12PeriodMatch))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   267      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   268          ccu6->INP.B.INPT12 = serviceRequest;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   269      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   270      else if ((source == IfxCcu6_InterruptSource_t13CompareMatch) || (source == IfxCcu6_InterruptSource_t13PeriodMatch))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   271      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   272          ccu6->INP.B.INPT13 = serviceRequest;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   273      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   274      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   275      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   276          __debug();
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   277      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   278  }
	ret
.L45:
	mov	d15,#10
.L494:
	jeq	d15,d4,.L47
.L495:
	mov	d15,#13
.L496:
	jne	d15,d4,.L48
.L47:
	ld.bu	d15,[a4]173
.L497:
	insert	d15,d15,d5,#0,#2
	j	.L49
.L48:
	jeq	d4,#6,.L50
.L498:
	jne	d4,#7,.L51
.L50:
	ld.bu	d15,[a4]173
.L499:
	insert	d15,d15,d5,#2,#2
	j	.L52
.L51:
	mov	d15,#8
.L500:
	jeq	d15,d4,.L53
.L501:
	mov	d15,#9
.L502:
	jne	d15,d4,.L54
.L53:
	ld.bu	d15,[a4]173
.L503:
	insert	d15,d15,d5,#4,#2
.L52:
.L49:
	st.b	[a4]173,d15
.L504:
	ret
.L54:
	debug
.L505:
	ret
.L253:
	
__IfxCcu6_routeInterruptNode_function_end:
	.size	IfxCcu6_routeInterruptNode,__IfxCcu6_routeInterruptNode_function_end-IfxCcu6_routeInterruptNode
.L141:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setOutputPassiveLevel',code,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.text.IfxCcu6.IfxCcu6_setOutputPassiveLevel'
	.align	2
	
	.global	IfxCcu6_setOutputPassiveLevel

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   281  void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; Function IfxCcu6_setOutputPassiveLevel
.L111:
IfxCcu6_setOutputPassiveLevel:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   283      if (channelOut != IfxCcu6_ChannelOut_cout3)
	jeq	d4,#6,.L56
.L265:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   284      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   285          uint32 shift = channelOut;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   286          uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   287          ccu6->PSLR.U = (ccu6->PSLR.U & ~mask) | ((uint32)state << shift);
	mov	d0,#1
	ld.w	d15,[a4]136
.L510:
	sha	d0,d0,d4
.L511:
	mov	d1,#-1
	xor	d0,d1
.L512:
	and	d15,d0
.L513:
	sh	d5,d5,d4
.L442:
	or	d15,d5
	st.w	[a4]136,d15
.L266:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   288      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   289      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   290      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   291          ccu6->PSLR.B.PSL63 = state;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   292      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   293  }
	ret
.L56:
	ld.bu	d15,[a4]136
.L514:
	insert	d15,d15,d5,#7,#1
	st.b	[a4]136,d15
.L515:
	ret
.L259:
	
__IfxCcu6_setOutputPassiveLevel_function_end:
	.size	IfxCcu6_setOutputPassiveLevel,__IfxCcu6_setOutputPassiveLevel_function_end-IfxCcu6_setOutputPassiveLevel
.L146:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12CaptureCompareState',code,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12CaptureCompareState'
	.align	2
	
	.global	IfxCcu6_setT12CaptureCompareState

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   294  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   295  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   296  void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state)
; Function IfxCcu6_setT12CaptureCompareState
.L113:
IfxCcu6_setT12CaptureCompareState:	.type	func
	mov	d15,d5
.L443:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   297  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   298      uint32 mask = (0x0101U << channel);
	mov	d0,#257
.L520:
	sh	d0,d0,d4
.L445:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   299      uint32 mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   300  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   301      if (state == IfxCcu6_CaptureCompareState_set)
	jne	d15,#0,.L58
.L521:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   302      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   303          mode             = 0x0001U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   304          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << channel);
	mov	d2,#-1
	ld.w	d1,[a4]100
.L522:
	xor	d2,d0
.L523:
	and	d1,d2
.L524:
	mov	d2,#1
.L525:
	sh	d2,d2,d4
.L526:
	or	d1,d2
	st.w	[a4]100,d1
.L58:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   305      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   306  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   307      if (state == IfxCcu6_CaptureCompareState_clear)
	jne	d15,#1,.L59
.L527:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   308      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   309          mode             = 0x0100U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   310          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << channel);
	mov	d2,#-1
	ld.w	d1,[a4]100
.L528:
	xor	d2,d0
.L529:
	and	d1,d2
.L530:
	mov	d2,#256
.L531:
	sh	d2,d2,d4
.L532:
	or	d1,d2
	st.w	[a4]100,d1
.L59:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   311      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   312  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   313      if (state == IfxCcu6_CaptureCompareState_toggle)
	jne	d15,#2,.L60
.L533:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   314      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   315          mode             = 0x0101U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   316          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << channel);
	mov	d1,#-1
	ld.w	d15,[a4]100
.L444:
	xor	d0,d1
.L446:
	and	d15,d0
.L534:
	mov	d0,#257
.L535:
	sh	d0,d0,d4
.L536:
	or	d15,d0
	st.w	[a4]100,d15
.L60:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   317      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   318  }
	ret
.L269:
	
__IfxCcu6_setT12CaptureCompareState_function_end:
	.size	IfxCcu6_setT12CaptureCompareState,__IfxCcu6_setT12CaptureCompareState_function_end-IfxCcu6_setT12CaptureCompareState
.L151:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12CompareValue',code,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12CompareValue'
	.align	2
	
	.global	IfxCcu6_setT12CompareValue

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   319  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   321  void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value)
; Function IfxCcu6_setT12CompareValue
.L115:
IfxCcu6_setT12CompareValue:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   322  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   323      switch (channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   324      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   325      case IfxCcu6_T12Channel_0:
	jeq	d4,#0,.L61
.L541:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   326          ccu6->CC60SR.B.CCS = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   327          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   328      case IfxCcu6_T12Channel_1:
	jeq	d4,#1,.L62
.L542:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   329          ccu6->CC61SR.B.CCS = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   330          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   331      case IfxCcu6_T12Channel_2:
	jeq	d4,#2,.L63
.L543:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   332          ccu6->CC62SR.B.CCS = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   333          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   334      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   335  }
	ret
.L61:
	st.h	[a4]64,d5
.L544:
	ret
.L62:
	st.h	[a4]68,d5
.L545:
	ret
.L63:
	st.h	[a4]72,d5
.L546:
	ret
.L276:
	
__IfxCcu6_setT12CompareValue_function_end:
	.size	IfxCcu6_setT12CompareValue,__IfxCcu6_setT12CompareValue_function_end-IfxCcu6_setT12CompareValue
.L156:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12Frequency',code,cluster('IfxCcu6_setT12Frequency')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12Frequency'
	.align	2
	
	.global	IfxCcu6_setT12Frequency

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   337  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   338  float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode)
; Function IfxCcu6_setT12Frequency
.L117:
IfxCcu6_setT12Frequency:	.type	func
	mov	d10,d6
	mov.aa	a15,a4
.L448:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   339  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   340      uint16         prescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   341      float32        freqT1x = 0, periodT1x;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   342      float32        freqCC6 = IfxScuCcu_getSpbFrequency();
	mov	e8,d5,d4
	call	IfxScuCcu_getSpbFrequency
.L447:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   343      Ifx_TimerValue period;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   345      for (prescaler = 0; prescaler < 16; prescaler++)
	fcall	.cocofun_8
.L551:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   346      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   347          freqT1x   = freqCC6 / (1U << prescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   348          periodT1x = freqT1x / frequency;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   350          if ((periodT1x <= 16386.0) && (periodT1x > resolution))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   351          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   352              break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   353          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   354      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   355  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   356      if (prescaler < 16)
	jge.u	d3,d15,.L70
.L293:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   357      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   358          uint16                  periodVal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   359          boolean                 additionalPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   360          IfxCcu6_TimerInputClock clockInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   362          period    = ((Ifx_TimerValue)(periodT1x / 2)) * 2;
	movh	d1,#16128
.L552:
	mul.f	d15,d0,d1
.L553:
	ftouz	d0,d15
.L453:
	sh	d0,#1
.L554:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   363  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   364          periodVal = (uint16)((countMode != IfxCcu6_T12CountMode_edgeAligned) ? ((period / 2) - 1) : (period - 1));
	jeq	d10,#0,.L71
.L555:
	sh	d15,d0,#-1
.L556:
	add	d15,#-1
	j	.L72
.L71:
	add	d15,d0,#-1
.L72:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    24   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    35   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    36  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    39  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    43  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    51  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    55  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    60   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    62  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    73   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    75  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    81  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    83   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    85  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    90  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    92   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    94  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   106   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   108  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   118  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   121   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   123  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   131   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   133  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   145   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   147  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   161   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   187   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   189  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   198  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   203  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   212   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   214  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   223   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   225  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   229  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   231   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   233  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   240   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   242  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   258  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   261   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   270   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   272  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   278  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   281   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   283  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   289  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   292   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   305  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   307   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   309  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   316   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   345   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   347  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   351  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   364   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   366  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   375  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   382  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   388   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   394   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   401   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   407   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   413   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   419   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   431   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   437   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   443   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   449   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   451  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   457   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   459  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   464   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   466  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   486   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   488  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   493   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   495  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   501   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   503  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   508   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   510  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   515   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   517  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   522   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   539   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   547   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   549  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   555   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   562   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   569   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   571  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   576   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   578  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   583   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   585  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   590   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   592  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   597   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   599  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   604   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   606  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   611   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   613  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   618   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   620  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   633   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   641   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   650   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   652  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   662   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   679   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   681  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   687   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   689  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   695   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   705   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   707  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   712   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   714  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   719   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   721  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   728   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   735   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   761   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   763  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   768   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   770  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   774   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   776  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   782   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   784  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   789   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   791  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   815   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   817  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   833   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   835  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   840   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   842  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   846   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   848  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   853   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   855  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   889   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   891  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   896   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   898  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   902   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   904  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   910   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   912  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   917   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   919  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   924   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   926  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   931   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   933  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   938   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   940  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   951   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   953  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   959   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   961  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   966   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   968  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   972   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   974  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   978   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   980  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   985   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   997   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1020  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1028  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1035  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1042  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1070  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1082  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1090  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1101  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1120  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1127  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1164  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1179  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1187  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1217  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1230  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1241  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1247  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1251  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1260  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1266  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1300  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1307  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1314  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1326  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1337  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1356  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1365  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1388  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1389  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1408  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1428  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1440  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1446  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1456  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1463  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1468  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1475  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1484  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1489  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1505  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1506  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1512  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1513  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1519  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1533  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1540  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1545  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1551  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1552  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1558  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1565  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1572  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1573  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1579  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1580  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1586  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1587  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1593  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1594  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1600  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1601  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1607  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1608  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1614  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1615  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1621  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1622  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1628  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1629  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1636  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1642  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1649  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1650  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1657  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1663  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1670  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1671  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1677  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1678  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1685  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1689  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1690  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1691  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1692  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1693  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1694      return ccu6->IS.B.T12OM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1695  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1696  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1698  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1699  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1700      return ccu6->IS.B.T12PM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1701  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1702  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1703  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1704  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1705  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1706      return ccu6->IS.B.T13CM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1707  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1709  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1710  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1711  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1712      uint32 shift = (uint32)input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1713      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1714      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1716  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1717  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1720      uint32 shift = ((timer * 2) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1721      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1722      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1723  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1724  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1725  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1726  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1727  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1728      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1729  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1731  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1732  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1733  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1734      ccu6->T12DTC.B.DTM = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1735  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1736  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1738  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1739  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1740      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1741  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1743  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1744  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1745  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1746      uint32 shift = ((timer * 2) + 8);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1747      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1748      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1749  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1750  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1751  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1752  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1753  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1754      uint32 shift = 12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1755      uint32 mask  = (0x7U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1756      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1757  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1759  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1760  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1761  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1762      uint32 shift = (timer * 8);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1763      uint32 mask  = (0x7U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1764      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1765  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1766  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1767  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1768  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1769  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1770      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1771      ccu6->ISS.U = ccu6->ISS.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1772  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1773  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1775  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1776  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1777      ccu6->MCMOUTS.B.MCMPS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1778  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1779  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1781  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1782  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1783      ccu6->MCMCTR.B.SWSEL = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1784  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1785  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1787  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1788  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1789      ccu6->MCMCTR.B.SWSYN = sync;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1790  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1791  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1793  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1794  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1795      uint32 shift = (channelOut + 8); // offset at location CC60PS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1796      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1797      ccu6->CMPSTAT.U = (ccu6->CMPSTAT.U & ~mask) | ((uint32)state << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1798  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1799  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1800  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1801  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1802  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1803      Ifx_CCU6_TCTR2 tctr2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1804      tctr2.U        = ccu6->TCTR2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1805      tctr2.B.T12SSC = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1806      tctr2.B.T13SSC = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1807      ccu6->TCTR2.U  = tctr2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1808  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1809  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1811  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1812  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1813      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1814      IfxScuWdt_clearCpuEndinit(passwd);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1815      ccu6->CLC.B.EDIS = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1816      IfxScuWdt_setCpuEndinit(passwd);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1817  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1818  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1819  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1820  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1821  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1822      uint32 shift = (4 * channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1823      uint32 mask  = (0xFU << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1824      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1825  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1826  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1827  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1828  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1829  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1830      ccu6->TCTR0.B.CTM = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1831  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1833  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1834  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1835  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1836      ccu6->T12.B.T12CV = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1837  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1839  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1840  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1841  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1842      ccu6->T12PR.B.T12PV = value;
	st.h	[a15]36,d15
.L295:
	mov	d15,#0
.L454:
	insert	d15,d15,#1,#6,#1
.L557:
	insert	d15,d15,#0,#14,#1
	st.w	[a15]120,d15
.L302:
	ld.w	d15,[a15]112
.L455:
	insert	d1,d15,#0,#0,#3
.L558:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   365          IfxCcu6_setT12PeriodValue(ccu6, periodVal);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   366          IfxCcu6_enableShadowTransfer(ccu6, TRUE, FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   367  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   368          clockInput = (IfxCcu6_TimerInputClock)(prescaler & 0x7U);
	and	d15,d3,#7
.L559:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    24   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    35   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    36  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    39  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    43  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    51  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    55  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    60   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    62  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    73   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    75  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    81  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    83   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    85  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    90  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    92   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    94  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   106   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   108  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   118  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   121   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   123  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   131   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   133  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   145   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   147  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   161   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   187   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   189  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   198  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   203  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   212   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   214  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   223   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   225  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   229  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   231   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   233  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   240   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   242  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   258  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   261   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   270   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   272  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   278  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   281   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   283  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   289  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   292   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   305  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   307   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   309  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   316   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   345   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   347  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   351  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   364   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   366  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   375  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   382  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   388   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   394   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   401   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   407   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   413   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   419   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   431   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   437   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   443   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   449   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   451  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   457   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   459  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   464   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   466  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   486   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   488  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   493   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   495  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   501   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   503  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   508   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   510  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   515   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   517  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   522   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   539   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   547   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   549  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   555   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   562   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   569   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   571  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   576   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   578  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   583   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   585  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   590   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   592  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   597   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   599  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   604   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   606  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   611   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   613  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   618   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   620  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   633   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   641   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   650   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   652  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   662   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   679   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   681  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   687   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   689  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   695   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   705   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   707  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   712   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   714  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   719   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   721  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   728   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   735   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   761   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   763  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   768   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   770  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   774   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   776  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   782   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   784  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   789   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   791  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   815   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   817  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   833   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   835  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   840   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   842  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   846   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   848  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   853   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   855  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   889   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   891  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   896   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   898  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   902   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   904  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   910   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   912  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   917   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   919  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   924   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   926  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   931   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   933  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   938   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   940  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   951   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   953  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   959   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   961  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   966   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   968  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   972   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   974  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   978   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   980  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   985   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   997   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1020  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1028  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1035  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1042  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1070  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1082  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1090  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1101  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1120  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1127  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1164  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1179  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1187  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1217  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1230  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1241  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1247  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1251  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1260  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1266  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1300  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1307  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1314  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1326  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1337  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1356  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1365  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1388  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1389  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1408  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1428  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1440  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1446  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1456  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1463  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1468  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1475  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1484  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1489  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1505  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1506  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1512  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1513  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1519  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1533  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1540  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1545  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1551  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1552  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1558  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1565  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1572  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1573  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1579  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1580  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1586  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1587  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1593  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1594  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1600  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1601  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1607  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1608  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1614  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1615  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1621  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1622  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1628  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1629  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1636  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1642  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1649  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1650  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1657  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1663  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1670  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1671  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1677  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1678  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1685  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1689  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1690  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1691  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1692  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1693  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1694      return ccu6->IS.B.T12OM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1695  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1696  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1698  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1699  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1700      return ccu6->IS.B.T12PM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1701  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1702  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1703  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1704  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1705  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1706      return ccu6->IS.B.T13CM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1707  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1709  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1710  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1711  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1712      uint32 shift = (uint32)input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1713      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1714      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1716  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1717  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1720      uint32 shift = ((timer * 2) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1721      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1722      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1723  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1724  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1725  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1726  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1727  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1728      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1729  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1731  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1732  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1733  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1734      ccu6->T12DTC.B.DTM = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1735  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1736  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1738  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1739  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1740      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1741  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1743  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1744  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1745  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1746      uint32 shift = ((timer * 2) + 8);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1747      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1748      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1749  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1750  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1751  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1752  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1753  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1754      uint32 shift = 12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1755      uint32 mask  = (0x7U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1756      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1757  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1759  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1760  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1761  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1762      uint32 shift = (timer * 8);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1763      uint32 mask  = (0x7U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1764      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
	or	d1,d15
	st.w	[a15]112,d1
.L313:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   369          IfxCcu6_setInputClockFrequency(ccu6, IfxCcu6_TimerId_t12, clockInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   371          additionalPrescaler = ((prescaler & 0x8U) != 0);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   372  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   373          if (additionalPrescaler)
	jz.t	d3:3,.L73
.L322:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    24   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    35   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    36  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    39  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    43  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    51  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    55  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    60   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    62  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    73   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    75  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    81  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    83   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    85  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    90  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    92   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    94  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   106   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   108  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   118  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   121   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   123  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   131   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   133  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   145   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   147  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   161   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   187   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   189  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   198  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   203  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   212   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   214  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   223   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   225  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   229  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   231   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   233  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   240   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   242  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   258  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   261   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   270   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   272  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   278  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   281   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   283  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   289  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   292   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   305  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   307   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   309  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   316   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   345   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   347  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   351  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   364   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   366  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   375  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   382  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   388   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   394   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   401   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   407   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   413   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   419   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   431   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   437   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   443   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   449   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   451  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   457   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   459  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   464   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   466  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   486   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   488  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   493   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   495  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   501   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   503  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   508   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   510  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   515   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   517  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   522   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   539   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   547   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   549  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   555   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   562   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   569   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   571  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   576   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   578  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   583   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   585  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   590   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   592  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   597   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   599  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   604   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   606  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   611   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   613  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   618   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   620  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   633   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   641   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   650   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   652  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   662   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   679   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   681  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   687   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   689  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   695   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   705   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   707  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   712   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   714  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   719   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   721  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   728   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   735   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   761   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   763  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   768   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   770  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   774   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   776  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   782   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   784  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   789   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   791  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   815   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   817  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   833   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   835  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   840   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   842  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   846   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   848  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   853   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   855  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   889   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   891  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   896   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   898  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   902   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   904  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   910   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   912  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   917   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   919  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   924   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   926  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   931   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   933  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   938   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   940  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   951   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   953  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   959   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   961  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   966   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   968  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   972   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   974  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   978   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   980  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   985   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   997   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1020  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1028  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1035  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1042  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1070  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1082  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1090  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1101  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1120  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1127  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1164  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1179  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1187  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1217  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1230  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1241  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1247  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1251  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1260  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1266  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1300  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1307  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1314  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1326  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1337  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1356  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1365  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
	ld.w	d15,[a15]112
.L560:
	or	d15,#4
	st.w	[a15]112,d15
.L73:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    24   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    35   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    36  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    39  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    43  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    51  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    55  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    60   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    62  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    73   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    75  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    81  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    83   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    85  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    90  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    92   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    94  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   106   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   108  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   118  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   121   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   123  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   131   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   133  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   145   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   147  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   161   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   187   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   189  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   198  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   203  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   212   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   214  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   223   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   225  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   229  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   231   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   233  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   240   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   242  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   258  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   261   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   270   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   272  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   278  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   281   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   283  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   289  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   292   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   305  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   307   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   309  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   316   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   345   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   347  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   351  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   364   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   366  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   375  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   382  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   388   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   394   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   401   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   407   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   413   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   419   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   431   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   437   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   443   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   449   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   451  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   457   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   459  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   464   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   466  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   486   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   488  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   493   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   495  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   501   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   503  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   508   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   510  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   515   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   517  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   522   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   539   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   547   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   549  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   555   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   562   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   569   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   571  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   576   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   578  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   583   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   585  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   590   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   592  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   597   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   599  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   604   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   606  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   611   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   613  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   618   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   620  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   633   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   641   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   650   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   652  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   662   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   679   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   681  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   687   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   689  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   695   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   705   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   707  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   712   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   714  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   719   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   721  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   728   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   735   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   761   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   763  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   768   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   770  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   774   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   776  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   782   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   784  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   789   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   791  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   815   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   817  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   833   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   835  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   840   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   842  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   846   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   848  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   853   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   855  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   889   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   891  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   896   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   898  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   902   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   904  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   910   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   912  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   917   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   919  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   924   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   926  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   931   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   933  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   938   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   940  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   951   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   953  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   959   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   961  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   966   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   968  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   972   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   974  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   978   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   980  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   985   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   997   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1020  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1028  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1035  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1042  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1070  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1082  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1090  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1101  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1120  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1127  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1164  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1179  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1187  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1217  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1230  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1241  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1247  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1251  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1260  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1266  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1300  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1307  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1314  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1326  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1337  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1356  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1365  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1388  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1389  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1408  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1428  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1440  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1446  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1456  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1463  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1468  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1475  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1484  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1489  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1505  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1506  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1512  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1513  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1519  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1533  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1540  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1545  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1551  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1552  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1558  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1565  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1572  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1573  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1579  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1580  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1586  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1587  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1593  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1594  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1600  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1601  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1607  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1608  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1614  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1615  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1621  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1622  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1628  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1629  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1636  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1642  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1649  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1650  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1657  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1663  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1670  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1671  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1677  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1678  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1685  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1689  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1690  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1691  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1692  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1693  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1694      return ccu6->IS.B.T12OM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1695  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1696  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1698  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1699  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1700      return ccu6->IS.B.T12PM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1701  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1702  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1703  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1704  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1705  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1706      return ccu6->IS.B.T13CM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1707  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1709  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1710  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1711  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1712      uint32 shift = (uint32)input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1713      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1714      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1716  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1717  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1720      uint32 shift = ((timer * 2) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1721      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1722      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1723  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1724  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1725  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1726  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1727  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1728      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1729  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1731  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1732  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1733  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1734      ccu6->T12DTC.B.DTM = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1735  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1736  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1738  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1739  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1740      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1741  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1743  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1744  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1745  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1746      uint32 shift = ((timer * 2) + 8);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1747      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1748      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1749  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1750  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1751  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1752  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1753  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1754      uint32 shift = 12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1755      uint32 mask  = (0x7U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1756      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1757  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1759  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1760  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1761  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1762      uint32 shift = (timer * 8);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1763      uint32 mask  = (0x7U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1764      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1765  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1766  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1767  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1768  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1769  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1770      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1771      ccu6->ISS.U = ccu6->ISS.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1772  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1773  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1775  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1776  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1777      ccu6->MCMOUTS.B.MCMPS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1778  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1779  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1781  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1782  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1783      ccu6->MCMCTR.B.SWSEL = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1784  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1785  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1787  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1788  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1789      ccu6->MCMCTR.B.SWSYN = sync;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1790  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1791  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1793  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1794  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1795      uint32 shift = (channelOut + 8); // offset at location CC60PS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1796      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1797      ccu6->CMPSTAT.U = (ccu6->CMPSTAT.U & ~mask) | ((uint32)state << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1798  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1799  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1800  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1801  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1802  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1803      Ifx_CCU6_TCTR2 tctr2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1804      tctr2.U        = ccu6->TCTR2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1805      tctr2.B.T12SSC = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1806      tctr2.B.T13SSC = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1807      ccu6->TCTR2.U  = tctr2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1808  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1809  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1811  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1812  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1813      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1814      IfxScuWdt_clearCpuEndinit(passwd);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1815      ccu6->CLC.B.EDIS = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1816      IfxScuWdt_setCpuEndinit(passwd);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1817  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1818  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1819  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1820  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1821  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1822      uint32 shift = (4 * channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1823      uint32 mask  = (0xFU << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1824      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1825  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1826  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1827  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1828  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1829  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1830      ccu6->TCTR0.B.CTM = mode;
	ld.bu	d15,[a15]112
.L561:
	insert	d15,d15,d10,#7,#1
	st.b	[a15]112,d15
.L329:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   374          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   375              IfxCcu6_enableAdditionalPrescaler(ccu6, IfxCcu6_TimerId_t12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   376          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   377  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   378          IfxCcu6_setT12CountMode(ccu6, countMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   380          frequency = freqT1x / period;
	utof	d15,d0
.L562:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   381      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   382      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   383      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   384          frequency = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   385      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   386  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   387      return frequency;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   388  }
	div.f	d2,d4,d15
	ret
.L70:
	mov	d2,#0
	ret
.L281:
	
__IfxCcu6_setT12Frequency_function_end:
	.size	IfxCcu6_setT12Frequency,__IfxCcu6_setT12Frequency_function_end-IfxCcu6_setT12Frequency
.L161:
	; End of function
	
	.sdecl	'.text.IfxCcu6..cocofun_8',code,cluster('.cocofun_8')
	.sect	'.text.IfxCcu6..cocofun_8'
	.align	2
; Function .cocofun_8
.L119:
.cocofun_8:	.type	func
; Function body .cocofun_8, coco_iter:0
	mov	d3,#0
	mov.a	a2,#15
.L67:
	mov	d0,#1
.L696:
	sh	d0,d0,d3
	utof	d0,d0
.L697:
	div.f	d4,d2,d0
.L449:
	div.f	d0,d4,d8
	ld.w	d1,.7.cnt
.L450:
	cmp.f	d15,d0,d1
	and	d15,#3
.L698:
	jeq	d15,#0,.L68
.L451:
	utof	d1,d9
.L452:
	cmp.f	d15,d0,d1
	jnz.t	d15:2,.L69
.L68:
	add	d3,#1
	loop	a2,.L67
.L69:
	mov	d15,#16
	fret
.L231:
	; End of function
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12InputSignal',code,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12InputSignal'
	.align	2
	
	.global	IfxCcu6_setT12InputSignal

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   389  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   391  void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput)
; Function IfxCcu6_setT12InputSignal
.L121:
IfxCcu6_setT12InputSignal:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   392  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   393      ccu6->PISEL2.B.T12EXT  = extInput->select >= Ifx_RxSel_e;
	ld.bu	d15,[a5]12
.L567:
	ld.bu	d0,[a4]20
.L568:
	ge.u	d15,d15,#4
	sub.a	a10,#24
.L456:
	insert	d15,d0,d15,#6,#1
	st.b	[a4]20,d15
.L569:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   394      ccu6->PISEL0.B.IST12HR = extInput->select;
	ld.bu	d0,[a4]17
.L570:
	ld.bu	d15,[a5]12
.L571:
	insert	d15,d0,d15,#6,#2
	st.b	[a4]17,d15
.L572:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   395  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   396      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, extInput->module == ccu6);
	ld.a	a15,[a5]
	jeq.a	a15,a4,.L76
	movh.a	a15,#@his(verboseLevelStr+8)
	ld.a	a15,[a15]@los(verboseLevelStr+8)
	st.a	[a10],a15
	movh.a	a15,#@his(.4.str)
	lea	a15,[a15]@los(.4.str)
	st.a	[a10]4,a15
	movh.a	a15,#@his(.5.str)
	lea	a15,[a15]@los(.5.str)
	st.a	[a10]8,a15
	mov	d15,#396
	st.w	[a10]12,d15
	movh.a	a15,#@his(_999001___func__)
	lea	a15,[a15]@los(_999001___func__)
	st.a	[a10]16,a15
	movh.a	a4,#@his(.1.str)
.L457:
	lea	a4,[a4]@los(.1.str)
	j	printf
.L76:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   397  }
	ret
.L335:
	
__IfxCcu6_setT12InputSignal_function_end:
	.size	IfxCcu6_setT12InputSignal,__IfxCcu6_setT12InputSignal_function_end-IfxCcu6_setT12InputSignal
.L166:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT13CaptureCompareState',code,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.text.IfxCcu6.IfxCcu6_setT13CaptureCompareState'
	.align	2
	
	.global	IfxCcu6_setT13CaptureCompareState

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   398  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   400  void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state)
; Function IfxCcu6_setT13CaptureCompareState
.L123:
IfxCcu6_setT13CaptureCompareState:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   401  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   402      uint32 shift = 6;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   403      uint32 mask  = (0x0101U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   404      uint32 mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   405  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   406      if (state == IfxCcu6_CaptureCompareState_set)
	jne	d4,#0,.L77
.L577:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   407      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   408          mode             = 0x0001U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   409          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << shift);
	ld.w	d15,[a4]100
.L578:
	mov	d0,#-16449
.L579:
	and	d15,d0
.L580:
	or	d15,#64
	st.w	[a4]100,d15
.L77:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   410      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   411  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   412      if (state == IfxCcu6_CaptureCompareState_clear)
	jne	d4,#1,.L78
.L581:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   413      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   414          mode             = 0x0100U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   415          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << shift);
	ld.w	d15,[a4]100
.L582:
	mov	d0,#-16449
.L583:
	and	d15,d0
.L584:
	insert	d15,d15,#1,#14,#1
	st.w	[a4]100,d15
.L78:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   416      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   417  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   418      if (state == IfxCcu6_CaptureCompareState_toggle)
	jne	d4,#2,.L79
.L585:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   419      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   420          mode             = 0x0101U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   421          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << shift);
	ld.w	d15,[a4]100
.L586:
	mov	d0,#16448
.L587:
	or	d15,d0
	st.w	[a4]100,d15
.L79:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   422      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   423  }
	ret
.L340:
	
__IfxCcu6_setT13CaptureCompareState_function_end:
	.size	IfxCcu6_setT13CaptureCompareState,__IfxCcu6_setT13CaptureCompareState_function_end-IfxCcu6_setT13CaptureCompareState
.L171:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT13Frequency',code,cluster('IfxCcu6_setT13Frequency')
	.sect	'.text.IfxCcu6.IfxCcu6_setT13Frequency'
	.align	2
	
	.global	IfxCcu6_setT13Frequency

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   424  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   425  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   426  float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution)
; Function IfxCcu6_setT13Frequency
.L125:
IfxCcu6_setT13Frequency:	.type	func
	mov.aa	a15,a4
.L459:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   427  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   428      uint16         prescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   429      float32        freqT1x = 0, periodT1x;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   430      float32        freqCC6 = (float32)IfxScuCcu_getSpbFrequency();
	mov	e8,d5,d4
	call	IfxScuCcu_getSpbFrequency
.L458:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   431      Ifx_TimerValue period;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   432  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   433      for (prescaler = 0; prescaler < 16; prescaler++)
	fcall	.cocofun_8
.L460:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   434      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   435          freqT1x   = freqCC6 / (1U << prescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   436          periodT1x = freqT1x / frequency;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   437  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   438          if ((periodT1x <= 16386.0) && (periodT1x > resolution))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   439          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   440              break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   441          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   442      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   443  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   444      if (prescaler < 16)
	jge.u	d3,d15,.L83
.L352:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   445      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   446          uint16                  periodVal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   447          boolean                 additionalPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   448          IfxCcu6_TimerInputClock clockInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   449  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   450          period    = ((Ifx_TimerValue)(periodT1x / 2)) * 2;
	movh	d1,#16128
.L592:
	mul.f	d0,d0,d1
.L461:
	ftouz	d0,d0
.L462:
	sh	d0,#1
.L354:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   451  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   452          periodVal = (uint16)(period - 1);
	add	d15,d0,#-1

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    24   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    35   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    36  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    39  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    43  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    51  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    55  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    60   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    62  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    73   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    75  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    81  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    83   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    85  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    90  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    92   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    94  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   106   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   108  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   118  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   121   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   123  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   131   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   133  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   145   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   147  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   161   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   187   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   189  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   198  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   203  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   212   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   214  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   223   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   225  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   229  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   231   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   233  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   240   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   242  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   258  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   261   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   270   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   272  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   278  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   281   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   283  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   289  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   292   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   305  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   307   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   309  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   316   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   345   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   347  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   351  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   364   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   366  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   375  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   382  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   388   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   394   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   401   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   407   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   413   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   419   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   431   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   437   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   443   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   449   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   451  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   457   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   459  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   464   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   466  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   486   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   488  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   493   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   495  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   501   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   503  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   508   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   510  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   515   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   517  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   522   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   539   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   547   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   549  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   555   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   562   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   569   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   571  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   576   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   578  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   583   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   585  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   590   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   592  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   597   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   599  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   604   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   606  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   611   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   613  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   618   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   620  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   633   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   641   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   650   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   652  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   662   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   679   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   681  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   687   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   689  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   695   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   705   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   707  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   712   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   714  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   719   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   721  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   728   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   735   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   761   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   763  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   768   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   770  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   774   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   776  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   782   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   784  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   789   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   791  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   815   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   817  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   833   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   835  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   840   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   842  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   846   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   848  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   853   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   855  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   889   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   891  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   896   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   898  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   902   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   904  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   910   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   912  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   917   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   919  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   924   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   926  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   931   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   933  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   938   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   940  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   951   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   953  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   959   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   961  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   966   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   968  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   972   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   974  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   978   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   980  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   985   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   997   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1020  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1028  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1035  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1042  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1070  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1082  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1090  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1101  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1120  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1127  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1164  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1179  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1187  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1217  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1230  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1241  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1247  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1251  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1260  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1266  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1300  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1307  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1314  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1326  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1337  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1356  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1365  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1388  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1389  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1408  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1428  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1440  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1446  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1456  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1463  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1468  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1475  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1484  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1489  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1505  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1506  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1512  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1513  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1519  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1533  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1540  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1545  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1551  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1552  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1558  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1565  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1572  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1573  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1579  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1580  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1586  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1587  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1593  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1594  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1600  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1601  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1607  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1608  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1614  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1615  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1621  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1622  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1628  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1629  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1636  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1642  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1649  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1650  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1657  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1663  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1670  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1671  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1677  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1678  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1685  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1689  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1690  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1691  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1692  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1693  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1694      return ccu6->IS.B.T12OM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1695  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1696  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1698  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1699  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1700      return ccu6->IS.B.T12PM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1701  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1702  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1703  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1704  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1705  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1706      return ccu6->IS.B.T13CM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1707  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1709  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1710  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1711  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1712      uint32 shift = (uint32)input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1713      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1714      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1716  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1717  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1720      uint32 shift = ((timer * 2) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1721      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1722      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1723  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1724  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1725  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1726  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1727  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1728      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1729  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1731  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1732  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1733  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1734      ccu6->T12DTC.B.DTM = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1735  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1736  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1738  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1739  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1740      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1741  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1743  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1744  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1745  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1746      uint32 shift = ((timer * 2) + 8);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1747      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1748      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1749  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1750  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1751  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1752  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1753  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1754      uint32 shift = 12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1755      uint32 mask  = (0x7U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1756      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1757  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1759  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1760  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1761  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1762      uint32 shift = (timer * 8);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1763      uint32 mask  = (0x7U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1764      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1765  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1766  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1767  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1768  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1769  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1770      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1771      ccu6->ISS.U = ccu6->ISS.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1772  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1773  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1775  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1776  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1777      ccu6->MCMOUTS.B.MCMPS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1778  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1779  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1781  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1782  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1783      ccu6->MCMCTR.B.SWSEL = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1784  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1785  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1787  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1788  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1789      ccu6->MCMCTR.B.SWSYN = sync;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1790  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1791  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1793  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1794  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1795      uint32 shift = (channelOut + 8); // offset at location CC60PS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1796      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1797      ccu6->CMPSTAT.U = (ccu6->CMPSTAT.U & ~mask) | ((uint32)state << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1798  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1799  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1800  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1801  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1802  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1803      Ifx_CCU6_TCTR2 tctr2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1804      tctr2.U        = ccu6->TCTR2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1805      tctr2.B.T12SSC = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1806      tctr2.B.T13SSC = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1807      ccu6->TCTR2.U  = tctr2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1808  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1809  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1811  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1812  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1813      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1814      IfxScuWdt_clearCpuEndinit(passwd);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1815      ccu6->CLC.B.EDIS = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1816      IfxScuWdt_setCpuEndinit(passwd);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1817  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1818  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1819  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1820  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1821  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1822      uint32 shift = (4 * channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1823      uint32 mask  = (0xFU << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1824      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1825  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1826  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1827  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1828  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1829  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1830      ccu6->TCTR0.B.CTM = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1831  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1833  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1834  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1835  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1836      ccu6->T12.B.T12CV = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1837  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1839  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1840  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1841  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1842      ccu6->T12PR.B.T12PV = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1843  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1845  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1846  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1847  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1848      ccu6->CC63SR.B.CCS = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1849  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1851  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1852  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1853  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1854      ccu6->T13.B.T13CV = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1855  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1857  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1858  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1859  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1860      ccu6->T13PR.B.T13PV = value;
	st.h	[a15]84,d15
.L355:
	mov	d15,#0
.L463:
	insert	d15,d15,#0,#6,#1
.L593:
	insert	d15,d15,#1,#14,#1
	st.w	[a15]120,d15
.L361:
	ld.w	d15,[a15]112
.L464:
	insert	d1,d15,#0,#8,#3
.L594:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   453          IfxCcu6_setT13PeriodValue(ccu6, periodVal);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   454          IfxCcu6_enableShadowTransfer(ccu6, FALSE, TRUE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   456          clockInput = (IfxCcu6_TimerInputClock)(prescaler & 0x7U);
	and	d15,d3,#7
.L595:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    24   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    35   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    36  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    39  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    43  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    51  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    55  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    60   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    62  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    73   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    75  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    81  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    83   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    85  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    90  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    92   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    94  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   106   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   108  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   118  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   121   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   123  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   131   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   133  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   145   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   147  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   161   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   187   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   189  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   198  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   203  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   212   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   214  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   223   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   225  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   229  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   231   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   233  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   240   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   242  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   258  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   261   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   270   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   272  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   278  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   281   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   283  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   289  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   292   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   305  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   307   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   309  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   316   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   345   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   347  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   351  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   364   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   366  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   375  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   382  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   388   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   394   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   401   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   407   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   413   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   419   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   431   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   437   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   443   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   449   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   451  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   457   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   459  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   464   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   466  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   486   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   488  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   493   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   495  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   501   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   503  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   508   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   510  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   515   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   517  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   522   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   539   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   547   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   549  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   555   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   562   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   569   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   571  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   576   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   578  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   583   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   585  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   590   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   592  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   597   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   599  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   604   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   606  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   611   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   613  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   618   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   620  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   633   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   641   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   650   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   652  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   662   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   679   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   681  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   687   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   689  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   695   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   705   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   707  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   712   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   714  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   719   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   721  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   728   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   735   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   761   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   763  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   768   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   770  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   774   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   776  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   782   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   784  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   789   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   791  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   815   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   817  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   833   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   835  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   840   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   842  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   846   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   848  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   853   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   855  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   889   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   891  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   896   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   898  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   902   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   904  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   910   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   912  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   917   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   919  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   924   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   926  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   931   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   933  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   938   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   940  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   951   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   953  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   959   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   961  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   966   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   968  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   972   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   974  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   978   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   980  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   985   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   997   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1020  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1028  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1035  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1042  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1070  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1082  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1090  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1101  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1120  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1127  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1164  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1179  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1187  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1217  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1230  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1241  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1247  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1251  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1260  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1266  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1300  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1307  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1314  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1326  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1337  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1356  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1365  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1388  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1389  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1408  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1428  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1440  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1446  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1456  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1463  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1468  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1475  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1484  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1489  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1505  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1506  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1512  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1513  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1519  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1533  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1540  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1545  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1551  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1552  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1558  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1565  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1572  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1573  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1579  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1580  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1586  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1587  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1593  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1594  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1600  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1601  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1607  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1608  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1614  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1615  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1621  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1622  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1628  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1629  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1636  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1642  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1649  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1650  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1657  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1663  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1670  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1671  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1677  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1678  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1685  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1689  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1690  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1691  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1692  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1693  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1694      return ccu6->IS.B.T12OM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1695  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1696  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1698  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1699  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1700      return ccu6->IS.B.T12PM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1701  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1702  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1703  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1704  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1705  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1706      return ccu6->IS.B.T13CM != 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1707  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1709  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1710  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1711  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1712      uint32 shift = (uint32)input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1713      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1714      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1716  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1717  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1720      uint32 shift = ((timer * 2) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1721      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1722      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1723  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1724  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1725  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1726  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1727  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1728      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1729  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1731  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1732  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1733  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1734      ccu6->T12DTC.B.DTM = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1735  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1736  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1738  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1739  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1740      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1741  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1743  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1744  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1745  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1746      uint32 shift = ((timer * 2) + 8);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1747      uint32 mask  = (0x3U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1748      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1749  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1750  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1751  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1752  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1753  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1754      uint32 shift = 12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1755      uint32 mask  = (0x7U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1756      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1757  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1759  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1760  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1761  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1762      uint32 shift = (timer * 8);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1763      uint32 mask  = (0x7U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1764      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
	sh	d15,d15,#8
.L596:
	or	d1,d15
	st.w	[a15]112,d1
.L366:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   457          IfxCcu6_setInputClockFrequency(ccu6, IfxCcu6_TimerId_t13, clockInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   458  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   459          additionalPrescaler = ((prescaler & 0x8U) != 0);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   460  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   461          if (additionalPrescaler)
	jz.t	d3:3,.L84
.L370:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    24   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    35   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    36  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    39  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    43  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    51  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    55  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    60   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    62  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    73   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    75  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    81  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    83   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    85  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    90  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    92   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    94  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   106   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   108  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   118  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   121   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   123  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   131   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   133  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   145   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   147  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   161   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   187   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   189  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   198  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   203  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   212   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   214  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   223   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   225  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   229  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   231   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   233  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   240   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   242  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   258  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   261   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   270   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   272  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   278  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   281   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   283  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   289  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   292   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   305  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   307   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   309  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   316   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   345   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   347  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   351  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   364   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   366  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   375  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   382  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   388   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   394   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   401   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   407   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   413   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   419   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   431   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   437   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   443   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   445  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   449   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   451  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   457   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   459  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   464   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   466  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   486   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   488  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   493   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   495  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   501   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   503  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   508   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   510  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   515   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   517  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   522   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   524  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   539   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   547   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   549  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   555   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   557  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   562   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   569   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   571  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   576   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   578  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   583   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   585  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   590   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   592  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   597   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   599  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   604   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   606  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   611   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   613  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   618   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   620  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   633   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   641   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   650   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   652  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   656  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   662   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   679   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   681  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   687   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   689  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   695   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   697  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   705   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   707  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   712   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   714  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   719   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   721  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   728   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   730  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   735   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   742  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   761   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   763  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   768   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   770  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   774   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   776  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   782   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   784  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   789   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   791  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   815   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   817  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   833   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   835  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   840   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   842  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   846   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   848  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   853   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   855  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   889   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   891  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   896   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   898  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   902   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   904  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   910   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   912  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   917   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   919  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   924   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   926  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   931   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   933  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   938   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   940  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   951   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   953  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   959   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   961  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   966   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   968  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   972   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   974  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   978   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   980  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   985   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   997   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1020  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1028  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1035  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1042  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1070  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1082  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1090  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1101  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1120  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1127  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1164  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1179  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1187  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1217  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1230  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1241  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1247  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1251  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1260  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1266  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1300  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1307  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1314  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1326  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1337  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1356  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1365  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
	ld.w	d15,[a15]112
.L597:
	insert	d15,d15,#1,#10,#1
	st.w	[a15]112,d15
.L84:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   462          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   463              IfxCcu6_enableAdditionalPrescaler(ccu6, IfxCcu6_TimerId_t13);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   464          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   465  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   466          frequency = freqT1x / period;
	utof	d15,d0
.L598:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   467      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   468      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   469      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   470          /** \retval IfxCcu6_Stat_wrongPwmFreq if the T12 prescaler can't fulfill the
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   471           * required frequency */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   472          frequency = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   473      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   474  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   475      return frequency;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   476  }
	div.f	d2,d4,d15
	ret
.L83:
	mov	d2,#0
	ret
.L343:
	
__IfxCcu6_setT13Frequency_function_end:
	.size	IfxCcu6_setT13Frequency,__IfxCcu6_setT13Frequency_function_end-IfxCcu6_setT13Frequency
.L176:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT13InputSignal',code,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.text.IfxCcu6.IfxCcu6_setT13InputSignal'
	.align	2
	
	.global	IfxCcu6_setT13InputSignal

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   477  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   478  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   479  void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput)
; Function IfxCcu6_setT13InputSignal
.L127:
IfxCcu6_setT13InputSignal:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   480  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   481      ccu6->PISEL2.B.T13EXT  = extInput->select >= Ifx_RxSel_e;
	ld.bu	d15,[a5]12
.L603:
	ld.bu	d0,[a4]20
.L604:
	ge.u	d15,d15,#4
	sub.a	a10,#24
.L465:
	insert	d15,d0,d15,#7,#1
	st.b	[a4]20,d15
.L605:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   482      ccu6->PISEL2.B.IST13HR = extInput->select;
	ld.bu	d0,[a4]20
.L606:
	ld.bu	d15,[a5]12
.L607:
	insert	d15,d0,d15,#0,#2
	st.b	[a4]20,d15
.L608:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   484      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, extInput->module == ccu6);
	ld.a	a15,[a5]
	jeq.a	a15,a4,.L87
	movh.a	a15,#@his(verboseLevelStr+8)
	ld.a	a15,[a15]@los(verboseLevelStr+8)
	st.a	[a10],a15
	movh.a	a15,#@his(.4.str)
	lea	a15,[a15]@los(.4.str)
	st.a	[a10]4,a15
	movh.a	a15,#@his(.5.str)
	lea	a15,[a15]@los(.5.str)
	st.a	[a10]8,a15
	mov	d15,#484
	st.w	[a10]12,d15
	movh.a	a15,#@his(_999002___func__)
	lea	a15,[a15]@los(_999002___func__)
	st.a	[a10]16,a15
	movh.a	a4,#@his(.1.str)
.L466:
	lea	a4,[a4]@los(.1.str)
	j	printf
.L87:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Ccu6\Std\IfxCcu6.c	   485  }
	ret
.L373:
	
__IfxCcu6_setT13InputSignal_function_end:
	.size	IfxCcu6_setT13InputSignal,__IfxCcu6_setT13InputSignal_function_end-IfxCcu6_setT13InputSignal
.L181:
	; End of function
	
	.sdecl	'.rodata.IfxCpu..1.str',data,rom
	.sect	'.rodata.IfxCpu..1.str'
.1.str:	.type	object
	.size	.1.str,43
	.byte	91,65,83,83
	.byte	69,82,84,58
	.byte	37,115,93,32
	.byte	39,37,115,39
	.byte	32,105,110,32
	.byte	37,115,58,37
	.byte	100,32,40,102
	.byte	117,110,99,116
	.byte	105,111,110,32
	.byte	39,37,115,39
	.byte	41,10
	.space	1
	.sdecl	'.rodata.IfxCcu6..4.str',data,rom
	.sect	'.rodata.IfxCcu6..4.str'
.4.str:	.type	object
	.size	.4.str,25
	.byte	101,120,116,73
	.byte	110,112,117,116
	.byte	45,62,109,111
	.byte	100,117,108,101
	.byte	32,61,61,32
	.byte	99,99,117,54
	.space	1
	.sdecl	'.rodata.IfxCcu6..5.str',data,rom
	.sect	'.rodata.IfxCcu6..5.str'
.5.str:	.type	object
	.size	.5.str,64
	.byte	46,46,92,83
	.byte	111,102,116,119
	.byte	97,114,101,80
	.byte	108,97,116,102
	.byte	111,114,109,92
	.byte	105,108,108,100
	.byte	95,116,99,50
	.byte	51,120,92,115
	.byte	114,99,92,105
	.byte	102,120,92,84
	.byte	67,50,51,120
	.byte	92,67,99,117
	.byte	54,92,83,116
	.byte	100,92,73,102
	.byte	120,67,99,117
	.byte	54,46,99
	.space	1
	.sdecl	'.rodata.IfxCcu6._999001___func__',data,rom,cluster('_999001___func__')
	.sect	'.rodata.IfxCcu6._999001___func__'
_999001___func__:	.type	object
	.size	_999001___func__,26
	.byte	73,102,120,67
	.byte	99,117,54,95
	.byte	115,101,116,84
	.byte	49,50,73,110
	.byte	112,117,116,83
	.byte	105,103,110,97
	.byte	108
	.space	1
	.sdecl	'.rodata.IfxCcu6._999002___func__',data,rom,cluster('_999002___func__')
	.sect	'.rodata.IfxCcu6._999002___func__'
_999002___func__:	.type	object
	.size	_999002___func__,26
	.byte	73,102,120,67
	.byte	99,117,54,95
	.byte	115,101,116,84
	.byte	49,51,73,110
	.byte	112,117,116,83
	.byte	105,103,110,97
	.byte	108
	.space	1
	.calls	'IfxCcu6_enableModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxCcu6_enableModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxCcu6_enableModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxCcu6_getSrcAddress','IfxCcu6_getIndex'
	.calls	'IfxCcu6_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxCcu6_resetModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxCcu6_resetModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxCcu6_setT12Frequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxCcu6_setT12InputSignal','printf'
	.calls	'IfxCcu6_setT13Frequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxCcu6_setT13InputSignal','printf'
	.calls	'IfxCcu6_setT12Frequency','.cocofun_8'
	.calls	'IfxCcu6_setT13Frequency','.cocofun_8'
	.calls	'IfxCcu6_connectTrigger','',0
	.calls	'IfxCcu6_disableModulationOutput','',0
	.calls	'IfxCcu6_enableModulationOutput','',0
	.calls	'IfxCcu6_enableModule','',0
	.calls	'IfxCcu6_getCaptureRegisterValue','',0
	.calls	'IfxCcu6_getCaptureShadowRegisterValue','',0
	.calls	'IfxCcu6_getIndex','',0
	.calls	'IfxCcu6_getSrcAddress','',0
	.calls	'IfxCcu6_readTimer','',0
	.calls	'IfxCcu6_resetModule','',0
	.calls	'IfxCcu6_routeInterruptNode','',0
	.calls	'IfxCcu6_setOutputPassiveLevel','',0
	.calls	'IfxCcu6_setT12CaptureCompareState','',0
	.calls	'IfxCcu6_setT12CompareValue','',0
	.calls	'IfxCcu6_setT12Frequency','',0
	.calls	'.cocofun_8','',0
	.calls	'IfxCcu6_setT12InputSignal','',24
	.calls	'IfxCcu6_setT13CaptureCompareState','',0
	.calls	'IfxCcu6_setT13Frequency','',0
	.extern	printf
	.extern	verboseLevelStr
	.extern	IfxCcu6_indexMap
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxScuCcu_getSpbFrequency
	.extern	__printf_int
	.calls	'IfxCcu6_setT13InputSignal','',24
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L129:
	.word	92268
	.half	3
	.word	.L130
	.byte	4
.L128:
	.byte	1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L131
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0,4
	.byte	'void',0,5
	.word	215
	.byte	6
	.word	221
.L239:
	.byte	7
	.byte	'unsigned int',0,4,7
.L243:
	.byte	2
	.byte	'__ldmst_c',0,3,2,86,17,1,1
.L246:
	.byte	8
	.byte	'address',0,2,86,42
	.word	226
.L248:
	.byte	8
	.byte	'mask',0,2,86,60
	.word	231
.L250:
	.byte	8
	.byte	'value',0,2,86,75
	.word	231
.L252:
	.byte	3,0,7
	.byte	'unsigned long long int',0,8,7,6
	.word	215
	.byte	9
	.byte	'__ld64',0,3,2,110,19
	.word	309
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	335
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	335
	.byte	8
	.byte	'value',0,2,118,43
	.word	309
	.byte	3,0,7
	.byte	'int',0,4,5
.L263:
	.byte	7
	.byte	'unsigned char',0,1,8,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,11
	.byte	'SRPN',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'ECC',0,1
	.word	423
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	423
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,4,70,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	440
	.byte	4,2,35,0,0,5
	.word	730
.L391:
	.byte	6
	.word	769
	.byte	2
	.byte	'IfxSrc_clearRequest',0,3,3,230,1,17,1,1,8
	.byte	'src',0,3,230,1,60
	.word	774
	.byte	3,0,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,133,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	822
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	822
	.byte	16,0,2,35,0,0,12,6,187,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	838
	.byte	4,2,35,0,0
.L241:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,142,8,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,6,195,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	996
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,157,8,16,4,11
	.byte	'AE',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,6,203,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1240
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,6,243,13,25,12,13
	.byte	'CON0',0
	.word	934
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	1200
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1431
	.byte	4,2,35,8,0,5
	.word	1471
	.byte	6
	.word	1534
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,130,3,17,1,1,8
	.byte	'watchdog',0,5,130,3,65
	.word	1539
	.byte	8
	.byte	'password',0,5,130,3,82
	.word	974
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,222,3,17,1,1,8
	.byte	'watchdog',0,5,222,3,63
	.word	1539
	.byte	8
	.byte	'password',0,5,222,3,80
	.word	974
	.byte	3,0,9
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,187,3,19
	.word	974
	.byte	1,1,8
	.byte	'watchdog',0,5,187,3,74
	.word	1539
	.byte	3,0,14,8,83,9,1,15
	.byte	'IfxCpu_ResourceCpu_0',0,0,15
	.byte	'IfxCpu_ResourceCpu_none',0,1,0,9
	.byte	'IfxCpu_getCoreIndex',0,3,7,170,5,31
	.word	1769
	.byte	1,1,3,0,9
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,185,4,20
	.word	423
	.byte	1,1,3,0
.L267:
	.byte	7
	.byte	'unsigned long int',0,4,7,9
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,190,5,19
	.word	1900
	.byte	1,1,8
	.byte	'address',0,7,190,5,55
	.word	1900
	.byte	3,0,9
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,198,5,20
	.word	423
	.byte	1,1,8
	.byte	'address',0,7,198,5,70
	.word	1900
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,153,7,17,1,1,8
	.byte	'address',0,7,153,7,56
	.word	1900
	.byte	8
	.byte	'count',0,7,153,7,72
	.word	1900
	.byte	3,0,10
	.byte	'_Ifx_P_OUT_Bits',0,10,231,2,16,4,11
	.byte	'P0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,10,239,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2129
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,10,129,2,16,4,11
	.byte	'PS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,10,191,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2445
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,10,110,16,4,11
	.byte	'MODREV',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,10,231,3,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3016
	.byte	4,2,35,0,0,16,4
	.word	423
	.byte	17,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,10,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	423
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	423
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	423
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	423
	.byte	5,0,2,35,3,0,12,10,247,3,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3144
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,10,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	423
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	423
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	423
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	423
	.byte	5,0,2,35,3,0,12,10,135,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3359
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,10,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	423
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	423
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	423
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	423
	.byte	5,0,2,35,3,0,12,10,143,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3574
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,10,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	423
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	423
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	423
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	423
	.byte	5,0,2,35,3,0,12,10,255,3,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3791
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,10,118,16,4,11
	.byte	'P0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,10,239,3,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4011
	.byte	4,2,35,0,0,16,24
	.word	423
	.byte	17,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,10,160,3,16,4,11
	.byte	'PD0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	423
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	423
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	423
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	423
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	423
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,10,135,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4334
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,10,181,3,16,4,11
	.byte	'PD8',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	423
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	423
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	423
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	423
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	423
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,10,143,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4638
	.byte	4,2,35,0,0,16,8
	.word	423
	.byte	17,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,10,88,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,10,223,3,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4963
	.byte	4,2,35,0,0,16,12
	.word	423
	.byte	17,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,10,138,3,16,4,11
	.byte	'PDIS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,10,255,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5303
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,10,253,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	974
	.byte	6,7,2,35,0,11
	.byte	'SEL9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	231
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,10,247,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5669
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,10,166,2,16,4,11
	.byte	'PS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	28,0,2,35,0,0,12,10,207,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5880
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,10,187,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	231
	.byte	24,0,2,35,0,0,12,10,223,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6027
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,10,198,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	231
	.byte	20,0,2,35,0,0,12,10,231,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6196
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,10,176,2,16,4,11
	.byte	'reserved_0',0,2
	.word	974
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,10,215,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6368
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,10,192,1,16,4,11
	.byte	'reserved_0',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	974
	.byte	12,0,2,35,2,0,12,10,159,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6543
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,10,213,1,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	8,0,2,35,3,0,12,10,175,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6717
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,10,224,1,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	423
	.byte	4,0,2,35,3,0,12,10,183,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6891
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,10,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,10,167,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7067
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,10,209,2,16,4,11
	.byte	'PS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,10,199,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7223
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,10,235,1,16,4,11
	.byte	'reserved_0',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,10,151,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7556
	.byte	4,2,35,0,0,16,96
	.word	423
	.byte	17,95,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,10,82,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	32,0,2,35,0,0,12,10,215,3,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7913
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,10,45,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,10,207,3,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8000
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,10,159,5,25,128,2,13
	.byte	'OUT',0
	.word	2405
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2976
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	3095
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3135
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3319
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3534
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3751
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3971
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	3135
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4285
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4325
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4598
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4914
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4954
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5254
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5294
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5629
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5840
	.byte	4,2,35,100,13
	.byte	'reserved_64',0
	.word	4954
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5987
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6156
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6328
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6503
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6677
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6851
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	7027
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7183
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7516
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7864
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	7904
	.byte	96,3,35,152,1,13
	.byte	'ACCEN1',0
	.word	7960
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8527
	.byte	4,3,35,252,1,0,5
	.word	8567
	.byte	6
	.word	9100
	.byte	14,9,54,9,1,15
	.byte	'IfxPort_InputMode_undefined',0,127,15
	.byte	'IfxPort_InputMode_noPullDevice',0,0,15
	.byte	'IfxPort_InputMode_pullDown',0,8,15
	.byte	'IfxPort_InputMode_pullUp',0,16,0,2
	.byte	'IfxPort_setPinModeInput',0,3,9,131,4,17,1,1,8
	.byte	'port',0,9,131,4,48
	.word	9105
	.byte	8
	.byte	'pinIndex',0,9,131,4,60
	.word	423
	.byte	8
	.byte	'mode',0,9,131,4,88
	.word	9110
	.byte	3,0,14,9,105,9,1,15
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,15
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,14,9,91,9,1,15
	.byte	'IfxPort_OutputIdx_general',0,128,1,15
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,15
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,15
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,15
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,15
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,15
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,15
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,2
	.byte	'IfxPort_setPinModeOutput',0,3,9,137,4,17,1,1,8
	.byte	'port',0,9,137,4,49
	.word	9105
	.byte	8
	.byte	'pinIndex',0,9,137,4,61
	.word	423
	.byte	8
	.byte	'mode',0,9,137,4,90
	.word	9315
	.byte	8
	.byte	'index',0,9,137,4,114
	.word	9384
	.byte	3,0,14,9,131,1,9,4,15
	.byte	'IfxPort_State_notChanged',0,0,15
	.byte	'IfxPort_State_high',0,1,15
	.byte	'IfxPort_State_low',0,128,128,4,15
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,9,143,4,17,1,1,8
	.byte	'port',0,9,143,4,44
	.word	9105
	.byte	8
	.byte	'pinIndex',0,9,143,4,56
	.word	423
	.byte	8
	.byte	'action',0,9,143,4,80
	.word	9697
	.byte	3,0,10
	.byte	'_Ifx_CCU6_CLC_Bits',0,12,144,1,16,4,11
	.byte	'DISR',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	28,0,2,35,0,0,12,12,172,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9878
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MCFG_Bits',0,12,241,2,16,4,11
	.byte	'T12',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'T13',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'MCM',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	231
	.byte	29,0,2,35,0,0,12,12,164,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10036
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_ID_Bits',0,12,193,1,16,4,11
	.byte	'MODREV',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'MODNUMBER',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,196,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10170
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MOSEL_Bits',0,12,171,3,16,4,11
	.byte	'TRIG0SEL',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'TRIG1SEL',0,1
	.word	423
	.byte	3,2,2,35,0,11
	.byte	'TRIG2SEL',0,2
	.word	974
	.byte	3,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	231
	.byte	23,0,2,35,0,0,12,12,204,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10297
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_PISEL0_Bits',0,12,193,3,16,4,11
	.byte	'ISCC60',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'ISCC61',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'ISCC62',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'ISTRP',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'ISPOS0',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'ISPOS1',0,1
	.word	423
	.byte	2,4,2,35,1,11
	.byte	'ISPOS2',0,1
	.word	423
	.byte	2,2,2,35,1,11
	.byte	'IST12HR',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,220,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10447
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_PISEL2_Bits',0,12,207,3,16,4,11
	.byte	'IST13HR',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'ISCNT12',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'ISCNT13',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'T12EXT',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'T13EXT',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	231
	.byte	24,0,2,35,0,0,12,12,228,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10683
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_KSCSR_Bits',0,12,212,2,16,4,11
	.byte	'SB0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'SB1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'SB2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SB3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	28,0,2,35,0,0,12,12,148,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10867
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T12_Bits',0,12,227,3,16,4,11
	.byte	'T12CV',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,244,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11017
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T12PR_Bits',0,12,131,4,16,4,11
	.byte	'T12PV',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,140,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11123
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T12DTC_Bits',0,12,234,3,16,4,11
	.byte	'DTM',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'DTE0',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'DTE1',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'DTE2',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'DTR0',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'DTR1',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'DTR2',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	231
	.byte	17,0,2,35,0,0,12,12,252,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11231
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC60R_Bits',0,12,88,16,4,11
	.byte	'CCV',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,236,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11457
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC61R_Bits',0,12,102,16,4,11
	.byte	'CCV',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,252,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11562
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC62R_Bits',0,12,116,16,4,11
	.byte	'CCV',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,140,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11667
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC60SR_Bits',0,12,95,16,4,11
	.byte	'CCS',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,244,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11772
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC61SR_Bits',0,12,109,16,4,11
	.byte	'CCS',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,132,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11878
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC62SR_Bits',0,12,123,16,4,11
	.byte	'CCS',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,148,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11984
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T13_Bits',0,12,138,4,16,4,11
	.byte	'T13CV',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,148,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12090
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T13PR_Bits',0,12,145,4,16,4,11
	.byte	'T13PV',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,156,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12196
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC63R_Bits',0,12,130,1,16,4,11
	.byte	'CCV',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,156,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12304
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC63SR_Bits',0,12,137,1,16,4,11
	.byte	'CCS',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,164,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12410
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CMPSTAT_Bits',0,12,171,1,16,4,11
	.byte	'CC60ST',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CC61ST',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'CC62ST',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'CCPOS60',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'CCPOS61',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'CCPOS62',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'CC63ST',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'CC60PS',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'COUT60PS',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'CC61PS',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'COUT61PS',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'CC62PS',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'COUT62PS',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'COUT63PS',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'T13IM',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,188,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12517
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CMPMODIF_Bits',0,12,154,1,16,4,11
	.byte	'MCC60S',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'MCC61S',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'MCC62S',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	423
	.byte	3,2,2,35,0,11
	.byte	'MCC63S',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'MCC60R',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'MCC61R',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'MCC62R',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	423
	.byte	3,2,2,35,1,11
	.byte	'MCC63R',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	231
	.byte	17,0,2,35,0,0,12,12,180,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12912
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T12MSEL_Bits',0,12,248,3,16,4,11
	.byte	'MSEL60',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'MSEL61',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'MSEL62',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'HSYNC',0,1
	.word	423
	.byte	3,1,2,35,1,11
	.byte	'DBYP',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,132,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13217
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_TCTR0_Bits',0,12,152,4,16,4,11
	.byte	'T12CLK',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'T12PRE',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'T12R',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'STE12',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'CDIR',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'CTM',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'T13CLK',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'T13PRE',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'T13R',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'STE13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	231
	.byte	18,0,2,35,0,0,12,12,164,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13397
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_TCTR2_Bits',0,12,168,4,16,4,11
	.byte	'T12SSC',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'T13SSC',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'T13TEC',0,1
	.word	423
	.byte	3,3,2,35,0,11
	.byte	'T13TED',0,1
	.word	423
	.byte	2,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'T12RSEL',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'T13RSEL',0,1
	.word	423
	.byte	2,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	231
	.byte	20,0,2,35,0,0,12,12,172,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13657
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_TCTR4_Bits',0,12,181,4,16,4,11
	.byte	'T12RR',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'T12RS',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'T12RES',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DTRES',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'T12CNT',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'T12STR',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'T12STD',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'T13RR',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'T13RS',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'T13RES',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	423
	.byte	2,3,2,35,1,11
	.byte	'T13CNT',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'T13STR',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'T13STD',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0
.L310:
	.byte	12,12,180,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13880
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MODCTR_Bits',0,12,159,3,16,4,11
	.byte	'T12MODEN',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'MCMEN',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'T13MODEN',0,1
	.word	423
	.byte	6,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'ECT13O',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,196,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14245
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_TRPCTR_Bits',0,12,202,4,16,4,11
	.byte	'TRPM0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'TRPM1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'TRPM2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	423
	.byte	5,0,2,35,0,11
	.byte	'TRPEN',0,1
	.word	423
	.byte	6,2,2,35,1,11
	.byte	'TRPEN13',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'TRPPEN',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,188,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14457
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_PSLR_Bits',0,12,218,3,16,4,11
	.byte	'PSL',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PSL63',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	231
	.byte	24,0,2,35,0,0,12,12,236,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14676
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MCMOUTS_Bits',0,12,146,3,16,4,11
	.byte	'MCMPS',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'STRMCM',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EXPHS',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'CURHS',0,1
	.word	423
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'STRHP',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,188,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14819
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MCMOUT_Bits',0,12,135,3,16,4,11
	.byte	'MCMP',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'R',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EXPH',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'CURH',0,1
	.word	423
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	231
	.byte	18,0,2,35,0,0,12,12,180,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15043
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MCMCTR_Bits',0,12,250,2,16,4,11
	.byte	'SWSEL',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'SWSYN',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'STE12U',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'STE12D',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'STE13U',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	231
	.byte	21,0,2,35,0,0,12,12,172,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15218
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_IMON_Bits',0,12,223,1,16,4,11
	.byte	'LBE',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CCPOS0I',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'CCPOS1I',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'CCPOS2I',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'CC60INI',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'CC61INI',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'CC62INI',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'CTRAPI',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'T12HRI',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'T13HRI',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	231
	.byte	22,0,2,35,0,0,12,12,212,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15442
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_LI_Bits',0,12,222,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CCPOS0EN',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'CCPOS1EN',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'CCPOS2EN',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'CC60INEN',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'CC61INEN',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'CC62INEN',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'CTRAPEN',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'T12HREN',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'T13HREN',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	423
	.byte	3,3,2,35,1,11
	.byte	'LBEEN',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'INPLBE',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,156,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15715
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_IS_Bits',0,12,252,1,16,4,11
	.byte	'ICC60R',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ICC60F',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'ICC61R',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'ICC61F',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'ICC62R',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'ICC62F',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'T12OM',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'T12PM',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'T13CM',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'T13PM',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'TRPF',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'TRPS',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'CHE',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'WHE',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'IDLE',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'STR',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,228,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16060
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_ISS_Bits',0,12,168,2,16,4,11
	.byte	'SCC60R',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'SCC60F',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'SCC61R',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SCC61F',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'SCC62R',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'SCC62F',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'ST12OM',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'ST12PM',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'ST13CM',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'ST13PM',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'STRPF',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'SWHC',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'SCHE',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'SWHE',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'SIDLE',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'SSTR',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,244,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16417
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_ISR_Bits',0,12,146,2,16,4,11
	.byte	'RCC60R',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'RCC60F',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'RCC61R',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'RCC61F',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'RCC62R',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'RCC62F',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'RT12OM',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'RT12PM',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'RT13CM',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'RT13PM',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'RTRPF',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'RCHE',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'RWHE',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'RIDLE',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'RSTR',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,236,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16784
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_INP_Bits',0,12,239,1,16,4,11
	.byte	'INPCC60',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'INPCC61',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'INPCC62',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'INPCHE',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'INPERR',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'INPT12',0,1
	.word	423
	.byte	2,4,2,35,1,11
	.byte	'INPT13',0,1
	.word	423
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	231
	.byte	18,0,2,35,0,0,12,12,220,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17158
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_IEN_Bits',0,12,201,1,16,4,11
	.byte	'ENCC60R',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ENCC60F',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'ENCC61R',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'ENCC61F',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'ENCC62R',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'ENCC62F',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'ENT12OM',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'ENT12PM',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'ENT13CM',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'ENT13PM',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'ENTRPF',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'ENCHE',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'ENWHE',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'ENIDLE',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'ENSTR',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,12,12,204,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17376
	.byte	4,2,35,0,0,16,52
	.word	423
	.byte	17,51,0,10
	.byte	'_Ifx_CCU6_OCS_Bits',0,12,180,3,16,4,11
	.byte	'TGS',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	423
	.byte	2,0,2,35,3,0,12,12,212,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17774
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_KRSTCLR_Bits',0,12,205,2,16,4,11
	.byte	'CLR',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	231
	.byte	31,0,2,35,0,0,12,12,140,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17981
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_KRST1_Bits',0,12,198,2,16,4,11
	.byte	'RST',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	231
	.byte	31,0,2,35,0,0,12,12,132,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18088
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_KRST0_Bits',0,12,190,2,16,4,11
	.byte	'RST',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	231
	.byte	30,0,2,35,0,0,12,12,252,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18193
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_ACCEN1_Bits',0,12,82,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	32,0,2,35,0,0,12,12,228,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18317
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_ACCEN0_Bits',0,12,45,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,12,220,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18407
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6',0,12,204,7,25,128,2,13
	.byte	'CLC',0
	.word	9996
	.byte	4,2,35,0,13
	.byte	'MCFG',0
	.word	10130
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	10257
	.byte	4,2,35,8,13
	.byte	'MOSEL',0
	.word	10407
	.byte	4,2,35,12,13
	.byte	'PISEL0',0
	.word	10643
	.byte	4,2,35,16,13
	.byte	'PISEL2',0
	.word	10827
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	3135
	.byte	4,2,35,24,13
	.byte	'KSCSR',0
	.word	10977
	.byte	4,2,35,28,13
	.byte	'T12',0
	.word	11083
	.byte	4,2,35,32,13
	.byte	'T12PR',0
	.word	11191
	.byte	4,2,35,36,13
	.byte	'T12DTC',0
	.word	11417
	.byte	4,2,35,40,13
	.byte	'reserved_2C',0
	.word	3135
	.byte	4,2,35,44,13
	.byte	'CC60R',0
	.word	11522
	.byte	4,2,35,48,13
	.byte	'CC61R',0
	.word	11627
	.byte	4,2,35,52,13
	.byte	'CC62R',0
	.word	11732
	.byte	4,2,35,56,13
	.byte	'reserved_3C',0
	.word	3135
	.byte	4,2,35,60,13
	.byte	'CC60SR',0
	.word	11838
	.byte	4,2,35,64,13
	.byte	'CC61SR',0
	.word	11944
	.byte	4,2,35,68,13
	.byte	'CC62SR',0
	.word	12050
	.byte	4,2,35,72,13
	.byte	'reserved_4C',0
	.word	3135
	.byte	4,2,35,76,13
	.byte	'T13',0
	.word	12156
	.byte	4,2,35,80,13
	.byte	'T13PR',0
	.word	12264
	.byte	4,2,35,84,13
	.byte	'CC63R',0
	.word	12370
	.byte	4,2,35,88,13
	.byte	'CC63SR',0
	.word	12477
	.byte	4,2,35,92,13
	.byte	'CMPSTAT',0
	.word	12872
	.byte	4,2,35,96,13
	.byte	'CMPMODIF',0
	.word	13177
	.byte	4,2,35,100,13
	.byte	'T12MSEL',0
	.word	13357
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	3135
	.byte	4,2,35,108,13
	.byte	'TCTR0',0
	.word	13617
	.byte	4,2,35,112,13
	.byte	'TCTR2',0
	.word	13840
	.byte	4,2,35,116,13
	.byte	'TCTR4',0
	.word	14205
	.byte	4,2,35,120,13
	.byte	'reserved_7C',0
	.word	3135
	.byte	4,2,35,124,13
	.byte	'MODCTR',0
	.word	14417
	.byte	4,3,35,128,1,13
	.byte	'TRPCTR',0
	.word	14636
	.byte	4,3,35,132,1,13
	.byte	'PSLR',0
	.word	14779
	.byte	4,3,35,136,1,13
	.byte	'MCMOUTS',0
	.word	15003
	.byte	4,3,35,140,1,13
	.byte	'MCMOUT',0
	.word	15178
	.byte	4,3,35,144,1,13
	.byte	'MCMCTR',0
	.word	15402
	.byte	4,3,35,148,1,13
	.byte	'IMON',0
	.word	15675
	.byte	4,3,35,152,1,13
	.byte	'LI',0
	.word	16020
	.byte	4,3,35,156,1,13
	.byte	'IS',0
	.word	16377
	.byte	4,3,35,160,1,13
	.byte	'ISS',0
	.word	16744
	.byte	4,3,35,164,1,13
	.byte	'ISR',0
	.word	17118
	.byte	4,3,35,168,1,13
	.byte	'INP',0
	.word	17336
	.byte	4,3,35,172,1,13
	.byte	'IEN',0
	.word	17725
	.byte	4,3,35,176,1,13
	.byte	'reserved_B4',0
	.word	17765
	.byte	52,3,35,180,1,13
	.byte	'OCS',0
	.word	17941
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	18048
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	18153
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	18277
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	18367
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	18937
	.byte	4,3,35,252,1,0,5
	.word	18977
.L233:
	.byte	6
	.word	19833
.L414:
	.byte	9
	.byte	'IfxCcu6_isModuleEnabled',0,3,11,150,13,20
	.word	423
	.byte	1,1
.L416:
	.byte	8
	.byte	'ccu6',0,11,150,13,54
	.word	19838
.L418:
	.byte	3,0
.L398:
	.byte	14,11,180,2,9,1,15
	.byte	'IfxCcu6_TimerId_t12',0,0,15
	.byte	'IfxCcu6_TimerId_t13',0,1,0,14,11,189,2,9,1,15
	.byte	'IfxCcu6_TimerInputClock_fcc6',0,0,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By2',0,1,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By4',0,2,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By8',0,3,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By16',0,4,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By32',0,5,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By64',0,6,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By128',0,7,0
.L312:
	.byte	2
	.byte	'IfxCcu6_setInputClockFrequency',0,3,11,224,13,17,1,1
.L314:
	.byte	8
	.byte	'ccu6',0,11,224,13,58
	.word	19838
.L316:
	.byte	8
	.byte	'timer',0,11,224,13,80
	.word	19895
.L318:
	.byte	8
	.byte	'frequency',0,11,224,13,111
	.word	19946
.L320:
	.byte	3,0
.L285:
	.byte	14,11,143,2,9,1,15
	.byte	'IfxCcu6_T12CountMode_edgeAligned',0,0,15
	.byte	'IfxCcu6_T12CountMode_centerAligned',0,1,0
.L328:
	.byte	2
	.byte	'IfxCcu6_setT12CountMode',0,3,11,164,14,17,1,1
.L330:
	.byte	8
	.byte	'ccu6',0,11,164,14,51
	.word	19838
.L332:
	.byte	8
	.byte	'mode',0,11,164,14,78
	.word	20316
.L334:
	.byte	3,0
.L294:
	.byte	2
	.byte	'IfxCcu6_setT12PeriodValue',0,3,11,176,14,17,1,1
.L296:
	.byte	8
	.byte	'ccu6',0,11,176,14,53
	.word	19838
.L298:
	.byte	8
	.byte	'value',0,11,176,14,66
	.word	974
.L300:
	.byte	3,0
.L353:
	.byte	2
	.byte	'IfxCcu6_setT13PeriodValue',0,3,11,194,14,17,1,1
.L356:
	.byte	8
	.byte	'ccu6',0,11,194,14,53
	.word	19838
.L358:
	.byte	8
	.byte	'value',0,11,194,14,66
	.word	974
.L360:
	.byte	3,0
.L321:
	.byte	2
	.byte	'IfxCcu6_enableAdditionalPrescaler',0,3,11,220,10,17,1,1
.L323:
	.byte	8
	.byte	'ccu6',0,11,220,10,61
	.word	19838
.L325:
	.byte	8
	.byte	'timer',0,11,220,10,83
	.word	19895
.L327:
	.byte	3,0
.L301:
	.byte	2
	.byte	'IfxCcu6_enableShadowTransfer',0,3,11,167,11,17,1,1
.L303:
	.byte	8
	.byte	'ccu6',0,11,167,11,56
	.word	19838
.L305:
	.byte	8
	.byte	't12',0,11,167,11,70
	.word	423
.L307:
	.byte	8
	.byte	't13',0,11,167,11,83
	.word	423
.L309:
	.byte	3,0,14,11,61,9,1,15
	.byte	'IfxCcu6_CaptureCompareInput_cC60',0,0,15
	.byte	'IfxCcu6_CaptureCompareInput_cC61',0,2,15
	.byte	'IfxCcu6_CaptureCompareInput_cC62',0,4,15
	.byte	'IfxCcu6_CaptureCompareInput_cTRAP',0,6,15
	.byte	'IfxCcu6_CaptureCompareInput_cCPOS0',0,8,15
	.byte	'IfxCcu6_CaptureCompareInput_cCPOS1',0,10,15
	.byte	'IfxCcu6_CaptureCompareInput_cCPOS2',0,12,0,14,11,74,9,1,15
	.byte	'IfxCcu6_CaptureCompareInputSignal_a',0,0,15
	.byte	'IfxCcu6_CaptureCompareInputSignal_b',0,1,15
	.byte	'IfxCcu6_CaptureCompareInputSignal_c',0,2,15
	.byte	'IfxCcu6_CaptureCompareInputSignal_d',0,3,0,2
	.byte	'IfxCcu6_setCaptureCompareInputSignal',0,3,11,174,13,17,1,1,8
	.byte	'ccu6',0,11,174,13,64
	.word	19838
	.byte	8
	.byte	'input',0,11,174,13,98
	.word	20739
	.byte	8
	.byte	'signal',0,11,174,13,139,1
	.word	20997
	.byte	3,0,18
	.byte	'__debug',0,1,1,1,1,7
	.byte	'char',0,1,6,19
	.word	21261
	.byte	6
	.word	21269
	.byte	20
	.word	21274
	.byte	21
	.byte	'printf',0,13,143,1,16
	.word	416
	.byte	1,1,1,1,22,13,143,1,38
	.word	21279
	.byte	23,13,143,1,50,0,24
	.word	186
	.byte	3,0,24
	.word	247
	.byte	25
	.word	264
	.byte	25
	.word	280
	.byte	25
	.word	293
	.byte	3,0,24
	.word	340
	.byte	25
	.word	358
	.byte	3,0,24
	.word	373
	.byte	25
	.word	387
	.byte	25
	.word	400
	.byte	3,0,24
	.word	779
	.byte	25
	.word	807
	.byte	3,0,24
	.word	1544
	.byte	25
	.word	1584
	.byte	25
	.word	1602
	.byte	3,0,24
	.word	1622
	.byte	25
	.word	1660
	.byte	25
	.word	1678
	.byte	3,0,26
	.byte	'IfxScuWdt_clearCpuEndinit',0,5,187,1,17,1,1,1,1,8
	.byte	'password',0,5,187,1,50
	.word	974
	.byte	0,26
	.byte	'IfxScuWdt_setCpuEndinit',0,5,209,1,17,1,1,1,1,8
	.byte	'password',0,5,209,1,48
	.word	974
	.byte	0,24
	.word	1698
	.byte	25
	.word	1749
	.byte	3,0,27
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,5,221,2,19
	.word	974
	.byte	1,1,1,1,24
	.word	1824
	.byte	3,0,24
	.word	1858
	.byte	3,0,24
	.word	1921
	.byte	25
	.word	1962
	.byte	3,0,24
	.word	1981
	.byte	25
	.word	2036
	.byte	3,0,24
	.word	2055
	.byte	25
	.word	2095
	.byte	25
	.word	2112
	.byte	3,0,24
	.word	9235
	.byte	25
	.word	9267
	.byte	25
	.word	9281
	.byte	25
	.word	9299
	.byte	3,0,24
	.word	9601
	.byte	25
	.word	9634
	.byte	25
	.word	9648
	.byte	25
	.word	9666
	.byte	25
	.word	9680
	.byte	3,0,24
	.word	9800
	.byte	25
	.word	9828
	.byte	25
	.word	9842
	.byte	25
	.word	9860
	.byte	3,0
.L280:
	.byte	7
	.byte	'float',0,4,4,27
	.byte	'IfxScuCcu_getSpbFrequency',0,14,145,7,20
	.word	21713
	.byte	1,1,1,1,24
	.word	19843
	.byte	25
	.word	19879
	.byte	3,0,24
	.word	20227
	.byte	25
	.word	20266
	.byte	25
	.word	20280
	.byte	25
	.word	20295
	.byte	3,0,24
	.word	20395
	.byte	25
	.word	20427
	.byte	25
	.word	20441
	.byte	3,0,24
	.word	20457
	.byte	25
	.word	20491
	.byte	25
	.word	20505
	.byte	3,0,24
	.word	20522
	.byte	25
	.word	20556
	.byte	25
	.word	20570
	.byte	3,0
.L235:
	.byte	14,15,57,9,1,15
	.byte	'IfxCcu6_TrigOut_0',0,0,15
	.byte	'IfxCcu6_TrigOut_1',0,3,15
	.byte	'IfxCcu6_TrigOut_2',0,6,0
.L237:
	.byte	14,15,64,9,1,15
	.byte	'IfxCcu6_TrigSel_cout63',0,0,15
	.byte	'IfxCcu6_TrigSel_cc60',0,1,15
	.byte	'IfxCcu6_TrigSel_cc61',0,1,15
	.byte	'IfxCcu6_TrigSel_cc62',0,1,15
	.byte	'IfxCcu6_TrigSel_sr1',0,2,15
	.byte	'IfxCcu6_TrigSel_sr3',0,3,0
.L255:
	.byte	14,11,162,1,9,1,15
	.byte	'IfxCcu6_InterruptSource_cc60RisingEdge',0,0,15
	.byte	'IfxCcu6_InterruptSource_cc60FallingEdge',0,1,15
	.byte	'IfxCcu6_InterruptSource_cc61RisingEdge',0,2,15
	.byte	'IfxCcu6_InterruptSource_cc61FallingEdge',0,3,15
	.byte	'IfxCcu6_InterruptSource_cc62RisingEdge',0,4,15
	.byte	'IfxCcu6_InterruptSource_cc62FallingEdge',0,5,15
	.byte	'IfxCcu6_InterruptSource_t12OneMatch',0,6,15
	.byte	'IfxCcu6_InterruptSource_t12PeriodMatch',0,7,15
	.byte	'IfxCcu6_InterruptSource_t13CompareMatch',0,8,15
	.byte	'IfxCcu6_InterruptSource_t13PeriodMatch',0,9,15
	.byte	'IfxCcu6_InterruptSource_trap',0,10,15
	.byte	'IfxCcu6_InterruptSource_correctHallEvent',0,12,15
	.byte	'IfxCcu6_InterruptSource_wrongHallEvent',0,13,0
.L257:
	.byte	14,11,213,1,9,1,15
	.byte	'IfxCcu6_ServiceRequest_0',0,0,15
	.byte	'IfxCcu6_ServiceRequest_1',0,1,15
	.byte	'IfxCcu6_ServiceRequest_2',0,2,15
	.byte	'IfxCcu6_ServiceRequest_3',0,3,0
.L261:
	.byte	14,11,93,9,1,15
	.byte	'IfxCcu6_ChannelOut_cc0',0,0,15
	.byte	'IfxCcu6_ChannelOut_cout0',0,1,15
	.byte	'IfxCcu6_ChannelOut_cc1',0,2,15
	.byte	'IfxCcu6_ChannelOut_cout1',0,3,15
	.byte	'IfxCcu6_ChannelOut_cc2',0,4,15
	.byte	'IfxCcu6_ChannelOut_cout2',0,5,15
	.byte	'IfxCcu6_ChannelOut_cout3',0,6,0
.L271:
	.byte	14,11,232,1,9,1,15
	.byte	'IfxCcu6_T12Channel_0',0,0,15
	.byte	'IfxCcu6_T12Channel_1',0,1,15
	.byte	'IfxCcu6_T12Channel_2',0,2,0
.L273:
	.byte	14,11,84,9,1,15
	.byte	'IfxCcu6_CaptureCompareState_set',0,0,15
	.byte	'IfxCcu6_CaptureCompareState_clear',0,1,15
	.byte	'IfxCcu6_CaptureCompareState_toggle',0,2,0,28,9,149,1,9,8,13
	.byte	'port',0
	.word	9105
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	423
	.byte	1,2,35,4,0,14,17,94,9,1,15
	.byte	'Ifx_RxSel_a',0,0,15
	.byte	'Ifx_RxSel_b',0,1,15
	.byte	'Ifx_RxSel_c',0,2,15
	.byte	'Ifx_RxSel_d',0,3,15
	.byte	'Ifx_RxSel_e',0,4,15
	.byte	'Ifx_RxSel_f',0,5,15
	.byte	'Ifx_RxSel_g',0,6,15
	.byte	'Ifx_RxSel_h',0,7,0,28,16,95,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23121
	.byte	1,2,35,12,0,19
	.word	23239
.L337:
	.byte	6
	.word	23290
	.byte	16,26
	.word	21261
	.byte	17,25,0
.L339:
	.byte	19
	.word	23300
	.byte	28,16,103,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23121
	.byte	1,2,35,12,0,19
	.word	23314
.L375:
	.byte	6
	.word	23365
.L377:
	.byte	19
	.word	23300
.L386:
	.byte	7
	.byte	'long int',0,4,5,24
	.word	20587
	.byte	25
	.word	20629
	.byte	25
	.word	20643
	.byte	3,0,24
	.word	20660
	.byte	25
	.word	20697
	.byte	25
	.word	20711
	.byte	25
	.word	20724
	.byte	3,0,24
	.word	21155
	.byte	25
	.word	21200
	.byte	25
	.word	21214
	.byte	25
	.word	21229
	.byte	3,0,7
	.byte	'short int',0,2,5,29
	.byte	'__wchar_t',0,18,1,1
	.word	23453
	.byte	29
	.byte	'__size_t',0,18,1,1
	.word	231
	.byte	29
	.byte	'__ptrdiff_t',0,18,1,1
	.word	416
	.byte	30,1,6
	.word	23521
	.byte	29
	.byte	'__codeptr',0,18,1,1
	.word	23523
	.byte	29
	.byte	'__intptr_t',0,18,1,1
	.word	416
	.byte	29
	.byte	'__uintptr_t',0,18,1,1
	.word	231
	.byte	29
	.byte	'_iob_flag_t',0,13,82,25
	.word	974
	.byte	16,24
	.word	21274
	.byte	17,5,0,31
	.byte	'verboseLevelStr',0,19,29,20
	.word	23605
	.byte	1,1,29
	.byte	'uint8',0,20,89,24
	.word	423
	.byte	29
	.byte	'sint16',0,20,90,24
	.word	23453
	.byte	29
	.byte	'uint16',0,20,91,24
	.word	974
	.byte	29
	.byte	'sint32',0,20,92,24
	.word	23380
	.byte	29
	.byte	'uint32',0,20,93,24
	.word	1900
	.byte	29
	.byte	'float32',0,20,94,24
	.word	21713
	.byte	29
	.byte	'boolean',0,20,104,24
	.word	423
	.byte	7
	.byte	'long long int',0,8,5,29
	.byte	'sint64',0,17,36,28
	.word	23746
	.byte	29
	.byte	'uint64',0,17,37,28
	.word	309
	.byte	29
	.byte	'pvoid',0,17,40,28
	.word	335
	.byte	29
	.byte	'Ifx_TickTime',0,17,43,28
	.word	23746
	.byte	29
	.byte	'Ifx_Priority',0,17,67,16
	.word	974
	.byte	29
	.byte	'Ifx_TimerValue',0,17,68,16
	.word	1900
	.byte	29
	.byte	'Ifx_RxSel',0,17,104,3
	.word	23121
	.byte	28,17,107,9,8,13
	.byte	'module',0
	.word	226
	.byte	4,2,35,0,13
	.byte	'index',0
	.word	23380
	.byte	4,2,35,4,0,29
	.byte	'IfxModule_IndexMap',0,17,111,3
	.word	23890
	.byte	29
	.byte	'Ifx_CCU6_ACCEN0_Bits',0,12,79,3
	.word	18407
	.byte	29
	.byte	'Ifx_CCU6_ACCEN1_Bits',0,12,85,3
	.word	18317
	.byte	29
	.byte	'Ifx_CCU6_CC60R_Bits',0,12,92,3
	.word	11457
	.byte	29
	.byte	'Ifx_CCU6_CC60SR_Bits',0,12,99,3
	.word	11772
	.byte	29
	.byte	'Ifx_CCU6_CC61R_Bits',0,12,106,3
	.word	11562
	.byte	29
	.byte	'Ifx_CCU6_CC61SR_Bits',0,12,113,3
	.word	11878
	.byte	29
	.byte	'Ifx_CCU6_CC62R_Bits',0,12,120,3
	.word	11667
	.byte	29
	.byte	'Ifx_CCU6_CC62SR_Bits',0,12,127,3
	.word	11984
	.byte	29
	.byte	'Ifx_CCU6_CC63R_Bits',0,12,134,1,3
	.word	12304
	.byte	29
	.byte	'Ifx_CCU6_CC63SR_Bits',0,12,141,1,3
	.word	12410
	.byte	29
	.byte	'Ifx_CCU6_CLC_Bits',0,12,151,1,3
	.word	9878
	.byte	29
	.byte	'Ifx_CCU6_CMPMODIF_Bits',0,12,168,1,3
	.word	12912
	.byte	29
	.byte	'Ifx_CCU6_CMPSTAT_Bits',0,12,190,1,3
	.word	12517
	.byte	29
	.byte	'Ifx_CCU6_ID_Bits',0,12,198,1,3
	.word	10170
	.byte	29
	.byte	'Ifx_CCU6_IEN_Bits',0,12,220,1,3
	.word	17376
	.byte	29
	.byte	'Ifx_CCU6_IMON_Bits',0,12,236,1,3
	.word	15442
	.byte	29
	.byte	'Ifx_CCU6_INP_Bits',0,12,249,1,3
	.word	17158
	.byte	29
	.byte	'Ifx_CCU6_IS_Bits',0,12,143,2,3
	.word	16060
	.byte	29
	.byte	'Ifx_CCU6_ISR_Bits',0,12,165,2,3
	.word	16784
	.byte	29
	.byte	'Ifx_CCU6_ISS_Bits',0,12,187,2,3
	.word	16417
	.byte	29
	.byte	'Ifx_CCU6_KRST0_Bits',0,12,195,2,3
	.word	18193
	.byte	29
	.byte	'Ifx_CCU6_KRST1_Bits',0,12,202,2,3
	.word	18088
	.byte	29
	.byte	'Ifx_CCU6_KRSTCLR_Bits',0,12,209,2,3
	.word	17981
	.byte	29
	.byte	'Ifx_CCU6_KSCSR_Bits',0,12,219,2,3
	.word	10867
	.byte	29
	.byte	'Ifx_CCU6_LI_Bits',0,12,238,2,3
	.word	15715
	.byte	29
	.byte	'Ifx_CCU6_MCFG_Bits',0,12,247,2,3
	.word	10036
	.byte	29
	.byte	'Ifx_CCU6_MCMCTR_Bits',0,12,132,3,3
	.word	15218
	.byte	29
	.byte	'Ifx_CCU6_MCMOUT_Bits',0,12,143,3,3
	.word	15043
	.byte	29
	.byte	'Ifx_CCU6_MCMOUTS_Bits',0,12,156,3,3
	.word	14819
	.byte	29
	.byte	'Ifx_CCU6_MODCTR_Bits',0,12,168,3,3
	.word	14245
	.byte	29
	.byte	'Ifx_CCU6_MOSEL_Bits',0,12,177,3,3
	.word	10297
	.byte	29
	.byte	'Ifx_CCU6_OCS_Bits',0,12,190,3,3
	.word	17774
	.byte	29
	.byte	'Ifx_CCU6_PISEL0_Bits',0,12,204,3,3
	.word	10447
	.byte	29
	.byte	'Ifx_CCU6_PISEL2_Bits',0,12,215,3,3
	.word	10683
	.byte	29
	.byte	'Ifx_CCU6_PSLR_Bits',0,12,224,3,3
	.word	14676
	.byte	29
	.byte	'Ifx_CCU6_T12_Bits',0,12,231,3,3
	.word	11017
	.byte	29
	.byte	'Ifx_CCU6_T12DTC_Bits',0,12,245,3,3
	.word	11231
	.byte	29
	.byte	'Ifx_CCU6_T12MSEL_Bits',0,12,128,4,3
	.word	13217
	.byte	29
	.byte	'Ifx_CCU6_T12PR_Bits',0,12,135,4,3
	.word	11123
	.byte	29
	.byte	'Ifx_CCU6_T13_Bits',0,12,142,4,3
	.word	12090
	.byte	29
	.byte	'Ifx_CCU6_T13PR_Bits',0,12,149,4,3
	.word	12196
	.byte	29
	.byte	'Ifx_CCU6_TCTR0_Bits',0,12,165,4,3
	.word	13397
	.byte	29
	.byte	'Ifx_CCU6_TCTR2_Bits',0,12,178,4,3
	.word	13657
	.byte	29
	.byte	'Ifx_CCU6_TCTR4_Bits',0,12,199,4,3
	.word	13880
	.byte	29
	.byte	'Ifx_CCU6_TRPCTR_Bits',0,12,212,4,3
	.word	14457
	.byte	29
	.byte	'Ifx_CCU6_ACCEN0',0,12,225,4,3
	.word	18937
	.byte	29
	.byte	'Ifx_CCU6_ACCEN1',0,12,233,4,3
	.word	18367
	.byte	29
	.byte	'Ifx_CCU6_CC60R',0,12,241,4,3
	.word	11522
	.byte	29
	.byte	'Ifx_CCU6_CC60SR',0,12,249,4,3
	.word	11838
	.byte	29
	.byte	'Ifx_CCU6_CC61R',0,12,129,5,3
	.word	11627
	.byte	29
	.byte	'Ifx_CCU6_CC61SR',0,12,137,5,3
	.word	11944
	.byte	29
	.byte	'Ifx_CCU6_CC62R',0,12,145,5,3
	.word	11732
	.byte	29
	.byte	'Ifx_CCU6_CC62SR',0,12,153,5,3
	.word	12050
	.byte	29
	.byte	'Ifx_CCU6_CC63R',0,12,161,5,3
	.word	12370
	.byte	29
	.byte	'Ifx_CCU6_CC63SR',0,12,169,5,3
	.word	12477
	.byte	29
	.byte	'Ifx_CCU6_CLC',0,12,177,5,3
	.word	9996
	.byte	29
	.byte	'Ifx_CCU6_CMPMODIF',0,12,185,5,3
	.word	13177
	.byte	29
	.byte	'Ifx_CCU6_CMPSTAT',0,12,193,5,3
	.word	12872
	.byte	29
	.byte	'Ifx_CCU6_ID',0,12,201,5,3
	.word	10257
	.byte	29
	.byte	'Ifx_CCU6_IEN',0,12,209,5,3
	.word	17725
	.byte	29
	.byte	'Ifx_CCU6_IMON',0,12,217,5,3
	.word	15675
	.byte	29
	.byte	'Ifx_CCU6_INP',0,12,225,5,3
	.word	17336
	.byte	29
	.byte	'Ifx_CCU6_IS',0,12,233,5,3
	.word	16377
	.byte	29
	.byte	'Ifx_CCU6_ISR',0,12,241,5,3
	.word	17118
	.byte	29
	.byte	'Ifx_CCU6_ISS',0,12,249,5,3
	.word	16744
	.byte	29
	.byte	'Ifx_CCU6_KRST0',0,12,129,6,3
	.word	18277
	.byte	29
	.byte	'Ifx_CCU6_KRST1',0,12,137,6,3
	.word	18153
	.byte	29
	.byte	'Ifx_CCU6_KRSTCLR',0,12,145,6,3
	.word	18048
	.byte	29
	.byte	'Ifx_CCU6_KSCSR',0,12,153,6,3
	.word	10977
	.byte	29
	.byte	'Ifx_CCU6_LI',0,12,161,6,3
	.word	16020
	.byte	29
	.byte	'Ifx_CCU6_MCFG',0,12,169,6,3
	.word	10130
	.byte	29
	.byte	'Ifx_CCU6_MCMCTR',0,12,177,6,3
	.word	15402
	.byte	29
	.byte	'Ifx_CCU6_MCMOUT',0,12,185,6,3
	.word	15178
	.byte	29
	.byte	'Ifx_CCU6_MCMOUTS',0,12,193,6,3
	.word	15003
	.byte	29
	.byte	'Ifx_CCU6_MODCTR',0,12,201,6,3
	.word	14417
	.byte	29
	.byte	'Ifx_CCU6_MOSEL',0,12,209,6,3
	.word	10407
	.byte	29
	.byte	'Ifx_CCU6_OCS',0,12,217,6,3
	.word	17941
	.byte	29
	.byte	'Ifx_CCU6_PISEL0',0,12,225,6,3
	.word	10643
	.byte	29
	.byte	'Ifx_CCU6_PISEL2',0,12,233,6,3
	.word	10827
	.byte	29
	.byte	'Ifx_CCU6_PSLR',0,12,241,6,3
	.word	14779
	.byte	29
	.byte	'Ifx_CCU6_T12',0,12,249,6,3
	.word	11083
	.byte	29
	.byte	'Ifx_CCU6_T12DTC',0,12,129,7,3
	.word	11417
	.byte	29
	.byte	'Ifx_CCU6_T12MSEL',0,12,137,7,3
	.word	13357
	.byte	29
	.byte	'Ifx_CCU6_T12PR',0,12,145,7,3
	.word	11191
	.byte	29
	.byte	'Ifx_CCU6_T13',0,12,153,7,3
	.word	12156
	.byte	29
	.byte	'Ifx_CCU6_T13PR',0,12,161,7,3
	.word	12264
	.byte	29
	.byte	'Ifx_CCU6_TCTR0',0,12,169,7,3
	.word	13617
	.byte	29
	.byte	'Ifx_CCU6_TCTR2',0,12,177,7,3
	.word	13840
	.byte	29
	.byte	'Ifx_CCU6_TCTR4',0,12,185,7,3
	.word	14205
	.byte	29
	.byte	'Ifx_CCU6_TRPCTR',0,12,193,7,3
	.word	14636
	.byte	5
	.word	18977
	.byte	29
	.byte	'Ifx_CCU6',0,12,130,8,3
	.word	26323
	.byte	29
	.byte	'IfxCcu6_TrigOut',0,15,62,3
	.word	21846
	.byte	29
	.byte	'IfxCcu6_TrigSel',0,15,72,3
	.word	21912
	.byte	16,16
	.word	23890
	.byte	17,1,0,19
	.word	26394
	.byte	31
	.byte	'IfxCcu6_indexMap',0,15,78,37
	.word	26403
	.byte	1,1,14,21,49,9,1,15
	.byte	'IfxSrc_Tos_cpu0',0,0,15
	.byte	'IfxSrc_Tos_dma',0,1,0,29
	.byte	'IfxSrc_Tos',0,21,53,3
	.word	26435
	.byte	29
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	440
	.byte	29
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	730
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,4,86,25,12,13
	.byte	'TX',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	730
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	730
	.byte	4,2,35,8,0,5
	.word	26542
	.byte	29
	.byte	'Ifx_SRC_ASCLIN',0,4,91,3
	.word	26601
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,4,94,25,4,13
	.byte	'SBSRC',0
	.word	730
	.byte	4,2,35,0,0,5
	.word	26629
	.byte	29
	.byte	'Ifx_SRC_BCUSPB',0,4,97,3
	.word	26666
	.byte	16,64
	.word	730
	.byte	17,15,0,10
	.byte	'_Ifx_SRC_CAN',0,4,100,25,64,13
	.byte	'INT',0
	.word	26694
	.byte	64,2,35,0,0,5
	.word	26703
	.byte	29
	.byte	'Ifx_SRC_CAN',0,4,103,3
	.word	26735
	.byte	16,32
	.word	730
	.byte	17,7,0,10
	.byte	'_Ifx_SRC_CAN1',0,4,106,25,32,13
	.byte	'INT',0
	.word	26760
	.byte	32,2,35,0,0,5
	.word	26769
	.byte	29
	.byte	'Ifx_SRC_CAN1',0,4,109,3
	.word	26802
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,13
	.byte	'SR0',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	730
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	730
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	730
	.byte	4,2,35,12,0,5
	.word	26828
	.byte	29
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	26900
	.byte	16,8
	.word	730
	.byte	17,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,13
	.byte	'SR',0
	.word	26926
	.byte	8,2,35,0,0,5
	.word	26935
	.byte	29
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	26971
	.byte	16,28
	.word	423
	.byte	17,27,0,10
	.byte	'_Ifx_SRC_CPU',0,4,127,25,32,13
	.byte	'SBSRC',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	27001
	.byte	28,2,35,4,0,5
	.word	27010
	.byte	29
	.byte	'Ifx_SRC_CPU',0,4,131,1,3
	.word	27064
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,4,134,1,25,80,13
	.byte	'ERR',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	5294
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	26694
	.byte	64,2,35,16,0,5
	.word	27090
	.byte	29
	.byte	'Ifx_SRC_DMA',0,4,139,1,3
	.word	27155
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,4,142,1,25,4,13
	.byte	'SR',0
	.word	730
	.byte	4,2,35,0,0,5
	.word	27181
	.byte	29
	.byte	'Ifx_SRC_EMEM',0,4,145,1,3
	.word	27214
	.byte	16,40
	.word	423
	.byte	17,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,4,148,1,25,80,13
	.byte	'INT',0
	.word	26926
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	26926
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	26926
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	26926
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	730
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	730
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	27241
	.byte	40,2,35,40,0,5
	.word	27250
	.byte	29
	.byte	'Ifx_SRC_ERAY',0,4,157,1,3
	.word	27377
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,4,160,1,25,4,13
	.byte	'SR',0
	.word	730
	.byte	4,2,35,0,0,5
	.word	27404
	.byte	29
	.byte	'Ifx_SRC_ETH',0,4,163,1,3
	.word	27436
	.byte	10
	.byte	'_Ifx_SRC_EVR',0,4,166,1,25,8,13
	.byte	'WUT',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'SCDC',0
	.word	730
	.byte	4,2,35,4,0,5
	.word	27462
	.byte	29
	.byte	'Ifx_SRC_EVR',0,4,170,1,3
	.word	27509
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,4,173,1,25,12,13
	.byte	'DONE',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	730
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	730
	.byte	4,2,35,8,0,5
	.word	27535
	.byte	29
	.byte	'Ifx_SRC_FFT',0,4,178,1,3
	.word	27595
	.byte	16,240,11
	.word	423
	.byte	17,239,11,0,10
	.byte	'_Ifx_SRC_GPSR',0,4,181,1,25,128,12,13
	.byte	'SR0',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	730
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	730
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	730
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	27621
	.byte	240,11,2,35,16,0,5
	.word	27632
	.byte	29
	.byte	'Ifx_SRC_GPSR',0,4,188,1,3
	.word	27728
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,4,191,1,25,48,13
	.byte	'CIRQ',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	730
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	730
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	730
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	730
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	730
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	4325
	.byte	24,2,35,24,0,5
	.word	27755
	.byte	29
	.byte	'Ifx_SRC_GPT12',0,4,200,1,3
	.word	27872
	.byte	16,236,2
	.word	423
	.byte	17,235,2,0,16,32
	.word	26760
	.byte	17,0,0,16,224,7
	.word	423
	.byte	17,223,7,0,16,64
	.word	26760
	.byte	17,1,0,10
	.byte	'_Ifx_SRC_GTM',0,4,203,1,25,192,11,13
	.byte	'AEIIRQ',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	27900
	.byte	236,2,2,35,4,13
	.byte	'ERR',0
	.word	730
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	5294
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	27911
	.byte	32,3,35,128,3,13
	.byte	'reserved_1A0',0
	.word	27920
	.byte	224,7,3,35,160,3,13
	.byte	'TOM',0
	.word	27931
	.byte	64,3,35,128,11,0,5
	.word	27940
	.byte	29
	.byte	'Ifx_SRC_GTM',0,4,212,1,3
	.word	28087
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,4,215,1,25,8,13
	.byte	'HSM',0
	.word	26926
	.byte	8,2,35,0,0,5
	.word	28113
	.byte	29
	.byte	'Ifx_SRC_HSM',0,4,218,1,3
	.word	28146
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,4,221,1,25,4,13
	.byte	'SR',0
	.word	730
	.byte	4,2,35,0,0,5
	.word	28172
	.byte	29
	.byte	'Ifx_SRC_LMU',0,4,224,1,3
	.word	28204
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,4,227,1,25,4,13
	.byte	'SR',0
	.word	730
	.byte	4,2,35,0,0,5
	.word	28230
	.byte	29
	.byte	'Ifx_SRC_PMU',0,4,230,1,3
	.word	28262
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,4,233,1,25,24,13
	.byte	'TX',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	730
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	730
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	730
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	730
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	730
	.byte	4,2,35,20,0,5
	.word	28288
	.byte	29
	.byte	'Ifx_SRC_QSPI',0,4,241,1,3
	.word	28381
	.byte	16,16
	.word	730
	.byte	17,3,0,10
	.byte	'_Ifx_SRC_SCU',0,4,244,1,25,20,13
	.byte	'DTS',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	28408
	.byte	16,2,35,4,0,5
	.word	28417
	.byte	29
	.byte	'Ifx_SRC_SCU',0,4,248,1,3
	.word	28463
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,4,251,1,25,16,13
	.byte	'SR',0
	.word	28408
	.byte	16,2,35,0,0,5
	.word	28489
	.byte	29
	.byte	'Ifx_SRC_SENT',0,4,254,1,3
	.word	28522
	.byte	16,12
	.word	730
	.byte	17,2,0,10
	.byte	'_Ifx_SRC_SMU',0,4,129,2,25,12,13
	.byte	'SR',0
	.word	28549
	.byte	12,2,35,0,0,5
	.word	28558
	.byte	29
	.byte	'Ifx_SRC_SMU',0,4,132,2,3
	.word	28590
	.byte	16,88
	.word	423
	.byte	17,87,0,10
	.byte	'_Ifx_SRC_STM',0,4,135,2,25,96,13
	.byte	'SR0',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	730
	.byte	4,2,35,4,13
	.byte	'reserved_8',0
	.word	28616
	.byte	88,2,35,8,0,5
	.word	28625
	.byte	29
	.byte	'Ifx_SRC_STM',0,4,140,2,3
	.word	28691
	.byte	16,176,2
	.word	423
	.byte	17,175,2,0,10
	.byte	'_Ifx_SRC_VADCCG',0,4,143,2,25,192,2,13
	.byte	'SR0',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	730
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	730
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	730
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	28717
	.byte	176,2,2,35,16,0,5
	.word	28728
	.byte	29
	.byte	'Ifx_SRC_VADCCG',0,4,150,2,3
	.word	28826
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,4,153,2,25,16,13
	.byte	'SR0',0
	.word	730
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	730
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	730
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	730
	.byte	4,2,35,12,0,5
	.word	28855
	.byte	29
	.byte	'Ifx_SRC_VADCG',0,4,159,2,3
	.word	28929
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,4,162,2,25,4,13
	.byte	'SRC',0
	.word	730
	.byte	4,2,35,0,0,5
	.word	28957
	.byte	29
	.byte	'Ifx_SRC_XBAR',0,4,165,2,3
	.word	28991
	.byte	16,24
	.word	26542
	.byte	17,1,0,5
	.word	29018
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,4,178,2,25,24,13
	.byte	'ASCLIN',0
	.word	29027
	.byte	24,2,35,0,0,5
	.word	29032
	.byte	29
	.byte	'Ifx_SRC_GASCLIN',0,4,181,2,3
	.word	29072
	.byte	5
	.word	26629
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,4,184,2,25,4,13
	.byte	'SPB',0
	.word	29102
	.byte	4,2,35,0,0,5
	.word	29107
	.byte	29
	.byte	'Ifx_SRC_GBCU',0,4,187,2,3
	.word	29141
	.byte	16,64
	.word	26703
	.byte	17,0,0,5
	.word	29168
	.byte	16,32
	.word	26769
	.byte	17,0,0,5
	.word	29182
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,4,190,2,25,96,13
	.byte	'CAN',0
	.word	29177
	.byte	64,2,35,0,13
	.byte	'CAN1',0
	.word	29191
	.byte	32,2,35,64,0,5
	.word	29196
	.byte	29
	.byte	'Ifx_SRC_GCAN',0,4,194,2,3
	.word	29244
	.byte	16,32
	.word	26828
	.byte	17,1,0,5
	.word	29271
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,4,197,2,25,32,13
	.byte	'CCU6',0
	.word	29280
	.byte	32,2,35,0,0,5
	.word	29285
	.byte	29
	.byte	'Ifx_SRC_GCCU6',0,4,200,2,3
	.word	29321
	.byte	5
	.word	26935
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,4,203,2,25,8,13
	.byte	'CERBERUS',0
	.word	29349
	.byte	8,2,35,0,0,5
	.word	29354
	.byte	29
	.byte	'Ifx_SRC_GCERBERUS',0,4,206,2,3
	.word	29398
	.byte	16,32
	.word	27010
	.byte	17,0,0,5
	.word	29430
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,4,209,2,25,32,13
	.byte	'CPU',0
	.word	29439
	.byte	32,2,35,0,0,5
	.word	29444
	.byte	29
	.byte	'Ifx_SRC_GCPU',0,4,212,2,3
	.word	29478
	.byte	16,80
	.word	27090
	.byte	17,0,0,5
	.word	29505
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,4,215,2,25,80,13
	.byte	'DMA',0
	.word	29514
	.byte	80,2,35,0,0,5
	.word	29519
	.byte	29
	.byte	'Ifx_SRC_GDMA',0,4,218,2,3
	.word	29553
	.byte	16,4
	.word	27181
	.byte	17,0,0,5
	.word	29580
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,4,221,2,25,4,13
	.byte	'EMEM',0
	.word	29589
	.byte	4,2,35,0,0,5
	.word	29594
	.byte	29
	.byte	'Ifx_SRC_GEMEM',0,4,224,2,3
	.word	29630
	.byte	16,80
	.word	27250
	.byte	17,0,0,5
	.word	29658
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,4,227,2,25,80,13
	.byte	'ERAY',0
	.word	29667
	.byte	80,2,35,0,0,5
	.word	29672
	.byte	29
	.byte	'Ifx_SRC_GERAY',0,4,230,2,3
	.word	29708
	.byte	16,4
	.word	27404
	.byte	17,0,0,5
	.word	29736
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,4,233,2,25,4,13
	.byte	'ETH',0
	.word	29745
	.byte	4,2,35,0,0,5
	.word	29750
	.byte	29
	.byte	'Ifx_SRC_GETH',0,4,236,2,3
	.word	29784
	.byte	16,8
	.word	27462
	.byte	17,0,0,5
	.word	29811
	.byte	10
	.byte	'_Ifx_SRC_GEVR',0,4,239,2,25,8,13
	.byte	'EVR',0
	.word	29820
	.byte	8,2,35,0,0,5
	.word	29825
	.byte	29
	.byte	'Ifx_SRC_GEVR',0,4,242,2,3
	.word	29859
	.byte	16,12
	.word	27535
	.byte	17,0,0,5
	.word	29886
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,4,245,2,25,12,13
	.byte	'FFT',0
	.word	29895
	.byte	12,2,35,0,0,5
	.word	29900
	.byte	29
	.byte	'Ifx_SRC_GFFT',0,4,248,2,3
	.word	29934
	.byte	16,128,12
	.word	27632
	.byte	17,0,0,5
	.word	29961
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,4,251,2,25,128,12,13
	.byte	'GPSR',0
	.word	29971
	.byte	128,12,2,35,0,0,5
	.word	29976
	.byte	29
	.byte	'Ifx_SRC_GGPSR',0,4,254,2,3
	.word	30014
	.byte	16,48
	.word	27755
	.byte	17,0,0,5
	.word	30042
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,4,129,3,25,48,13
	.byte	'GPT12',0
	.word	30051
	.byte	48,2,35,0,0,5
	.word	30056
	.byte	29
	.byte	'Ifx_SRC_GGPT12',0,4,132,3,3
	.word	30094
	.byte	16,192,11
	.word	27940
	.byte	17,0,0,5
	.word	30123
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,4,135,3,25,192,11,13
	.byte	'GTM',0
	.word	30133
	.byte	192,11,2,35,0,0,5
	.word	30138
	.byte	29
	.byte	'Ifx_SRC_GGTM',0,4,138,3,3
	.word	30174
	.byte	16,8
	.word	28113
	.byte	17,0,0,5
	.word	30201
	.byte	10
	.byte	'_Ifx_SRC_GHSM',0,4,141,3,25,8,13
	.byte	'HSM',0
	.word	30210
	.byte	8,2,35,0,0,5
	.word	30215
	.byte	29
	.byte	'Ifx_SRC_GHSM',0,4,144,3,3
	.word	30249
	.byte	16,4
	.word	28172
	.byte	17,0,0,5
	.word	30276
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,4,147,3,25,4,13
	.byte	'LMU',0
	.word	30285
	.byte	4,2,35,0,0,5
	.word	30290
	.byte	29
	.byte	'Ifx_SRC_GLMU',0,4,150,3,3
	.word	30324
	.byte	16,8
	.word	28230
	.byte	17,1,0,5
	.word	30351
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,4,153,3,25,8,13
	.byte	'PMU',0
	.word	30360
	.byte	8,2,35,0,0,5
	.word	30365
	.byte	29
	.byte	'Ifx_SRC_GPMU',0,4,156,3,3
	.word	30399
	.byte	16,96
	.word	28288
	.byte	17,3,0,5
	.word	30426
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,4,159,3,25,96,13
	.byte	'QSPI',0
	.word	30435
	.byte	96,2,35,0,0,5
	.word	30440
	.byte	29
	.byte	'Ifx_SRC_GQSPI',0,4,162,3,3
	.word	30476
	.byte	5
	.word	28417
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,4,165,3,25,20,13
	.byte	'SCU',0
	.word	30504
	.byte	20,2,35,0,0,5
	.word	30509
	.byte	29
	.byte	'Ifx_SRC_GSCU',0,4,168,3,3
	.word	30543
	.byte	16,16
	.word	28489
	.byte	17,0,0,5
	.word	30570
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,4,171,3,25,16,13
	.byte	'SENT',0
	.word	30579
	.byte	16,2,35,0,0,5
	.word	30584
	.byte	29
	.byte	'Ifx_SRC_GSENT',0,4,174,3,3
	.word	30620
	.byte	16,12
	.word	28558
	.byte	17,0,0,5
	.word	30648
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,4,177,3,25,12,13
	.byte	'SMU',0
	.word	30657
	.byte	12,2,35,0,0,5
	.word	30662
	.byte	29
	.byte	'Ifx_SRC_GSMU',0,4,180,3,3
	.word	30696
	.byte	16,96
	.word	28625
	.byte	17,0,0,5
	.word	30723
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,4,183,3,25,96,13
	.byte	'STM',0
	.word	30732
	.byte	96,2,35,0,0,5
	.word	30737
	.byte	29
	.byte	'Ifx_SRC_GSTM',0,4,186,3,3
	.word	30771
	.byte	16,64
	.word	28855
	.byte	17,3,0,5
	.word	30798
	.byte	16,224,1
	.word	423
	.byte	17,223,1,0,16,192,2
	.word	28728
	.byte	17,0,0,5
	.word	30823
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,4,189,3,25,224,4,13
	.byte	'G',0
	.word	30807
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	30812
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	30833
	.byte	192,2,3,35,160,2,0,5
	.word	30838
	.byte	29
	.byte	'Ifx_SRC_GVADC',0,4,194,3,3
	.word	30908
	.byte	5
	.word	28957
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,4,197,3,25,4,13
	.byte	'XBAR',0
	.word	30936
	.byte	4,2,35,0,0,5
	.word	30941
	.byte	29
	.byte	'Ifx_SRC_GXBAR',0,4,200,3,3
	.word	30977
	.byte	14,22,139,10,9,1,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,29
	.byte	'IfxScu_CCUCON0_CLKSEL',0,22,143,10,3
	.word	31005
	.byte	14,22,153,10,9,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,15
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,29
	.byte	'IfxScu_WDTCON1_IR',0,22,158,10,3
	.word	31102
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	31224
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	31781
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	231
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	31858
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	423
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	423
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	423
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	423
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	423
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	31994
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,11
	.byte	'CANDIV',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	423
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	423
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	423
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	32276
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	32514
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	423
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	423
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	423
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,149,1,3
	.word	32642
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,152,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	423
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	423
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	423
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,163,1,3
	.word	32869
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,166,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,172,1,3
	.word	33088
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,175,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	231
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,179,1,3
	.word	33216
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,182,1,16,4,11
	.byte	'CHREV',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	423
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	423
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,193,1,3
	.word	33316
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,196,1,16,4,11
	.byte	'PWD',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	231
	.byte	22,6,2,35,0,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	5,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,204,1,3
	.word	33524
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,207,1,16,4,11
	.byte	'LOWER',0,2
	.word	974
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	423
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	974
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,216,1,3
	.word	33689
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,219,1,16,4,11
	.byte	'RESULT',0,2
	.word	974
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	423
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,226,1,3
	.word	33872
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,6,229,1,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	423
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	423
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	231
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	423
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	423
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EICR_Bits',0,6,248,1,3
	.word	34026
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,251,1,16,4,11
	.byte	'INTF0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	231
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR_Bits',0,6,134,2,3
	.word	34390
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,137,2,16,4,11
	.byte	'POL',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	974
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	423
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	423
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	423
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	423
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_EMSR_Bits',0,6,150,2,3
	.word	34601
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,153,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	974
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	231
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,158,2,3
	.word	34853
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,161,2,16,4,11
	.byte	'ARI',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	231
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,166,2,3
	.word	34971
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,169,2,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,176,2,3
	.word	35082
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,179,2,16,4,11
	.byte	'ADC13V',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	423
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,186,2,3
	.word	35245
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,189,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	974
	.byte	10,0,2,35,0,11
	.byte	'SWDOVMOD',0,1
	.word	423
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	423
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	423
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	974
	.byte	8,2,2,35,2,11
	.byte	'SLCK',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,201,2,3
	.word	35407
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,204,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	423
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,212,2,3
	.word	35685
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,215,2,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	28,4,2,35,0,11
	.byte	'RSTSWDOFF',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,222,2,3
	.word	35864
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,225,2,16,4,11
	.byte	'SD33P',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	231
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,232,2,3
	.word	36024
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,235,2,16,4,11
	.byte	'SDFREQSPRD',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'TON',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'TOFF',0,1
	.word	423
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'SYNCDIV',0,1
	.word	423
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,244,2,3
	.word	36185
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,247,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'STBS',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'STSP',0,1
	.word	423
	.byte	2,4,2,35,1,11
	.byte	'NS',0,1
	.word	423
	.byte	2,2,2,35,1,11
	.byte	'OL',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'PIAD',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'ADCMODE',0,1
	.word	423
	.byte	4,4,2,35,2,11
	.byte	'ADCLPF',0,1
	.word	423
	.byte	2,2,2,35,2,11
	.byte	'ADCLSB',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	423
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,134,3,3
	.word	36377
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,137,3,16,4,11
	.byte	'SDOLCON',0,1
	.word	423
	.byte	7,1,2,35,0,11
	.byte	'MODSEL',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'MODLOW',0,1
	.word	423
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	423
	.byte	6,2,2,35,2,11
	.byte	'MODMAN',0,1
	.word	423
	.byte	2,0,2,35,2,11
	.byte	'MODHIGH',0,1
	.word	423
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,147,3,3
	.word	36673
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,150,3,16,4,11
	.byte	'EVR13',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'SCMOD',0,1
	.word	423
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	231
	.byte	18,0,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,164,3,3
	.word	36888
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,167,3,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	423
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,175,3,3
	.word	37177
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,178,3,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	423
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	974
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	423
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	423
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	423
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,189,3,3
	.word	37356
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,6,192,3,16,4,11
	.byte	'STEP',0,2
	.word	974
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	423
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	974
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_FDR_Bits',0,6,200,3,3
	.word	37574
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,6,203,3,16,4,11
	.byte	'FS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_FMR_Bits',0,6,223,3,3
	.word	37737
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,6,226,3,16,4,11
	.byte	'MODREV',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_ID_Bits',0,6,231,3,3
	.word	38073
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,234,3,16,4,11
	.byte	'IPEN00',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	423
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_IGCR_Bits',0,6,130,4,3
	.word	38180
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,6,133,4,16,4,11
	.byte	'P0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	231
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_IN_Bits',0,6,138,4,3
	.word	38632
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,141,4,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_IOCR_Bits',0,6,148,4,3
	.word	38731
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,151,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	974
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,157,4,3
	.word	38881
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,160,4,16,4,11
	.byte	'SEED',0,4
	.word	231
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	423
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,167,4,3
	.word	39030
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,170,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	231
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,175,4,3
	.word	39191
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,6,178,4,16,4,11
	.byte	'reserved_0',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	974
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LCLCON0_Bits',0,6,184,4,3
	.word	39321
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,187,4,16,4,11
	.byte	'LCLT0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	231
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,192,4,3
	.word	39455
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,6,195,4,16,4,11
	.byte	'DEPT',0,1
	.word	423
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	974
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_MANID_Bits',0,6,200,4,3
	.word	39570
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,6,203,4,16,4,11
	.byte	'PS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	974
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	974
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_OMR_Bits',0,6,211,4,3
	.word	39681
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,214,4,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	423
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	423
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	423
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	423
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,231,4,3
	.word	39839
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,6,234,4,16,4,11
	.byte	'P0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	231
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_OUT_Bits',0,6,239,4,3
	.word	40179
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,242,4,16,4,11
	.byte	'CSEL0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	974
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,255,4,3
	.word	40280
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,130,5,16,4,11
	.byte	'OVEN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	231
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,136,5,3
	.word	40547
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,139,5,16,4,11
	.byte	'PDIS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	231
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC_Bits',0,6,144,5,3
	.word	40683
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,6,147,5,16,4,11
	.byte	'PD0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	423
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	231
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDR_Bits',0,6,154,5,3
	.word	40794
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,157,5,16,4,11
	.byte	'PDR0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	231
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR_Bits',0,6,168,5,3
	.word	40927
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,171,5,16,4,11
	.byte	'VCOBYP',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	974
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	423
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,188,5,3
	.word	41130
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,191,5,16,4,11
	.byte	'K2DIV',0,1
	.word	423
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	423
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	423
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	974
	.byte	9,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,199,5,3
	.word	41486
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,202,5,16,4,11
	.byte	'MODCFG',0,2
	.word	974
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,206,5,3
	.word	41664
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,209,5,16,4,11
	.byte	'VCOBYP',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	974
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	423
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	423
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,226,5,3
	.word	41764
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,229,5,16,4,11
	.byte	'K2DIV',0,1
	.word	423
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	423
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	974
	.byte	9,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,237,5,3
	.word	42134
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,240,5,16,4,11
	.byte	'VCOBYST',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	231
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,249,5,3
	.word	42320
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,252,5,16,4,11
	.byte	'VCOBYST',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	231
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,135,6,3
	.word	42518
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,138,6,16,4,11
	.byte	'REQSLP',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	423
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	231
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,145,6,3
	.word	42751
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,148,6,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	423
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	423
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	423
	.byte	2,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'WUTWKEN',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	423
	.byte	2,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,174,6,3
	.word	42903
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,177,6,16,4,11
	.byte	'reserved_0',0,2
	.word	974
	.byte	12,4,2,35,0,11
	.byte	'IRADIS',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	231
	.byte	14,5,2,35,0,11
	.byte	'STBYEVEN',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	423
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,185,6,3
	.word	43462
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR3_Bits',0,6,188,6,16,4,11
	.byte	'WUTREL',0,4
	.word	231
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'WUTDIV',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'WUTEN',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR3_Bits',0,6,196,6,3
	.word	43645
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,199,6,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	423
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	423
	.byte	2,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'WUTWKP',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'WUTOVRUN',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'WUTWKEN',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	974
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'WUTEN',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'WUTRUN',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,226,6,3
	.word	43814
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,229,6,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'WUTWKPCLR',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'WUTOVRUNCLR',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	974
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,242,6,3
	.word	44381
	.byte	10
	.byte	'_Ifx_SCU_PMSWUTCNT_Bits',0,6,245,6,16,4,11
	.byte	'WUTCNT',0,4
	.word	231
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWUTCNT_Bits',0,6,250,6,3
	.word	44697
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,253,6,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	974
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,135,7,3
	.word	44816
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,138,7,16,4,11
	.byte	'ESR0',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	423
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	423
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,149,7,3
	.word	45025
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,152,7,16,4,11
	.byte	'ESR0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	423
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	423
	.byte	3,0,2,35,3,0,29
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,175,7,3
	.word	45236
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,178,7,16,4,11
	.byte	'HBT',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	231
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,182,7,3
	.word	45668
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,185,7,16,4,11
	.byte	'HWCFG',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	423
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	423
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	423
	.byte	7,0,2,35,3,0,29
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,198,7,3
	.word	45764
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,201,7,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	231
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,206,7,3
	.word	46024
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,209,7,16,4,11
	.byte	'CCTRIG0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	423
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	231
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,218,7,3
	.word	46149
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,221,7,16,4,11
	.byte	'ESR0T',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,228,7,3
	.word	46346
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,231,7,16,4,11
	.byte	'ESR0T',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,238,7,3
	.word	46499
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,241,7,16,4,11
	.byte	'ESR0T',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,248,7,3
	.word	46652
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,251,7,16,4,11
	.byte	'ESR0T',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,130,8,3
	.word	46805
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,139,8,3
	.word	838
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,154,8,3
	.word	996
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,170,8,3
	.word	1240
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,173,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	822
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	822
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,179,8,3
	.word	47060
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,182,8,16,4,11
	.byte	'CLRIRF',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,195,8,3
	.word	47186
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,198,8,16,4,11
	.byte	'AE',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,211,8,3
	.word	47438
	.byte	12,6,219,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31224
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN0',0,6,224,8,3
	.word	47657
	.byte	12,6,227,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31781
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN1',0,6,232,8,3
	.word	47721
	.byte	12,6,235,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31858
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS',0,6,240,8,3
	.word	47785
	.byte	12,6,243,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31994
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON0',0,6,248,8,3
	.word	47850
	.byte	12,6,251,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32276
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON1',0,6,128,9,3
	.word	47915
	.byte	12,6,131,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32514
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON2',0,6,136,9,3
	.word	47980
	.byte	12,6,139,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32642
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON3',0,6,144,9,3
	.word	48045
	.byte	12,6,147,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32869
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON4',0,6,152,9,3
	.word	48110
	.byte	12,6,155,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33088
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON5',0,6,160,9,3
	.word	48175
	.byte	12,6,163,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33216
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6',0,6,168,9,3
	.word	48240
	.byte	12,6,171,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33316
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CHIPID',0,6,176,9,3
	.word	48305
	.byte	12,6,179,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33524
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCON',0,6,184,9,3
	.word	48369
	.byte	12,6,187,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33689
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSLIM',0,6,192,9,3
	.word	48433
	.byte	12,6,195,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33872
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSSTAT',0,6,200,9,3
	.word	48497
	.byte	12,6,203,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34026
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICR',0,6,208,9,3
	.word	48562
	.byte	12,6,211,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34390
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR',0,6,216,9,3
	.word	48624
	.byte	12,6,219,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34601
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EMSR',0,6,224,9,3
	.word	48686
	.byte	12,6,227,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34853
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFG',0,6,232,9,3
	.word	48748
	.byte	12,6,235,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34971
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG',0,6,240,9,3
	.word	48812
	.byte	12,6,243,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35082
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVR13CON',0,6,248,9,3
	.word	48877
	.byte	12,6,251,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35245
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,128,10,3
	.word	48943
	.byte	12,6,131,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35407
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,136,10,3
	.word	49011
	.byte	12,6,139,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35685
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVROVMON',0,6,144,10,3
	.word	49079
	.byte	12,6,147,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35864
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRRSTCON',0,6,152,10,3
	.word	49145
	.byte	12,6,155,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36024
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,160,10,3
	.word	49212
	.byte	12,6,163,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36185
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,168,10,3
	.word	49281
	.byte	12,6,171,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36377
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,176,10,3
	.word	49349
	.byte	12,6,179,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36673
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,184,10,3
	.word	49417
	.byte	12,6,187,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36888
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSTAT',0,6,192,10,3
	.word	49485
	.byte	12,6,195,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37177
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRUVMON',0,6,200,10,3
	.word	49550
	.byte	12,6,203,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37356
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EXTCON',0,6,208,10,3
	.word	49616
	.byte	12,6,211,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37574
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FDR',0,6,216,10,3
	.word	49680
	.byte	12,6,219,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37737
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FMR',0,6,224,10,3
	.word	49741
	.byte	12,6,227,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38073
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ID',0,6,232,10,3
	.word	49802
	.byte	12,6,235,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38180
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IGCR',0,6,240,10,3
	.word	49862
	.byte	12,6,243,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38632
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IN',0,6,248,10,3
	.word	49924
	.byte	12,6,251,10,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38731
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IOCR',0,6,128,11,3
	.word	49984
	.byte	12,6,131,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38881
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,136,11,3
	.word	50046
	.byte	12,6,139,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39030
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,144,11,3
	.word	50114
	.byte	12,6,147,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39191
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,152,11,3
	.word	50182
	.byte	12,6,155,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39321
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLCON0',0,6,160,11,3
	.word	50250
	.byte	12,6,163,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39455
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLTEST',0,6,168,11,3
	.word	50315
	.byte	12,6,171,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39570
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_MANID',0,6,176,11,3
	.word	50380
	.byte	12,6,179,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39681
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OMR',0,6,184,11,3
	.word	50443
	.byte	12,6,187,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39839
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OSCCON',0,6,192,11,3
	.word	50504
	.byte	12,6,195,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40179
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OUT',0,6,200,11,3
	.word	50568
	.byte	12,6,203,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40280
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCCON',0,6,208,11,3
	.word	50629
	.byte	12,6,211,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40547
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE',0,6,216,11,3
	.word	50693
	.byte	12,6,219,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40683
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC',0,6,224,11,3
	.word	50760
	.byte	12,6,227,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40794
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDR',0,6,232,11,3
	.word	50823
	.byte	12,6,235,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40927
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR',0,6,240,11,3
	.word	50884
	.byte	12,6,243,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41130
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON0',0,6,248,11,3
	.word	50946
	.byte	12,6,251,11,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41486
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON1',0,6,128,12,3
	.word	51011
	.byte	12,6,131,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41664
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON2',0,6,136,12,3
	.word	51076
	.byte	12,6,139,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41764
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,144,12,3
	.word	51141
	.byte	12,6,147,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42134
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,152,12,3
	.word	51210
	.byte	12,6,155,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42320
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,160,12,3
	.word	51279
	.byte	12,6,163,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42518
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLSTAT',0,6,168,12,3
	.word	51348
	.byte	12,6,171,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42751
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR',0,6,176,12,3
	.word	51413
	.byte	12,6,179,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42903
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR0',0,6,184,12,3
	.word	51476
	.byte	12,6,187,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43462
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR1',0,6,192,12,3
	.word	51541
	.byte	12,6,195,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43645
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR3',0,6,200,12,3
	.word	51606
	.byte	12,6,203,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43814
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWSTAT',0,6,208,12,3
	.word	51671
	.byte	12,6,211,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44381
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,216,12,3
	.word	51737
	.byte	12,6,219,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44697
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWUTCNT',0,6,224,12,3
	.word	51806
	.byte	12,6,227,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45025
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON',0,6,232,12,3
	.word	51873
	.byte	12,6,235,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44816
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON2',0,6,240,12,3
	.word	51937
	.byte	12,6,243,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45236
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTSTAT',0,6,248,12,3
	.word	52002
	.byte	12,6,251,12,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45668
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SAFECON',0,6,128,13,3
	.word	52067
	.byte	12,6,131,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45764
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STSTAT',0,6,136,13,3
	.word	52132
	.byte	12,6,139,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46024
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SWRSTCON',0,6,144,13,3
	.word	52196
	.byte	12,6,147,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46149
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSCON',0,6,152,13,3
	.word	52262
	.byte	12,6,155,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46346
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR',0,6,160,13,3
	.word	52326
	.byte	12,6,163,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46499
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS',0,6,168,13,3
	.word	52391
	.byte	12,6,171,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46652
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET',0,6,176,13,3
	.word	52456
	.byte	12,6,179,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46805
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT',0,6,184,13,3
	.word	52521
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,192,13,3
	.word	934
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,200,13,3
	.word	1200
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,208,13,3
	.word	1431
	.byte	12,6,211,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47060
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON0',0,6,216,13,3
	.word	52672
	.byte	12,6,219,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47186
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON1',0,6,224,13,3
	.word	52739
	.byte	12,6,227,13,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47438
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_SR',0,6,232,13,3
	.word	52806
	.byte	5
	.word	1471
	.byte	29
	.byte	'Ifx_SCU_WDTCPU',0,6,248,13,3
	.word	52871
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,6,251,13,25,12,13
	.byte	'CON0',0
	.word	52672
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	52739
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	52806
	.byte	4,2,35,8,0,5
	.word	52900
	.byte	29
	.byte	'Ifx_SCU_WDTS',0,6,128,14,3
	.word	52961
	.byte	16,8
	.word	48748
	.byte	17,1,0,16,4
	.word	51413
	.byte	17,0,0,5
	.word	52900
	.byte	16,12
	.word	1471
	.byte	17,0,0,5
	.word	53011
	.byte	16,16
	.word	423
	.byte	17,15,0,16,20
	.word	423
	.byte	17,19,0,16,16
	.word	48562
	.byte	17,3,0,16,16
	.word	49862
	.byte	17,3,0,16,188,1
	.word	423
	.byte	17,187,1,0,16,244,1
	.word	423
	.byte	17,243,1,0,10
	.byte	'_Ifx_SCU',0,6,141,14,25,128,8,13
	.byte	'reserved_0',0
	.word	4954
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	49802
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3135
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	50504
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	51348
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	50946
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	51011
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	51076
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	51279
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	51141
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	51210
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	47850
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	47915
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	49680
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	49616
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	47980
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	48045
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	48110
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	48175
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	52002
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3135
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	51873
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	47785
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	52196
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	51937
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3135
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	49145
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	52988
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	48812
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	52262
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	48240
	.byte	4,3,35,128,1,13
	.byte	'reserved_84',0
	.word	4325
	.byte	24,3,35,132,1,13
	.byte	'PDR',0
	.word	50823
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	49984
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	50568
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	50443
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	49924
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	49485
	.byte	4,3,35,176,1,13
	.byte	'reserved_B4',0
	.word	3135
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	48877
	.byte	4,3,35,184,1,13
	.byte	'reserved_BC',0
	.word	3135
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	52132
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	3135
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	51476
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	51671
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	51737
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	52997
	.byte	4,3,35,212,1,13
	.byte	'reserved_D8',0
	.word	4954
	.byte	8,3,35,216,1,13
	.byte	'DTSSTAT',0
	.word	48497
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	48369
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	51541
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	3135
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	53006
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	48686
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	53020
	.byte	12,3,35,128,2,13
	.byte	'reserved_10C',0
	.word	4325
	.byte	24,3,35,140,2,13
	.byte	'TRAPSTAT',0
	.word	52521
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	52456
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	52326
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	52391
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	50250
	.byte	4,3,35,180,2,13
	.byte	'reserved_138',0
	.word	3135
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	50315
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	48305
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	50380
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	4954
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	52067
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	53025
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	50046
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	50114
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	50182
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	27001
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	50760
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	5294
	.byte	12,3,35,144,3,13
	.byte	'EVRADCSTAT',0
	.word	48943
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	49550
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	49079
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	49011
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	3135
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	49281
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	49349
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	49417
	.byte	4,3,35,184,3,13
	.byte	'reserved_1BC',0
	.word	4954
	.byte	8,3,35,188,3,13
	.byte	'EVRSDCOEFF2',0
	.word	49212
	.byte	4,3,35,196,3,13
	.byte	'reserved_1C8',0
	.word	53034
	.byte	20,3,35,200,3,13
	.byte	'PMSWUTCNT',0
	.word	51806
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	50693
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	50629
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	27241
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	53043
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	48624
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	49741
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	50884
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	53052
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	3135
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	48433
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	53061
	.byte	188,1,3,35,196,4,13
	.byte	'PMSWCR3',0
	.word	51606
	.byte	4,3,35,128,6,13
	.byte	'reserved_304',0
	.word	53072
	.byte	244,1,3,35,132,6,13
	.byte	'ACCEN1',0
	.word	47721
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	47657
	.byte	4,3,35,252,7,0,5
	.word	53083
	.byte	29
	.byte	'Ifx_SCU',0,6,244,14,3
	.word	54979
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,23,45,16,4,11
	.byte	'ADDR',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_A_Bits',0,23,48,3
	.word	55001
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,23,51,16,4,11
	.byte	'VSS',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	822
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_BIV_Bits',0,23,55,3
	.word	55062
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,23,58,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	822
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_BTV_Bits',0,23,62,3
	.word	55141
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,23,65,16,4,11
	.byte	'CountValue',0,4
	.word	822
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	822
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_CCNT_Bits',0,23,69,3
	.word	55227
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,23,72,16,4,11
	.byte	'CM',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	822
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	822
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	822
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	822
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_CPU_CCTRL_Bits',0,23,80,3
	.word	55316
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,23,83,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	822
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	822
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	822
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_COMPAT_Bits',0,23,89,3
	.word	55462
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,23,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	822
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CORE_ID_Bits',0,23,96,3
	.word	55589
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,23,99,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	822
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_L_Bits',0,23,103,3
	.word	55687
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,23,106,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	822
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_U_Bits',0,23,110,3
	.word	55780
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,23,113,16,4,11
	.byte	'MODREV',0,4
	.word	822
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	822
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	822
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPU_ID_Bits',0,23,118,3
	.word	55873
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,23,121,16,4,11
	.byte	'XE',0,4
	.word	822
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	822
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPXE_Bits',0,23,125,3
	.word	55980
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,23,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	822
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	822
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	822
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	822
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	822
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_CREVT_Bits',0,23,136,1,3
	.word	56067
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,23,139,1,16,4,11
	.byte	'CID',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	822
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CUS_ID_Bits',0,23,143,1,3
	.word	56221
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,23,146,1,16,4,11
	.byte	'DATA',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_D_Bits',0,23,149,1,3
	.word	56315
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,23,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	822
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	822
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	822
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	822
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	822
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	822
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	822
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	822
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DATR_Bits',0,23,163,1,3
	.word	56378
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,23,166,1,16,4,11
	.byte	'DE',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	822
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	822
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	822
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	822
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	822
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	822
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	822
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	822
	.byte	19,0,2,35,0,0,29
	.byte	'Ifx_CPU_DBGSR_Bits',0,23,177,1,3
	.word	56596
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,23,180,1,16,4,11
	.byte	'DTA',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	822
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_DBGTCR_Bits',0,23,184,1,3
	.word	56811
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,23,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	822
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_CPU_DCON0_Bits',0,23,192,1,3
	.word	56905
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,23,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	822
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	822
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DCON2_Bits',0,23,199,1,3
	.word	57021
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,23,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	822
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_CPU_DCX_Bits',0,23,206,1,3
	.word	57122
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,23,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_DEADD_Bits',0,23,212,1,3
	.word	57215
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,23,215,1,16,4,11
	.byte	'TA',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_DIEAR_Bits',0,23,218,1,3
	.word	57295
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,23,221,1,16,4,11
	.byte	'IED',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	822
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	822
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	822
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	822
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	822
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	822
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	822
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	822
	.byte	18,0,2,35,0,0,29
	.byte	'Ifx_CPU_DIETR_Bits',0,23,233,1,3
	.word	57364
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,23,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	822
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_DMS_Bits',0,23,240,1,3
	.word	57593
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,23,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	822
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_L_Bits',0,23,247,1,3
	.word	57686
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,23,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	822
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_U_Bits',0,23,254,1,3
	.word	57781
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,23,129,2,16,4,11
	.byte	'RE',0,4
	.word	822
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	822
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPRE_Bits',0,23,133,2,3
	.word	57876
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,23,136,2,16,4,11
	.byte	'WE',0,4
	.word	822
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	822
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPWE_Bits',0,23,140,2,3
	.word	57966
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,23,143,2,16,4,11
	.byte	'SRE',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	822
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	822
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	822
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	822
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	822
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	822
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	822
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	822
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	822
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	822
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	822
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	822
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	822
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	822
	.byte	7,0,2,35,0,0,29
	.byte	'Ifx_CPU_DSTR_Bits',0,23,161,2,3
	.word	58056
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,23,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	822
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	822
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	822
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	822
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	822
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_EXEVT_Bits',0,23,172,2,3
	.word	58380
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,23,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	822
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	822
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	822
	.byte	12,0,2,35,0,0,29
	.byte	'Ifx_CPU_FCX_Bits',0,23,180,2,3
	.word	58534
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,23,183,2,16,4,11
	.byte	'TST',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	822
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	822
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	822
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	822
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	822
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	822
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	822
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	822
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	822
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	822
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	822
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	822
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	822
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	822
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	822
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,23,202,2,3
	.word	58640
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,23,205,2,16,4,11
	.byte	'OPC',0,4
	.word	822
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	822
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	822
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	822
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	822
	.byte	12,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,23,212,2,3
	.word	58989
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,23,215,2,16,4,11
	.byte	'PC',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,23,218,2,3
	.word	59149
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,23,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,23,224,2,3
	.word	59230
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,23,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,23,230,2,3
	.word	59317
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,23,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,23,236,2,3
	.word	59404
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,23,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	822
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	822
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_ICNT_Bits',0,23,243,2,3
	.word	59491
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,23,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	822
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	822
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	822
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	822
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	822
	.byte	6,0,2,35,0,0,29
	.byte	'Ifx_CPU_ICR_Bits',0,23,253,2,3
	.word	59582
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,23,128,3,16,4,11
	.byte	'ISP',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_ISP_Bits',0,23,131,3,3
	.word	59725
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,23,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	822
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	822
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	822
	.byte	12,0,2,35,0,0,29
	.byte	'Ifx_CPU_LCX_Bits',0,23,139,3,3
	.word	59791
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,23,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	822
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	822
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_M1CNT_Bits',0,23,146,3,3
	.word	59897
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,23,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	822
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	822
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_M2CNT_Bits',0,23,153,3,3
	.word	59990
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,23,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	822
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	822
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_M3CNT_Bits',0,23,160,3,3
	.word	60083
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,23,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	822
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_PC_Bits',0,23,167,3,3
	.word	60176
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,23,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	822
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCON0_Bits',0,23,175,3,3
	.word	60261
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,23,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	822
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCON1_Bits',0,23,183,3,3
	.word	60377
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,23,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	822
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	822
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCON2_Bits',0,23,190,3,3
	.word	60488
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,23,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	822
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	822
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	822
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	822
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	822
	.byte	10,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCXI_Bits',0,23,200,3,3
	.word	60589
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,23,203,3,16,4,11
	.byte	'TA',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_PIEAR_Bits',0,23,206,3,3
	.word	60719
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,23,209,3,16,4,11
	.byte	'IED',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	822
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	822
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	822
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	822
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	822
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	822
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	822
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	822
	.byte	18,0,2,35,0,0,29
	.byte	'Ifx_CPU_PIETR_Bits',0,23,221,3,3
	.word	60788
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,23,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	822
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	822
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PMA0_Bits',0,23,229,3,3
	.word	61017
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,23,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	822
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	822
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	822
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PMA1_Bits',0,23,237,3,3
	.word	61130
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,23,240,3,16,4,11
	.byte	'PSI',0,4
	.word	822
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	822
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PMA2_Bits',0,23,244,3,3
	.word	61243
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,23,247,3,16,4,11
	.byte	'FRE',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	822
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	822
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	822
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	822
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	822
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	822
	.byte	17,0,2,35,0,0,29
	.byte	'Ifx_CPU_PSTR_Bits',0,23,129,4,3
	.word	61334
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,23,132,4,16,4,11
	.byte	'CDC',0,4
	.word	822
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	822
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	822
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	822
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	822
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	822
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	822
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	822
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	822
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	822
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	822
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	822
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	822
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_PSW_Bits',0,23,147,4,3
	.word	61537
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,23,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	822
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	822
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	822
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	822
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_SEGEN_Bits',0,23,156,4,3
	.word	61780
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,23,159,4,16,4,11
	.byte	'PC',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	822
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	822
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	822
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	822
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	822
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	822
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	822
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	822
	.byte	7,0,2,35,0,0,29
	.byte	'Ifx_CPU_SMACON_Bits',0,23,171,4,3
	.word	61908
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,23,174,4,16,4,11
	.byte	'EN',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,23,177,4,3
	.word	62149
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,23,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,23,183,4,3
	.word	62232
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,23,186,4,16,4,11
	.byte	'EN',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,23,189,4,3
	.word	62323
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,23,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,23,195,4,3
	.word	62414
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,23,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	231
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,23,202,4,3
	.word	62513
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,23,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	231
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,23,209,4,3
	.word	62620
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,23,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	822
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	822
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	822
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	822
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	822
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_SWEVT_Bits',0,23,220,4,3
	.word	62727
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,23,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	822
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	822
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	822
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	822
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_SYSCON_Bits',0,23,231,4,3
	.word	62881
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,23,234,4,16,4,11
	.byte	'ASI',0,4
	.word	822
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	822
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,23,238,4,3
	.word	63042
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,23,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	822
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	822
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	822
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	822
	.byte	15,0,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_CON_Bits',0,23,249,4,3
	.word	63140
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,23,252,4,16,4,11
	.byte	'Timer',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,23,255,4,3
	.word	63312
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,23,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	822
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_TR_ADR_Bits',0,23,133,5,3
	.word	63392
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,23,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	822
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	822
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	822
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	822
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	822
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	822
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	822
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	822
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	822
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	822
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	822
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	822
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	822
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	822
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	822
	.byte	3,0,2,35,0,0,29
	.byte	'Ifx_CPU_TR_EVT_Bits',0,23,153,5,3
	.word	63465
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,23,156,5,16,4,11
	.byte	'T0',0,4
	.word	822
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	822
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	822
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	822
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	822
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	822
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	822
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	822
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	822
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,23,167,5,3
	.word	63783
	.byte	12,23,175,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55001
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_A',0,23,180,5,3
	.word	63978
	.byte	12,23,183,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55062
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_BIV',0,23,188,5,3
	.word	64037
	.byte	12,23,191,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55141
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_BTV',0,23,196,5,3
	.word	64098
	.byte	12,23,199,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55227
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CCNT',0,23,204,5,3
	.word	64159
	.byte	12,23,207,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55316
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CCTRL',0,23,212,5,3
	.word	64221
	.byte	12,23,215,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55462
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_COMPAT',0,23,220,5,3
	.word	64284
	.byte	12,23,223,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55589
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CORE_ID',0,23,228,5,3
	.word	64348
	.byte	12,23,231,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55687
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_L',0,23,236,5,3
	.word	64413
	.byte	12,23,239,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55780
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_U',0,23,244,5,3
	.word	64476
	.byte	12,23,247,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55873
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPU_ID',0,23,252,5,3
	.word	64539
	.byte	12,23,255,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55980
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPXE',0,23,132,6,3
	.word	64603
	.byte	12,23,135,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56067
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CREVT',0,23,140,6,3
	.word	64665
	.byte	12,23,143,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56221
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CUS_ID',0,23,148,6,3
	.word	64728
	.byte	12,23,151,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56315
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_D',0,23,156,6,3
	.word	64792
	.byte	12,23,159,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56378
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DATR',0,23,164,6,3
	.word	64851
	.byte	12,23,167,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56596
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DBGSR',0,23,172,6,3
	.word	64913
	.byte	12,23,175,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56811
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DBGTCR',0,23,180,6,3
	.word	64976
	.byte	12,23,183,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56905
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DCON0',0,23,188,6,3
	.word	65040
	.byte	12,23,191,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57021
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DCON2',0,23,196,6,3
	.word	65103
	.byte	12,23,199,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57122
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DCX',0,23,204,6,3
	.word	65166
	.byte	12,23,207,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57215
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DEADD',0,23,212,6,3
	.word	65227
	.byte	12,23,215,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57295
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DIEAR',0,23,220,6,3
	.word	65290
	.byte	12,23,223,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57364
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DIETR',0,23,228,6,3
	.word	65353
	.byte	12,23,231,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57593
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DMS',0,23,236,6,3
	.word	65416
	.byte	12,23,239,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57686
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_L',0,23,244,6,3
	.word	65477
	.byte	12,23,247,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57781
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_U',0,23,252,6,3
	.word	65540
	.byte	12,23,255,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57876
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPRE',0,23,132,7,3
	.word	65603
	.byte	12,23,135,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57966
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPWE',0,23,140,7,3
	.word	65665
	.byte	12,23,143,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58056
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DSTR',0,23,148,7,3
	.word	65727
	.byte	12,23,151,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58380
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_EXEVT',0,23,156,7,3
	.word	65789
	.byte	12,23,159,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58534
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FCX',0,23,164,7,3
	.word	65852
	.byte	12,23,167,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58640
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,23,172,7,3
	.word	65913
	.byte	12,23,175,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58989
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,23,180,7,3
	.word	65983
	.byte	12,23,183,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59149
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,23,188,7,3
	.word	66053
	.byte	12,23,191,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59230
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,23,196,7,3
	.word	66122
	.byte	12,23,199,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59317
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,23,204,7,3
	.word	66193
	.byte	12,23,207,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59404
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,23,212,7,3
	.word	66264
	.byte	12,23,215,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59491
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_ICNT',0,23,220,7,3
	.word	66335
	.byte	12,23,223,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59582
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_ICR',0,23,228,7,3
	.word	66397
	.byte	12,23,231,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59725
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_ISP',0,23,236,7,3
	.word	66458
	.byte	12,23,239,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59791
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_LCX',0,23,244,7,3
	.word	66519
	.byte	12,23,247,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59897
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_M1CNT',0,23,252,7,3
	.word	66580
	.byte	12,23,255,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59990
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_M2CNT',0,23,132,8,3
	.word	66643
	.byte	12,23,135,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60083
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_M3CNT',0,23,140,8,3
	.word	66706
	.byte	12,23,143,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60176
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PC',0,23,148,8,3
	.word	66769
	.byte	12,23,151,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60261
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCON0',0,23,156,8,3
	.word	66829
	.byte	12,23,159,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60377
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCON1',0,23,164,8,3
	.word	66892
	.byte	12,23,167,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60488
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCON2',0,23,172,8,3
	.word	66955
	.byte	12,23,175,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60589
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCXI',0,23,180,8,3
	.word	67018
	.byte	12,23,183,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60719
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PIEAR',0,23,188,8,3
	.word	67080
	.byte	12,23,191,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60788
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PIETR',0,23,196,8,3
	.word	67143
	.byte	12,23,199,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61017
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PMA0',0,23,204,8,3
	.word	67206
	.byte	12,23,207,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61130
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PMA1',0,23,212,8,3
	.word	67268
	.byte	12,23,215,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61243
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PMA2',0,23,220,8,3
	.word	67330
	.byte	12,23,223,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61334
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PSTR',0,23,228,8,3
	.word	67392
	.byte	12,23,231,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61537
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PSW',0,23,236,8,3
	.word	67454
	.byte	12,23,239,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61780
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SEGEN',0,23,244,8,3
	.word	67515
	.byte	12,23,247,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61908
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SMACON',0,23,252,8,3
	.word	67578
	.byte	12,23,255,8,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62149
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENA',0,23,132,9,3
	.word	67642
	.byte	12,23,135,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62232
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENB',0,23,140,9,3
	.word	67712
	.byte	12,23,143,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62323
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,23,148,9,3
	.word	67782
	.byte	12,23,151,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62414
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,23,156,9,3
	.word	67856
	.byte	12,23,159,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62513
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,23,164,9,3
	.word	67930
	.byte	12,23,167,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62620
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,23,172,9,3
	.word	68000
	.byte	12,23,175,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62727
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SWEVT',0,23,180,9,3
	.word	68070
	.byte	12,23,183,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62881
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SYSCON',0,23,188,9,3
	.word	68133
	.byte	12,23,191,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63042
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TASK_ASI',0,23,196,9,3
	.word	68197
	.byte	12,23,199,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63140
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_CON',0,23,204,9,3
	.word	68263
	.byte	12,23,207,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63312
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_TIMER',0,23,212,9,3
	.word	68328
	.byte	12,23,215,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63392
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TR_ADR',0,23,220,9,3
	.word	68395
	.byte	12,23,223,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63465
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TR_EVT',0,23,228,9,3
	.word	68459
	.byte	12,23,231,9,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63783
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TRIG_ACC',0,23,236,9,3
	.word	68523
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,23,247,9,25,8,13
	.byte	'L',0
	.word	64413
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	64476
	.byte	4,2,35,4,0,5
	.word	68589
	.byte	29
	.byte	'Ifx_CPU_CPR',0,23,251,9,3
	.word	68631
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,23,254,9,25,8,13
	.byte	'L',0
	.word	65477
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	65540
	.byte	4,2,35,4,0,5
	.word	68657
	.byte	29
	.byte	'Ifx_CPU_DPR',0,23,130,10,3
	.word	68699
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,23,133,10,25,16,13
	.byte	'LA',0
	.word	67930
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	68000
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	67782
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	67856
	.byte	4,2,35,12,0,5
	.word	68725
	.byte	29
	.byte	'Ifx_CPU_SPROT_RGN',0,23,139,10,3
	.word	68807
	.byte	16,12
	.word	68328
	.byte	17,2,0,10
	.byte	'_Ifx_CPU_TPS',0,23,142,10,25,16,13
	.byte	'CON',0
	.word	68263
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	68839
	.byte	12,2,35,4,0,5
	.word	68848
	.byte	29
	.byte	'Ifx_CPU_TPS',0,23,146,10,3
	.word	68896
	.byte	10
	.byte	'_Ifx_CPU_TR',0,23,149,10,25,8,13
	.byte	'EVT',0
	.word	68459
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	68395
	.byte	4,2,35,4,0,5
	.word	68922
	.byte	29
	.byte	'Ifx_CPU_TR',0,23,153,10,3
	.word	68967
	.byte	29
	.byte	'IfxCpu_ResourceCpu',0,8,87,3
	.word	1769
	.byte	14,7,118,9,1,15
	.byte	'IfxCpu_CounterMode_normal',0,0,15
	.byte	'IfxCpu_CounterMode_task',0,1,0,29
	.byte	'IfxCpu_CounterMode',0,7,122,3
	.word	69019
	.byte	28,7,132,1,9,6,13
	.byte	'counter',0
	.word	1900
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	423
	.byte	1,2,35,4,0,29
	.byte	'IfxCpu_Counter',0,7,136,1,3
	.word	69106
	.byte	28,7,144,1,9,32,13
	.byte	'instruction',0
	.word	69106
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	69106
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	69106
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	69106
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	69106
	.byte	6,2,35,24,0,29
	.byte	'IfxCpu_Perf',0,7,151,1,3
	.word	69172
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,24,45,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_STM_ACCEN0_Bits',0,24,79,3
	.word	69290
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,24,82,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN1_Bits',0,24,85,3
	.word	69847
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,24,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CAP_Bits',0,24,91,3
	.word	69924
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,24,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CAPSV_Bits',0,24,97,3
	.word	69996
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,24,100,16,4,11
	.byte	'DISR',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_STM_CLC_Bits',0,24,107,3
	.word	70072
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,24,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	423
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	423
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	423
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	423
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	423
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	423
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	423
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	423
	.byte	3,0,2,35,3,0,29
	.byte	'Ifx_STM_CMCON_Bits',0,24,120,3
	.word	70213
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,24,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CMP_Bits',0,24,126,3
	.word	70431
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,24,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	231
	.byte	25,0,2,35,0,0,29
	.byte	'Ifx_STM_ICR_Bits',0,24,139,1,3
	.word	70498
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,24,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_STM_ID_Bits',0,24,147,1,3
	.word	70701
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,24,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_STM_ISCR_Bits',0,24,157,1,3
	.word	70808
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,24,160,1,16,4,11
	.byte	'RST',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	231
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_STM_KRST0_Bits',0,24,165,1,3
	.word	70959
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,24,168,1,16,4,11
	.byte	'RST',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	231
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_STM_KRST1_Bits',0,24,172,1,3
	.word	71070
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,24,175,1,16,4,11
	.byte	'CLR',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	231
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_STM_KRSTCLR_Bits',0,24,179,1,3
	.word	71162
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,24,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	423
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_STM_OCS_Bits',0,24,189,1,3
	.word	71258
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,24,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM0_Bits',0,24,195,1,3
	.word	71404
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,24,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM0SV_Bits',0,24,201,1,3
	.word	71476
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,24,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM1_Bits',0,24,207,1,3
	.word	71552
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,24,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM2_Bits',0,24,213,1,3
	.word	71624
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,24,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM3_Bits',0,24,219,1,3
	.word	71696
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,24,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM4_Bits',0,24,225,1,3
	.word	71769
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,24,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM5_Bits',0,24,231,1,3
	.word	71842
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,24,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM6_Bits',0,24,237,1,3
	.word	71915
	.byte	12,24,245,1,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69290
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN0',0,24,250,1,3
	.word	71988
	.byte	12,24,253,1,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69847
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN1',0,24,130,2,3
	.word	72052
	.byte	12,24,133,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69924
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CAP',0,24,138,2,3
	.word	72116
	.byte	12,24,141,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69996
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CAPSV',0,24,146,2,3
	.word	72177
	.byte	12,24,149,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70072
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CLC',0,24,154,2,3
	.word	72240
	.byte	12,24,157,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70213
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CMCON',0,24,162,2,3
	.word	72301
	.byte	12,24,165,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70431
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CMP',0,24,170,2,3
	.word	72364
	.byte	12,24,173,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70498
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ICR',0,24,178,2,3
	.word	72425
	.byte	12,24,181,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70701
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ID',0,24,186,2,3
	.word	72486
	.byte	12,24,189,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70808
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ISCR',0,24,194,2,3
	.word	72546
	.byte	12,24,197,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70959
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRST0',0,24,202,2,3
	.word	72608
	.byte	12,24,205,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71070
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRST1',0,24,210,2,3
	.word	72671
	.byte	12,24,213,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71162
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRSTCLR',0,24,218,2,3
	.word	72734
	.byte	12,24,221,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71258
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_OCS',0,24,226,2,3
	.word	72799
	.byte	12,24,229,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71404
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM0',0,24,234,2,3
	.word	72860
	.byte	12,24,237,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71476
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM0SV',0,24,242,2,3
	.word	72922
	.byte	12,24,245,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71552
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM1',0,24,250,2,3
	.word	72986
	.byte	12,24,253,2,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71624
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM2',0,24,130,3,3
	.word	73048
	.byte	12,24,133,3,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71696
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM3',0,24,138,3,3
	.word	73110
	.byte	12,24,141,3,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71769
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM4',0,24,146,3,3
	.word	73172
	.byte	12,24,149,3,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71842
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM5',0,24,154,3,3
	.word	73234
	.byte	12,24,157,3,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71915
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM6',0,24,162,3,3
	.word	73296
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,25,45,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,25,79,3
	.word	73358
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,25,82,16,4,11
	.byte	'reserved_0',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,25,85,3
	.word	73919
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,25,88,16,4,11
	.byte	'SEL',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	231
	.byte	22,0,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,25,95,3
	.word	74000
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,25,98,16,4,11
	.byte	'VLD0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	231
	.byte	22,0,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,25,111,3
	.word	74153
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,25,114,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	231
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	423
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,25,121,3
	.word	74401
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,25,124,16,4,11
	.byte	'STATUS',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	231
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM0_Bits',0,25,128,1,3
	.word	74547
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,25,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_COMM1_Bits',0,25,136,1,3
	.word	74645
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,25,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_COMM2_Bits',0,25,144,1,3
	.word	74761
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,25,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	231
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	974
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ECCRD_Bits',0,25,153,1,3
	.word	74877
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,25,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	231
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	974
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ECCRP_Bits',0,25,162,1,3
	.word	75017
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,25,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	231
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	974
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ECCW_Bits',0,25,171,1,3
	.word	75157
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,25,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	974
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	423
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	423
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	423
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	423
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_FCON_Bits',0,25,193,1,3
	.word	75296
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,25,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	423
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	423
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_FLASH_FPRO_Bits',0,25,218,1,3
	.word	75658
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,25,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'RES1',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'RES4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	974
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_FSR_Bits',0,25,254,1,3
	.word	76099
	.byte	10
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,25,129,2,16,4,11
	.byte	'LCKHSMUCB',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	231
	.byte	22,8,2,35,0,11
	.byte	'VOPERM',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	5,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,25,137,2,3
	.word	76703
	.byte	10
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,25,140,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'D1BUSY',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	423
	.byte	4,1,2,35,0,11
	.byte	'PROG',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	231
	.byte	12,7,2,35,0,11
	.byte	'PVER',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	423
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,25,156,2,3
	.word	76883
	.byte	10
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,25,159,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'SELD1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,4
	.word	231
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,25,167,2,3
	.word	77205
	.byte	10
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,25,170,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	231
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,25,174,2,3
	.word	77386
	.byte	10
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,25,177,2,16,4,11
	.byte	'STRT',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	423
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,25,188,2,3
	.word	77486
	.byte	10
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,25,191,2,16,4,11
	.byte	'DATA',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,25,194,2,3
	.word	77702
	.byte	10
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,25,197,2,16,4,11
	.byte	'DATA',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,25,200,2,3
	.word	77781
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,25,203,2,16,4,11
	.byte	'MODREV',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_ID_Bits',0,25,208,2,3
	.word	77860
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,25,211,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	974
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_MARD_Bits',0,25,221,2,3
	.word	77971
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,25,224,2,16,4,11
	.byte	'SELP0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'RES1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	974
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_MARP_Bits',0,25,233,2,3
	.word	78185
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,25,236,2,16,4,11
	.byte	'L',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'RES8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'RES9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'RES10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'RES11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'RES12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'RES13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'RES14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'RES15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	974
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	423
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCOND_Bits',0,25,254,2,3
	.word	78371
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,25,129,3,16,4,11
	.byte	'OCDSDIS',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	231
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,25,135,3,3
	.word	78706
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,25,138,3,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	974
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,25,146,3,3
	.word	78849
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,25,149,3,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	974
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	423
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	423
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'BOOTSEL',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	974
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,25,166,3,3
	.word	79038
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,25,169,3,16,4,11
	.byte	'S0ROM',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	423
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	423
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,25,201,3,3
	.word	79397
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,25,204,3,16,4,11
	.byte	'S0L',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	423
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCONP_Bits',0,25,235,3,3
	.word	79992
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,25,238,3,16,4,11
	.byte	'S0WOP',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	423
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,25,141,4,3
	.word	80516
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,25,144,4,16,4,11
	.byte	'TAG',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	231
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,25,148,4,3
	.word	81098
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,25,151,4,16,4,11
	.byte	'TAG',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	231
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,25,155,4,3
	.word	81200
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,25,158,4,16,4,11
	.byte	'TAG',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	231
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,25,162,4,3
	.word	81302
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,25,165,4,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	231
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RRAD_Bits',0,25,169,4,3
	.word	81404
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,25,172,4,16,4,11
	.byte	'STRT',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	423
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	974
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_RRCT_Bits',0,25,183,4,3
	.word	81498
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,25,186,4,16,4,11
	.byte	'DATA',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD0_Bits',0,25,189,4,3
	.word	81708
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,25,192,4,16,4,11
	.byte	'DATA',0,4
	.word	231
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD1_Bits',0,25,195,4,3
	.word	81781
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,25,198,4,16,4,11
	.byte	'SEL',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	231
	.byte	22,0,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,25,205,4,3
	.word	81854
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,25,208,4,16,4,11
	.byte	'VLD0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	231
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,25,212,4,3
	.word	82009
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,25,215,4,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	231
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	423
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	423
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,25,222,4,3
	.word	82114
	.byte	12,25,230,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73358
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ACCEN0',0,25,235,4,3
	.word	82262
	.byte	12,25,238,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73919
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ACCEN1',0,25,243,4,3
	.word	82328
	.byte	12,25,246,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74000
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_CFG',0,25,251,4,3
	.word	82394
	.byte	12,25,254,4,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74153
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_STAT',0,25,131,5,3
	.word	82462
	.byte	12,25,134,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74401
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_TOP',0,25,139,5,3
	.word	82531
	.byte	12,25,142,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74547
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM0',0,25,147,5,3
	.word	82599
	.byte	12,25,150,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74645
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM1',0,25,155,5,3
	.word	82664
	.byte	12,25,158,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74761
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM2',0,25,163,5,3
	.word	82729
	.byte	12,25,166,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74877
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ECCRD',0,25,171,5,3
	.word	82794
	.byte	12,25,174,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75017
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ECCRP',0,25,179,5,3
	.word	82859
	.byte	12,25,182,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75157
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ECCW',0,25,187,5,3
	.word	82924
	.byte	12,25,190,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75296
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_FCON',0,25,195,5,3
	.word	82988
	.byte	12,25,198,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75658
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_FPRO',0,25,203,5,3
	.word	83052
	.byte	12,25,206,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76099
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_FSR',0,25,211,5,3
	.word	83116
	.byte	12,25,214,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76703
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMFCON',0,25,219,5,3
	.word	83179
	.byte	12,25,222,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76883
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMFSR',0,25,227,5,3
	.word	83246
	.byte	12,25,230,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77205
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMMARD',0,25,235,5,3
	.word	83312
	.byte	12,25,238,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77386
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRAD',0,25,243,5,3
	.word	83379
	.byte	12,25,246,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77486
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRCT',0,25,251,5,3
	.word	83446
	.byte	12,25,254,5,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77702
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD0',0,25,131,6,3
	.word	83513
	.byte	12,25,134,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77781
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD1',0,25,139,6,3
	.word	83580
	.byte	12,25,142,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77860
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ID',0,25,147,6,3
	.word	83647
	.byte	12,25,150,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77971
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_MARD',0,25,155,6,3
	.word	83709
	.byte	12,25,158,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78185
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_MARP',0,25,163,6,3
	.word	83773
	.byte	12,25,166,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78371
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCOND',0,25,171,6,3
	.word	83837
	.byte	12,25,174,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78706
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONDBG',0,25,179,6,3
	.word	83904
	.byte	12,25,182,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78849
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONHSM',0,25,187,6,3
	.word	83973
	.byte	12,25,190,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79038
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,25,195,6,3
	.word	84042
	.byte	12,25,198,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79397
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONOTP',0,25,203,6,3
	.word	84115
	.byte	12,25,206,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79992
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONP',0,25,211,6,3
	.word	84184
	.byte	12,25,214,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80516
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONWOP',0,25,219,6,3
	.word	84251
	.byte	12,25,222,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81098
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG0',0,25,227,6,3
	.word	84320
	.byte	12,25,230,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81200
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG1',0,25,235,6,3
	.word	84388
	.byte	12,25,238,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81302
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG2',0,25,243,6,3
	.word	84456
	.byte	12,25,246,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81404
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRAD',0,25,251,6,3
	.word	84524
	.byte	12,25,254,6,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81498
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRCT',0,25,131,7,3
	.word	84588
	.byte	12,25,134,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81708
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD0',0,25,139,7,3
	.word	84652
	.byte	12,25,142,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81781
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD1',0,25,147,7,3
	.word	84716
	.byte	12,25,150,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81854
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_CFG',0,25,155,7,3
	.word	84780
	.byte	12,25,158,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82009
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_STAT',0,25,163,7,3
	.word	84848
	.byte	12,25,166,7,9,4,13
	.byte	'U',0
	.word	231
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82114
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_TOP',0,25,171,7,3
	.word	84917
	.byte	16,36
	.word	423
	.byte	17,35,0,10
	.byte	'_Ifx_FLASH_CBAB',0,25,182,7,25,48,13
	.byte	'CFG',0
	.word	82394
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	82462
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	82531
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	84985
	.byte	36,2,35,12,0,5
	.word	84994
	.byte	29
	.byte	'Ifx_FLASH_CBAB',0,25,188,7,3
	.word	85077
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,25,191,7,25,48,13
	.byte	'CFG0',0
	.word	84320
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	84388
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	84456
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	84985
	.byte	36,2,35,12,0,5
	.word	85106
	.byte	29
	.byte	'Ifx_FLASH_RDB',0,25,197,7,3
	.word	85190
	.byte	16,80
	.word	423
	.byte	17,79,0,10
	.byte	'_Ifx_FLASH_UBAB',0,25,200,7,25,92,13
	.byte	'CFG',0
	.word	84780
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	84848
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	84917
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	85218
	.byte	80,2,35,12,0,5
	.word	85227
	.byte	29
	.byte	'Ifx_FLASH_UBAB',0,25,206,7,3
	.word	85310
	.byte	29
	.byte	'Ifx_P_ACCEN0_Bits',0,10,79,3
	.word	8000
	.byte	29
	.byte	'Ifx_P_ACCEN1_Bits',0,10,85,3
	.word	7913
	.byte	29
	.byte	'Ifx_P_ESR_Bits',0,10,107,3
	.word	4963
	.byte	29
	.byte	'Ifx_P_ID_Bits',0,10,115,3
	.word	3016
	.byte	29
	.byte	'Ifx_P_IN_Bits',0,10,137,1,3
	.word	4011
	.byte	29
	.byte	'Ifx_P_IOCR0_Bits',0,10,150,1,3
	.word	3144
	.byte	29
	.byte	'Ifx_P_IOCR12_Bits',0,10,163,1,3
	.word	3791
	.byte	29
	.byte	'Ifx_P_IOCR4_Bits',0,10,176,1,3
	.word	3359
	.byte	29
	.byte	'Ifx_P_IOCR8_Bits',0,10,189,1,3
	.word	3574
	.byte	29
	.byte	'Ifx_P_OMCR0_Bits',0,10,200,1,3
	.word	6543
	.byte	29
	.byte	'Ifx_P_OMCR12_Bits',0,10,210,1,3
	.word	7067
	.byte	29
	.byte	'Ifx_P_OMCR4_Bits',0,10,221,1,3
	.word	6717
	.byte	29
	.byte	'Ifx_P_OMCR8_Bits',0,10,232,1,3
	.word	6891
	.byte	29
	.byte	'Ifx_P_OMCR_Bits',0,10,254,1,3
	.word	7556
	.byte	29
	.byte	'Ifx_P_OMR_Bits',0,10,163,2,3
	.word	2445
	.byte	29
	.byte	'Ifx_P_OMSR0_Bits',0,10,173,2,3
	.word	5880
	.byte	29
	.byte	'Ifx_P_OMSR12_Bits',0,10,184,2,3
	.word	6368
	.byte	29
	.byte	'Ifx_P_OMSR4_Bits',0,10,195,2,3
	.word	6027
	.byte	29
	.byte	'Ifx_P_OMSR8_Bits',0,10,206,2,3
	.word	6196
	.byte	29
	.byte	'Ifx_P_OMSR_Bits',0,10,228,2,3
	.word	7223
	.byte	29
	.byte	'Ifx_P_OUT_Bits',0,10,250,2,3
	.word	2129
	.byte	29
	.byte	'Ifx_P_PCSR_Bits',0,10,135,3,3
	.word	5669
	.byte	29
	.byte	'Ifx_P_PDISC_Bits',0,10,157,3,3
	.word	5303
	.byte	29
	.byte	'Ifx_P_PDR0_Bits',0,10,178,3,3
	.word	4334
	.byte	29
	.byte	'Ifx_P_PDR1_Bits',0,10,199,3,3
	.word	4638
	.byte	29
	.byte	'Ifx_P_ACCEN0',0,10,212,3,3
	.word	8527
	.byte	29
	.byte	'Ifx_P_ACCEN1',0,10,220,3,3
	.word	7960
	.byte	29
	.byte	'Ifx_P_ESR',0,10,228,3,3
	.word	5254
	.byte	29
	.byte	'Ifx_P_ID',0,10,236,3,3
	.word	3095
	.byte	29
	.byte	'Ifx_P_IN',0,10,244,3,3
	.word	4285
	.byte	29
	.byte	'Ifx_P_IOCR0',0,10,252,3,3
	.word	3319
	.byte	29
	.byte	'Ifx_P_IOCR12',0,10,132,4,3
	.word	3971
	.byte	29
	.byte	'Ifx_P_IOCR4',0,10,140,4,3
	.word	3534
	.byte	29
	.byte	'Ifx_P_IOCR8',0,10,148,4,3
	.word	3751
	.byte	29
	.byte	'Ifx_P_OMCR',0,10,156,4,3
	.word	7864
	.byte	29
	.byte	'Ifx_P_OMCR0',0,10,164,4,3
	.word	6677
	.byte	29
	.byte	'Ifx_P_OMCR12',0,10,172,4,3
	.word	7183
	.byte	29
	.byte	'Ifx_P_OMCR4',0,10,180,4,3
	.word	6851
	.byte	29
	.byte	'Ifx_P_OMCR8',0,10,188,4,3
	.word	7027
	.byte	29
	.byte	'Ifx_P_OMR',0,10,196,4,3
	.word	2976
	.byte	29
	.byte	'Ifx_P_OMSR',0,10,204,4,3
	.word	7516
	.byte	29
	.byte	'Ifx_P_OMSR0',0,10,212,4,3
	.word	5987
	.byte	29
	.byte	'Ifx_P_OMSR12',0,10,220,4,3
	.word	6503
	.byte	29
	.byte	'Ifx_P_OMSR4',0,10,228,4,3
	.word	6156
	.byte	29
	.byte	'Ifx_P_OMSR8',0,10,236,4,3
	.word	6328
	.byte	29
	.byte	'Ifx_P_OUT',0,10,244,4,3
	.word	2405
	.byte	29
	.byte	'Ifx_P_PCSR',0,10,252,4,3
	.word	5840
	.byte	29
	.byte	'Ifx_P_PDISC',0,10,132,5,3
	.word	5629
	.byte	29
	.byte	'Ifx_P_PDR0',0,10,140,5,3
	.word	4598
	.byte	29
	.byte	'Ifx_P_PDR1',0,10,148,5,3
	.word	4914
	.byte	5
	.word	8567
	.byte	29
	.byte	'Ifx_P',0,10,193,5,3
	.word	86486
	.byte	29
	.byte	'IfxPort_InputMode',0,9,60,3
	.word	9110
	.byte	29
	.byte	'IfxPort_OutputIdx',0,9,101,3
	.word	9384
	.byte	29
	.byte	'IfxPort_OutputMode',0,9,109,3
	.word	9315
	.byte	14,9,115,9,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,15
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,15
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,15
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,15
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,29
	.byte	'IfxPort_PadDriver',0,9,125,3
	.word	86585
	.byte	29
	.byte	'IfxPort_State',0,9,137,1,3
	.word	9697
	.byte	29
	.byte	'IfxPort_Pin',0,9,153,1,3
	.word	23082
	.byte	32,1,1,6
	.word	86945
	.byte	29
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,14,129,1,16
	.word	86948
	.byte	28,14,197,5,9,8,13
	.byte	'value',0
	.word	1900
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1900
	.byte	4,2,35,4,0,29
	.byte	'IfxScuCcu_CcuconRegConfig',0,14,201,5,3
	.word	86993
	.byte	28,14,206,5,9,8,13
	.byte	'pDivider',0
	.word	423
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	423
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	423
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	21713
	.byte	4,2,35,4,0,29
	.byte	'IfxScuCcu_InitialStepConfig',0,14,212,5,3
	.word	87064
	.byte	28,14,216,5,9,12,13
	.byte	'k2Step',0
	.word	423
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	21713
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	86953
	.byte	4,2,35,8,0,29
	.byte	'IfxScuCcu_PllStepsConfig',0,14,221,5,3
	.word	87181
	.byte	6
	.word	86945
	.byte	28,14,229,5,9,40,13
	.byte	'ccucon0',0
	.word	86993
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	86993
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	86993
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	86993
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	86993
	.byte	8,2,35,32,0,29
	.byte	'IfxScuCcu_ClockDistributionConfig',0,14,236,5,3
	.word	87283
	.byte	28,14,240,5,9,8,13
	.byte	'value',0
	.word	1900
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1900
	.byte	4,2,35,4,0,29
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,14,244,5,3
	.word	87418
	.byte	6
	.word	87181
	.byte	28,14,249,5,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	423
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	87494
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	87064
	.byte	8,2,35,8,0,29
	.byte	'IfxScuCcu_SysPllConfig',0,14,254,5,3
	.word	87499
	.byte	28,16,39,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23121
	.byte	1,2,35,12,0,19
	.word	87616
	.byte	29
	.byte	'IfxCcu6_Cc60in_In',0,16,44,3
	.word	87667
	.byte	28,16,47,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23121
	.byte	1,2,35,12,0,19
	.word	87698
	.byte	29
	.byte	'IfxCcu6_Cc61in_In',0,16,52,3
	.word	87749
	.byte	28,16,55,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23121
	.byte	1,2,35,12,0,19
	.word	87780
	.byte	29
	.byte	'IfxCcu6_Cc62in_In',0,16,60,3
	.word	87831
	.byte	28,16,63,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23121
	.byte	1,2,35,12,0,19
	.word	87862
	.byte	29
	.byte	'IfxCcu6_Ccpos0_In',0,16,68,3
	.word	87913
	.byte	28,16,71,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23121
	.byte	1,2,35,12,0,19
	.word	87944
	.byte	29
	.byte	'IfxCcu6_Ccpos1_In',0,16,76,3
	.word	87995
	.byte	28,16,79,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23121
	.byte	1,2,35,12,0,19
	.word	88026
	.byte	29
	.byte	'IfxCcu6_Ccpos2_In',0,16,84,3
	.word	88077
	.byte	28,16,87,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23121
	.byte	1,2,35,12,0,19
	.word	88108
	.byte	29
	.byte	'IfxCcu6_Ctrap_In',0,16,92,3
	.word	88159
	.byte	19
	.word	23239
	.byte	29
	.byte	'IfxCcu6_T12hr_In',0,16,100,3
	.word	88189
	.byte	19
	.word	23314
	.byte	29
	.byte	'IfxCcu6_T13hr_In',0,16,108,3
	.word	88219
	.byte	28,16,111,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9384
	.byte	1,2,35,12,0,19
	.word	88249
	.byte	29
	.byte	'IfxCcu6_Cc60_Out',0,16,116,3
	.word	88300
	.byte	28,16,119,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9384
	.byte	1,2,35,12,0,19
	.word	88330
	.byte	29
	.byte	'IfxCcu6_Cc61_Out',0,16,124,3
	.word	88381
	.byte	28,16,127,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9384
	.byte	1,2,35,12,0,19
	.word	88411
	.byte	29
	.byte	'IfxCcu6_Cc62_Out',0,16,132,1,3
	.word	88462
	.byte	28,16,135,1,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9384
	.byte	1,2,35,12,0,19
	.word	88493
	.byte	29
	.byte	'IfxCcu6_Cout60_Out',0,16,140,1,3
	.word	88545
	.byte	28,16,143,1,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9384
	.byte	1,2,35,12,0,19
	.word	88578
	.byte	29
	.byte	'IfxCcu6_Cout61_Out',0,16,148,1,3
	.word	88630
	.byte	28,16,151,1,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9384
	.byte	1,2,35,12,0,19
	.word	88663
	.byte	29
	.byte	'IfxCcu6_Cout62_Out',0,16,156,1,3
	.word	88715
	.byte	28,16,159,1,15,16,13
	.byte	'module',0
	.word	19838
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23082
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9384
	.byte	1,2,35,12,0,19
	.word	88748
	.byte	29
	.byte	'IfxCcu6_Cout63_Out',0,16,164,1,3
	.word	88800
	.byte	29
	.byte	'IfxCcu6_CaptureCompareInput',0,11,70,3
	.word	20739
	.byte	29
	.byte	'IfxCcu6_CaptureCompareInputSignal',0,11,80,3
	.word	20997
	.byte	29
	.byte	'IfxCcu6_CaptureCompareState',0,11,89,3
	.word	22969
	.byte	29
	.byte	'IfxCcu6_ChannelOut',0,11,102,3
	.word	22704
	.byte	14,11,107,9,1,15
	.byte	'IfxCcu6_CountingInputMode_internal',0,0,15
	.byte	'IfxCcu6_CountingInputMode_manual',0,1,15
	.byte	'IfxCcu6_CountingInputMode_externalRising',0,2,15
	.byte	'IfxCcu6_CountingInputMode_externalFalling',0,3,0,29
	.byte	'IfxCcu6_CountingInputMode',0,11,117,3
	.word	88974
	.byte	14,11,132,1,9,1,15
	.byte	'IfxCcu6_ExternalTriggerMode_disable',0,0,15
	.byte	'IfxCcu6_ExternalTriggerMode_risingEdge',0,1,15
	.byte	'IfxCcu6_ExternalTriggerMode_fallingEdge',0,2,15
	.byte	'IfxCcu6_ExternalTriggerMode_anyEdge',0,3,0,29
	.byte	'IfxCcu6_ExternalTriggerMode',0,11,141,1,3
	.word	89173
	.byte	14,11,146,1,9,1,15
	.byte	'IfxCcu6_HallSensorTriggerMode_permanentCheck',0,0,15
	.byte	'IfxCcu6_HallSensorTriggerMode_cM63',0,1,15
	.byte	'IfxCcu6_HallSensorTriggerMode_t13PM',0,2,15
	.byte	'IfxCcu6_HallSensorTriggerMode_off',0,3,15
	.byte	'IfxCcu6_HallSensorTriggerMode_t12PMCountingUp',0,4,15
	.byte	'IfxCcu6_HallSensorTriggerMode_t12OMCountingDown',0,5,15
	.byte	'IfxCcu6_HallSensorTriggerMode_cM61CountingUp',0,6,15
	.byte	'IfxCcu6_HallSensorTriggerMode_cM61CountingDown',0,7,0,29
	.byte	'IfxCcu6_HallSensorTriggerMode',0,11,157,1,3
	.word	89376
	.byte	29
	.byte	'IfxCcu6_InterruptSource',0,11,183,1,3
	.word	22056
	.byte	14,11,188,1,9,1,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_noEvent',0,0,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent',0,1,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch',0,2,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch',0,3,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch',0,4,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch',0,5,0,29
	.byte	'IfxCcu6_MultiChannelSwitchingSelect',0,11,197,1,3
	.word	89807
	.byte	14,11,202,1,9,1,15
	.byte	'IfxCcu6_MultiChannelSwitchingSync_direct',0,0,15
	.byte	'IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch',0,1,15
	.byte	'IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch',0,2,0,29
	.byte	'IfxCcu6_MultiChannelSwitchingSync',0,11,209,1,3
	.word	90178
	.byte	29
	.byte	'IfxCcu6_ServiceRequest',0,11,219,1,3
	.word	22589
	.byte	14,11,224,1,9,1,15
	.byte	'IfxCcu6_SleepMode_enable',0,0,15
	.byte	'IfxCcu6_SleepMode_disable',0,1,0,29
	.byte	'IfxCcu6_SleepMode',0,11,228,1,3
	.word	90401
	.byte	29
	.byte	'IfxCcu6_T12Channel',0,11,237,1,3
	.word	22893
	.byte	14,11,241,1,9,1,15
	.byte	'IfxCcu6_T12ChannelMode_off',0,0,15
	.byte	'IfxCcu6_T12ChannelMode_compareMode',0,1,15
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling',0,4,15
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising',0,5,15
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling',0,6,15
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny',0,7,15
	.byte	'IfxCcu6_T12ChannelMode_hallSensor',0,8,15
	.byte	'IfxCcu6_T12ChannelMode_hysteresisLikecompare',0,9,15
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling',0,10,15
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising',0,11,15
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureBothRising',0,12,15
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling',0,13,15
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureAny',0,14,0,29
	.byte	'IfxCcu6_T12ChannelMode',0,11,129,2,3
	.word	90518
	.byte	14,11,134,2,9,1,15
	.byte	'IfxCcu6_T12CountDirection_up',0,0,15
	.byte	'IfxCcu6_T12CountDirection_down',0,1,0,29
	.byte	'IfxCcu6_T12CountDirection',0,11,138,2,3
	.word	91197
	.byte	29
	.byte	'IfxCcu6_T12CountMode',0,11,149,2,3
	.word	20316
	.byte	14,11,154,2,9,1,15
	.byte	'IfxCcu6_T13TriggerDirection_noAction',0,0,15
	.byte	'IfxCcu6_T13TriggerDirection_onT12CountingUp',0,1,15
	.byte	'IfxCcu6_T13TriggerDirection_onT12CountingDown',0,2,15
	.byte	'IfxCcu6_T13TriggerDirection_anyT12',0,3,0,29
	.byte	'IfxCcu6_T13TriggerDirection',0,11,160,2,3
	.word	91333
	.byte	14,11,165,2,9,1,15
	.byte	'IfxCcu6_T13TriggerEvent_noAction',0,0,15
	.byte	'IfxCcu6_T13TriggerEvent_onCC60RCompare',0,1,15
	.byte	'IfxCcu6_T13TriggerEvent_onCC61RCompare',0,2,15
	.byte	'IfxCcu6_T13TriggerEvent_onCC62RCompare',0,3,15
	.byte	'IfxCcu6_T13TriggerEvent_onAnyT12Compare',0,4,15
	.byte	'IfxCcu6_T13TriggerEvent_onT12Period',0,5,15
	.byte	'IfxCcu6_T13TriggerEvent_onT12Zero',0,6,15
	.byte	'IfxCcu6_T13TriggerEvent_onCCPOSxEdge',0,7,0,29
	.byte	'IfxCcu6_T13TriggerEvent',0,11,176,2,3
	.word	91547
	.byte	29
	.byte	'IfxCcu6_TimerId',0,11,184,2,3
	.word	19895
	.byte	29
	.byte	'IfxCcu6_TimerInputClock',0,11,199,2,3
	.word	19946
	.byte	14,11,218,2,9,1,15
	.byte	'IfxCcu6_TimerRunStatus_stopped',0,0,15
	.byte	'IfxCcu6_TimerRunStatus_running',0,1,0,29
	.byte	'IfxCcu6_TimerRunStatus',0,11,222,2,3
	.word	91958
	.byte	14,11,227,2,9,1,15
	.byte	'IfxCcu6_TrapMode_automatic',0,0,15
	.byte	'IfxCcu6_TrapMode_manual',0,1,0,29
	.byte	'IfxCcu6_TrapMode',0,11,232,2,3
	.word	92063
	.byte	14,11,237,2,9,1,15
	.byte	'IfxCcu6_TrapState_t12Sync',0,0,15
	.byte	'IfxCcu6_TrapState_t13Sync',0,1,15
	.byte	'IfxCcu6_TrapState_immediate',0,3,0,29
	.byte	'IfxCcu6_TrapState',0,11,244,2,3
	.word	92151
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L130:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,59,0,3,8,0,0,5,53,0,73,19,0,0,6,15,0,73,19,0,0,7,36,0,3,8,11,15,62,15,0,0,8,5,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,9,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,10,19,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8
	.byte	73,19,11,15,56,9,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0,0,17
	.byte	33,0,47,15,0,0,18,46,0,3,8,54,15,39,12,63,12,60,12,0,0,19,38,0,73,19,0,0,20,55,0,73,19,0,0,21,46,1,3,8
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,22,5,0,58,15,59,15,57,15,73,19,0,0,23,24,0,58,15,59
	.byte	15,57,15,0,0,24,46,1,49,19,0,0,25,5,0,49,19,0,0,26,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12
	.byte	0,0,27,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,28,19,1,58,15,59,15,57,15,11,15,0
	.byte	0,29,22,0,3,8,58,15,59,15,57,15,73,19,0,0,30,21,0,54,15,0,0,31,52,0,3,8,58,15,59,15,57,15,73,19,63,12
	.byte	60,12,0,0,32,21,0,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L131:
	.word	.L468-.L467
.L467:
	.half	3
	.word	.L470-.L469
.L469:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Reg',0
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_common\\ifx_cfg\\include',0
	.byte	0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuWdt.h',0
	.byte	0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxCpu_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0
	.byte	'IfxCcu6_regdef.h',0,1,0,0
	.byte	'stdio.h',0,2,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuCcu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxCcu6_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_PinMap\\IfxCcu6_PinMap.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'Ifx_Cfg.h',0,3,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxSrc_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxScu_cfg.h',0
	.byte	0,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0,0
.L470:
.L468:
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_info'
.L132:
	.word	403
	.half	3
	.word	.L133
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L135,.L134
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_connectTrigger',0,1,36,6,1,1,1
	.word	.L89,.L232,.L88
	.byte	4
	.byte	'ccu6',0,1,36,39
	.word	.L233,.L234
	.byte	4
	.byte	'outputLine',0,1,36,61
	.word	.L235,.L236
	.byte	4
	.byte	'selectedTrigger',0,1,36,89
	.word	.L237,.L238
	.byte	5
	.word	.L89,.L232
	.byte	6
	.byte	'mosel',0,1,38,14
	.word	.L239,.L240
	.byte	6
	.byte	'shift',0,1,39,14
	.word	.L241,.L242
	.byte	7
	.word	.L243,.L244,.L245
	.byte	8
	.word	.L246,.L247
	.byte	8
	.word	.L248,.L249
	.byte	8
	.word	.L250,.L251
	.byte	9
	.word	.L252,.L244,.L245
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_abbrev'
.L133:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_line'
.L134:
	.word	.L472-.L471
.L471:
	.half	3
	.word	.L474-.L473
.L473:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0,0
.L474:
	.byte	5,24,7,0,5,2
	.word	.L89
	.byte	3,47,1,5,33,3,118,1,5,29,9
	.half	.L475-.L89
	.byte	3,10,1,5,32,3,127,1,4,2,5,66,9
	.half	.L244-.L475
	.byte	3,41,1,4,1,5,18,3,82,1,4,2,5,66,9
	.half	.L476-.L244
	.byte	3,46,1,5,64,9
	.half	.L477-.L476
	.byte	1,4,1,5,14,3,82,1,5,26,9
	.half	.L423-.L477
	.byte	3,126,1,5,21,9
	.half	.L422-.L423
	.byte	3,4,1,5,46,9
	.half	.L478-.L422
	.byte	3,4,1,4,2,5,83,9
	.half	.L479-.L478
	.byte	3,40,1,5,75,9
	.half	.L424-.L479
	.byte	1,4,1,5,19,3,89,1,5,1,9
	.half	.L245-.L424
	.byte	3,1,1,7,9
	.half	.L136-.L245
	.byte	0,1,1
.L472:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_ranges'
.L135:
	.word	-1,.L89,0,.L136-.L89,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_info'
.L137:
	.word	315
	.half	3
	.word	.L138
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L140,.L139
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_routeInterruptNode',0,1,244,1,6,1,1,1
	.word	.L109,.L253,.L108
	.byte	4
	.byte	'ccu6',0,1,244,1,43
	.word	.L233,.L254
	.byte	4
	.byte	'source',0,1,244,1,73
	.word	.L255,.L256
	.byte	4
	.byte	'serviceRequest',0,1,244,1,104
	.word	.L257,.L258
	.byte	5
	.word	.L109,.L253
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_abbrev'
.L138:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_line'
.L139:
	.word	.L481-.L480
.L480:
	.half	3
	.word	.L483-.L482
.L482:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L483:
	.byte	5,9,7,0,5,2
	.word	.L109
	.byte	3,245,1,1,5,71,7,9
	.half	.L484-.L109
	.byte	1,5,20,7,9
	.half	.L36-.L484
	.byte	3,2,1,5,29,9
	.half	.L485-.L36
	.byte	1,5,45,1,5,14,9
	.half	.L37-.L485
	.byte	3,2,1,5,76,7,9
	.half	.L486-.L37
	.byte	1,5,20,7,9
	.half	.L39-.L486
	.byte	3,2,1,5,29,9
	.half	.L487-.L39
	.byte	1,5,45,1,5,14,9
	.half	.L40-.L487
	.byte	3,2,1,5,76,7,9
	.half	.L488-.L40
	.byte	1,5,20,7,9
	.half	.L42-.L488
	.byte	3,2,1,5,29,9
	.half	.L489-.L42
	.byte	1,5,45,1,5,25,9
	.half	.L43-.L489
	.byte	3,2,1,5,10,9
	.half	.L490-.L43
	.byte	1,5,20,7,9
	.half	.L491-.L490
	.byte	3,2,1,5,28,9
	.half	.L492-.L491
	.byte	1,5,1,9
	.half	.L493-.L492
	.byte	3,18,1,5,25,7,9
	.half	.L45-.L493
	.byte	3,112,1,5,14,9
	.half	.L494-.L45
	.byte	1,5,69,7,9
	.half	.L495-.L494
	.byte	1,5,66,9
	.half	.L496-.L495
	.byte	1,5,20,7,9
	.half	.L47-.L496
	.byte	3,2,1,5,28,9
	.half	.L497-.L47
	.byte	1,5,44,1,5,14,9
	.half	.L48-.L497
	.byte	3,2,1,5,73,7,9
	.half	.L498-.L48
	.byte	1,5,20,7,9
	.half	.L50-.L498
	.byte	3,2,1,5,28,9
	.half	.L499-.L50
	.byte	1,5,44,1,5,25,9
	.half	.L51-.L499
	.byte	3,2,1,5,14,9
	.half	.L500-.L51
	.byte	1,5,80,7,9
	.half	.L501-.L500
	.byte	1,5,77,9
	.half	.L502-.L501
	.byte	1,5,20,7,9
	.half	.L53-.L502
	.byte	3,2,1,5,28,9
	.half	.L503-.L53
	.byte	1,5,1,9
	.half	.L504-.L503
	.byte	3,6,1,5,16,7,9
	.half	.L54-.L504
	.byte	3,126,1,5,1,9
	.half	.L505-.L54
	.byte	3,2,1,7,9
	.half	.L141-.L505
	.byte	0,1,1
.L481:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_ranges'
.L140:
	.word	-1,.L109,0,.L141-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_info'
.L142:
	.word	343
	.half	3
	.word	.L143
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L145,.L144
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_setOutputPassiveLevel',0,1,153,2,6,1,1,1
	.word	.L111,.L259,.L110
	.byte	4
	.byte	'ccu6',0,1,153,2,46
	.word	.L233,.L260
	.byte	4
	.byte	'channelOut',0,1,153,2,71
	.word	.L261,.L262
	.byte	4
	.byte	'state',0,1,153,2,91
	.word	.L263,.L264
	.byte	5
	.word	.L111,.L259
	.byte	5
	.word	.L265,.L266
	.byte	6
	.byte	'shift',0,1,157,2,16
	.word	.L267,.L268
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_abbrev'
.L143:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_line'
.L144:
	.word	.L507-.L506
.L506:
	.half	3
	.word	.L509-.L508
.L508:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L509:
	.byte	5,5,7,0,5,2
	.word	.L111
	.byte	3,154,2,1,5,25,7,9
	.half	.L265-.L111
	.byte	3,3,1,5,35,3,1,1,5,27,9
	.half	.L510-.L265
	.byte	3,127,1,5,40,9
	.half	.L511-.L510
	.byte	3,1,1,5,38,9
	.half	.L512-.L511
	.byte	1,5,64,9
	.half	.L513-.L512
	.byte	1,5,47,9
	.half	.L442-.L513
	.byte	1,5,22,1,5,1,9
	.half	.L266-.L442
	.byte	3,6,1,5,21,7,9
	.half	.L56-.L266
	.byte	3,126,1,5,28,9
	.half	.L514-.L56
	.byte	1,5,1,9
	.half	.L515-.L514
	.byte	3,2,1,7,9
	.half	.L146-.L515
	.byte	0,1,1
.L507:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_ranges'
.L145:
	.word	-1,.L111,0,.L146-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_info'
.L147:
	.word	333
	.half	3
	.word	.L148
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L150,.L149
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_setT12CaptureCompareState',0,1,168,2,6,1,1,1
	.word	.L113,.L269,.L112
	.byte	4
	.byte	'ccu6',0,1,168,2,50
	.word	.L233,.L270
	.byte	4
	.byte	'channel',0,1,168,2,75
	.word	.L271,.L272
	.byte	4
	.byte	'state',0,1,168,2,112
	.word	.L273,.L274
	.byte	5
	.word	.L113,.L269
	.byte	6
	.byte	'mask',0,1,170,2,12
	.word	.L267,.L275
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_abbrev'
.L148:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_line'
.L149:
	.word	.L517-.L516
.L516:
	.half	3
	.word	.L519-.L518
.L518:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L519:
	.byte	5,6,7,0,5,2
	.word	.L113
	.byte	3,167,2,1,5,20,9
	.half	.L443-.L113
	.byte	3,2,1,5,28,9
	.half	.L520-.L443
	.byte	1,5,5,9
	.half	.L445-.L520
	.byte	3,3,1,5,48,7,9
	.half	.L521-.L445
	.byte	3,3,1,5,43,1,5,48,9
	.half	.L522-.L521
	.byte	1,5,46,9
	.half	.L523-.L522
	.byte	1,5,58,9
	.half	.L524-.L523
	.byte	1,5,63,9
	.half	.L525-.L524
	.byte	1,5,55,9
	.half	.L526-.L525
	.byte	1,5,26,1,5,5,9
	.half	.L58-.L526
	.byte	3,3,1,5,48,7,9
	.half	.L527-.L58
	.byte	3,3,1,5,43,1,5,48,9
	.half	.L528-.L527
	.byte	1,5,46,9
	.half	.L529-.L528
	.byte	1,5,58,9
	.half	.L530-.L529
	.byte	1,5,63,9
	.half	.L531-.L530
	.byte	1,5,55,9
	.half	.L532-.L531
	.byte	1,5,26,1,5,5,9
	.half	.L59-.L532
	.byte	3,3,1,5,48,7,9
	.half	.L533-.L59
	.byte	3,3,1,5,43,1,5,48,9
	.half	.L444-.L533
	.byte	1,5,46,9
	.half	.L446-.L444
	.byte	1,5,58,9
	.half	.L534-.L446
	.byte	1,5,63,9
	.half	.L535-.L534
	.byte	1,5,55,9
	.half	.L536-.L535
	.byte	1,5,26,1,5,1,9
	.half	.L60-.L536
	.byte	3,2,1,7,9
	.half	.L151-.L60
	.byte	0,1,1
.L517:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_ranges'
.L150:
	.word	-1,.L113,0,.L151-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_info'
.L152:
	.word	307
	.half	3
	.word	.L153
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L155,.L154
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_setT12CompareValue',0,1,193,2,6,1,1,1
	.word	.L115,.L276,.L114
	.byte	4
	.byte	'ccu6',0,1,193,2,43
	.word	.L233,.L277
	.byte	4
	.byte	'channel',0,1,193,2,68
	.word	.L271,.L278
	.byte	4
	.byte	'value',0,1,193,2,84
	.word	.L241,.L279
	.byte	5
	.word	.L115,.L276
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_abbrev'
.L153:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_line'
.L154:
	.word	.L538-.L537
.L537:
	.half	3
	.word	.L540-.L539
.L539:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L540:
	.byte	5,10,7,0,5,2
	.word	.L115
	.byte	3,196,2,1,7,9
	.half	.L541-.L115
	.byte	3,3,1,7,9
	.half	.L542-.L541
	.byte	3,3,1,5,1,7,9
	.half	.L543-.L542
	.byte	3,4,1,5,28,7,9
	.half	.L61-.L543
	.byte	3,119,1,5,1,9
	.half	.L544-.L61
	.byte	3,9,1,5,28,7,9
	.half	.L62-.L544
	.byte	3,122,1,5,1,9
	.half	.L545-.L62
	.byte	3,6,1,5,28,7,9
	.half	.L63-.L545
	.byte	3,125,1,5,1,9
	.half	.L546-.L63
	.byte	3,3,1,7,9
	.half	.L156-.L546
	.byte	0,1,1
.L538:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_ranges'
.L155:
	.word	-1,.L115,0,.L156-.L115,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_info'
.L157:
	.word	716
	.half	3
	.word	.L158
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L160,.L159
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_setT12Frequency',0,1,210,2,9
	.word	.L280
	.byte	1,1,1
	.word	.L117,.L281,.L116
	.byte	4
	.byte	'ccu6',0,1,210,2,43
	.word	.L233,.L282
	.byte	4
	.byte	'frequency',0,1,210,2,57
	.word	.L280,.L283
	.byte	4
	.byte	'resolution',0,1,210,2,83
	.word	.L267,.L284
	.byte	4
	.byte	'countMode',0,1,210,2,116
	.word	.L285,.L286
	.byte	5
	.word	.L287
	.byte	6
	.byte	'prescaler',0,1,212,2,20
	.word	.L241,.L288
	.byte	6
	.byte	'freqT1x',0,1,213,2,20
	.word	.L280,.L289
	.byte	6
	.byte	'periodT1x',0,1,213,2,33
	.word	.L280,.L290
	.byte	6
	.byte	'freqCC6',0,1,214,2,20
	.word	.L280,.L291
	.byte	6
	.byte	'period',0,1,215,2,20
	.word	.L267,.L292
	.byte	7
	.word	.L293,.L70
	.byte	8
	.word	.L294,.L72,.L295
	.byte	9
	.word	.L296,.L297
	.byte	9
	.word	.L298,.L299
	.byte	10
	.word	.L300,.L72,.L295
	.byte	0,8
	.word	.L301,.L295,.L302
	.byte	9
	.word	.L303,.L304
	.byte	9
	.word	.L305,.L306
	.byte	9
	.word	.L307,.L308
	.byte	11
	.word	.L309,.L295,.L302
	.byte	6
	.byte	'tctr4',0,2,169,11,20
	.word	.L310,.L311
	.byte	0,0,8
	.word	.L312,.L302,.L313
	.byte	9
	.word	.L314,.L315
	.byte	9
	.word	.L316,.L317
	.byte	9
	.word	.L318,.L319
	.byte	10
	.word	.L320,.L302,.L313
	.byte	0,8
	.word	.L321,.L322,.L73
	.byte	9
	.word	.L323,.L324
	.byte	9
	.word	.L325,.L326
	.byte	10
	.word	.L327,.L322,.L73
	.byte	0,8
	.word	.L328,.L73,.L329
	.byte	9
	.word	.L330,.L331
	.byte	9
	.word	.L332,.L333
	.byte	10
	.word	.L334,.L73,.L329
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_abbrev'
.L158:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,17,1,18,1,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0
	.byte	0,10,11,0,49,16,17,1,18,1,0,0,11,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_line'
.L159:
	.word	.L548-.L547
.L547:
	.half	3
	.word	.L550-.L549
.L549:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0,0
.L550:
	.byte	5,9,7,0,5,2
	.word	.L117
	.byte	3,209,2,1,5,55,9
	.half	.L448-.L117
	.byte	3,4,1,5,20,9
	.half	.L447-.L448
	.byte	3,3,1,5,5,9
	.half	.L551-.L447
	.byte	3,11,1,5,51,7,9
	.half	.L293-.L551
	.byte	3,6,1,5,39,9
	.half	.L552-.L293
	.byte	1,5,22,9
	.half	.L553-.L552
	.byte	1,5,30,9
	.half	.L554-.L553
	.byte	3,2,1,5,82,7,9
	.half	.L555-.L554
	.byte	1,5,94,9
	.half	.L556-.L555
	.byte	1,5,99,1,5,109,9
	.half	.L71-.L556
	.byte	1,4,2,5,25,9
	.half	.L72-.L71
	.byte	3,198,11,1,5,20,9
	.half	.L295-.L72
	.byte	3,248,124,1,9
	.half	.L454-.L295
	.byte	3,1,1,9
	.half	.L557-.L454
	.byte	3,1,1,3,1,1,5,33,9
	.half	.L302-.L557
	.byte	3,183,2,1,5,36,9
	.half	.L455-.L302
	.byte	1,4,1,5,58,9
	.half	.L558-.L455
	.byte	3,140,117,1,4,2,5,45,9
	.half	.L559-.L558
	.byte	3,244,10,1,5,19,1,4,1,5,9,9
	.half	.L313-.L559
	.byte	3,145,117,1,4,2,5,32,7,9
	.half	.L322-.L313
	.byte	3,235,7,1,5,35,9
	.half	.L560-.L322
	.byte	1,5,19,1,5,18,9
	.half	.L73-.L560
	.byte	3,198,3,1,5,23,9
	.half	.L561-.L73
	.byte	1,4,1,5,31,9
	.half	.L329-.L561
	.byte	3,214,116,1,5,29,9
	.half	.L562-.L329
	.byte	1,5,1,3,8,1,5,19,7,9
	.half	.L70-.L562
	.byte	3,124,1,5,1,3,4,1,7,9
	.half	.L161-.L70
	.byte	0,1,1
.L548:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_ranges'
.L160:
	.word	-1,.L117,0,.L161-.L117,0,0
.L287:
	.word	-1,.L117,0,.L281-.L117,-1,.L119,0,.L231-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_info'
.L162:
	.word	313
	.half	3
	.word	.L163
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L165,.L164
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_setT12InputSignal',0,1,135,3,6,1,1,1
	.word	.L121,.L335,.L120
	.byte	4
	.byte	'ccu6',0,1,135,3,42
	.word	.L233,.L336
	.byte	4
	.byte	'extInput',0,1,135,3,66
	.word	.L337,.L338
	.byte	5
	.word	.L121,.L335
	.byte	6
	.byte	'__func__',0,1,140,3,5
	.word	.L339
	.byte	5,3
	.word	_999001___func__
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_abbrev'
.L163:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_line'
.L164:
	.word	.L564-.L563
.L563:
	.half	3
	.word	.L566-.L565
.L565:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L566:
	.byte	5,38,7,0,5,2
	.word	.L121
	.byte	3,136,3,1,5,19,9
	.half	.L567-.L121
	.byte	1,5,47,9
	.half	.L568-.L567
	.byte	1,5,6,3,126,1,5,28,9
	.half	.L456-.L568
	.byte	3,2,1,5,19,9
	.half	.L569-.L456
	.byte	3,1,1,5,38,9
	.half	.L570-.L569
	.byte	1,5,28,9
	.half	.L571-.L570
	.byte	1,5,5,9
	.half	.L572-.L571
	.byte	3,2,1,5,1,9
	.half	.L76-.L572
	.byte	3,1,1,7,9
	.half	.L166-.L76
	.byte	0,1,1
.L564:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_ranges'
.L165:
	.word	-1,.L121,0,.L166-.L121,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_info'
.L167:
	.word	293
	.half	3
	.word	.L168
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L170,.L169
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_setT13CaptureCompareState',0,1,144,3,6,1,1,1
	.word	.L123,.L340,.L122
	.byte	4
	.byte	'ccu6',0,1,144,3,50
	.word	.L233,.L341
	.byte	4
	.byte	'state',0,1,144,3,84
	.word	.L273,.L342
	.byte	5
	.word	.L123,.L340
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_abbrev'
.L168:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_line'
.L169:
	.word	.L574-.L573
.L573:
	.half	3
	.word	.L576-.L575
.L575:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L576:
	.byte	5,5,7,0,5,2
	.word	.L123
	.byte	3,149,3,1,5,43,7,9
	.half	.L577-.L123
	.byte	3,3,1,5,48,9
	.half	.L578-.L577
	.byte	1,5,46,9
	.half	.L579-.L578
	.byte	1,5,55,9
	.half	.L580-.L579
	.byte	1,5,26,1,5,5,9
	.half	.L77-.L580
	.byte	3,3,1,5,43,7,9
	.half	.L581-.L77
	.byte	3,3,1,5,48,9
	.half	.L582-.L581
	.byte	1,5,46,9
	.half	.L583-.L582
	.byte	1,5,55,9
	.half	.L584-.L583
	.byte	1,5,26,1,5,5,9
	.half	.L78-.L584
	.byte	3,3,1,5,43,7,9
	.half	.L585-.L78
	.byte	3,3,1,5,63,9
	.half	.L586-.L585
	.byte	1,5,55,9
	.half	.L587-.L586
	.byte	1,5,26,1,5,1,9
	.half	.L79-.L587
	.byte	3,2,1,7,9
	.half	.L171-.L79
	.byte	0,1,1
.L574:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_ranges'
.L170:
	.word	-1,.L123,0,.L171-.L123,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_info'
.L172:
	.word	652
	.half	3
	.word	.L173
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L175,.L174
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_setT13Frequency',0,1,170,3,9
	.word	.L280
	.byte	1,1,1
	.word	.L125,.L343,.L124
	.byte	4
	.byte	'ccu6',0,1,170,3,43
	.word	.L233,.L344
	.byte	4
	.byte	'frequency',0,1,170,3,57
	.word	.L280,.L345
	.byte	4
	.byte	'resolution',0,1,170,3,83
	.word	.L267,.L346
	.byte	5
	.word	.L125,.L343
	.byte	6
	.byte	'prescaler',0,1,172,3,20
	.word	.L241,.L347
	.byte	6
	.byte	'freqT1x',0,1,173,3,20
	.word	.L280,.L348
	.byte	6
	.byte	'periodT1x',0,1,173,3,33
	.word	.L280,.L349
	.byte	6
	.byte	'freqCC6',0,1,174,3,20
	.word	.L280,.L350
	.byte	6
	.byte	'period',0,1,175,3,20
	.word	.L267,.L351
	.byte	5
	.word	.L352,.L83
	.byte	7
	.word	.L353,.L354,.L355
	.byte	8
	.word	.L356,.L357
	.byte	8
	.word	.L358,.L359
	.byte	9
	.word	.L360,.L354,.L355
	.byte	0,7
	.word	.L301,.L355,.L361
	.byte	8
	.word	.L303,.L362
	.byte	8
	.word	.L305,.L363
	.byte	8
	.word	.L307,.L364
	.byte	10
	.word	.L309,.L355,.L361
	.byte	6
	.byte	'tctr4',0,2,169,11,20
	.word	.L310,.L365
	.byte	0,0,7
	.word	.L312,.L361,.L366
	.byte	8
	.word	.L314,.L367
	.byte	8
	.word	.L316,.L368
	.byte	8
	.word	.L318,.L369
	.byte	9
	.word	.L320,.L361,.L366
	.byte	0,7
	.word	.L321,.L370,.L84
	.byte	8
	.word	.L323,.L371
	.byte	8
	.word	.L325,.L372
	.byte	9
	.word	.L327,.L370,.L84
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_abbrev'
.L173:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_line'
.L174:
	.word	.L589-.L588
.L588:
	.half	3
	.word	.L591-.L590
.L590:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0,0
.L591:
	.byte	5,9,7,0,5,2
	.word	.L125
	.byte	3,169,3,1,5,64,9
	.half	.L459-.L125
	.byte	3,4,1,5,20,9
	.half	.L458-.L459
	.byte	3,3,1,5,5,9
	.half	.L460-.L458
	.byte	3,11,1,5,51,7,9
	.half	.L352-.L460
	.byte	3,6,1,5,39,9
	.half	.L592-.L352
	.byte	1,5,22,9
	.half	.L461-.L592
	.byte	1,5,37,9
	.half	.L354-.L461
	.byte	3,2,1,4,2,5,25,3,128,11,1,5,20,9
	.half	.L355-.L354
	.byte	3,230,124,1,9
	.half	.L463-.L355
	.byte	3,1,1,9
	.half	.L593-.L463
	.byte	3,1,1,3,1,1,5,33,9
	.half	.L361-.L593
	.byte	3,183,2,1,5,36,9
	.half	.L464-.L361
	.byte	1,4,1,5,58,9
	.half	.L594-.L464
	.byte	3,228,117,1,4,2,5,66,9
	.half	.L595-.L594
	.byte	3,156,10,1,5,45,9
	.half	.L596-.L595
	.byte	1,5,19,1,4,1,5,9,9
	.half	.L366-.L596
	.byte	3,233,117,1,4,2,5,32,7,9
	.half	.L370-.L366
	.byte	3,147,7,1,5,35,9
	.half	.L597-.L370
	.byte	1,5,19,1,4,1,5,31,9
	.half	.L84-.L597
	.byte	3,242,120,1,5,29,9
	.half	.L598-.L84
	.byte	1,5,1,3,10,1,5,19,7,9
	.half	.L83-.L598
	.byte	3,124,1,5,1,3,4,1,7,9
	.half	.L176-.L83
	.byte	0,1,1
.L589:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_ranges'
.L175:
	.word	-1,.L125,0,.L176-.L125,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_info'
.L177:
	.word	313
	.half	3
	.word	.L178
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L180,.L179
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_setT13InputSignal',0,1,223,3,6,1,1,1
	.word	.L127,.L373,.L126
	.byte	4
	.byte	'ccu6',0,1,223,3,42
	.word	.L233,.L374
	.byte	4
	.byte	'extInput',0,1,223,3,66
	.word	.L375,.L376
	.byte	5
	.word	.L127,.L373
	.byte	6
	.byte	'__func__',0,1,228,3,5
	.word	.L377
	.byte	5,3
	.word	_999002___func__
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_abbrev'
.L178:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_line'
.L179:
	.word	.L600-.L599
.L599:
	.half	3
	.word	.L602-.L601
.L601:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L602:
	.byte	5,38,7,0,5,2
	.word	.L127
	.byte	3,224,3,1,5,19,9
	.half	.L603-.L127
	.byte	1,5,47,9
	.half	.L604-.L603
	.byte	1,5,6,3,126,1,5,28,9
	.half	.L465-.L604
	.byte	3,2,1,5,19,9
	.half	.L605-.L465
	.byte	3,1,1,5,38,9
	.half	.L606-.L605
	.byte	1,5,28,9
	.half	.L607-.L606
	.byte	1,5,5,9
	.half	.L608-.L607
	.byte	3,2,1,5,1,9
	.half	.L87-.L608
	.byte	3,1,1,7,9
	.half	.L181-.L87
	.byte	0,1,1
.L600:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_ranges'
.L180:
	.word	-1,.L127,0,.L181-.L127,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_info'
.L182:
	.word	317
	.half	3
	.word	.L183
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L185,.L184
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_getCaptureRegisterValue',0,1,128,1,8
	.word	.L267
	.byte	1,1,1
	.word	.L97,.L378,.L96
	.byte	4
	.byte	'ccu6',0,1,128,1,50
	.word	.L233,.L379
	.byte	4
	.byte	'channel',0,1,128,1,75
	.word	.L271,.L380
	.byte	5
	.word	.L97,.L378
	.byte	6
	.byte	'value',0,1,130,1,12
	.word	.L267,.L381
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_abbrev'
.L183:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_line'
.L184:
	.word	.L610-.L609
.L609:
	.half	3
	.word	.L612-.L611
.L611:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L612:
	.byte	5,18,7,0,5,2
	.word	.L97
	.byte	3,129,1,1,5,10,9
	.half	.L429-.L97
	.byte	3,4,1,7,9
	.half	.L613-.L429
	.byte	3,5,1,7,9
	.half	.L614-.L613
	.byte	3,5,1,5,1,7,9
	.half	.L615-.L614
	.byte	3,8,1,5,28,7,9
	.half	.L13-.L615
	.byte	3,112,1,5,1,9
	.half	.L616-.L13
	.byte	3,16,1,5,28,7,9
	.half	.L14-.L616
	.byte	3,117,1,5,1,9
	.half	.L617-.L14
	.byte	3,11,1,5,28,7,9
	.half	.L15-.L617
	.byte	3,122,1,5,1,9
	.half	.L618-.L15
	.byte	3,6,1,7,9
	.half	.L186-.L618
	.byte	0,1,1
.L610:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_ranges'
.L185:
	.word	-1,.L97,0,.L186-.L97,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_info'
.L187:
	.word	323
	.half	3
	.word	.L188
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L190,.L189
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_getCaptureShadowRegisterValue',0,1,155,1,8
	.word	.L267
	.byte	1,1,1
	.word	.L99,.L382,.L98
	.byte	4
	.byte	'ccu6',0,1,155,1,56
	.word	.L233,.L383
	.byte	4
	.byte	'channel',0,1,155,1,81
	.word	.L271,.L384
	.byte	5
	.word	.L99,.L382
	.byte	6
	.byte	'value',0,1,157,1,12
	.word	.L267,.L385
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_abbrev'
.L188:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_line'
.L189:
	.word	.L620-.L619
.L619:
	.half	3
	.word	.L622-.L621
.L621:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L622:
	.byte	5,18,7,0,5,2
	.word	.L99
	.byte	3,156,1,1,5,10,9
	.half	.L430-.L99
	.byte	3,4,1,7,9
	.half	.L623-.L430
	.byte	3,5,1,7,9
	.half	.L624-.L623
	.byte	3,5,1,5,1,7,9
	.half	.L625-.L624
	.byte	3,8,1,5,29,7,9
	.half	.L20-.L625
	.byte	3,112,1,5,1,9
	.half	.L626-.L20
	.byte	3,16,1,5,29,7,9
	.half	.L21-.L626
	.byte	3,117,1,5,1,9
	.half	.L627-.L21
	.byte	3,11,1,5,29,7,9
	.half	.L22-.L627
	.byte	3,122,1,5,1,9
	.half	.L628-.L22
	.byte	3,6,1,7,9
	.half	.L191-.L628
	.byte	0,1,1
.L620:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_ranges'
.L190:
	.word	-1,.L99,0,.L191-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_info'
.L192:
	.word	301
	.half	3
	.word	.L193
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L195,.L194
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_getIndex',0,1,182,1,8
	.word	.L386
	.byte	1,1,1
	.word	.L101,.L387,.L100
	.byte	4
	.byte	'ccu6',0,1,182,1,35
	.word	.L233,.L388
	.byte	5
	.word	.L101,.L387
	.byte	6
	.byte	'result',0,1,184,1,12
	.word	.L386,.L389
	.byte	6
	.byte	'index',0,1,184,1,25
	.word	.L386,.L390
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_abbrev'
.L193:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_line'
.L194:
	.word	.L630-.L629
.L629:
	.half	3
	.word	.L632-.L631
.L631:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L632:
	.byte	5,19,7,0,5,2
	.word	.L101
	.byte	3,183,1,1,5,13,3,4,1,5,48,9
	.half	.L633-.L101
	.byte	3,126,1,5,36,9
	.half	.L27-.L633
	.byte	3,2,1,5,9,9
	.half	.L634-.L27
	.byte	1,5,45,7,9
	.half	.L635-.L634
	.byte	3,2,1,5,1,9
	.half	.L636-.L635
	.byte	3,6,1,5,55,7,9
	.half	.L28-.L636
	.byte	3,118,1,5,48,1,5,1,7,9
	.half	.L637-.L28
	.byte	3,10,1,7,9
	.half	.L196-.L637
	.byte	0,1,1
.L630:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_ranges'
.L195:
	.word	-1,.L101,0,.L196-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_info'
.L197:
	.word	318
	.half	3
	.word	.L198
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L200,.L199
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_getSrcAddress',0,1,199,1,24
	.word	.L391
	.byte	1,1,1
	.word	.L103,.L392,.L102
	.byte	4
	.byte	'ccu6',0,1,199,1,56
	.word	.L233,.L393
	.byte	4
	.byte	'serviceRequest',0,1,199,1,85
	.word	.L257,.L394
	.byte	5
	.word	.L103,.L392
	.byte	6
	.byte	'moduleIdx',0,1,201,1,28
	.word	.L386,.L395
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_abbrev'
.L198:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_line'
.L199:
	.word	.L639-.L638
.L638:
	.half	3
	.word	.L641-.L640
.L640:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L641:
	.byte	5,24,7,0,5,2
	.word	.L103
	.byte	3,198,1,1,5,57,3,2,1,5,29,9
	.half	.L432-.L103
	.byte	3,2,1,5,35,9
	.half	.L642-.L432
	.byte	1,5,34,9
	.half	.L433-.L642
	.byte	1,5,45,9
	.half	.L643-.L433
	.byte	1,5,18,9
	.half	.L644-.L643
	.byte	3,1,1,5,1,9
	.half	.L645-.L644
	.byte	3,1,1,7,9
	.half	.L201-.L645
	.byte	0,1,1
.L639:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_ranges'
.L200:
	.word	-1,.L103,0,.L201-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_info'
.L202:
	.word	302
	.half	3
	.word	.L203
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L205,.L204
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_readTimer',0,1,208,1,8
	.word	.L267
	.byte	1,1,1
	.word	.L105,.L396,.L104
	.byte	4
	.byte	'ccu6',0,1,208,1,36
	.word	.L233,.L397
	.byte	4
	.byte	'timer',0,1,208,1,58
	.word	.L398,.L399
	.byte	5
	.word	.L105,.L396
	.byte	6
	.byte	'result',0,1,210,1,12
	.word	.L267,.L400
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_abbrev'
.L203:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_line'
.L204:
	.word	.L647-.L646
.L646:
	.half	3
	.word	.L649-.L648
.L648:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L649:
	.byte	5,5,7,0,5,2
	.word	.L105
	.byte	3,211,1,1,5,27,7,9
	.half	.L650-.L105
	.byte	3,2,1,5,1,9
	.half	.L434-.L650
	.byte	3,8,1,5,27,7,9
	.half	.L32-.L434
	.byte	3,124,1,5,1,9
	.half	.L435-.L32
	.byte	3,4,1,7,9
	.half	.L206-.L435
	.byte	0,1,1
.L647:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_ranges'
.L205:
	.word	-1,.L105,0,.L206-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_info'
.L207:
	.word	330
	.half	3
	.word	.L208
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L210,.L209
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_disableModulationOutput',0,1,53,6,1,1,1
	.word	.L91,.L401,.L90
	.byte	4
	.byte	'ccu6',0,1,53,48
	.word	.L233,.L402
	.byte	4
	.byte	'timer',0,1,53,70
	.word	.L398,.L403
	.byte	4
	.byte	'channelOut',0,1,53,96
	.word	.L261,.L404
	.byte	5
	.word	.L91,.L401
	.byte	6
	.byte	'shift',0,1,55,12
	.word	.L267,.L405
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_abbrev'
.L208:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_line'
.L209:
	.word	.L652-.L651
.L651:
	.half	3
	.word	.L654-.L653
.L653:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L654:
	.byte	5,5,7,0,5,2
	.word	.L91
	.byte	3,56,1,5,9,7,9
	.half	.L655-.L91
	.byte	3,2,1,7,9
	.half	.L656-.L655
	.byte	3,6,1,9
	.half	.L2-.L656
	.byte	3,5,1,5,41,7,9
	.half	.L657-.L2
	.byte	3,2,1,5,31,9
	.half	.L4-.L657
	.byte	3,1,1,5,42,3,1,1,5,33,9
	.half	.L658-.L4
	.byte	3,127,1,5,47,9
	.half	.L659-.L658
	.byte	3,1,1,5,45,9
	.half	.L660-.L659
	.byte	1,5,28,1,5,1,9
	.half	.L3-.L660
	.byte	3,7,1,5,27,7,9
	.half	.L5-.L3
	.byte	3,125,1,5,35,9
	.half	.L661-.L5
	.byte	1,5,1,9
	.half	.L662-.L661
	.byte	3,3,1,7,9
	.half	.L211-.L662
	.byte	0,1,1
.L652:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_ranges'
.L210:
	.word	-1,.L91,0,.L211-.L91,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_info'
.L212:
	.word	329
	.half	3
	.word	.L213
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L215,.L214
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_enableModulationOutput',0,1,84,6,1,1,1
	.word	.L93,.L406,.L92
	.byte	4
	.byte	'ccu6',0,1,84,47
	.word	.L233,.L407
	.byte	4
	.byte	'timer',0,1,84,69
	.word	.L398,.L408
	.byte	4
	.byte	'channelOut',0,1,84,95
	.word	.L261,.L409
	.byte	5
	.word	.L93,.L406
	.byte	6
	.byte	'shift',0,1,86,12
	.word	.L267,.L410
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_abbrev'
.L213:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_line'
.L214:
	.word	.L664-.L663
.L663:
	.half	3
	.word	.L666-.L665
.L665:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L666:
	.byte	5,5,7,0,5,2
	.word	.L93
	.byte	3,215,0,1,5,9,7,9
	.half	.L667-.L93
	.byte	3,2,1,7,9
	.half	.L668-.L667
	.byte	3,6,1,9
	.half	.L7-.L668
	.byte	3,5,1,5,41,7,9
	.half	.L669-.L7
	.byte	3,2,1,5,31,9
	.half	.L9-.L669
	.byte	3,1,1,5,42,3,1,1,5,33,9
	.half	.L670-.L9
	.byte	3,127,1,5,45,9
	.half	.L671-.L670
	.byte	3,1,1,5,28,1,5,1,9
	.half	.L8-.L671
	.byte	3,7,1,5,27,7,9
	.half	.L10-.L8
	.byte	3,125,1,5,35,9
	.half	.L672-.L10
	.byte	1,5,1,9
	.half	.L673-.L672
	.byte	3,3,1,7,9
	.half	.L216-.L673
	.byte	0,1,1
.L664:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_ranges'
.L215:
	.word	-1,.L93,0,.L216-.L93,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_info'
.L217:
	.word	315
	.half	3
	.word	.L218
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L220,.L219
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_enableModule',0,1,115,6,1,1,1
	.word	.L95,.L411,.L94
	.byte	4
	.byte	'ccu6',0,1,115,37
	.word	.L233,.L412
	.byte	5
	.word	.L95,.L411
	.byte	6
	.byte	'passwd',0,1,117,12
	.word	.L241,.L413
	.byte	7
	.word	.L414,.L12,.L415
	.byte	8
	.word	.L416,.L417
	.byte	9
	.word	.L418,.L12,.L415
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_abbrev'
.L218:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_line'
.L219:
	.word	.L675-.L674
.L674:
	.half	3
	.word	.L677-.L676
.L676:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0,0
.L677:
	.byte	5,6,7,0,5,2
	.word	.L95
	.byte	3,242,0,1,5,53,9
	.half	.L426-.L95
	.byte	3,2,1,5,19,9
	.half	.L425-.L426
	.byte	1,5,31,9
	.half	.L428-.L425
	.byte	3,1,1,5,19,9
	.half	.L427-.L428
	.byte	3,1,1,5,17,1,5,29,9
	.half	.L678-.L427
	.byte	3,1,1,4,2,5,23,9
	.half	.L12-.L678
	.byte	3,160,12,1,4,1,5,50,9
	.half	.L415-.L12
	.byte	3,227,115,1,5,1,7,9
	.half	.L679-.L415
	.byte	3,2,1,7,9
	.half	.L221-.L679
	.byte	0,1,1
.L675:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_ranges'
.L220:
	.word	-1,.L95,0,.L221-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_info'
.L222:
	.word	281
	.half	3
	.word	.L223
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L225,.L224
	.byte	2
	.word	.L128
	.byte	3
	.byte	'IfxCcu6_resetModule',0,1,225,1,6,1,1,1
	.word	.L107,.L419,.L106
	.byte	4
	.byte	'ccu6',0,1,225,1,36
	.word	.L233,.L420
	.byte	5
	.word	.L107,.L419
	.byte	6
	.byte	'passwd',0,1,227,1,12
	.word	.L241,.L421
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_abbrev'
.L223:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_line'
.L224:
	.word	.L681-.L680
.L680:
	.half	3
	.word	.L683-.L682
.L682:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L683:
	.byte	5,6,7,0,5,2
	.word	.L107
	.byte	3,224,1,1,5,53,9
	.half	.L437-.L107
	.byte	3,2,1,5,19,9
	.half	.L436-.L437
	.byte	1,5,31,9
	.half	.L439-.L436
	.byte	3,2,1,5,18,9
	.half	.L438-.L439
	.byte	3,1,1,5,29,9
	.half	.L684-.L438
	.byte	3,2,1,5,23,9
	.half	.L440-.L684
	.byte	3,126,1,5,18,9
	.half	.L685-.L440
	.byte	3,1,1,5,23,9
	.half	.L686-.L685
	.byte	1,5,29,9
	.half	.L687-.L686
	.byte	3,1,1,5,30,9
	.half	.L35-.L687
	.byte	3,2,1,5,38,9
	.half	.L688-.L35
	.byte	1,5,31,7,9
	.half	.L689-.L688
	.byte	3,4,1,5,29,9
	.half	.L690-.L689
	.byte	3,2,1,5,20,3,127,1,5,25,9
	.half	.L441-.L690
	.byte	1,5,29,9
	.half	.L691-.L441
	.byte	3,1,1,5,1,7,9
	.half	.L226-.L691
	.byte	3,1,0,1,1
.L681:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_ranges'
.L225:
	.word	-1,.L107,0,.L226-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_8')
	.sect	'.debug_info'
.L227:
	.word	221
	.half	3
	.word	.L228
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L230,.L229
	.byte	2
	.word	.L128
	.byte	3
	.byte	'.cocofun_8',0,1,210,2,9,1
	.word	.L119,.L231,.L118
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_8')
	.sect	'.debug_abbrev'
.L228:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_8')
	.sect	'.debug_line'
.L229:
	.word	.L693-.L692
.L692:
	.half	3
	.word	.L695-.L694
.L694:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L695:
	.byte	5,20,7,0,5,2
	.word	.L119
	.byte	3,216,2,1,5,39,1,5,32,9
	.half	.L67-.L119
	.byte	3,2,1,5,35,9
	.half	.L696-.L67
	.byte	1,5,29,9
	.half	.L697-.L696
	.byte	1,9
	.half	.L449-.L697
	.byte	3,1,1,5,27,3,2,1,5,24,9
	.half	.L450-.L449
	.byte	1,5,13,9
	.half	.L698-.L450
	.byte	1,5,52,7,9
	.half	.L451-.L698
	.byte	1,5,50,9
	.half	.L452-.L451
	.byte	1,9
	.half	.L68-.L452
	.byte	3,123,1,5,39,1,5,21,7,9
	.half	.L69-.L68
	.byte	3,11,1,9
	.half	.L231-.L69
	.byte	0,1,1,5,20,0,5,2
	.word	.L119
	.byte	3,176,3,1,5,39,1,5,32,9
	.half	.L67-.L119
	.byte	3,2,1,5,35,9
	.half	.L696-.L67
	.byte	1,5,29,9
	.half	.L697-.L696
	.byte	1,9
	.half	.L449-.L697
	.byte	3,1,1,5,27,3,2,1,5,24,9
	.half	.L450-.L449
	.byte	1,5,13,9
	.half	.L698-.L450
	.byte	1,5,52,7,9
	.half	.L451-.L698
	.byte	1,5,50,9
	.half	.L452-.L451
	.byte	1,9
	.half	.L68-.L452
	.byte	3,123,1,5,39,1,5,21,7,9
	.half	.L69-.L68
	.byte	3,11,1,3,168,127,1,7,9
	.half	.L231-.L69
	.byte	0,1,1
.L693:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_8')
	.sect	'.debug_ranges'
.L230:
	.word	-1,.L119,0,.L231-.L119,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_8')
	.sect	'.debug_loc'
.L118:
	.word	-1,.L119,0,.L231-.L119
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_loc'
.L88:
	.word	-1,.L89,0,.L232-.L89
	.half	2
	.byte	138,0
	.word	0,0
.L247:
	.word	0,0
.L234:
	.word	-1,.L89,0,.L232-.L89
	.half	1
	.byte	100
	.word	0,0
.L249:
	.word	0,0
.L240:
	.word	-1,.L89,.L244-.L89,.L423-.L89
	.half	1
	.byte	95
	.word	.L424-.L89,.L232-.L89
	.half	1
	.byte	95
	.word	0,0
.L236:
	.word	-1,.L89,0,.L232-.L89
	.half	1
	.byte	84
	.word	0,0
.L238:
	.word	-1,.L89,0,.L422-.L89
	.half	1
	.byte	85
	.word	0,0
.L242:
	.word	0,0
.L251:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_loc'
.L90:
	.word	-1,.L91,0,.L401-.L91
	.half	2
	.byte	138,0
	.word	0,0
.L402:
	.word	-1,.L91,0,.L401-.L91
	.half	1
	.byte	100
	.word	0,0
.L404:
	.word	-1,.L91,0,.L401-.L91
	.half	1
	.byte	85
	.word	0,0
.L405:
	.word	-1,.L91,0,.L401-.L91
	.half	1
	.byte	85
	.word	0,0
.L403:
	.word	-1,.L91,0,.L401-.L91
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L406-.L93
	.half	2
	.byte	138,0
	.word	0,0
.L407:
	.word	-1,.L93,0,.L406-.L93
	.half	1
	.byte	100
	.word	0,0
.L409:
	.word	-1,.L93,0,.L406-.L93
	.half	1
	.byte	85
	.word	0,0
.L410:
	.word	-1,.L93,0,.L406-.L93
	.half	1
	.byte	85
	.word	0,0
.L408:
	.word	-1,.L93,0,.L406-.L93
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L411-.L95
	.half	2
	.byte	138,0
	.word	0,0
.L412:
	.word	-1,.L95,0,.L425-.L95
	.half	1
	.byte	100
	.word	.L426-.L95,.L411-.L95
	.half	1
	.byte	111
	.word	0,0
.L417:
	.word	0,0
.L413:
	.word	-1,.L95,.L425-.L95,.L427-.L95
	.half	1
	.byte	82
	.word	.L428-.L95,.L12-.L95
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L378-.L97
	.half	2
	.byte	138,0
	.word	0,0
.L379:
	.word	-1,.L97,0,.L378-.L97
	.half	1
	.byte	100
	.word	0,0
.L380:
	.word	-1,.L97,0,.L378-.L97
	.half	1
	.byte	84
	.word	0,0
.L381:
	.word	-1,.L97,.L429-.L97,.L378-.L97
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L382-.L99
	.half	2
	.byte	138,0
	.word	0,0
.L383:
	.word	-1,.L99,0,.L382-.L99
	.half	1
	.byte	100
	.word	0,0
.L384:
	.word	-1,.L99,0,.L382-.L99
	.half	1
	.byte	84
	.word	0,0
.L385:
	.word	-1,.L99,.L430-.L99,.L382-.L99
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L387-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L388:
	.word	-1,.L101,0,.L387-.L101
	.half	1
	.byte	100
	.word	0,0
.L390:
	.word	0,0
.L389:
	.word	-1,.L101,.L431-.L101,.L387-.L101
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L392-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L393:
	.word	-1,.L103,0,.L432-.L103
	.half	1
	.byte	100
	.word	0,0
.L395:
	.word	-1,.L103,.L432-.L103,.L433-.L103
	.half	1
	.byte	82
	.word	0,0
.L394:
	.word	-1,.L103,0,.L432-.L103
	.half	1
	.byte	84
	.word	.L432-.L103,.L392-.L103
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L396-.L105
	.half	2
	.byte	138,0
	.word	0,0
.L397:
	.word	-1,.L105,0,.L396-.L105
	.half	1
	.byte	100
	.word	0,0
.L400:
	.word	-1,.L105,.L434-.L105,.L32-.L105
	.half	1
	.byte	82
	.word	.L435-.L105,.L396-.L105
	.half	1
	.byte	82
	.word	0,0
.L399:
	.word	-1,.L105,0,.L396-.L105
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L419-.L107
	.half	2
	.byte	138,0
	.word	0,0
.L420:
	.word	-1,.L107,0,.L436-.L107
	.half	1
	.byte	100
	.word	.L437-.L107,.L419-.L107
	.half	1
	.byte	111
	.word	0,0
.L421:
	.word	-1,.L107,.L436-.L107,.L438-.L107
	.half	1
	.byte	82
	.word	.L439-.L107,.L419-.L107
	.half	1
	.byte	88
	.word	.L440-.L107,.L35-.L107
	.half	1
	.byte	84
	.word	.L441-.L107,.L419-.L107
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L253-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L254:
	.word	-1,.L109,0,.L253-.L109
	.half	1
	.byte	100
	.word	0,0
.L258:
	.word	-1,.L109,0,.L253-.L109
	.half	1
	.byte	85
	.word	0,0
.L256:
	.word	-1,.L109,0,.L253-.L109
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L259-.L111
	.half	2
	.byte	138,0
	.word	0,0
.L260:
	.word	-1,.L111,0,.L259-.L111
	.half	1
	.byte	100
	.word	0,0
.L262:
	.word	-1,.L111,0,.L259-.L111
	.half	1
	.byte	84
	.word	0,0
.L268:
	.word	0,0
.L264:
	.word	-1,.L111,0,.L442-.L111
	.half	1
	.byte	85
	.word	.L56-.L111,.L259-.L111
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L269-.L113
	.half	2
	.byte	138,0
	.word	0,0
.L270:
	.word	-1,.L113,0,.L269-.L113
	.half	1
	.byte	100
	.word	0,0
.L272:
	.word	-1,.L113,0,.L269-.L113
	.half	1
	.byte	84
	.word	0,0
.L275:
	.word	-1,.L113,.L445-.L113,.L446-.L113
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L274:
	.word	-1,.L113,0,.L269-.L113
	.half	1
	.byte	85
	.word	.L443-.L113,.L444-.L113
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L115,0,.L276-.L115
	.half	2
	.byte	138,0
	.word	0,0
.L277:
	.word	-1,.L115,0,.L276-.L115
	.half	1
	.byte	100
	.word	0,0
.L278:
	.word	-1,.L115,0,.L276-.L115
	.half	1
	.byte	84
	.word	0,0
.L279:
	.word	-1,.L115,0,.L276-.L115
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_loc'
.L116:
	.word	-1,.L117,0,.L281-.L117
	.half	2
	.byte	138,0
	.word	0,0
.L282:
	.word	-1,.L117,0,.L447-.L117
	.half	1
	.byte	100
	.word	.L448-.L117,.L447-.L117
	.half	1
	.byte	111
	.word	.L119-.L117,.L231-.L117
	.half	1
	.byte	111
	.word	.L293-.L117,.L281-.L117
	.half	1
	.byte	111
	.word	0,0
.L324:
	.word	0,0
.L304:
	.word	0,0
.L315:
	.word	0,0
.L331:
	.word	0,0
.L297:
	.word	0,0
.L286:
	.word	-1,.L117,0,.L447-.L117
	.half	1
	.byte	86
	.word	.L448-.L117,.L447-.L117
	.half	1
	.byte	90
	.word	.L119-.L117,.L231-.L117
	.half	1
	.byte	90
	.word	.L293-.L117,.L281-.L117
	.half	1
	.byte	90
	.word	0,0
.L291:
	.word	-1,.L117,.L448-.L117,.L447-.L117
	.half	1
	.byte	82
	.word	.L119-.L117,.L231-.L117
	.half	1
	.byte	82
	.word	.L293-.L117,.L281-.L117
	.half	1
	.byte	82
	.word	0,0
.L289:
	.word	-1,.L117,.L449-.L117,.L231-.L117
	.half	1
	.byte	84
	.word	.L293-.L117,.L281-.L117
	.half	1
	.byte	84
	.word	0,0
.L283:
	.word	-1,.L117,0,.L447-.L117
	.half	1
	.byte	84
	.word	.L449-.L117,.L450-.L117
	.half	1
	.byte	88
	.word	0,0
.L319:
	.word	0,0
.L333:
	.word	0,0
.L292:
	.word	-1,.L117,.L453-.L117,.L70-.L117
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L290:
	.word	-1,.L117,.L450-.L117,.L231-.L117
	.half	5
	.byte	144,32,157,32,0
	.word	.L293-.L117,.L453-.L117
	.half	5
	.byte	144,32,157,32,0
	.word	.L70-.L117,.L281-.L117
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L288:
	.word	-1,.L117,.L67-.L117,.L231-.L117
	.half	1
	.byte	83
	.word	.L293-.L117,.L281-.L117
	.half	1
	.byte	83
	.word	0,0
.L284:
	.word	-1,.L117,0,.L447-.L117
	.half	1
	.byte	85
	.word	.L451-.L117,.L452-.L117
	.half	1
	.byte	89
	.word	0,0
.L306:
	.word	0,0
.L308:
	.word	0,0
.L311:
	.word	-1,.L117,.L454-.L117,.L455-.L117
	.half	1
	.byte	95
	.word	0,0
.L326:
	.word	0,0
.L317:
	.word	0,0
.L299:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_loc'
.L120:
	.word	-1,.L121,0,.L456-.L121
	.half	2
	.byte	138,0
	.word	.L456-.L121,.L76-.L121
	.half	2
	.byte	138,24
	.word	.L76-.L121,.L76-.L121
	.half	2
	.byte	138,0
	.word	.L76-.L121,.L335-.L121
	.half	2
	.byte	138,24
	.word	.L335-.L121,.L335-.L121
	.half	2
	.byte	138,0
	.word	0,0
.L336:
	.word	-1,.L121,0,.L457-.L121
	.half	1
	.byte	100
	.word	.L76-.L121,.L335-.L121
	.half	1
	.byte	100
	.word	0,0
.L338:
	.word	-1,.L121,0,.L335-.L121
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_loc'
.L122:
	.word	-1,.L123,0,.L340-.L123
	.half	2
	.byte	138,0
	.word	0,0
.L341:
	.word	-1,.L123,0,.L340-.L123
	.half	1
	.byte	100
	.word	0,0
.L342:
	.word	-1,.L123,0,.L340-.L123
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_loc'
.L124:
	.word	-1,.L125,0,.L343-.L125
	.half	2
	.byte	138,0
	.word	0,0
.L344:
	.word	-1,.L125,0,.L458-.L125
	.half	1
	.byte	100
	.word	.L459-.L125,.L458-.L125
	.half	1
	.byte	111
	.word	.L119-.L125,.L231-.L125
	.half	1
	.byte	111
	.word	.L460-.L125,.L343-.L125
	.half	1
	.byte	111
	.word	0,0
.L371:
	.word	0,0
.L362:
	.word	0,0
.L367:
	.word	0,0
.L357:
	.word	0,0
.L350:
	.word	-1,.L125,.L459-.L125,.L458-.L125
	.half	1
	.byte	82
	.word	.L119-.L125,.L231-.L125
	.half	1
	.byte	82
	.word	.L460-.L125,.L343-.L125
	.half	1
	.byte	82
	.word	0,0
.L348:
	.word	-1,.L125,.L449-.L125,.L231-.L125
	.half	1
	.byte	84
	.word	.L460-.L125,.L343-.L125
	.half	1
	.byte	84
	.word	0,0
.L345:
	.word	-1,.L125,0,.L458-.L125
	.half	1
	.byte	84
	.word	.L449-.L125,.L449-.L125
	.half	1
	.byte	88
	.word	0,0
.L369:
	.word	0,0
.L351:
	.word	-1,.L125,.L462-.L125,.L83-.L125
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L349:
	.word	-1,.L125,.L449-.L125,.L231-.L125
	.half	5
	.byte	144,32,157,32,0
	.word	.L460-.L125,.L461-.L125
	.half	5
	.byte	144,32,157,32,0
	.word	.L83-.L125,.L343-.L125
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L347:
	.word	-1,.L125,.L119-.L125,.L231-.L125
	.half	1
	.byte	83
	.word	.L460-.L125,.L343-.L125
	.half	1
	.byte	83
	.word	0,0
.L346:
	.word	-1,.L125,0,.L458-.L125
	.half	1
	.byte	85
	.word	.L451-.L125,.L452-.L125
	.half	1
	.byte	89
	.word	0,0
.L363:
	.word	0,0
.L364:
	.word	0,0
.L365:
	.word	-1,.L125,.L463-.L125,.L464-.L125
	.half	1
	.byte	95
	.word	0,0
.L372:
	.word	0,0
.L368:
	.word	0,0
.L359:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_loc'
.L126:
	.word	-1,.L127,0,.L465-.L127
	.half	2
	.byte	138,0
	.word	.L465-.L127,.L87-.L127
	.half	2
	.byte	138,24
	.word	.L87-.L127,.L87-.L127
	.half	2
	.byte	138,0
	.word	.L87-.L127,.L373-.L127
	.half	2
	.byte	138,24
	.word	.L373-.L127,.L373-.L127
	.half	2
	.byte	138,0
	.word	0,0
.L374:
	.word	-1,.L127,0,.L466-.L127
	.half	1
	.byte	100
	.word	.L87-.L127,.L373-.L127
	.half	1
	.byte	100
	.word	0,0
.L376:
	.word	-1,.L127,0,.L373-.L127
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L699:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_frame'
	.word	24
	.word	.L699,.L89,.L232-.L89
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_frame'
	.word	24
	.word	.L699,.L91,.L401-.L91
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_frame'
	.word	24
	.word	.L699,.L93,.L406-.L93
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L699,.L95,.L411-.L95
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L699,.L97,.L378-.L97
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L699,.L99,.L382-.L99
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_frame'
	.word	20
	.word	.L699,.L101,.L387-.L101
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_frame'
	.word	12
	.word	.L699,.L103,.L392-.L103
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_frame'
	.word	24
	.word	.L699,.L105,.L396-.L105
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L699,.L107,.L419-.L107
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_frame'
	.word	24
	.word	.L699,.L109,.L253-.L109
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_frame'
	.word	24
	.word	.L699,.L111,.L259-.L111
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_frame'
	.word	24
	.word	.L699,.L113,.L269-.L113
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L699,.L115,.L276-.L115
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L699,.L117,.L281-.L117
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_frame'
	.word	52
	.word	.L699,.L121,.L335-.L121
	.byte	4
	.word	(.L456-.L121)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L76-.L456)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L335-.L76)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_frame'
	.word	24
	.word	.L699,.L123,.L340-.L123
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L699,.L125,.L343-.L125
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_frame'
	.word	52
	.word	.L699,.L127,.L373-.L127
	.byte	4
	.word	(.L465-.L127)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L87-.L465)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L373-.L87)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L700:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_8')
	.sect	'.debug_frame'
	.word	24
	.word	.L700,.L119,.L231-.L119
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
