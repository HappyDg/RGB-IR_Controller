	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc24472a --dep-file=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\.IfxSent_Sent.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -DNDEBUG -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --no-warnings=542 --make-target=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.src ..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c"
	.compiler_name		"ctc"
	;source	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c'

	
$TC16X
	.sdecl	'.zrodata.IfxSent..6.cnt',data,rom
	.sect	'.zrodata.IfxSent..6.cnt'
	.align	2
.6.cnt:	.type	object
	.size	.6.cnt,4
	.word	-268205232
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_deInitModule',code,cluster('IfxSent_Sent_deInitModule')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_deInitModule'
	.align	2
	
	.global	IfxSent_Sent_deInitModule

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	     2   * \file IfxSent_Sent.c
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	     3   * \brief SENT SENT details
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	     4   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	     5   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	     7   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	     9   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    10   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    15   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    16   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    22   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    24   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    25  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    26  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    27  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    28  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    29  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    30  #include "IfxSent_Sent.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    31  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    32  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    33  /*-------------------------Function Implementations---------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    34  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    36  void IfxSent_Sent_deInitModule(IfxSent_Sent *driver)
; Function IfxSent_Sent_deInitModule
.L20:
IfxSent_Sent_deInitModule:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    37  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    38      Ifx_SENT *sentSFR = driver->sent;
	ld.a	a15,[a4]
.L265:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    39      uint16    passwd  = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L264:
	mov	d15,d2
.L267:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    40      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d15
	call	IfxScuWdt_clearCpuEndinit
.L266:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    41      IfxSent_resetModule(sentSFR);
	mov.aa	a4,a15
.L268:
	call	IfxSent_resetModule
.L269:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    42      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d15
.L270:
	j	IfxScuWdt_setCpuEndinit
.L86:
	
__IfxSent_Sent_deInitModule_function_end:
	.size	IfxSent_Sent_deInitModule,__IfxSent_Sent_deInitModule_function_end-IfxSent_Sent_deInitModule
.L45:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_initChannel',code,cluster('IfxSent_Sent_initChannel')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_initChannel'
	.align	2
	
	.global	IfxSent_Sent_initChannel

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    43  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    44  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    45  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    46  boolean IfxSent_Sent_initChannel(IfxSent_Sent_Channel *channel, const IfxSent_Sent_ChannelConfig *config)
; Function IfxSent_Sent_initChannel
.L22:
IfxSent_Sent_initChannel:	.type	func
	mov.aa	a15,a5
.L272:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    47  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    48      boolean      result = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    50      channel->driver = config->driver;
	ld.a	a2,[a15]
.L338:
	st.a	[a4],a2
.L128:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    51      Ifx_SENT    *sentSFR = config->driver->sent;
	ld.a	a2,[a15]
.L339:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    52      Ifx_SENT_CH *sentCh  = &sentSFR->CH[config->channelId];
	ld.b	d15,[a15]6
.L340:
	ld.a	a12,[a2]
.L275:
	sha	d15,#6
.L341:
	addsc.a	a2,a12,d15,#0
	lea	a13,[a2]256
.L274:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    53      channel->channel   = sentCh;
	st.a	[a4]4,a13
.L342:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    54      channel->channelId = config->channelId;
	ld.bu	d15,[a15]6
.L343:
	st.b	[a4]8,d15
.L344:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    55  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    56      IfxSent_disableChannel(sentSFR, config->channelId);
	fcall	.cocofun_7
.L133:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
	insert	d15,d15,#0,#0,#1
	st.b	[a2]264,d15
.L134:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    57      IfxSent_initializeChannelUnitTime(sentSFR, config->channelId, config->tUnit);
	mov.aa	a4,a12
.L271:
	ld.b	d4,[a15]6
.L345:
	ld.w	d5,[a15]48
	call	IfxSent_initializeChannelUnitTime
.L140:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    58  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    59      Ifx_SENT_CH_RCR tempRCR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    60      tempRCR.U       = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    61      tempRCR.B.IEP   = config->receiveControl.endPulseIgnored;
	mov	d15,#0
	ld.bu	d0,[a15]23
.L276:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    62      tempRCR.B.ACE   = config->receiveControl.alternateCrcSelected;
	insert	d15,d15,d0,#1,#1
	ld.bu	d0,[a15]18
.L346:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    63      tempRCR.B.SNI   = config->receiveControl.statusNibbleEnabled;
	insert	d15,d15,d0,#2,#1
	ld.bu	d0,[a15]21
.L347:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    64      tempRCR.B.SDP   = config->receiveControl.serialDataProcessingEnabled;
	insert	d15,d15,d0,#3,#1
	ld.bu	d0,[a15]19
.L348:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    65      tempRCR.B.SCDIS = config->receiveControl.serialDataDisabledCrcDisabled;
	insert	d15,d15,d0,#4,#1
	ld.bu	d0,[a15]20
.L349:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    66      tempRCR.B.CDIS  = config->receiveControl.crcModeDisabled;
	insert	d15,d15,d0,#5,#1
	ld.bu	d0,[a15]16
.L350:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    67      tempRCR.B.CFC   = config->receiveControl.frameCheckMode;
	insert	d15,d15,d0,#6,#1
	ld.bu	d0,[a15]26
.L351:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    68      tempRCR.B.FRL   = config->receiveControl.frameLength;
	insert	d15,d15,d0,#7,#1
	ld.bu	d0,[a15]25
.L352:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    69      tempRCR.B.CRZ   = config->receiveControl.crcMethodDisabled;
	insert	d15,d15,d0,#8,#8
	ld.bu	d0,[a15]17
.L353:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    70      tempRCR.B.ESF   = config->receiveControl.extendedSerialFrameMode;
	insert	d15,d15,d0,#16,#1
	ld.bu	d0,[a15]27
.L354:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    71      tempRCR.B.IDE   = config->receiveControl.driftErrorsDisabled;
	insert	d15,d15,d0,#17,#1
	ld.bu	d0,[a15]22
.L355:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    72      tempRCR.B.SUSEN = config->receiveControl.suspendTriggered;
	insert	d15,d15,d0,#18,#1
	ld.bu	d0,[a15]24
.L356:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    73      sentCh->RCR.U   = tempRCR.U;
	insert	d15,d15,d0,#19,#1
	st.w	[a13]8,d15
.L273:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    74  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    75      IfxSent_enableChannel(sentSFR, config->channelId);
	fcall	.cocofun_7
.L144:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   419  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   420  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   421  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   422  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   423  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   424      sent->CH[channelId].RCR.B.CEN = 1;
	or	d15,#1
	st.b	[a2]264,d15
.L145:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    77      Ifx_SENT_CH_VIEW tempVIEW;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    78      tempVIEW.U       = 0;
	mov	d15,#0
.L280:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    79      tempVIEW.B.RDNP0 = config->nibbleControl.nibblePointer0;
	ld.bu	d0,[a15]52
.L357:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    80      tempVIEW.B.RDNP1 = config->nibbleControl.nibblePointer1;
	insert	d15,d15,d0,#0,#3
	ld.bu	d0,[a15]53
.L358:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    81      tempVIEW.B.RDNP2 = config->nibbleControl.nibblePointer2;
	insert	d15,d15,d0,#4,#3
	ld.bu	d0,[a15]54
.L359:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    82      tempVIEW.B.RDNP3 = config->nibbleControl.nibblePointer3;
	insert	d15,d15,d0,#8,#3
	ld.bu	d0,[a15]55
.L360:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    83      tempVIEW.B.RDNP4 = config->nibbleControl.nibblePointer4;
	insert	d15,d15,d0,#12,#3
	ld.bu	d0,[a15]56
.L361:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    84      tempVIEW.B.RDNP5 = config->nibbleControl.nibblePointer5;
	insert	d15,d15,d0,#16,#3
	ld.bu	d0,[a15]57
.L362:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    85      tempVIEW.B.RDNP6 = config->nibbleControl.nibblePointer6;
	insert	d15,d15,d0,#20,#3
	ld.bu	d0,[a15]58
.L363:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    86      tempVIEW.B.RDNP7 = config->nibbleControl.nibblePointer7;
	insert	d15,d15,d0,#24,#3
	ld.bu	d0,[a15]59
.L364:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    87      sentCh->VIEW.U   = tempVIEW.U;
	insert	d15,d15,d0,#28,#3
	st.w	[a13]28,d15
.L153:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    88  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    89      Ifx_SENT_CH_IOCR tempIOCR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    90      tempIOCR.U       = 0;
	mov	d0,#0
.L282:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    91      tempIOCR.B.DEPTH = config->inputOutputControl.digitalGlitchFilterDepth;
	ld.bu	d15,[a15]14
.L281:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    92      tempIOCR.B.OIE   = config->inputOutputControl.outputPulsePolarityHigh;
	insert	d0,d0,d15,#4,#4
	ld.bu	d15,[a15]9
.L365:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    93      tempIOCR.B.IIE   = config->inputOutputControl.inputPulsePolarityHigh;
	insert	d0,d0,d15,#8,#1
	ld.bu	d15,[a15]8
.L366:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    94      tempIOCR.B.CEC   = config->inputOutputControl.edgeCounterCleared;
	insert	d0,d0,d15,#9,#1
	ld.bu	d15,[a15]10
.L367:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    95      tempIOCR.B.CREG  = config->inputOutputControl.glitchRisingCleared;
	insert	d0,d0,d15,#10,#1
	ld.bu	d15,[a15]12
.L368:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    96      tempIOCR.B.CFEG  = config->inputOutputControl.glitchFallingCleared;
	insert	d0,d0,d15,#14,#1
	ld.bu	d15,[a15]11
.L369:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    97      tempIOCR.B.ETS   = config->inputOutputControl.externalTrigger;
	insert	d0,d0,d15,#15,#1
	ld.bu	d15,[a15]15
.L370:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    98      tempIOCR.B.CTR   = config->inputOutputControl.triggerMonitorCleared;
	insert	d0,d0,d15,#16,#4
	ld.bu	d15,[a15]13
.L371:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	    99      sentCh->IOCR.U   = tempIOCR.U;
	insert	d0,d0,d15,#28,#1
	st.w	[a13]20,d0
.L156:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   100  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   101      Ifx_SENT_CH_INP tempINP;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   102      tempINP.U       = 0;
	mov	d15,#0
.L284:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   103      tempINP.B.RSI   = config->interuptNodeControl.receiveSuccessInterruptNode;
	ld.bu	d0,[a15]36
.L283:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   104      tempINP.B.RDI   = config->interuptNodeControl.receiveDataInterruptNode;
	insert	d15,d15,d0,#0,#4
	ld.bu	d0,[a15]37
.L372:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   105      tempINP.B.RBI   = config->interuptNodeControl.receiveBufferOverflowInterruptNode;
	insert	d15,d15,d0,#4,#4
	ld.bu	d0,[a15]38
.L373:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   106      tempINP.B.TDI   = config->interuptNodeControl.transferDataInterruptNode;
	insert	d15,d15,d0,#8,#4
	ld.bu	d0,[a15]39
.L374:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   107      tempINP.B.TBI   = config->interuptNodeControl.transferBufferUnderflowInterruptNode;
	insert	d15,d15,d0,#12,#4
	ld.bu	d0,[a15]40
.L375:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   108      tempINP.B.ERRI  = config->interuptNodeControl.errorInterruptNode;
	insert	d15,d15,d0,#16,#4
	ld.bu	d0,[a15]41
.L376:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   109      tempINP.B.SDI   = config->interuptNodeControl.serialDataReceiveInterruptNode;
	insert	d15,d15,d0,#20,#4
	ld.bu	d0,[a15]42
.L377:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   110      tempINP.B.WDI   = config->interuptNodeControl.watchdogErrorInterruptNode;
	insert	d15,d15,d0,#24,#4
	ld.bu	d0,[a15]43
.L378:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   111      sentCh->INP.U   = tempINP.U;
	insert	d15,d15,d0,#28,#4
	st.w	[a13]48,d15
.L379:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   113      sentCh->INTEN.U = config->enabledInterrupts.ALL;
	ld.w	d15,[a15]68
.L285:
	st.w	[a13]44,d15
.L380:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   114  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   115      if (config->receiveControl.frameLength > 8)
	ld.bu	d15,[a15]25
.L381:
	jlt.u	d15,#9,.L2
.L382:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   116      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   117          /* Clear RSI and enable only RDI interrupt */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   118          sentCh->INTEN.B.RSI = 0;
	ld.bu	d15,[a13]44
.L383:
	insert	d15,d15,#0,#0,#1
	st.b	[a13]44,d15
.L384:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   119          sentCh->INTEN.B.RDI = 1;
	ld.bu	d15,[a13]44
.L385:
	or	d15,#2
	st.b	[a13]44,d15
.L2:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   120      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   122      if (config->spcModeOn == TRUE)
	ld.bu	d15,[a15]64
.L386:
	jne	d15,#1,.L3
.L159:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   123      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   124          uint16 timeOut = IFXSENT_CFG_TIMEOUT_VALUE;
	mov.u	d15,#65535
.L286:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   125          uint8  error   = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   126  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   127          /* check if Transaction is in progress, before proceeding !!! */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   128          while ((sentCh->SCR.B.TRQ == 1) && (timeOut > 0))
	mov	d0,#0
	j	.L4
.L5:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   129          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   130              /* Wait for Transaction to be completed */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   131              timeOut--;
	add	d15,#-1
.L4:
	ld.bu	d1,[a13]25
.L387:
	jz.t	d1:7,.L6
.L388:
	jne	d15,#0,.L5
.L6:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   132          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   133  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   134          if (timeOut == 0U)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   135          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   136              error = 1U;
	cmovn	d0,d15,#1
.L389:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   137          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   138  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   139          if (error == 0U)
	jne	d0,#0,.L8
.L162:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   140          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   141              Ifx_SENT_CH_SCR tempSCR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   142              tempSCR.U      = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   143              tempSCR.B.PLEN = config->transmitControl.pulseLength;
	mov	d15,#0
	ld.bu	d0,[a15]28
.L287:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   144              tempSCR.B.TRIG = config->transmitControl.triggerSource;
	insert	d15,d15,d0,#0,#6
	ld.bu	d0,[a15]30
.L390:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   145              tempSCR.B.DEL  = config->transmitControl.pulseDelayLength;
	insert	d15,d15,d0,#6,#2
	ld.bu	d0,[a15]29
.L391:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   146              tempSCR.B.BASE = config->transmitControl.timeBase;
	insert	d15,d15,d0,#8,#6
	ld.bu	d0,[a15]31
.L392:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   147              sentCh->SCR.U  = tempSCR.U;
	insert	d15,d15,d0,#14,#1
	st.w	[a13]24,d15
.L393:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   149              if (config->transmitControl.spcMode == IfxSent_SpcMode_bidirectional)
	ld.bu	d15,[a15]32
.L288:
	jne	d15,#2,.L9
.L394:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   150              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   151                  /* Enable Buffer Underflow interrupt also */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   152                  sentCh->INTEN.B.TBI = 1U;
	ld.bu	d15,[a13]44
.L395:
	or	d15,#16
	st.b	[a13]44,d15
.L9:
.L8:
.L3:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   153              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   154          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   155      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   156  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   157      const IfxSent_Sent_Pins *pinsConfig = (const IfxSent_Sent_Pins *)config->pins;
	ld.a	a13,[a15]44
.L278:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   159      if (pinsConfig != NULL_PTR)
	jz.a	a13,.L10
.L167:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   160      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   161          const IfxSent_Sent_In *sentIn = pinsConfig->in;
	ld.a	a12,[a13]
.L279:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   162  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   163          if (sentIn != NULL_PTR)
	jz.a	a12,.L11
.L171:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   419  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   420  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   421  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   422  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   423  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   424      sent->CH[channelId].RCR.B.CEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   425  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   428  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   429  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   430      sent->CLC.B.DISR = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   431  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   434  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   435  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   436      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   437      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   438      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   439      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   440  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   442  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   443  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   444  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   445      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   446      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   447      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   448  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   449  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   451  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   452  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   453      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   454  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   455  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   456  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   457  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   459      IfxPort_setPinModeInput(sentIn->pin.port, sentIn->pin.pinIndex, inputMode);
	fcall	.cocofun_8
.L396:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   164          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   165              IfxSent_initSentPin(sentIn, pinsConfig->inMode);
	ld.bu	d15,[a13]4
.L397:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d15,#0,#8
	call	IfxPort_setPinMode
.L178:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   419  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   420  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   421  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   422  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   423  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   424      sent->CH[channelId].RCR.B.CEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   425  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   428  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   429  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   430      sent->CLC.B.DISR = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   431  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   434  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   435  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   436      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   437      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   438      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   439      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   440  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   442  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   443  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   444  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   445      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   446      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   447      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   448  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   449  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   451  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   452  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   453      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   454  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   455  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   456  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   457  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   459      IfxPort_setPinModeInput(sentIn->pin.port, sentIn->pin.pinIndex, inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   460      IfxSent_setAltiInput(sentIn->module, sentIn->channelId, (IfxSent_AlternateInput)sentIn->select);
	ld.a	a2,[a12]
.L398:
	ld.b	d15,[a12]4
.L399:
	ld.bu	d0,[a12]16
.L188:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   461  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   462  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   463  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   464  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   465  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   466      IfxPort_setPinModeOutput(spcOut->pin.port, spcOut->pin.pinIndex, spcOutMode, spcOut->select);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   467      IfxPort_setPinPadDriver(spcOut->pin.port, spcOut->pin.pinIndex, padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   468  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   470  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   471  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   472  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   473      sent->CH[channelId].IOCR.B.ALTI = alternateInput;
	sha	d15,#6
.L400:
	addsc.a	a2,a2,d15,#0
.L401:
	ld.bu	d15,[a2]276
.L402:
	insert	d15,d15,d0,#0,#2
	st.b	[a2]276,d15
.L11:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   166          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   167  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   168          const IfxSent_Spc_Out *spcOut = pinsConfig->out;
	ld.a	a12,[a13]8
.L289:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   169  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   170          if (spcOut != NULL_PTR)
	jz.a	a12,.L12
.L403:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   171          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   172              IfxSent_initSpcPin(spcOut, pinsConfig->outMode, pinsConfig->pinDriver);
	ld.bu	d8,[a13]13
.L199:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   419  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   420  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   421  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   422  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   423  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   424      sent->CH[channelId].RCR.B.CEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   425  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   428  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   429  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   430      sent->CLC.B.DISR = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   431  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   434  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   435  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   436      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   437      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   438      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   439      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   440  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   442  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   443  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   444  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   445      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   446      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   447      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   448  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   449  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   451  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   452  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   453      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   454  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   455  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   456  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   457  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   459      IfxPort_setPinModeInput(sentIn->pin.port, sentIn->pin.pinIndex, inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   460      IfxSent_setAltiInput(sentIn->module, sentIn->channelId, (IfxSent_AlternateInput)sentIn->select);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   461  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   462  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   463  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   464  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   465  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   466      IfxPort_setPinModeOutput(spcOut->pin.port, spcOut->pin.pinIndex, spcOutMode, spcOut->select);
	fcall	.cocofun_8
.L404:
	ld.bu	d5,[a12]16
.L405:
	ld.bu	d15,[a13]12
.L406:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   518  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   520  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   521  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   522  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   523      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d15
	call	IfxPort_setPinMode
.L208:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   419  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   420  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   421  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   422  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   423  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   424      sent->CH[channelId].RCR.B.CEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   425  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   428  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   429  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   430      sent->CLC.B.DISR = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   431  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   434  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   435  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   436      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   437      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   438      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   439      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   440  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   442  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   443  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   444  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   445      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   446      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   447      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   448  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   449  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   451  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   452  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   453      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   454  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   455  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   456  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   457  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   459      IfxPort_setPinModeInput(sentIn->pin.port, sentIn->pin.pinIndex, inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   460      IfxSent_setAltiInput(sentIn->module, sentIn->channelId, (IfxSent_AlternateInput)sentIn->select);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   461  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   462  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   463  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   464  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   465  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   466      IfxPort_setPinModeOutput(spcOut->pin.port, spcOut->pin.pinIndex, spcOutMode, spcOut->select);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   467      IfxPort_setPinPadDriver(spcOut->pin.port, spcOut->pin.pinIndex, padDriver);
	fcall	.cocofun_8
.L290:
	mov	d5,d8
	call	IfxPort_setPinPadDriver
.L12:
.L10:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   173          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   174      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   175  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   176      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   177          IfxSrc_Tos tos = config->interrupt.isrProvider;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   179          if (config->interrupt.priority != 0)
	ld.hu	d15,[a15]60
.L407:
	ld.bu	d0,[a15]62
.L292:
	jeq	d15,#0,.L13
.L220:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   419  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   420  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   421  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   422  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   423  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   424      sent->CH[channelId].RCR.B.CEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   425  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   428  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   429  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   430      sent->CLC.B.DISR = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   431  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   434  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   435  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   436      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   437      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   438      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   439      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   440  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   442  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   443  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   444  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   445      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   446      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   447      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   448  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   449  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   451  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   452  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   453      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
	ld.w	d2,.6.cnt
.L222:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   180          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   181              volatile Ifx_SRC_SRCR *src = IfxSent_getChannelSrc(config->channelId);
	ld.b	d1,[a15]6
.L227:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   419  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   420  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   421  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   422  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   423  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   424      sent->CH[channelId].RCR.B.CEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   425  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   428  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   429  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   430      sent->CLC.B.DISR = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   431  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   434  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   435  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   436      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   437      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   438      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   439      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   440  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   442  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   443  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   444  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   445      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   446      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   447      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   448  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   449  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   451  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   452  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   453      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
	mov.a	a15,d2
.L291:
	addsc.a	a15,a15,d1,#2
.L228:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     2   * \file IfxSrc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     3   * \brief SRC  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     4   * \ingroup IfxLld_Src
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    24   * \defgroup IfxLld_Src SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    25   * \addtogroup IfxLld_Src
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    26   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    27   * \defgroup IfxLld_Src_Usage How to use Service Request Mechanism?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    28   * \addtogroup IfxLld_Src_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    29   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    31   * For Aurix controller peripherals that can generate service requests is connected to one
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    32   * or more Service Request Nodes (SRNs) in the central Interrupt Router(IR) module. Refer to Controller User Manual for more details\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    34   * IfxSrc driver provides the APIs to configure and control service requests. Refer \ref IfxLld_Src_Usage for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    35   * details of these APIs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    36   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    38   * \section Ifx_Src_UsageInit Initialize the Service Request Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    40   * Service request node is initialized to configure the following,\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    41   * 1) Route the interrupt trigger to service provider, which are:\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    42   *  __a. One of the available CPUs or\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    43   *  __b. DMA controller\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    44   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    45   * 2) Priority of CPU Interrupt or DMA Trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    47   * For Interrupt or DMA to be correctly triggered, following steps are to be done in the user code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    49   * \subsection Ifx_Src_UsageInitStep1 Step1: Configure the Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    51   * User must configure the service request node in the application / driver files.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    52   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    53   * \subsection Ifx_Src_UsageInitStep2 Step2: Enable the Trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    54   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    55   * Enable the service request node to connect the trigger event from the hardware to service provider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    57   * Example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    58   * Following example show the configuration for STM0 Service request 0 trigger configured to trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    59   * CPU1 with the priority specified by IFX_INTPRIO_STM0 (from the example at IfxCpu_Irq)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    61   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    62   * //file: myApplication.c
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    64   * #include "Ifx_IntPrioDef.h" // to get the priority numbers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    65   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    66   * void myDriverInitFunction(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    67   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    68   *    // driver init code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    69   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    70   *    // Step1: Call the function to route the trigger from for SRC_STM0_SR0 to CPU1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    71   *    // and priority specified at Ifx_IntPrioDef.h globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    72   *    IfxSrc_init(&MODULE_SRC.STM.STM[0].SR[0], IfxSrc_Tos_cpu1, IFX_INTPRIO_STM0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    73   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    74   *    // Step2: Enable the service request node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    75   *    IfxSrc_enable(&MODULE_SRC.STM.STM[0].SR[0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    76   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    77   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    79   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    80   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    81   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    82   * \defgroup IfxLld_Src_Std_Service_Request Service Request Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    83   * \ingroup IfxLld_Src_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    84   * \defgroup IfxLld_Src_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    85   * \ingroup IfxLld_Src_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    87  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    88  #ifndef IFXSRC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    89  #define IFXSRC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    90  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    91  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    92  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    93  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    95  #include "_Impl/IfxSrc_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    96  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    97  #include "IfxSrc_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    98  /** \addtogroup IfxLld_Src_Std_Service_Request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    99   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   100  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   101  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   102  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   103  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   105  /** \brief Resets the overrun flag of the Service Request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   106   * \param src pointer to the Service Request Control register which the overrun flag should be cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   107   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   109   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   110   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   111   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   112  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   113  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   114  /** \brief Resets a specific interrupt service by software.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   115   * \param src pointer to the Service Request Control register which the request should be cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   116   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   118   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   119   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   120   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   121  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   123  /** \brief Gets the current overrun status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   124   * \param src pointer to the Service Request Control register for which the overrun status should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   125   * \return current service request control overrun status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   126   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   127   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   129   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   130  IFX_INLINE boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   131  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   132  /** \brief Gets the current request status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   133   * \param src pointer to the Service Request Control register for which the request status should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   134   * \return current service request control request status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   135   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   136   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   137   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   139  IFX_INLINE boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   141  /** \brief Requests a specific interrupt service by software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   142   * \param src pointer to the Service Request Control register which the interrupt has to be requested.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   143   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   144   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   145   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   146   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   147   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   148  IFX_INLINE void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   150  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   151  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   152  /** \addtogroup IfxLld_Src_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   153   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   155  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   156  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   157  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   159  /** \brief DeInitializes the service request control register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   160   * \param src pointer to the Service Request Control register which should be deinitialised.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   161   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   162   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   163   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   164   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   166  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   168  /** \brief Disables a specific interrupt service request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   169   * \param src pointer to the Service Request Control register for which the interrupt has to be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   170   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   171   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   172   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   173   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   175  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   176  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   177  /** \brief Enables a specific interrupt service request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   178   * \param src pointer to the Service Request Control register for which the interrupt has to be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   179   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   181   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   182   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   183   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   184  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   185  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   186  /** \brief Initializes the service request control register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   187   * \param src pointer to the Service Request Control register which should be initialised.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   188   * \param typOfService type of interrupt service provider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   189   * \param priority Interrupt priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   190   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   191   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   192   * Get the peripheral service control register which request need to be serviced and assign this service to any of service providers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   193   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   194   * //define the interrupt priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   195   * #define IFXASCLIN0_TX_INTPRIO 2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   196   * //get the service request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   197   * volatile Ifx_SRC_SRCR *src = IfxAsclin_getSrcPointerRx( &MODULE_ASCLIN0 );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   198   * //initlaise the service request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   199   * IfxSrc_init( src, IfxSrc_Tos_cpu0, IFXASCLIN0_TX_INTPRIO );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   200   * // enable the service
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   201   * IfxSrc_enable( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   202   * //check for service request flags and clear if they occur
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   203   * if ( IfxSrc_isRequested( src ) == TRUE )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   204   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   205   *    IfxSrc_clearRequest( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   206   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   207   * if ( IfxSrc_isOverrun( src ) == TRUE )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   208   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   209   *      IfxSrc_clearOverrun( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   210   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   211   * // Atlast deinitialise the service control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   212   * IfxSrc_deinit( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   213   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   214   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   216  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   218  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   219  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   220  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   221  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   222  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   223  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   224  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   226      src->B.IOVCLR = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   227  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   228  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   230  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   231  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   232      src->B.CLRR = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   233  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   234  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   236  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   237  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   238      src->U = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   239  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   241  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   242  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   244      src->B.SRE = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   245  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   248  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   249  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   250      src->B.SRE = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   251  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   254  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   255  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   256      src->B.SRPN = priority;
	st.b	[a15],d15
.L408:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   257      src->B.TOS  = typOfService;
	ld.bu	d15,[a15]1
.L409:
	insert	d15,d15,d0,#3,#1
	st.b	[a15]1,d15
.L239:
	ld.bu	d15,[a15]3
.L410:
	or	d15,#2
	st.b	[a15]3,d15
.L230:
	ld.bu	d15,[a15]1
.L411:
	or	d15,#4
	st.b	[a15]1,d15
.L13:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   182              IfxSrc_init(src, tos, config->interrupt.priority);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   183              IfxSrc_enable(src);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   184          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   185      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   186  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   187      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   188  }
	mov	d2,#1
	ret
.L122:
	
__IfxSent_Sent_initChannel_function_end:
	.size	IfxSent_Sent_initChannel,__IfxSent_Sent_initChannel_function_end-IfxSent_Sent_initChannel
.L60:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent..cocofun_8',code,cluster('.cocofun_8')
	.sect	'.text.IfxSent_Sent..cocofun_8'
	.align	2
; Function .cocofun_8
.L24:
.cocofun_8:	.type	func
; Function body .cocofun_8, coco_iter:0

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   419  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   420  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   421  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   422  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   423  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   424      sent->CH[channelId].RCR.B.CEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   425  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   428  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   429  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   430      sent->CLC.B.DISR = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   431  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   434  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   435  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   436      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   437      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   438      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   439      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   440  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   442  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   443  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   444  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   445      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   446      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   447      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   448  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   449  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   451  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   452  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   453      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   454  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   455  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   456  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   457  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   459      IfxPort_setPinModeInput(sentIn->pin.port, sentIn->pin.pinIndex, inputMode);
	ld.a	a4,[a12]8
.L450:
	ld.bu	d4,[a12]12
.L451:
	fret
.L85:
	; End of function
	.sdecl	'.text.IfxSent_Sent..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.IfxSent_Sent..cocofun_7'
	.align	2
; Function .cocofun_7
.L26:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	ld.b	d15,[a15]6
.L277:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
	sha	d15,#6
.L443:
	addsc.a	a2,a12,d15,#0
.L444:
	ld.bu	d15,[a2]264
.L445:
	fret
.L80:
	; End of function
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_initChannelConfig',code,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_initChannelConfig'
	.align	2
	
	.global	IfxSent_Sent_initChannelConfig

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   191  void IfxSent_Sent_initChannelConfig(IfxSent_Sent_ChannelConfig *config, IfxSent_Sent *driver)
; Function IfxSent_Sent_initChannelConfig
.L28:
IfxSent_Sent_initChannelConfig:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   193      const IfxSent_Sent_ChannelConfig defaultChannelConfig = {
	movh.a	a15,#@his(.4.ini)
	lea	a15,[a15]@los(.4.ini)
.L416:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   194          .driver                                                   = NULL_PTR,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   195          .channelId                                                = IfxSent_ChannelId_none,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   196          .tUnit                                                    = 3E-6, /* 3 uS */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   197  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   198          .receiveControl.endPulseIgnored                           = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   199          .receiveControl.alternateCrcSelected                      = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   200          .receiveControl.statusNibbleEnabled                       = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   201          .receiveControl.serialDataProcessingEnabled               = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   202          .receiveControl.serialDataDisabledCrcDisabled             = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   203          .receiveControl.crcModeDisabled                           = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   204          .receiveControl.frameCheckMode                            = IfxSent_FrameCheckMode_pastSyncPulse,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   205          .receiveControl.frameLength                               = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   206          .receiveControl.crcMethodDisabled                         = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   207          .receiveControl.extendedSerialFrameMode                   = IfxSent_ExtendedSerialFrameMode_standard,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   208          .receiveControl.driftErrorsDisabled                       = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   209          .receiveControl.suspendTriggered                          = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   211          .nibbleControl.nibblePointer0                             = IfxSent_Nibble_0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   212          .nibbleControl.nibblePointer1                             = IfxSent_Nibble_1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   213          .nibbleControl.nibblePointer2                             = IfxSent_Nibble_2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   214          .nibbleControl.nibblePointer3                             = IfxSent_Nibble_3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   215          .nibbleControl.nibblePointer4                             = IfxSent_Nibble_4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   216          .nibbleControl.nibblePointer5                             = IfxSent_Nibble_5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   217          .nibbleControl.nibblePointer6                             = IfxSent_Nibble_6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   218          .nibbleControl.nibblePointer7                             = IfxSent_Nibble_7,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   220          .inputOutputControl.digitalGlitchFilterDepth              = IfxSent_DigitalGlitchesLength_2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   221          .inputOutputControl.outputPulsePolarityHigh               = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   222          .inputOutputControl.inputPulsePolarityHigh                = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   223          .inputOutputControl.edgeCounterCleared                    = TRUE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   224          .inputOutputControl.glitchRisingCleared                   = TRUE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   225          .inputOutputControl.glitchFallingCleared                  = TRUE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   226          .inputOutputControl.externalTrigger                       = IfxSent_ExternalTrigger_0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   227          .inputOutputControl.triggerMonitorCleared                 = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   228  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   229          .enabledInterrupts.ALL                                    = IFXSENT_CFG_CHANNEL_INTEN,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   230          .interuptNodeControl.receiveDataInterruptNode             = IfxSent_InterruptNodePointer_0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   231          .interuptNodeControl.receiveSuccessInterruptNode          = IfxSent_InterruptNodePointer_0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   232          .interuptNodeControl.receiveBufferOverflowInterruptNode   = IfxSent_InterruptNodePointer_0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   233          .interuptNodeControl.transferDataInterruptNode            = IfxSent_InterruptNodePointer_0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   234          .interuptNodeControl.transferBufferUnderflowInterruptNode = IfxSent_InterruptNodePointer_0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   235          .interuptNodeControl.errorInterruptNode                   = IfxSent_InterruptNodePointer_0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   236          .interuptNodeControl.serialDataReceiveInterruptNode       = IfxSent_InterruptNodePointer_0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   237          .interuptNodeControl.watchdogErrorInterruptNode           = IfxSent_InterruptNodePointer_0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   239          .pins                                                     = NULL_PTR,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   240  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   241          /* SPC mode enable/disable   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   242          .spcModeOn                                                = FALSE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   243      };
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   244      *config        = defaultChannelConfig;
	mov.aa	a2,a4
.L293:
	lea	a6,20
.L15:
	ld.w	d15,[a15+]
	st.w	[a2+],d15
	loop	a6,.L15
.L294:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   245      config->driver = driver;
	st.a	[a4],a5
.L295:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   246  }
	ret
.L247:
	
__IfxSent_Sent_initChannelConfig_function_end:
	.size	IfxSent_Sent_initChannelConfig,__IfxSent_Sent_initChannelConfig_function_end-IfxSent_Sent_initChannelConfig
.L65:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_initModule',code,cluster('IfxSent_Sent_initModule')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_initModule'
	.align	2
	
	.global	IfxSent_Sent_initModule

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   247  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   248  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   249  boolean IfxSent_Sent_initModule(IfxSent_Sent *driver, const IfxSent_Sent_Config *config)
; Function IfxSent_Sent_initModule
.L30:
IfxSent_Sent_initModule:	.type	func
	mov.aa	a12,a5
.L297:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   251      boolean      result  = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   252      Ifx_SENT    *sentSFR = config->module;
	ld.a	a15,[a12]
.L298:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   253      driver->sent = sentSFR;
	st.a	[a4],a15
.L99:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   255      uint16       passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L296:
	mov	d8,d2
.L299:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   256      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L101:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   257  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   258      Ifx_SENT_CLC tempCLC;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   259      tempCLC.U      = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   260      tempCLC.B.EDIS = (config->sleepModeEnabled != FALSE) ? 0 : 1;
	ld.bu	d15,[a12]4
.L320:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   261      tempCLC.B.RMC  = 1; /* no divider required, pass clock 1:1*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   262      sentSFR->CLC.U = tempCLC.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   264      IfxSent_enableModule(sentSFR);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   265      IfxSent_initializeModuleClock(sentSFR, IfxSent_ClockDividerMode_normal, 1023); /* Fractional divider not required, pass 1:1*/
	mov	d0,#0
	mov.aa	a4,a15
.L300:
	eq	d15,d15,#0
.L321:
	insert	d0,d0,d15,#3,#1
.L322:
	mov	d4,#1
.L323:
	mov	d5,#1023
.L324:
	insert	d0,d0,#1,#8,#8
	st.w	[a15],d0
.L105:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   419  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   420  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   421  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   422  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   423  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   424      sent->CH[channelId].RCR.B.CEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   425  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   428  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   429  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   430      sent->CLC.B.DISR = 0;
	ld.bu	d15,[a15]
.L325:
	insert	d15,d15,#0,#0,#1
	st.b	[a15],d15
.L106:
	call	IfxSent_initializeModuleClock
.L301:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   266      IfxSent_setTimeStampPredivider(sentSFR, config->timeStampPreDivider);
	ld.w	d0,[a12]6
.L111:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     2   * \file IfxSent.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     3   * \brief SENT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     4   * \ingroup IfxLld_Sent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    25   * \defgroup IfxLld_Sent_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    26   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    27   * \defgroup IfxLld_Sent_Std_Configuration Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    28   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    29   * \defgroup IfxLld_Sent_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    30   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    31   * \defgroup IfxLld_Sent_Std_Operative Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    32   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    33   * \defgroup IfxLld_Sent_Std_Baudrate Baudrate Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    34   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    35   * \defgroup IfxLld_Sent_Std_IO IO Pin Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    36   * \ingroup IfxLld_Sent_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    37   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    39  #ifndef IFXSENT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    40  #define IFXSENT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    41  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    42  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    44  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    46  #include "_Impl/IfxSent_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    47  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    48  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    49  #include "_PinMap/IfxSent_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    50  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    51  #include "IfxSent_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    52  #include "IfxSent_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    53  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    54  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    55  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    56  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    57  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    58  #define IFXSENT_INTERRUPT_STATUS_ERROR_FLAGS (0x000037f4)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    59  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    60  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    61  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    62  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    63  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    64  /** \addtogroup IfxLld_Sent_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    65   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    66  /** \brief SENT.CH[channelId].IOCR.ALTI , Specifies alternate input for channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    70      IfxSent_AlternateInput_0 = 0,      /**< \brief Specifies alternate input 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    71      IfxSent_AlternateInput_1,          /**< \brief Specifies alternate input 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    72      IfxSent_AlternateInput_2,          /**< \brief Specifies alternate input 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    73      IfxSent_AlternateInput_3           /**< \brief Specifies alternate input 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    74  } IfxSent_AlternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    75  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    76  /** \brief SENT.CH[channelId].RSR.CST, Specifies the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    77   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    78  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    79  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    80      IfxSent_ChannelStatus_stop        = 0, /**< \brief Specifies the channel is stopped */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    81      IfxSent_ChannelStatus_initialize  = 1, /**< \brief Specifies the channel is initialized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    82      IfxSent_ChannelStatus_running     = 2, /**< \brief Specifies the channel is running */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    83      IfxSent_ChannelStatus_synchronize = 3  /**< \brief Specifies the channel is synchronized */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    84  } IfxSent_ChannelStatus;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    86  /** \brief SENT.FDR.DM , Specifies clock divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    88  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    89  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    90      IfxSent_ClockDividerMode_off        = 0, /**< \brief Specifies clock divider mode off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    91      IfxSent_ClockDividerMode_normal     = 1, /**< \brief Specifies clock normal divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    92      IfxSent_ClockDividerMode_fractional = 2  /**< \brief Specifies clock fractional divider mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    93  } IfxSent_ClockDividerMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    95  /** \brief SENT.CH[channelId].SDS.CON , Specifies received configuration bit value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    96   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    97  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    98  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	    99      IfxSent_ConfigBit_0 = 0,      /**< \brief Specifies received configuration bit value 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   100      IfxSent_ConfigBit_1           /**< \brief Specifies received configuration bit value 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   101  } IfxSent_ConfigBit;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   103  /** \brief SENT.CH[channelId].IOCR.DEPTH , Specifies number of port input samples
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   107      IfxSent_DigitalGlitchesLength_off = 0,  /**< \brief Specifies port input samples off */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   108      IfxSent_DigitalGlitchesLength_1   = 1,  /**< \brief Specifies 1 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   109      IfxSent_DigitalGlitchesLength_2,        /**< \brief Specifies 2 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   110      IfxSent_DigitalGlitchesLength_3,        /**< \brief Specifies 3 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   111      IfxSent_DigitalGlitchesLength_4,        /**< \brief Specifies 4 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   112      IfxSent_DigitalGlitchesLength_5,        /**< \brief Specifies 5 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   113      IfxSent_DigitalGlitchesLength_6,        /**< \brief Specifies 6 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   114      IfxSent_DigitalGlitchesLength_7,        /**< \brief Specifies 7 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   115      IfxSent_DigitalGlitchesLength_8,        /**< \brief Specifies 8 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   116      IfxSent_DigitalGlitchesLength_9,        /**< \brief Specifies 9 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   117      IfxSent_DigitalGlitchesLength_10,       /**< \brief Specifies 10 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   118      IfxSent_DigitalGlitchesLength_11,       /**< \brief Specifies 11 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   119      IfxSent_DigitalGlitchesLength_12,       /**< \brief Specifies 12 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   120      IfxSent_DigitalGlitchesLength_13,       /**< \brief Specifies 13 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   121      IfxSent_DigitalGlitchesLength_14,       /**< \brief Specifies 14 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   122      IfxSent_DigitalGlitchesLength_15        /**< \brief Specifies 15 port input samples  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   123  } IfxSent_DigitalGlitchesLength;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   124  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   125  /** \brief SENT.CH[channelId].RCR.ESF , Specifies the serial frame structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   127  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   128  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   129      IfxSent_ExtendedSerialFrameMode_standard = 0,  /**< \brief Specifies the standard serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   130      IfxSent_ExtendedSerialFrameMode_extended = 1   /**< \brief Specifies the extended serial frame structure */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   131  } IfxSent_ExtendedSerialFrameMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   132  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   133  /** \brief SENT.CH[channelId].IOCR.ETS , Specifies the external trigger line
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   135  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   136  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   137      IfxSent_ExternalTrigger_0 = 0,      /**< \brief Specifies the external trigger line 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   138      IfxSent_ExternalTrigger_1,          /**< \brief Specifies the external trigger line 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   139      IfxSent_ExternalTrigger_2,          /**< \brief Specifies the external trigger line 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   140      IfxSent_ExternalTrigger_3,          /**< \brief Specifies the external trigger line 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   141      IfxSent_ExternalTrigger_4,          /**< \brief Specifies the external trigger line 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   142      IfxSent_ExternalTrigger_5,          /**< \brief Specifies the external trigger line 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   143      IfxSent_ExternalTrigger_6,          /**< \brief Specifies the external trigger line 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   144      IfxSent_ExternalTrigger_7,          /**< \brief Specifies the external trigger line 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   145      IfxSent_ExternalTrigger_8,          /**< \brief Specifies the external trigger line 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   146      IfxSent_ExternalTrigger_9           /**< \brief Specifies the external trigger line 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   147  } IfxSent_ExternalTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   148  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   149  /** \brief SENT.CH[channelId].RCR.CFC, Specifies received frame check mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   150   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   151  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   152  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   153      IfxSent_FrameCheckMode_pastSyncPulse   = 0, /**< \brief Specifies frame check mode against past sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   154      IfxSent_FrameCheckMode_futureSuncPulse = 1  /**< \brief Specifies frame check mode against future sync pulse */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   155  } IfxSent_FrameCheckMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   156  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   157  /** \brief SENT.CH[channelId].INP.X(X= RSI,RDI,RBI,TDI,TBI,ERRI,SDI,WDI),Specifies interrupt requested node for respective interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   158   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   159  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   160  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   161      IfxSent_InterruptNodePointer_0 = 0,           /**< \brief Specifies interrupt requested node 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   162      IfxSent_InterruptNodePointer_1,               /**< \brief Specifies interrupt requested node 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   163      IfxSent_InterruptNodePointer_2,               /**< \brief Specifies interrupt requested node 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   164      IfxSent_InterruptNodePointer_3,               /**< \brief Specifies interrupt requested node 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   165      IfxSent_InterruptNodePointer_trigo0 = 4,      /**< \brief Specifies interrupt requested node TRIGO 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   166      IfxSent_InterruptNodePointer_trigo1,          /**< \brief Specifies interrupt requested node TRIGO 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   167      IfxSent_InterruptNodePointer_trigo2,          /**< \brief Specifies interrupt requested node TRIGO 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   168      IfxSent_InterruptNodePointer_trigo3,          /**< \brief Specifies interrupt requested node TRIGO 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   169      IfxSent_InterruptNodePointer_trigo4,          /**< \brief Specifies interrupt requested node TRIGO 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   170      IfxSent_InterruptNodePointer_trigo5           /**< \brief Specifies interrupt requested node TRIGO 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   171  } IfxSent_InterruptNodePointer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   172  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   173  /** \brief SENT.CH[channelId].VIEW.RDNPy( y=0,1,..7 ).Specifies receive data target nibble pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   175  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   176  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   177      IfxSent_Nibble_0 = 0,      /**< \brief Specifies receive data target nibble pointer to nibble 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   178      IfxSent_Nibble_1,          /**< \brief Specifies receive data target nibble pointer to nibble 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   179      IfxSent_Nibble_2,          /**< \brief Specifies receive data target nibble pointer to nibble 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   180      IfxSent_Nibble_3,          /**< \brief Specifies receive data target nibble pointer to nibble 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   181      IfxSent_Nibble_4,          /**< \brief Specifies receive data target nibble pointer to nibble 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   182      IfxSent_Nibble_5,          /**< \brief Specifies receive data target nibble pointer to nibble 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   183      IfxSent_Nibble_6,          /**< \brief Specifies receive data target nibble pointer to nibble 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   184      IfxSent_Nibble_7           /**< \brief Specifies receive data target nibble pointer to nibble 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   185  } IfxSent_Nibble;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   186  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   187  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   188   * Definition in Ifx_SENT.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   189   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   190  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   191  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   192      IfxSent_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   193      IfxSent_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   194  } IfxSent_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   195  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   196  /** \brief Specifies the SENT SPC operational mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   198  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   199  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   200      IfxSent_SpcMode_sync          = 0, /**< \brief Specifies synchronous SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   201      IfxSent_SpcMode_range         = 1, /**< \brief Specifies range selection SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   202      IfxSent_SpcMode_bidirectional = 2  /**< \brief Specifies bidirectional transmit SPC mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   203  } IfxSent_SpcMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   205  /** \brief SENT.CH[channelId].SCR.BASE, Specifies selection of pulse based on time
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   207  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   208  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   209      IfxSent_TimeBase_measuredFrequency = 0,  /**< \brief Specifies selection of pulse based on measured frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   210      IfxSent_TimeBase_nominalFrequency  = 1   /**< \brief Specifies selection of pulse based on nomianl frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   211  } IfxSent_TimeBase;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   212  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   213  /** \brief SENT.CH[channelId].SCR.TRIG, Specifies trigger source for pulse generation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   215  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   216  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   217      IfxSent_TriggerSource_off             = 0, /**< \brief Specifies no pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   218      IfxSent_TriggerSource_immediate       = 1, /**< \brief Specifies immediate pulse generation */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   219      IfxSent_TriggerSource_fallingEdge     = 2, /**< \brief Specifies pulse generation at fallingEdge */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   220      IfxSent_TriggerSource_externalTrigger = 3  /**< \brief Specifies pulse generation after each external trigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   221  } IfxSent_TriggerSource;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   222  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   223  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   224  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   225  /** \addtogroup IfxLld_Sent_Std_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   226   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   227  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   228  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   229  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   230  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   232  /** \brief Sets the operation mode of SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   233   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   234   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   235   * \param alternateInput alternate input/output pin for SENT operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   236   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   237   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   238  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   239  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   240  /** \brief Set the module time stamp pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   241   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   242   * \param timeStampPreDivider time stamp pre-divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   243   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   244   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   245  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   247  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   249  /** \addtogroup IfxLld_Sent_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   250   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   251  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   252  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   253  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   254  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   256  /** \brief Copies the current interrupt flags into the Ifx_SENT_CH_INTSTAT structure, and clears the flags in hardware.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   257   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   258   * This function should be used in an ISR to retrieve the events which triggered the interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   259   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   260   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   261   * \return Interrupt flags which have been cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   262   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   263  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   264  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   265  /** \brief Gets the current channel status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   266   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   267   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   268   * \return current channel interrupt status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   270  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   272  /** \brief gets the source for channel interrupt handler
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   273   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   274   * \return interrupt source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   275   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   276  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   277  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   278  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   280  /** \addtogroup IfxLld_Sent_Std_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   281   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   283  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   284  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   285  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   287  /** \brief Disable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   288   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   289   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   290   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   291   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   292  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   293  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   294  /** \brief Enable the channel with the channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   295   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   296   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   297   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   298   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   299  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   300  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   301  /** \brief Enable the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   302   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   303   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   304   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   305  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   306  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   307  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   308   * \param sent pointer to SENT registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   309   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   310   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   311   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   312  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   313  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   314  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   315  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   316  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   318  /** \brief Resets the SENT module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   319   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   322  IFX_EXTERN void IfxSent_resetModule(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   324  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   326  /** \addtogroup IfxLld_Sent_Std_Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   327   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   329  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   330  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   331  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   333  /** \brief Sets the channel fractional baudrate divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   334   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   335   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   336   * \param divider channel baudrate fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   337   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   338   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   339  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   341  /** \brief Sets the channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   342   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   343   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   344   * \param preDivider channel baudrate pre-divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   345   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   346   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   347  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   348  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   349  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   350  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   351  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   353  /** \brief Returns the current module frequency in Hertz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   354   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   355   * \return The current module frequency in Hertz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   356   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   357  IFX_EXTERN float32 IfxSent_getModuleClock(Ifx_SENT *sent);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   359  /** \brief Initializes the desired unit time (f_tick) for the external SENT device connected to the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   360   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   361   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   362   * \param tUnit desired unit time (f_tick), e.g. 3E-6 for 3 uS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   363   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   364   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   365  IFX_EXTERN void IfxSent_initializeChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId, float32 tUnit);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   367  /** \brief Initialize and get the clock for SENT kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   368   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   369   * \param dividerMode Divider mode for clock output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   370   * \param stepValue clock frequency for for module fractional divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   371   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   373  IFX_EXTERN void IfxSent_initializeModuleClock(Ifx_SENT *sent, IfxSent_ClockDividerMode dividerMode, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   375  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   377  /** \addtogroup IfxLld_Sent_Std_IO
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   378   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   380  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   382  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   384  /** \brief Initializes a SENT input
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   385   * \param sentIn the SENT Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   386   * \param inputMode the pin input mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   387   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   388   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   389  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   391  /** \brief Initializes a SPC output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   392   * \param spcOut the SPC Pin which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   393   * \param spcOutMode Port Output Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   394   * \param padDriver the pad driver mode which should be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   395   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   397  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   398  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   399  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   400  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   401  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   402  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   403  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   404  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   405  /** \brief Returns the current unit time (f_tick) of the given channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   406   * \param sent base address of the SENT register space
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   407   * \param channelId SENT channel number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   408   * \return The current unit time in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   410  IFX_EXTERN float32 IfxSent_getChannelUnitTime(Ifx_SENT *sent, IfxSent_ChannelId channelId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   412  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   413  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   414  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   415  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   416  IFX_INLINE void IfxSent_disableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   417  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   418      sent->CH[channelId].RCR.B.CEN = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   419  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   420  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   421  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   422  IFX_INLINE void IfxSent_enableChannel(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   423  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   424      sent->CH[channelId].RCR.B.CEN = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   425  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   428  IFX_INLINE void IfxSent_enableModule(Ifx_SENT *sent)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   429  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   430      sent->CLC.B.DISR = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   431  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   434  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getAndClearInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   435  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   436      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   437      interruptFlags.U             = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   438      sent->CH[channelId].INTCLR.U = interruptFlags.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   439      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   440  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   442  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   443  IFX_INLINE Ifx_SENT_CH_INTSTAT IfxSent_getChannelInterruptStatus(Ifx_SENT *sent, IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   444  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   445      Ifx_SENT_CH_INTSTAT interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   446      interruptFlags.U = sent->CH[channelId].INTSTAT.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   447      return interruptFlags;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   448  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   449  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   451  IFX_INLINE volatile Ifx_SRC_SRCR *IfxSent_getChannelSrc(IfxSent_ChannelId channelId)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   452  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   453      return &MODULE_SRC.SENT.SENT[0].SR[channelId];
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   454  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   455  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   456  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   457  IFX_INLINE void IfxSent_initSentPin(const IfxSent_Sent_In *sentIn, IfxPort_InputMode inputMode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   458  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   459      IfxPort_setPinModeInput(sentIn->pin.port, sentIn->pin.pinIndex, inputMode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   460      IfxSent_setAltiInput(sentIn->module, sentIn->channelId, (IfxSent_AlternateInput)sentIn->select);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   461  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   462  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   463  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   464  IFX_INLINE void IfxSent_initSpcPin(const IfxSent_Spc_Out *spcOut, IfxPort_OutputMode spcOutMode, IfxPort_PadDriver padDriver)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   465  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   466      IfxPort_setPinModeOutput(spcOut->pin.port, spcOut->pin.pinIndex, spcOutMode, spcOut->select);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   467      IfxPort_setPinPadDriver(spcOut->pin.port, spcOut->pin.pinIndex, padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   468  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   470  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   471  IFX_INLINE void IfxSent_setAltiInput(Ifx_SENT *sent, IfxSent_ChannelId channelId, IfxSent_AlternateInput alternateInput)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   472  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   473      sent->CH[channelId].IOCR.B.ALTI = alternateInput;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   474  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   475  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   476  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   477  IFX_INLINE void IfxSent_setChannelFractionalDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   478  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   479      sent->CH[channelId].CFDR.B.DIV = divider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   480  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   482  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   483  IFX_INLINE void IfxSent_setChannelPreDivider(Ifx_SENT *sent, IfxSent_ChannelId channelId, uint16 preDivider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   484  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   485      sent->CH[channelId].CPDR.B.PDIV = preDivider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   486  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   487  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   489  IFX_INLINE void IfxSent_setSleepMode(Ifx_SENT *sent, IfxSent_SleepMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   490  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   491      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   492      IfxScuWdt_clearCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   493      sent->CLC.B.EDIS = mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   494      IfxScuWdt_setCpuEndinit(passwd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   495  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   497  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   498  IFX_INLINE void IfxSent_setTimeStampPredivider(Ifx_SENT *sent, uint32 timeStampPreDivider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   499  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Std\IfxSent.h	   500      sent->TPD.B.TDIV = timeStampPreDivider;
	ld.w	d15,[a15]28
.L326:
	insert	d15,d15,d0,#0,#20
	st.w	[a15]28,d15
.L112:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   268      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_setCpuEndinit
.L327:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   270      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   271  }
	mov	d2,#1
	ret
.L94:
	
__IfxSent_Sent_initModule_function_end:
	.size	IfxSent_Sent_initModule,__IfxSent_Sent_initModule_function_end-IfxSent_Sent_initModule
.L50:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_initModuleConfig',code,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_initModuleConfig'
	.align	2
	
	.global	IfxSent_Sent_initModuleConfig

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   272  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   274  void IfxSent_Sent_initModuleConfig(IfxSent_Sent_Config *config, Ifx_SENT *sent)
; Function IfxSent_Sent_initModuleConfig
.L32:
IfxSent_Sent_initModuleConfig:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   275  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   276      /* Default module initialization    */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   277      const IfxSent_Sent_Config defaultModuleConfig = {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   278          .module              = NULL_PTR,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   279          .sleepModeEnabled    = TRUE,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   280          .timeStampPreDivider = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   281      };
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   282      *config        = defaultModuleConfig;
	mov	d15,#1
	st.b	[a4]4,d15
.L332:
	mov	d15,#0
	st.w	[a4]6,d15
.L333:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   283      config->module = sent;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   284  }
	st.a	[a4],a5
	ret
.L118:
	
__IfxSent_Sent_initModuleConfig_function_end:
	.size	IfxSent_Sent_initModuleConfig,__IfxSent_Sent_initModuleConfig_function_end-IfxSent_Sent_initModuleConfig
.L55:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_readChannelSerialDataFrame',code,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_readChannelSerialDataFrame'
	.align	2
	
	.global	IfxSent_Sent_readChannelSerialDataFrame

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   287  boolean IfxSent_Sent_readChannelSerialDataFrame(IfxSent_Sent_Channel *channel, IfxSent_Sent_Frame *frame)
; Function IfxSent_Sent_readChannelSerialDataFrame
.L34:
IfxSent_Sent_readChannelSerialDataFrame:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   289      boolean           result  = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   290  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   291      Ifx_SENT         *sentSFR = channel->driver->sent;
	ld.a	a15,[a4]
.L421:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   292      IfxSent_ChannelId ChanIdx = channel->channelId;
	ld.b	d15,[a4]8
.L302:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   293      frame->data         = sentSFR->RDR[ChanIdx].U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   294      frame->timeStamp    = sentSFR->RTS[ChanIdx].U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   295      frame->statusNibble = channel->channel->RSR.B.SCN;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   296  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   297      return result;
	mov	d2,#1
.L422:
	ld.a	a15,[a15]
.L304:
	addsc.a	a15,a15,d15,#2
.L305:
	ld.w	d15,[a15]128
.L303:
	st.w	[a5],d15
.L423:
	ld.w	d15,[a15]2688
.L424:
	st.w	[a5]4,d15
.L425:
	ld.a	a15,[a4]4
.L426:
	ld.bu	d15,[a15]13
.L427:
	and	d15,#15
	st.b	[a5]8,d15
.L428:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   298  }
	ret
.L251:
	
__IfxSent_Sent_readChannelSerialDataFrame_function_end:
	.size	IfxSent_Sent_readChannelSerialDataFrame,__IfxSent_Sent_readChannelSerialDataFrame_function_end-IfxSent_Sent_readChannelSerialDataFrame
.L70:
	; End of function
	
	.sdecl	'.text.IfxSent_Sent.IfxSent_Sent_readChannelSerialMessageFrame',code,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.text.IfxSent_Sent.IfxSent_Sent_readChannelSerialMessageFrame'
	.align	2
	
	.global	IfxSent_Sent_readChannelSerialMessageFrame

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   300  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   301  boolean IfxSent_Sent_readChannelSerialMessageFrame(IfxSent_Sent_Channel *channel, IfxSent_Sent_SerialMessageFrame *message)
; Function IfxSent_Sent_readChannelSerialMessageFrame
.L36:
IfxSent_Sent_readChannelSerialMessageFrame:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   302  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   303      boolean         result = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   305      Ifx_SENT_CH    *sentCh = channel->channel;
	ld.a	a15,[a4]4
.L433:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   306      Ifx_SENT_CH_SDS sds;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   307  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   308      sds.U               = sentCh->SDS.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   310      message->serialData = sds.B.SD;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   311      message->messageId  = sds.B.MID;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   312      message->configBit  = sds.B.CON;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   313      message->crc        = sds.B.SCRC;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   314  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   315      return result;
	mov	d2,#1
.L434:
	ld.w	d15,[a15]16
.L306:
	st.h	[a5]2,d15
.L435:
	extr.u	d0,d15,#16,#8
	st.b	[a5]1,d0
.L436:
	extr.u	d15,d15,#24,#8
.L307:
	extr.u	d0,d15,#7,#1
	st.b	[a5]4,d0
.L437:
	and	d15,#63
	st.b	[a5],d15
.L438:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Sent\Sent\IfxSent_Sent.c	   316  }
	ret
.L258:
	
__IfxSent_Sent_readChannelSerialMessageFrame_function_end:
	.size	IfxSent_Sent_readChannelSerialMessageFrame,__IfxSent_Sent_readChannelSerialMessageFrame_function_end-IfxSent_Sent_readChannelSerialMessageFrame
.L75:
	; End of function
	
	.sdecl	'.rodata.IfxSent_Sent..4.ini',data,rom
	.sect	'.rodata.IfxSent_Sent..4.ini'
	.align	4
.4.ini:	.type	object
	.size	.4.ini,84
	.space	6
	.byte	-1
	.space	3
	.byte	1,1,1
	.space	1
	.byte	2
	.space	10
	.byte	6
	.space	22
	.word	910775196
	.space	1
	.byte	1,2,3,4
	.byte	5,6,7
	.space	8
	.word	8173
	.space	12
	.calls	'IfxSent_Sent_deInitModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxSent_Sent_deInitModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxSent_Sent_deInitModule','IfxSent_resetModule'
	.calls	'IfxSent_Sent_deInitModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxSent_Sent_initChannel','IfxSent_initializeChannelUnitTime'
	.calls	'IfxSent_Sent_initChannel','IfxPort_setPinMode'
	.calls	'IfxSent_Sent_initChannel','IfxPort_setPinPadDriver'
	.calls	'IfxSent_Sent_initModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxSent_Sent_initModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxSent_Sent_initModule','IfxSent_initializeModuleClock'
	.calls	'IfxSent_Sent_initModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxSent_Sent_initChannel','.cocofun_7'
	.calls	'IfxSent_Sent_initChannel','.cocofun_8'
	.calls	'IfxSent_Sent_deInitModule','',0
	.calls	'IfxSent_Sent_initChannel','',0
	.calls	'.cocofun_8','',0
	.calls	'.cocofun_7','',0
	.calls	'IfxSent_Sent_initChannelConfig','',0
	.calls	'IfxSent_Sent_initModule','',0
	.calls	'IfxSent_Sent_initModuleConfig','',0
	.calls	'IfxSent_Sent_readChannelSerialDataFrame','',0
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxPort_setPinMode
	.extern	IfxPort_setPinPadDriver
	.extern	IfxSent_resetModule
	.extern	IfxSent_initializeChannelUnitTime
	.extern	IfxSent_initializeModuleClock
	.calls	'IfxSent_Sent_readChannelSerialMessageFrame','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L38:
	.word	87836
	.half	3
	.word	.L39
	.byte	4
.L37:
	.byte	1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L40
	.byte	2
	.byte	'unsigned int',0,4,7,2
	.byte	'int',0,4,5,2
	.byte	'unsigned int',0,4,7,3
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,2,133,8,16,4,4
	.byte	'ENDINIT',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'LCK',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'PW',0,4
	.word	215
	.byte	14,16,2,35,0,4
	.byte	'REL',0,4
	.word	215
	.byte	16,0,2,35,0,0,5,2,187,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	231
	.byte	4,2,35,0,0
.L93:
	.byte	2
	.byte	'unsigned char',0,1,8
.L91:
	.byte	2
	.byte	'unsigned short int',0,2,7,3
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,2,142,8,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	2,6,2,35,0,4
	.byte	'IR0',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'DR',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'IR1',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'UR',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PAR',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'TCR',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'TCTR',0,1
	.word	367
	.byte	7,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,5,2,195,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	406
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,2,157,8,16,4,4
	.byte	'AE',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'OE',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'IS0',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'DS',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'TO',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'IS1',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'US',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PAS',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'TCS',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'TCT',0,1
	.word	367
	.byte	7,0,2,35,1,4
	.byte	'TIM',0,2
	.word	384
	.byte	16,0,2,35,2,0,5,2,203,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	650
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SCU_WDTCPU',0,2,243,13,25,12,6
	.byte	'CON0',0
	.word	327
	.byte	4,2,35,0,6
	.byte	'CON1',0
	.word	610
	.byte	4,2,35,4,6
	.byte	'SR',0
	.word	841
	.byte	4,2,35,8,0,7
	.word	881
	.byte	8
	.word	944
	.byte	9
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,1,130,3,17,1,1,10
	.byte	'watchdog',0,1,130,3,65
	.word	949
	.byte	10
	.byte	'password',0,1,130,3,82
	.word	384
	.byte	11,0,9
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,1,222,3,17,1,1,10
	.byte	'watchdog',0,1,222,3,63
	.word	949
	.byte	10
	.byte	'password',0,1,222,3,80
	.word	384
	.byte	11,0,12
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,1,187,3,19
	.word	384
	.byte	1,1,10
	.byte	'watchdog',0,1,187,3,74
	.word	949
	.byte	11,0,9
	.byte	'__stopPerfCounters',0,3,3,217,1,17,1,1,11,0,2
	.byte	'unsigned long long int',0,8,7,13
	.byte	'void',0,8
	.word	1234
	.byte	12
	.byte	'__ld64',0,3,4,110,19
	.word	1208
	.byte	1,1,10
	.byte	'addr',0,4,110,32
	.word	1240
	.byte	11,0,9
	.byte	'__st64',0,3,4,118,17,1,1,10
	.byte	'addr',0,4,118,30
	.word	1240
	.byte	10
	.byte	'value',0,4,118,43
	.word	1208
	.byte	11,0,3
	.byte	'_Ifx_SRC_SRCR_Bits',0,6,45,16,4,4
	.byte	'SRPN',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	2,6,2,35,1,4
	.byte	'SRE',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'TOS',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'reserved_12',0,1
	.word	367
	.byte	4,0,2,35,1,4
	.byte	'ECC',0,1
	.word	367
	.byte	5,3,2,35,2,4
	.byte	'reserved_21',0,1
	.word	367
	.byte	3,0,2,35,2,4
	.byte	'SRR',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'CLRR',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'SETR',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'IOV',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'IOVCLR',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'SWS',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'SWSCLR',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'reserved_31',0,1
	.word	367
	.byte	1,0,2,35,3,0,5,6,70,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	1321
	.byte	4,2,35,0,0,7
	.word	1611
	.byte	8
	.word	1650
.L238:
	.byte	9
	.byte	'IfxSrc_clearRequest',0,3,5,230,1,17,1,1
.L240:
	.byte	10
	.byte	'src',0,5,230,1,60
	.word	1655
.L242:
	.byte	11,0
.L243:
	.byte	9
	.byte	'IfxSrc_enable',0,3,5,248,1,17,1,1
.L244:
	.byte	10
	.byte	'src',0,5,248,1,54
	.word	1655
.L246:
	.byte	11,0
.L218:
	.byte	14,7,49,9,1,15
	.byte	'IfxSrc_Tos_cpu0',0,0,15
	.byte	'IfxSrc_Tos_dma',0,1,0
.L229:
	.byte	9
	.byte	'IfxSrc_init',0,3,5,254,1,17,1,1
.L231:
	.byte	10
	.byte	'src',0,5,254,1,52
	.word	1655
.L233:
	.byte	10
	.byte	'typOfService',0,5,254,1,68
	.word	1740
.L235:
	.byte	10
	.byte	'priority',0,5,254,1,95
	.word	384
.L237:
	.byte	16,11,0,0,14,9,83,9,1,15
	.byte	'IfxCpu_ResourceCpu_0',0,0,15
	.byte	'IfxCpu_ResourceCpu_none',0,1,0,12
	.byte	'IfxCpu_getCoreIndex',0,3,8,170,5,31
	.word	1858
	.byte	1,1,11,0,12
	.byte	'IfxCpu_areInterruptsEnabled',0,3,8,185,4,20
	.word	367
	.byte	1,1,11,0,2
	.byte	'unsigned long int',0,4,7,12
	.byte	'IfxCpu_getPerformanceCounter',0,3,8,190,5,19
	.word	1989
	.byte	1,1,10
	.byte	'address',0,8,190,5,55
	.word	1989
	.byte	11,0,12
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,8,198,5,20
	.word	367
	.byte	1,1,10
	.byte	'address',0,8,198,5,70
	.word	1989
	.byte	11,0,9
	.byte	'IfxCpu_updatePerformanceCounter',0,3,8,153,7,17,1,1,10
	.byte	'address',0,8,153,7,56
	.word	1989
	.byte	10
	.byte	'count',0,8,153,7,72
	.word	1989
	.byte	11,0,3
	.byte	'_Ifx_P_OUT_Bits',0,11,231,2,16,4,4
	.byte	'P0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'P1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'P2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'P3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'P4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'P5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'P6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'P7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'P8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'P9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'P10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'P11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'P12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'P13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'P14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'P15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,5,11,239,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	2218
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMR_Bits',0,11,129,2,16,4,4
	.byte	'PS0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'PS2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'PS3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'PS4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'PS5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'PS6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PS7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'PS8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'PS9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'PS10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'PS11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'PS12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'PS13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'PS14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'PS15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'PCL0',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'PCL1',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'PCL2',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'PCL3',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'PCL4',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'PCL5',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'PCL6',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'PCL7',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'PCL8',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'PCL9',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'PCL10',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'PCL11',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'PCL12',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'PCL13',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'PCL14',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'PCL15',0,1
	.word	367
	.byte	1,0,2,35,3,0,5,11,191,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	2534
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_ID_Bits',0,11,110,16,4,4
	.byte	'MODREV',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'MODTYPE',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'MODNUMBER',0,2
	.word	384
	.byte	16,0,2,35,2,0,5,11,231,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	3105
	.byte	4,2,35,0,0,17,4
	.word	367
	.byte	18,3,0,3
	.byte	'_Ifx_P_IOCR0_Bits',0,11,140,1,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	3,5,2,35,0,4
	.byte	'PC0',0,1
	.word	367
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	3,5,2,35,1,4
	.byte	'PC1',0,1
	.word	367
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	367
	.byte	3,5,2,35,2,4
	.byte	'PC2',0,1
	.word	367
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	3,5,2,35,3,4
	.byte	'PC3',0,1
	.word	367
	.byte	5,0,2,35,3,0,5,11,247,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	3233
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IOCR4_Bits',0,11,166,1,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	3,5,2,35,0,4
	.byte	'PC4',0,1
	.word	367
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	3,5,2,35,1,4
	.byte	'PC5',0,1
	.word	367
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	367
	.byte	3,5,2,35,2,4
	.byte	'PC6',0,1
	.word	367
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	3,5,2,35,3,4
	.byte	'PC7',0,1
	.word	367
	.byte	5,0,2,35,3,0,5,11,135,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	3448
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IOCR8_Bits',0,11,179,1,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	3,5,2,35,0,4
	.byte	'PC8',0,1
	.word	367
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	3,5,2,35,1,4
	.byte	'PC9',0,1
	.word	367
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	367
	.byte	3,5,2,35,2,4
	.byte	'PC10',0,1
	.word	367
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	3,5,2,35,3,4
	.byte	'PC11',0,1
	.word	367
	.byte	5,0,2,35,3,0,5,11,143,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	3663
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IOCR12_Bits',0,11,153,1,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	3,5,2,35,0,4
	.byte	'PC12',0,1
	.word	367
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	3,5,2,35,1,4
	.byte	'PC13',0,1
	.word	367
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	367
	.byte	3,5,2,35,2,4
	.byte	'PC14',0,1
	.word	367
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	3,5,2,35,3,4
	.byte	'PC15',0,1
	.word	367
	.byte	5,0,2,35,3,0,5,11,255,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	3880
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IN_Bits',0,11,118,16,4,4
	.byte	'P0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'P1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'P2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'P3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'P4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'P5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'P6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'P7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'P8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'P9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'P10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'P11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'P12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'P13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'P14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'P15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,5,11,239,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4100
	.byte	4,2,35,0,0,17,24
	.word	367
	.byte	18,23,0,3
	.byte	'_Ifx_P_PDR0_Bits',0,11,160,3,16,4,4
	.byte	'PD0',0,1
	.word	367
	.byte	3,5,2,35,0,4
	.byte	'PL0',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'PD1',0,1
	.word	367
	.byte	3,1,2,35,0,4
	.byte	'PL1',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'PD2',0,1
	.word	367
	.byte	3,5,2,35,1,4
	.byte	'PL2',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'PD3',0,1
	.word	367
	.byte	3,1,2,35,1,4
	.byte	'PL3',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'PD4',0,1
	.word	367
	.byte	3,5,2,35,2,4
	.byte	'PL4',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'PD5',0,1
	.word	367
	.byte	3,1,2,35,2,4
	.byte	'PL5',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'PD6',0,1
	.word	367
	.byte	3,5,2,35,3,4
	.byte	'PL6',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'PD7',0,1
	.word	367
	.byte	3,1,2,35,3,4
	.byte	'PL7',0,1
	.word	367
	.byte	1,0,2,35,3,0,5,11,135,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4423
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_PDR1_Bits',0,11,181,3,16,4,4
	.byte	'PD8',0,1
	.word	367
	.byte	3,5,2,35,0,4
	.byte	'PL8',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'PD9',0,1
	.word	367
	.byte	3,1,2,35,0,4
	.byte	'PL9',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'PD10',0,1
	.word	367
	.byte	3,5,2,35,1,4
	.byte	'PL10',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'PD11',0,1
	.word	367
	.byte	3,1,2,35,1,4
	.byte	'PL11',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'PD12',0,1
	.word	367
	.byte	3,5,2,35,2,4
	.byte	'PL12',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'PD13',0,1
	.word	367
	.byte	3,1,2,35,2,4
	.byte	'PL13',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'PD14',0,1
	.word	367
	.byte	3,5,2,35,3,4
	.byte	'PL14',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'PD15',0,1
	.word	367
	.byte	3,1,2,35,3,4
	.byte	'PL15',0,1
	.word	367
	.byte	1,0,2,35,3,0,5,11,143,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4727
	.byte	4,2,35,0,0,17,8
	.word	367
	.byte	18,7,0,3
	.byte	'_Ifx_P_ESR_Bits',0,11,88,16,4,4
	.byte	'EN0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'EN1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'EN2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'EN3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'EN4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'EN5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'EN6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'EN7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'EN8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'EN9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'EN10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'EN11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'EN12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'EN13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'EN14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'EN15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,5,11,223,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5052
	.byte	4,2,35,0,0,17,12
	.word	367
	.byte	18,11,0,3
	.byte	'_Ifx_P_PDISC_Bits',0,11,138,3,16,4,4
	.byte	'PDIS0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'PDIS1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'PDIS2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'PDIS3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'PDIS4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'PDIS5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'PDIS6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PDIS7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'PDIS8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'PDIS9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'PDIS10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'PDIS11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'PDIS12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'PDIS13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'PDIS14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'PDIS15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,5,11,255,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5392
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_PCSR_Bits',0,11,253,2,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'SEL1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'SEL2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'reserved_3',0,2
	.word	384
	.byte	6,7,2,35,0,4
	.byte	'SEL9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'SEL10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'reserved_11',0,4
	.word	192
	.byte	20,1,2,35,0,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,5,11,247,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5758
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR0_Bits',0,11,166,2,16,4,4
	.byte	'PS0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'PS2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'PS3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	192
	.byte	28,0,2,35,0,0,5,11,207,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5969
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR4_Bits',0,11,187,2,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'PS4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'PS5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'PS6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PS7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,4
	.word	192
	.byte	24,0,2,35,0,0,5,11,223,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6116
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR8_Bits',0,11,198,2,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'PS8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'PS9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'PS10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'PS11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'reserved_12',0,4
	.word	192
	.byte	20,0,2,35,0,0,5,11,231,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6285
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR12_Bits',0,11,176,2,16,4,4
	.byte	'reserved_0',0,2
	.word	384
	.byte	12,4,2,35,0,4
	.byte	'PS12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'PS13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'PS14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'PS15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,5,11,215,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6457
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR0_Bits',0,11,192,1,16,4,4
	.byte	'reserved_0',0,2
	.word	384
	.byte	16,0,2,35,0,4
	.byte	'PCL0',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'PCL1',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'PCL2',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'PCL3',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'reserved_20',0,2
	.word	384
	.byte	12,0,2,35,2,0,5,11,159,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6632
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR4_Bits',0,11,213,1,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	20,12,2,35,0,4
	.byte	'PCL4',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'PCL5',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'PCL6',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'PCL7',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	8,0,2,35,3,0,5,11,175,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6806
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR8_Bits',0,11,224,1,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	24,8,2,35,0,4
	.byte	'PCL8',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'PCL9',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'PCL10',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'PCL11',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'reserved_28',0,1
	.word	367
	.byte	4,0,2,35,3,0,5,11,183,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6980
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR12_Bits',0,11,203,1,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	28,4,2,35,0,4
	.byte	'PCL12',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'PCL13',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'PCL14',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'PCL15',0,1
	.word	367
	.byte	1,0,2,35,3,0,5,11,167,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	7156
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR_Bits',0,11,209,2,16,4,4
	.byte	'PS0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'PS2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'PS3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'PS4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'PS5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'PS6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PS7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'PS8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'PS9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'PS10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'PS11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'PS12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'PS13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'PS14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'PS15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,5,11,199,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	7312
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR_Bits',0,11,235,1,16,4,4
	.byte	'reserved_0',0,2
	.word	384
	.byte	16,0,2,35,0,4
	.byte	'PCL0',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'PCL1',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'PCL2',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'PCL3',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'PCL4',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'PCL5',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'PCL6',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'PCL7',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'PCL8',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'PCL9',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'PCL10',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'PCL11',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'PCL12',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'PCL13',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'PCL14',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'PCL15',0,1
	.word	367
	.byte	1,0,2,35,3,0,5,11,151,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	7645
	.byte	4,2,35,0,0,17,96
	.word	367
	.byte	18,95,0,3
	.byte	'_Ifx_P_ACCEN1_Bits',0,11,82,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	32,0,2,35,0,0,5,11,215,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	8002
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_ACCEN0_Bits',0,11,45,16,4,4
	.byte	'EN0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'EN1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'EN2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'EN3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'EN4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'EN5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'EN6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'EN7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'EN8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'EN9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'EN10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'EN11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'EN12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'EN13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'EN14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'EN15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'EN16',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'EN17',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'EN18',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'EN19',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'EN20',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'EN21',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'EN22',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'EN23',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'EN24',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'EN25',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'EN26',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'EN27',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'EN28',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'EN29',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'EN30',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'EN31',0,1
	.word	367
	.byte	1,0,2,35,3,0,5,11,207,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	8089
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P',0,11,159,5,25,128,2,6
	.byte	'OUT',0
	.word	2494
	.byte	4,2,35,0,6
	.byte	'OMR',0
	.word	3065
	.byte	4,2,35,4,6
	.byte	'ID',0
	.word	3184
	.byte	4,2,35,8,6
	.byte	'reserved_C',0
	.word	3224
	.byte	4,2,35,12,6
	.byte	'IOCR0',0
	.word	3408
	.byte	4,2,35,16,6
	.byte	'IOCR4',0
	.word	3623
	.byte	4,2,35,20,6
	.byte	'IOCR8',0
	.word	3840
	.byte	4,2,35,24,6
	.byte	'IOCR12',0
	.word	4060
	.byte	4,2,35,28,6
	.byte	'reserved_20',0
	.word	3224
	.byte	4,2,35,32,6
	.byte	'IN',0
	.word	4374
	.byte	4,2,35,36,6
	.byte	'reserved_28',0
	.word	4414
	.byte	24,2,35,40,6
	.byte	'PDR0',0
	.word	4687
	.byte	4,2,35,64,6
	.byte	'PDR1',0
	.word	5003
	.byte	4,2,35,68,6
	.byte	'reserved_48',0
	.word	5043
	.byte	8,2,35,72,6
	.byte	'ESR',0
	.word	5343
	.byte	4,2,35,80,6
	.byte	'reserved_54',0
	.word	5383
	.byte	12,2,35,84,6
	.byte	'PDISC',0
	.word	5718
	.byte	4,2,35,96,6
	.byte	'PCSR',0
	.word	5929
	.byte	4,2,35,100,6
	.byte	'reserved_64',0
	.word	5043
	.byte	8,2,35,104,6
	.byte	'OMSR0',0
	.word	6076
	.byte	4,2,35,112,6
	.byte	'OMSR4',0
	.word	6245
	.byte	4,2,35,116,6
	.byte	'OMSR8',0
	.word	6417
	.byte	4,2,35,120,6
	.byte	'OMSR12',0
	.word	6592
	.byte	4,2,35,124,6
	.byte	'OMCR0',0
	.word	6766
	.byte	4,3,35,128,1,6
	.byte	'OMCR4',0
	.word	6940
	.byte	4,3,35,132,1,6
	.byte	'OMCR8',0
	.word	7116
	.byte	4,3,35,136,1,6
	.byte	'OMCR12',0
	.word	7272
	.byte	4,3,35,140,1,6
	.byte	'OMSR',0
	.word	7605
	.byte	4,3,35,144,1,6
	.byte	'OMCR',0
	.word	7953
	.byte	4,3,35,148,1,6
	.byte	'reserved_98',0
	.word	7993
	.byte	96,3,35,152,1,6
	.byte	'ACCEN1',0
	.word	8049
	.byte	4,3,35,248,1,6
	.byte	'ACCEN0',0
	.word	8616
	.byte	4,3,35,252,1,0,7
	.word	8656
	.byte	8
	.word	9189
	.byte	14,10,54,9,1,15
	.byte	'IfxPort_InputMode_undefined',0,127,15
	.byte	'IfxPort_InputMode_noPullDevice',0,0,15
	.byte	'IfxPort_InputMode_pullDown',0,8,15
	.byte	'IfxPort_InputMode_pullUp',0,16,0
.L177:
	.byte	9
	.byte	'IfxPort_setPinModeInput',0,3,10,131,4,17,1,1
.L179:
	.byte	10
	.byte	'port',0,10,131,4,48
	.word	9194
.L181:
	.byte	10
	.byte	'pinIndex',0,10,131,4,60
	.word	367
.L183:
	.byte	10
	.byte	'mode',0,10,131,4,88
	.word	9199
.L185:
	.byte	11,0,14,10,105,9,1,15
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,15
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,14,10,91,9,1,15
	.byte	'IfxPort_OutputIdx_general',0,128,1,15
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,15
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,15
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,15
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,15
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,15
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,15
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0
.L207:
	.byte	9
	.byte	'IfxPort_setPinModeOutput',0,3,10,137,4,17,1,1
.L209:
	.byte	10
	.byte	'port',0,10,137,4,49
	.word	9194
.L211:
	.byte	10
	.byte	'pinIndex',0,10,137,4,61
	.word	367
.L213:
	.byte	10
	.byte	'mode',0,10,137,4,90
	.word	9404
.L215:
	.byte	10
	.byte	'index',0,10,137,4,114
	.word	9473
.L217:
	.byte	11,0,14,10,131,1,9,4,15
	.byte	'IfxPort_State_notChanged',0,0,15
	.byte	'IfxPort_State_high',0,1,15
	.byte	'IfxPort_State_low',0,128,128,4,15
	.byte	'IfxPort_State_toggled',0,129,128,4,0,9
	.byte	'IfxPort_setPinState',0,3,10,143,4,17,1,1,10
	.byte	'port',0,10,143,4,44
	.word	9194
	.byte	10
	.byte	'pinIndex',0,10,143,4,56
	.word	367
	.byte	10
	.byte	'action',0,10,143,4,80
	.word	9786
	.byte	11,0,3
	.byte	'_Ifx_SENT_CLC_Bits',0,13,169,2,16,4,4
	.byte	'DISR',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'DISS',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'EDIS',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,1
	.word	367
	.byte	4,0,2,35,0,4
	.byte	'RMC',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0
.L102:
	.byte	5,13,150,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	9967
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_ID_Bits',0,13,191,2,16,4,4
	.byte	'MODREV',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'MODTYPE',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'MODNUMBER',0,2
	.word	384
	.byte	16,0,2,35,2,0,5,13,166,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	10163
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_FDR_Bits',0,13,181,2,16,4,4
	.byte	'STEP',0,2
	.word	384
	.byte	10,6,2,35,0,4
	.byte	'reserved_10',0,1
	.word	367
	.byte	4,2,2,35,1,4
	.byte	'DM',0,1
	.word	367
	.byte	2,0,2,35,1,4
	.byte	'RESULT',0,2
	.word	384
	.byte	10,6,2,35,2,4
	.byte	'reserved_26',0,1
	.word	367
	.byte	6,0,2,35,3,0,5,13,158,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	10286
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_INTOV_Bits',0,13,199,2,16,4,4
	.byte	'IPC0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'IPC1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'IPC2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'IPC3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	192
	.byte	28,0,2,35,0,0,5,13,174,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	10446
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_TSR_Bits',0,13,139,3,16,4,4
	.byte	'CTS',0,4
	.word	192
	.byte	32,0,2,35,0,0,5,13,238,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	10600
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_TPD_Bits',0,13,132,3,16,4,4
	.byte	'TDIV',0,4
	.word	192
	.byte	20,12,2,35,0,4
	.byte	'reserved_20',0,2
	.word	384
	.byte	12,0,2,35,2,0,5,13,230,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	10681
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_RDR_Bits',0,13,241,2,16,4,4
	.byte	'RD0',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'RD1',0,1
	.word	367
	.byte	4,0,2,35,0,4
	.byte	'RD2',0,1
	.word	367
	.byte	4,4,2,35,1,4
	.byte	'RD3',0,1
	.word	367
	.byte	4,0,2,35,1,4
	.byte	'RD4',0,1
	.word	367
	.byte	4,4,2,35,2,4
	.byte	'RD5',0,1
	.word	367
	.byte	4,0,2,35,2,4
	.byte	'RD6',0,1
	.word	367
	.byte	4,4,2,35,3,4
	.byte	'RD7',0,1
	.word	367
	.byte	4,0,2,35,3,0,5,13,214,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	10786
	.byte	4,2,35,0,0,17,16
	.word	10932
	.byte	18,3,0,17,88
	.word	367
	.byte	18,87,0,3
	.byte	'_Ifx_SENT_OCS_Bits',0,13,231,2,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	24,8,2,35,0,4
	.byte	'SUS',0,1
	.word	367
	.byte	4,4,2,35,3,4
	.byte	'SUS_P',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'SUSSTA',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'reserved_30',0,1
	.word	367
	.byte	2,0,2,35,3,0,5,13,206,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	10990
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_KRSTCLR_Bits',0,13,224,2,16,4,4
	.byte	'CLR',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'reserved_1',0,4
	.word	192
	.byte	31,0,2,35,0,0,5,13,198,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	11151
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_KRST1_Bits',0,13,217,2,16,4,4
	.byte	'RST',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'reserved_1',0,4
	.word	192
	.byte	31,0,2,35,0,0,5,13,190,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	11258
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_KRST0_Bits',0,13,209,2,16,4,4
	.byte	'RST',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'RSTSTAT',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	192
	.byte	30,0,2,35,0,0,5,13,182,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	11363
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_ACCEN1_Bits',0,13,82,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	32,0,2,35,0,0,5,13,158,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	11487
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_ACCEN0_Bits',0,13,45,16,4,4
	.byte	'EN0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'EN1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'EN2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'EN3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'EN4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'EN5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'EN6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'EN7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'EN8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'EN9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'EN10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'EN11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'EN12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'EN13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'EN14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'EN15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'EN16',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'EN17',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'EN18',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'EN19',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'EN20',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'EN21',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'EN22',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'EN23',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'EN24',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'EN25',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'EN26',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'EN27',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'EN28',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'EN29',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'EN30',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'EN31',0,1
	.word	367
	.byte	1,0,2,35,3,0,5,13,150,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	11577
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_CPDR_Bits',0,13,97,16,4,4
	.byte	'PDIV',0,2
	.word	384
	.byte	12,4,2,35,0,4
	.byte	'reserved_12',0,4
	.word	192
	.byte	20,0,2,35,0,0,5,13,174,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	12147
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_CFDR_Bits',0,13,88,16,4,4
	.byte	'DIV',0,2
	.word	384
	.byte	12,4,2,35,0,4
	.byte	'reserved_12',0,1
	.word	367
	.byte	4,0,2,35,1,4
	.byte	'DIVM',0,2
	.word	384
	.byte	12,4,2,35,2,4
	.byte	'reserved_28',0,1
	.word	367
	.byte	4,0,2,35,3,0,5,13,166,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	12255
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_RCR_Bits',0,13,219,1,16,4,4
	.byte	'CEN',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'IEP',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'ACE',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'SNI',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'SDP',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'SCDIS',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'CDIS',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'CFC',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'FRL',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'CRZ',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'ESF',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'IDE',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'SUSEN',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'reserved_20',0,2
	.word	384
	.byte	12,0,2,35,2,0
.L141:
	.byte	5,13,230,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	12401
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_RSR_Bits',0,13,238,1,16,4,4
	.byte	'CRC',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'CST',0,1
	.word	367
	.byte	2,2,2,35,0,4
	.byte	'reserved_6',0,1
	.word	367
	.byte	2,0,2,35,0,4
	.byte	'SCN',0,1
	.word	367
	.byte	4,4,2,35,1,4
	.byte	'reserved_12',0,4
	.word	192
	.byte	20,0,2,35,0,0,5,13,238,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	12693
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_SDS_Bits',0,13,131,2,16,4,4
	.byte	'SD',0,2
	.word	384
	.byte	16,0,2,35,0,4
	.byte	'MID',0,1
	.word	367
	.byte	8,0,2,35,2,4
	.byte	'SCRC',0,1
	.word	367
	.byte	6,2,2,35,3,4
	.byte	'reserved_30',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'CON',0,1
	.word	367
	.byte	1,0,2,35,3,0
.L262:
	.byte	5,13,254,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	12852
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_IOCR_Bits',0,13,197,1,16,4,4
	.byte	'ALTI',0,1
	.word	367
	.byte	2,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	2,4,2,35,0,4
	.byte	'DEPTH',0,1
	.word	367
	.byte	4,0,2,35,0,4
	.byte	'OIE',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'IIE',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'CEC',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'reserved_11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'REG',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'FEG',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'CREG',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'CFEG',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'ETS',0,1
	.word	367
	.byte	4,4,2,35,2,4
	.byte	'EC',0,2
	.word	384
	.byte	8,4,2,35,2,4
	.byte	'CTR',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'TRM',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'RXM',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'TXM',0,1
	.word	367
	.byte	1,0,2,35,3,0
.L154:
	.byte	5,13,222,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	13004
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_SCR_Bits',0,13,248,1,16,4,4
	.byte	'PLEN',0,1
	.word	367
	.byte	6,2,2,35,0,4
	.byte	'TRIG',0,1
	.word	367
	.byte	2,0,2,35,0,4
	.byte	'DEL',0,1
	.word	367
	.byte	6,2,2,35,1,4
	.byte	'BASE',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'TRQ',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0
.L163:
	.byte	5,13,246,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	13348
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_VIEW_Bits',0,13,141,2,16,4,4
	.byte	'RDNP0',0,1
	.word	367
	.byte	3,5,2,35,0,4
	.byte	'reserved_3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'RDNP1',0,1
	.word	367
	.byte	3,1,2,35,0,4
	.byte	'reserved_7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'RDNP2',0,1
	.word	367
	.byte	3,5,2,35,1,4
	.byte	'reserved_11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'RDNP3',0,1
	.word	367
	.byte	3,1,2,35,1,4
	.byte	'reserved_15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'RDNP4',0,1
	.word	367
	.byte	3,5,2,35,2,4
	.byte	'reserved_19',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'RDNP5',0,1
	.word	367
	.byte	3,1,2,35,2,4
	.byte	'reserved_23',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'RDNP6',0,1
	.word	367
	.byte	3,5,2,35,3,4
	.byte	'reserved_27',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'RDNP7',0,1
	.word	367
	.byte	3,1,2,35,3,4
	.byte	'reserved_31',0,1
	.word	367
	.byte	1,0,2,35,3,0
.L151:
	.byte	5,13,134,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	13518
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_INTSTAT_Bits',0,13,177,1,16,4,4
	.byte	'RSI',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'RDI',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'RBI',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'TDI',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'TBI',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'FRI',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'FDI',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'NNI',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'NVI',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'CRCI',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'WSI',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'SDI',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'SCRI',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'WDI',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'reserved_14',0,4
	.word	192
	.byte	18,0,2,35,0,0,5,13,214,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	13906
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_INTSET_Bits',0,13,157,1,16,4,4
	.byte	'RSI',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'RDI',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'RBI',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'TDI',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'TBI',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'FRI',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'FDI',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'NNI',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'NVI',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'CRCI',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'WSI',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'SDI',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'SCRI',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'WDI',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'reserved_14',0,4
	.word	192
	.byte	18,0,2,35,0,0,5,13,206,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	14214
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_INTCLR_Bits',0,13,117,16,4,4
	.byte	'RSI',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'RDI',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'RBI',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'TDI',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'TBI',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'FRI',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'FDI',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'NNI',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'NVI',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'CRCI',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'WSI',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'SDI',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'SCRI',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'WDI',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'reserved_14',0,4
	.word	192
	.byte	18,0,2,35,0,0,5,13,190,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	14521
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_INTEN_Bits',0,13,137,1,16,4,4
	.byte	'RSI',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'RDI',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'RBI',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'TDI',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'TBI',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'FRI',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'FDI',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'NNI',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'NVI',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'CRCI',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'WSI',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'SDI',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'SCRI',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'WDI',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'reserved_14',0,4
	.word	192
	.byte	18,0,2,35,0,0,5,13,198,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	14827
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_INP_Bits',0,13,104,16,4,4
	.byte	'RSI',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'RDI',0,1
	.word	367
	.byte	4,0,2,35,0,4
	.byte	'RBI',0,1
	.word	367
	.byte	4,4,2,35,1,4
	.byte	'TDI',0,1
	.word	367
	.byte	4,0,2,35,1,4
	.byte	'TBI',0,1
	.word	367
	.byte	4,4,2,35,2,4
	.byte	'ERRI',0,1
	.word	367
	.byte	4,0,2,35,2,4
	.byte	'SDI',0,1
	.word	367
	.byte	4,4,2,35,3,4
	.byte	'WDI',0,1
	.word	367
	.byte	4,0,2,35,3,0
.L157:
	.byte	5,13,182,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	15133
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH_WDT_Bits',0,13,162,2,16,4,4
	.byte	'WDLx',0,2
	.word	384
	.byte	16,0,2,35,0,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,5,13,142,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	15322
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_SENT_CH',0,13,254,4,25,64,6
	.byte	'CPDR',0
	.word	12215
	.byte	4,2,35,0,6
	.byte	'CFDR',0
	.word	12361
	.byte	4,2,35,4,6
	.byte	'RCR',0
	.word	12653
	.byte	4,2,35,8,6
	.byte	'RSR',0
	.word	12812
	.byte	4,2,35,12,6
	.byte	'SDS',0
	.word	12964
	.byte	4,2,35,16,6
	.byte	'IOCR',0
	.word	13308
	.byte	4,2,35,20,6
	.byte	'SCR',0
	.word	13478
	.byte	4,2,35,24,6
	.byte	'VIEW',0
	.word	13866
	.byte	4,2,35,28,6
	.byte	'INTSTAT',0
	.word	14174
	.byte	4,2,35,32,6
	.byte	'INTSET',0
	.word	14481
	.byte	4,2,35,36,6
	.byte	'INTCLR',0
	.word	14787
	.byte	4,2,35,40,6
	.byte	'INTEN',0
	.word	15093
	.byte	4,2,35,44,6
	.byte	'INP',0
	.word	15282
	.byte	4,2,35,48,6
	.byte	'WDT',0
	.word	15390
	.byte	4,2,35,52,6
	.byte	'reserved_38',0
	.word	5043
	.byte	8,2,35,56,0,17,128,2
	.word	15430
	.byte	18,3,0,7
	.word	15669
	.byte	17,128,17
	.word	367
	.byte	18,255,16,0,3
	.byte	'_Ifx_SENT_RTS_Bits',0,13,254,2,16,4,4
	.byte	'LTS',0,4
	.word	192
	.byte	32,0,2,35,0,0,5,13,222,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	15695
	.byte	4,2,35,0,0,17,16
	.word	15736
	.byte	18,3,0,17,112
	.word	367
	.byte	18,111,0,3
	.byte	'_Ifx_SENT',0,13,156,5,25,128,22,6
	.byte	'CLC',0
	.word	10123
	.byte	4,2,35,0,6
	.byte	'reserved_4',0
	.word	3224
	.byte	4,2,35,4,6
	.byte	'ID',0
	.word	10246
	.byte	4,2,35,8,6
	.byte	'FDR',0
	.word	10406
	.byte	4,2,35,12,6
	.byte	'reserved_10',0
	.word	3224
	.byte	4,2,35,16,6
	.byte	'INTOV',0
	.word	10560
	.byte	4,2,35,20,6
	.byte	'TSR',0
	.word	10641
	.byte	4,2,35,24,6
	.byte	'TPD',0
	.word	10746
	.byte	4,2,35,28,6
	.byte	'reserved_20',0
	.word	7993
	.byte	96,2,35,32,6
	.byte	'RDR',0
	.word	10972
	.byte	16,3,35,128,1,6
	.byte	'reserved_90',0
	.word	10981
	.byte	88,3,35,144,1,6
	.byte	'OCS',0
	.word	11111
	.byte	4,3,35,232,1,6
	.byte	'KRSTCLR',0
	.word	11218
	.byte	4,3,35,236,1,6
	.byte	'KRST1',0
	.word	11323
	.byte	4,3,35,240,1,6
	.byte	'KRST0',0
	.word	11447
	.byte	4,3,35,244,1,6
	.byte	'ACCEN1',0
	.word	11537
	.byte	4,3,35,248,1,6
	.byte	'ACCEN0',0
	.word	12107
	.byte	4,3,35,252,1,6
	.byte	'CH',0
	.word	15679
	.byte	128,2,3,35,128,2,6
	.byte	'reserved_200',0
	.word	15684
	.byte	128,17,3,35,128,4,6
	.byte	'RTS',0
	.word	15776
	.byte	16,3,35,128,21,6
	.byte	'reserved_A90',0
	.word	15785
	.byte	112,3,35,144,21,0,7
	.word	15794
.L89:
	.byte	8
	.word	16162
.L256:
	.byte	14,14,64,9,1,15
	.byte	'IfxSent_ChannelId_none',0,127,15
	.byte	'IfxSent_ChannelId_0',0,0,15
	.byte	'IfxSent_ChannelId_1',0,1,15
	.byte	'IfxSent_ChannelId_2',0,2,15
	.byte	'IfxSent_ChannelId_3',0,3,0,14,12,68,9,1,15
	.byte	'IfxSent_AlternateInput_0',0,0,15
	.byte	'IfxSent_AlternateInput_1',0,1,15
	.byte	'IfxSent_AlternateInput_2',0,2,15
	.byte	'IfxSent_AlternateInput_3',0,3,0
.L187:
	.byte	9
	.byte	'IfxSent_setAltiInput',0,3,12,215,3,17,1,1
.L189:
	.byte	10
	.byte	'sent',0,12,215,3,48
	.word	16167
.L191:
	.byte	10
	.byte	'channelId',0,12,215,3,72
	.word	16172
.L193:
	.byte	10
	.byte	'alternateInput',0,12,215,3,106
	.word	16291
.L195:
	.byte	11,0
.L110:
	.byte	9
	.byte	'IfxSent_setTimeStampPredivider',0,3,12,242,3,17,1,1
.L113:
	.byte	10
	.byte	'sent',0,12,242,3,58
	.word	16167
.L115:
	.byte	10
	.byte	'timeStampPreDivider',0,12,242,3,71
	.word	1989
.L117:
	.byte	11,0,12
	.byte	'IfxSent_getAndClearInterruptStatus',0,3,12,178,3,32
	.word	14174
	.byte	1,1,10
	.byte	'sent',0,12,178,3,77
	.word	16167
	.byte	10
	.byte	'channelId',0,12,178,3,101
	.word	16172
	.byte	11,0
.L221:
	.byte	12
	.byte	'IfxSent_getChannelSrc',0,3,12,195,3,35
	.word	1655
	.byte	1,1
.L223:
	.byte	10
	.byte	'channelId',0,12,195,3,75
	.word	16172
.L225:
	.byte	11,0
.L132:
	.byte	9
	.byte	'IfxSent_disableChannel',0,3,12,160,3,17,1,1
.L135:
	.byte	10
	.byte	'sent',0,12,160,3,50
	.word	16167
.L137:
	.byte	10
	.byte	'channelId',0,12,160,3,74
	.word	16172
.L139:
	.byte	11,0
.L143:
	.byte	9
	.byte	'IfxSent_enableChannel',0,3,12,166,3,17,1,1
.L146:
	.byte	10
	.byte	'sent',0,12,166,3,49
	.word	16167
.L148:
	.byte	10
	.byte	'channelId',0,12,166,3,73
	.word	16172
.L150:
	.byte	11,0
.L104:
	.byte	9
	.byte	'IfxSent_enableModule',0,3,12,172,3,17,1,1
.L107:
	.byte	10
	.byte	'sent',0,12,172,3,48
	.word	16167
.L109:
	.byte	11,0,19,10,149,1,9,8,6
	.byte	'port',0
	.word	9194
	.byte	4,2,35,0,6
	.byte	'pinIndex',0
	.word	367
	.byte	1,2,35,4,0,14,16,94,9,1,15
	.byte	'Ifx_RxSel_a',0,0,15
	.byte	'Ifx_RxSel_b',0,1,15
	.byte	'Ifx_RxSel_c',0,2,15
	.byte	'Ifx_RxSel_d',0,3,15
	.byte	'Ifx_RxSel_e',0,4,15
	.byte	'Ifx_RxSel_f',0,5,15
	.byte	'Ifx_RxSel_g',0,6,15
	.byte	'Ifx_RxSel_h',0,7,0,19,15,39,15,20,6
	.byte	'module',0
	.word	16167
	.byte	4,2,35,0,6
	.byte	'channelId',0
	.word	16172
	.byte	1,2,35,4,6
	.byte	'pin',0
	.word	16890
	.byte	8,2,35,8,6
	.byte	'select',0
	.word	16929
	.byte	1,2,35,16,0,20
	.word	17047
.L168:
	.byte	8
	.word	17117
.L170:
	.byte	9
	.byte	'IfxSent_initSentPin',0,3,12,201,3,17,1,1
.L172:
	.byte	10
	.byte	'sentIn',0,12,201,3,60
	.word	17122
.L174:
	.byte	10
	.byte	'inputMode',0,12,201,3,86
	.word	9199
.L176:
	.byte	16,11,11,0,0,19,15,48,15,20,6
	.byte	'module',0
	.word	16167
	.byte	4,2,35,0,6
	.byte	'channelId',0
	.word	16172
	.byte	1,2,35,4,6
	.byte	'pin',0
	.word	16890
	.byte	8,2,35,8,6
	.byte	'select',0
	.word	9473
	.byte	1,2,35,16,0,20
	.word	17195
.L196:
	.byte	8
	.word	17265
	.byte	14,10,115,9,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,15
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,15
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,15
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,15
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0
.L198:
	.byte	9
	.byte	'IfxSent_initSpcPin',0,3,12,208,3,17,1,1
.L200:
	.byte	10
	.byte	'spcOut',0,12,208,3,59
	.word	17270
.L202:
	.byte	10
	.byte	'spcOutMode',0,12,208,3,86
	.word	9404
.L204:
	.byte	10
	.byte	'padDriver',0,12,208,3,116
	.word	17275
.L206:
	.byte	16,11,0,0,21
	.word	954
	.byte	22
	.word	994
	.byte	22
	.word	1012
	.byte	11,0,21
	.word	1032
	.byte	22
	.word	1070
	.byte	22
	.word	1088
	.byte	11,0,23
	.byte	'IfxScuWdt_clearCpuEndinit',0,1,187,1,17,1,1,1,1,10
	.byte	'password',0,1,187,1,50
	.word	384
	.byte	0,23
	.byte	'IfxScuWdt_setCpuEndinit',0,1,209,1,17,1,1,1,1,10
	.byte	'password',0,1,209,1,48
	.word	384
	.byte	0,21
	.word	1108
	.byte	22
	.word	1159
	.byte	11,0,24
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,1,221,2,19
	.word	384
	.byte	1,1,1,1,21
	.word	1179
	.byte	11,0,21
	.word	1245
	.byte	22
	.word	1263
	.byte	11,0,21
	.word	1278
	.byte	22
	.word	1292
	.byte	22
	.word	1305
	.byte	11,0,21
	.word	1660
	.byte	22
	.word	1688
	.byte	11,0,21
	.word	1703
	.byte	22
	.word	1725
	.byte	11,0,21
	.word	1781
	.byte	22
	.word	1801
	.byte	22
	.word	1814
	.byte	22
	.word	1836
	.byte	16,25
	.word	1660
	.byte	22
	.word	1688
	.byte	26
	.word	1701
	.byte	0,11,0,0,21
	.word	1913
	.byte	11,0,21
	.word	1947
	.byte	11,0,21
	.word	2010
	.byte	22
	.word	2051
	.byte	11,0,21
	.word	2070
	.byte	22
	.word	2125
	.byte	11,0,21
	.word	2144
	.byte	22
	.word	2184
	.byte	22
	.word	2201
	.byte	11,0,21
	.word	9324
	.byte	22
	.word	9356
	.byte	22
	.word	9370
	.byte	22
	.word	9388
	.byte	11,0,21
	.word	9690
	.byte	22
	.word	9723
	.byte	22
	.word	9737
	.byte	22
	.word	9755
	.byte	22
	.word	9769
	.byte	11,0,21
	.word	9889
	.byte	22
	.word	9917
	.byte	22
	.word	9931
	.byte	22
	.word	9949
	.byte	11,0,14,10,66,9,1,15
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,15
	.byte	'IfxPort_Mode_inputPullDown',0,8,15
	.byte	'IfxPort_Mode_inputPullUp',0,16,15
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,15
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,23
	.byte	'IfxPort_setPinMode',0,10,206,2,17,1,1,1,1,10
	.byte	'port',0,10,206,2,43
	.word	9194
	.byte	10
	.byte	'pinIndex',0,10,206,2,55
	.word	367
	.byte	10
	.byte	'mode',0,10,206,2,78
	.word	18075
	.byte	0,23
	.byte	'IfxPort_setPinPadDriver',0,10,221,2,17,1,1,1,1,10
	.byte	'port',0,10,221,2,48
	.word	9194
	.byte	10
	.byte	'pinIndex',0,10,221,2,60
	.word	367
	.byte	10
	.byte	'padDriver',0,10,221,2,88
	.word	17275
	.byte	0,21
	.word	16405
	.byte	22
	.word	16434
	.byte	22
	.word	16448
	.byte	22
	.word	16467
	.byte	11,0,21
	.word	16493
	.byte	22
	.word	16532
	.byte	22
	.word	16546
	.byte	11,0,21
	.word	16577
	.byte	22
	.word	16624
	.byte	22
	.word	16638
	.byte	11,0,21
	.word	16659
	.byte	22
	.word	16693
	.byte	11,0,21
	.word	16714
	.byte	22
	.word	16745
	.byte	22
	.word	16759
	.byte	11,0,21
	.word	16780
	.byte	22
	.word	16810
	.byte	22
	.word	16824
	.byte	11,0,21
	.word	16845
	.byte	22
	.word	16874
	.byte	11,0,23
	.byte	'IfxSent_resetModule',0,12,194,2,17,1,1,1,1,10
	.byte	'sent',0,12,194,2,47
	.word	16167
	.byte	0,2
	.byte	'float',0,4,4,23
	.byte	'IfxSent_initializeChannelUnitTime',0,12,237,2,17,1,1,1,1,10
	.byte	'sent',0,12,237,2,61
	.word	16167
	.byte	10
	.byte	'channelId',0,12,237,2,85
	.word	16172
	.byte	10
	.byte	'tUnit',0,12,237,2,104
	.word	19062
	.byte	0,14,12,88,9,1,15
	.byte	'IfxSent_ClockDividerMode_off',0,0,15
	.byte	'IfxSent_ClockDividerMode_normal',0,1,15
	.byte	'IfxSent_ClockDividerMode_fractional',0,2,0,23
	.byte	'IfxSent_initializeModuleClock',0,12,245,2,17,1,1,1,1,10
	.byte	'sent',0,12,245,2,57
	.word	16167
	.byte	10
	.byte	'dividerMode',0,12,245,2,88
	.word	19163
	.byte	10
	.byte	'stepValue',0,12,245,2,108
	.word	384
	.byte	0,21
	.word	17127
	.byte	22
	.word	17155
	.byte	22
	.word	17171
	.byte	16,25
	.word	9324
	.byte	22
	.word	9356
	.byte	22
	.word	9370
	.byte	22
	.word	9388
	.byte	26
	.word	9402
	.byte	0,11,25
	.word	16405
	.byte	22
	.word	16434
	.byte	22
	.word	16448
	.byte	22
	.word	16467
	.byte	26
	.word	16491
	.byte	0,11,0,0,21
	.word	17565
	.byte	22
	.word	17592
	.byte	22
	.word	17608
	.byte	22
	.word	17628
	.byte	16,25
	.word	9690
	.byte	22
	.word	9723
	.byte	22
	.word	9737
	.byte	22
	.word	9755
	.byte	22
	.word	9769
	.byte	26
	.word	9784
	.byte	0,11,0,0,19,17,145,3,9,4,6
	.byte	'sent',0
	.word	16167
	.byte	4,2,35,0,0
.L87:
	.byte	8
	.word	19493
	.byte	19,17,154,4,9,12,6
	.byte	'module',0
	.word	16167
	.byte	4,2,35,0,6
	.byte	'sleepModeEnabled',0
	.word	367
	.byte	1,2,35,4,6
	.byte	'timeStampPreDivider',0
	.word	1989
	.byte	4,2,35,6,0,20
	.word	19519
.L96:
	.byte	8
	.word	19597
.L119:
	.byte	8
	.word	19519
	.byte	7
	.word	15430
.L130:
	.byte	8
	.word	19612
	.byte	19,17,254,3,9,12,6
	.byte	'driver',0
	.word	19514
	.byte	4,2,35,0,6
	.byte	'channel',0
	.word	19617
	.byte	4,2,35,4,6
	.byte	'channelId',0
	.word	16172
	.byte	1,2,35,8,0
.L123:
	.byte	8
	.word	19622
	.byte	14,12,105,9,1,15
	.byte	'IfxSent_DigitalGlitchesLength_off',0,0,15
	.byte	'IfxSent_DigitalGlitchesLength_1',0,1,15
	.byte	'IfxSent_DigitalGlitchesLength_2',0,2,15
	.byte	'IfxSent_DigitalGlitchesLength_3',0,3,15
	.byte	'IfxSent_DigitalGlitchesLength_4',0,4,15
	.byte	'IfxSent_DigitalGlitchesLength_5',0,5,15
	.byte	'IfxSent_DigitalGlitchesLength_6',0,6,15
	.byte	'IfxSent_DigitalGlitchesLength_7',0,7,15
	.byte	'IfxSent_DigitalGlitchesLength_8',0,8,15
	.byte	'IfxSent_DigitalGlitchesLength_9',0,9,15
	.byte	'IfxSent_DigitalGlitchesLength_10',0,10,15
	.byte	'IfxSent_DigitalGlitchesLength_11',0,11,15
	.byte	'IfxSent_DigitalGlitchesLength_12',0,12,15
	.byte	'IfxSent_DigitalGlitchesLength_13',0,13,15
	.byte	'IfxSent_DigitalGlitchesLength_14',0,14,15
	.byte	'IfxSent_DigitalGlitchesLength_15',0,15,0,14,12,135,1,9,1,15
	.byte	'IfxSent_ExternalTrigger_0',0,0,15
	.byte	'IfxSent_ExternalTrigger_1',0,1,15
	.byte	'IfxSent_ExternalTrigger_2',0,2,15
	.byte	'IfxSent_ExternalTrigger_3',0,3,15
	.byte	'IfxSent_ExternalTrigger_4',0,4,15
	.byte	'IfxSent_ExternalTrigger_5',0,5,15
	.byte	'IfxSent_ExternalTrigger_6',0,6,15
	.byte	'IfxSent_ExternalTrigger_7',0,7,15
	.byte	'IfxSent_ExternalTrigger_8',0,8,15
	.byte	'IfxSent_ExternalTrigger_9',0,9,0,19,17,160,3,9,8,6
	.byte	'inputPulsePolarityHigh',0
	.word	367
	.byte	1,2,35,0,6
	.byte	'outputPulsePolarityHigh',0
	.word	367
	.byte	1,2,35,1,6
	.byte	'edgeCounterCleared',0
	.word	367
	.byte	1,2,35,2,6
	.byte	'glitchFallingCleared',0
	.word	367
	.byte	1,2,35,3,6
	.byte	'glitchRisingCleared',0
	.word	367
	.byte	1,2,35,4,6
	.byte	'triggerMonitorCleared',0
	.word	367
	.byte	1,2,35,5,6
	.byte	'digitalGlitchFilterDepth',0
	.word	19686
	.byte	1,2,35,6,6
	.byte	'externalTrigger',0
	.word	20244
	.byte	1,2,35,7,0,14,12,151,1,9,1,15
	.byte	'IfxSent_FrameCheckMode_pastSyncPulse',0,0,15
	.byte	'IfxSent_FrameCheckMode_futureSuncPulse',0,1,0,14,12,127,9,1,15
	.byte	'IfxSent_ExtendedSerialFrameMode_standard',0,0,15
	.byte	'IfxSent_ExtendedSerialFrameMode_extended',0,1,0,19,17,221,3,9,12,6
	.byte	'crcModeDisabled',0
	.word	367
	.byte	1,2,35,0,6
	.byte	'crcMethodDisabled',0
	.word	367
	.byte	1,2,35,1,6
	.byte	'alternateCrcSelected',0
	.word	367
	.byte	1,2,35,2,6
	.byte	'serialDataProcessingEnabled',0
	.word	367
	.byte	1,2,35,3,6
	.byte	'serialDataDisabledCrcDisabled',0
	.word	367
	.byte	1,2,35,4,6
	.byte	'statusNibbleEnabled',0
	.word	367
	.byte	1,2,35,5,6
	.byte	'driftErrorsDisabled',0
	.word	367
	.byte	1,2,35,6,6
	.byte	'endPulseIgnored',0
	.word	367
	.byte	1,2,35,7,6
	.byte	'suspendTriggered',0
	.word	367
	.byte	1,2,35,8,6
	.byte	'frameLength',0
	.word	367
	.byte	1,2,35,9,6
	.byte	'frameCheckMode',0
	.word	20780
	.byte	1,2,35,10,6
	.byte	'extendedSerialFrameMode',0
	.word	20867
	.byte	1,2,35,11,0,14,12,215,1,9,1,15
	.byte	'IfxSent_TriggerSource_off',0,0,15
	.byte	'IfxSent_TriggerSource_immediate',0,1,15
	.byte	'IfxSent_TriggerSource_fallingEdge',0,2,15
	.byte	'IfxSent_TriggerSource_externalTrigger',0,3,0,14,12,207,1,9,1,15
	.byte	'IfxSent_TimeBase_measuredFrequency',0,0,15
	.byte	'IfxSent_TimeBase_nominalFrequency',0,1,0,14,12,198,1,9,1,15
	.byte	'IfxSent_SpcMode_sync',0,0,15
	.byte	'IfxSent_SpcMode_range',0,1,15
	.byte	'IfxSent_SpcMode_bidirectional',0,2,0,19,17,239,3,9,6,6
	.byte	'pulseLength',0
	.word	367
	.byte	1,2,35,0,6
	.byte	'pulseDelayLength',0
	.word	367
	.byte	1,2,35,1,6
	.byte	'triggerSource',0
	.word	21311
	.byte	1,2,35,2,6
	.byte	'timeBase',0
	.word	21456
	.byte	1,2,35,3,6
	.byte	'spcMode',0
	.word	21536
	.byte	1,2,35,4,0,14,12,159,1,9,1,15
	.byte	'IfxSent_InterruptNodePointer_0',0,0,15
	.byte	'IfxSent_InterruptNodePointer_1',0,1,15
	.byte	'IfxSent_InterruptNodePointer_2',0,2,15
	.byte	'IfxSent_InterruptNodePointer_3',0,3,15
	.byte	'IfxSent_InterruptNodePointer_trigo0',0,4,15
	.byte	'IfxSent_InterruptNodePointer_trigo1',0,5,15
	.byte	'IfxSent_InterruptNodePointer_trigo2',0,6,15
	.byte	'IfxSent_InterruptNodePointer_trigo3',0,7,15
	.byte	'IfxSent_InterruptNodePointer_trigo4',0,8,15
	.byte	'IfxSent_InterruptNodePointer_trigo5',0,9,0,19,17,182,3,9,8,6
	.byte	'receiveSuccessInterruptNode',0
	.word	21734
	.byte	1,2,35,0,6
	.byte	'receiveDataInterruptNode',0
	.word	21734
	.byte	1,2,35,1,6
	.byte	'receiveBufferOverflowInterruptNode',0
	.word	21734
	.byte	1,2,35,2,6
	.byte	'transferDataInterruptNode',0
	.word	21734
	.byte	1,2,35,3,6
	.byte	'transferBufferUnderflowInterruptNode',0
	.word	21734
	.byte	1,2,35,4,6
	.byte	'errorInterruptNode',0
	.word	21734
	.byte	1,2,35,5,6
	.byte	'serialDataReceiveInterruptNode',0
	.word	21734
	.byte	1,2,35,6,6
	.byte	'watchdogErrorInterruptNode',0
	.word	21734
	.byte	1,2,35,7,0,19,17,210,3,9,16,6
	.byte	'in',0
	.word	17122
	.byte	4,2,35,0,6
	.byte	'inMode',0
	.word	9199
	.byte	1,2,35,4,6
	.byte	'out',0
	.word	17270
	.byte	4,2,35,8,6
	.byte	'outMode',0
	.word	9404
	.byte	1,2,35,12,6
	.byte	'pinDriver',0
	.word	17275
	.byte	1,2,35,13,0,20
	.word	22408
.L165:
	.byte	8
	.word	22492
	.byte	14,12,175,1,9,1,15
	.byte	'IfxSent_Nibble_0',0,0,15
	.byte	'IfxSent_Nibble_1',0,1,15
	.byte	'IfxSent_Nibble_2',0,2,15
	.byte	'IfxSent_Nibble_3',0,3,15
	.byte	'IfxSent_Nibble_4',0,4,15
	.byte	'IfxSent_Nibble_5',0,5,15
	.byte	'IfxSent_Nibble_6',0,6,15
	.byte	'IfxSent_Nibble_7',0,7,0,19,17,196,3,9,8,6
	.byte	'nibblePointer0',0
	.word	22502
	.byte	1,2,35,0,6
	.byte	'nibblePointer1',0
	.word	22502
	.byte	1,2,35,1,6
	.byte	'nibblePointer2',0
	.word	22502
	.byte	1,2,35,2,6
	.byte	'nibblePointer3',0
	.word	22502
	.byte	1,2,35,3,6
	.byte	'nibblePointer4',0
	.word	22502
	.byte	1,2,35,4,6
	.byte	'nibblePointer5',0
	.word	22502
	.byte	1,2,35,5,6
	.byte	'nibblePointer6',0
	.word	22502
	.byte	1,2,35,6,6
	.byte	'nibblePointer7',0
	.word	22502
	.byte	1,2,35,7,0,19,17,174,3,9,4,6
	.byte	'priority',0
	.word	384
	.byte	2,2,35,0,6
	.byte	'isrProvider',0
	.word	1740
	.byte	1,2,35,2,0,19,17,249,2,9,16,6
	.byte	'receiveDataInterrupt',0
	.word	367
	.byte	1,2,35,0,6
	.byte	'receiveSuccessInterrupt',0
	.word	367
	.byte	1,2,35,1,6
	.byte	'receiveBufferOverflowInterrupt',0
	.word	367
	.byte	1,2,35,2,6
	.byte	'transferDataInterrupt',0
	.word	367
	.byte	1,2,35,3,6
	.byte	'transferBufferUnderflowInterrupt',0
	.word	367
	.byte	1,2,35,4,6
	.byte	'serialDataReceiveInterrupt',0
	.word	367
	.byte	1,2,35,5,6
	.byte	'watchdogErrorInterrupt',0
	.word	367
	.byte	1,2,35,6,6
	.byte	'serialDataCrcErrorInterrupt',0
	.word	367
	.byte	1,2,35,7,6
	.byte	'wrongStatusNibbleErrorInterrupt',0
	.word	367
	.byte	1,2,35,8,6
	.byte	'crcErrorInterrupt',0
	.word	367
	.byte	1,2,35,9,6
	.byte	'nibblesValueOutOfRangeErrorInterrupt',0
	.word	367
	.byte	1,2,35,10,6
	.byte	'nibblesWrongErrorInterrupt',0
	.word	367
	.byte	1,2,35,11,6
	.byte	'frequencyDriftErrorInterrupt',0
	.word	367
	.byte	1,2,35,12,6
	.byte	'frequencyRangeErrorInterrupt',0
	.word	367
	.byte	1,2,35,13,0,5,17,152,3,9,16,6
	.byte	'ALL',0
	.word	1989
	.byte	4,2,35,0,6
	.byte	'enable',0
	.word	22906
	.byte	16,2,35,0,0,19,17,135,4,9,84,6
	.byte	'driver',0
	.word	19514
	.byte	4,2,35,0,6
	.byte	'watchDogTimerLimit',0
	.word	384
	.byte	2,2,35,4,6
	.byte	'channelId',0
	.word	16172
	.byte	1,2,35,6,6
	.byte	'inputOutputControl',0
	.word	20531
	.byte	8,2,35,8,6
	.byte	'receiveControl',0
	.word	20959
	.byte	12,2,35,16,6
	.byte	'transmitControl',0
	.word	21622
	.byte	6,2,35,28,6
	.byte	'interuptNodeControl',0
	.word	22101
	.byte	8,2,35,36,6
	.byte	'pins',0
	.word	22497
	.byte	4,2,35,44,6
	.byte	'tUnit',0
	.word	19062
	.byte	4,2,35,48,6
	.byte	'nibbleControl',0
	.word	22661
	.byte	8,2,35,52,6
	.byte	'interrupt',0
	.word	22860
	.byte	4,2,35,60,6
	.byte	'spcModeOn',0
	.word	367
	.byte	1,2,35,64,6
	.byte	'enabledInterrupts',0
	.word	23420
	.byte	16,2,35,68,0,20
	.word	23456
.L125:
	.byte	8
	.word	23749
.L248:
	.byte	8
	.word	23456
	.byte	19,17,163,4,9,12,6
	.byte	'data',0
	.word	1989
	.byte	4,2,35,0,6
	.byte	'timeStamp',0
	.word	1989
	.byte	4,2,35,4,6
	.byte	'statusNibble',0
	.word	367
	.byte	1,2,35,8,0
.L253:
	.byte	8
	.word	23764
	.byte	14,12,97,9,1,15
	.byte	'IfxSent_ConfigBit_0',0,0,15
	.byte	'IfxSent_ConfigBit_1',0,1,0,19,17,172,4,9,6,6
	.byte	'crc',0
	.word	367
	.byte	1,2,35,0,6
	.byte	'messageId',0
	.word	367
	.byte	1,2,35,1,6
	.byte	'serialData',0
	.word	384
	.byte	2,2,35,2,6
	.byte	'configBit',0
	.word	23831
	.byte	1,2,35,4,0
.L260:
	.byte	8
	.word	23881
	.byte	2
	.byte	'short int',0,2,5,27
	.byte	'__wchar_t',0,18,1,1
	.word	23964
	.byte	27
	.byte	'__size_t',0,18,1,1
	.word	192
	.byte	27
	.byte	'__ptrdiff_t',0,18,1,1
	.word	208
	.byte	28,1,8
	.word	24032
	.byte	27
	.byte	'__codeptr',0,18,1,1
	.word	24034
	.byte	27
	.byte	'__intptr_t',0,18,1,1
	.word	208
	.byte	27
	.byte	'__uintptr_t',0,18,1,1
	.word	192
	.byte	27
	.byte	'_iob_flag_t',0,19,82,25
	.word	384
	.byte	14,20,139,10,9,1,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,27
	.byte	'IfxScu_CCUCON0_CLKSEL',0,20,143,10,3
	.word	24116
	.byte	14,20,153,10,9,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,15
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,27
	.byte	'IfxScu_WDTCON1_IR',0,20,158,10,3
	.word	24213
	.byte	27
	.byte	'uint8',0,21,89,24
	.word	367
	.byte	27
	.byte	'sint16',0,21,90,24
	.word	23964
	.byte	27
	.byte	'uint16',0,21,91,24
	.word	384
	.byte	2
	.byte	'long int',0,4,5,27
	.byte	'sint32',0,21,92,24
	.word	24379
	.byte	27
	.byte	'uint32',0,21,93,24
	.word	1989
	.byte	27
	.byte	'float32',0,21,94,24
	.word	19062
	.byte	27
	.byte	'boolean',0,21,104,24
	.word	367
	.byte	2
	.byte	'long long int',0,8,5,27
	.byte	'sint64',0,16,36,28
	.word	24453
	.byte	27
	.byte	'uint64',0,16,37,28
	.word	1208
	.byte	27
	.byte	'pvoid',0,16,40,28
	.word	1240
	.byte	27
	.byte	'Ifx_TickTime',0,16,43,28
	.word	24453
	.byte	27
	.byte	'Ifx_Priority',0,16,67,16
	.word	384
	.byte	27
	.byte	'Ifx_RxSel',0,16,104,3
	.word	16929
	.byte	3
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,2,45,16,4,4
	.byte	'EN0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'EN1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'EN2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'EN3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'EN4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'EN5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'EN6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'EN7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'EN8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'EN9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'EN10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'EN11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'EN12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'EN13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'EN14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'EN15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'EN16',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'EN17',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'EN18',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'EN19',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'EN20',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'EN21',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'EN22',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'EN23',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'EN24',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'EN25',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'EN26',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'EN27',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'EN28',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'EN29',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'EN30',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'EN31',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_ACCEN0_Bits',0,2,79,3
	.word	24574
	.byte	3
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,2,82,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_SCU_ACCEN1_Bits',0,2,85,3
	.word	25131
	.byte	3
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,2,88,16,4,4
	.byte	'STM0DIS',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'STM1DIS',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'STM2DIS',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'reserved_3',0,4
	.word	192
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,2,94,3
	.word	25208
	.byte	3
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,2,97,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'BAUD2DIV',0,1
	.word	367
	.byte	4,0,2,35,0,4
	.byte	'SRIDIV',0,1
	.word	367
	.byte	4,4,2,35,1,4
	.byte	'LPDIV',0,1
	.word	367
	.byte	4,0,2,35,1,4
	.byte	'SPBDIV',0,1
	.word	367
	.byte	4,4,2,35,2,4
	.byte	'FSI2DIV',0,1
	.word	367
	.byte	2,2,2,35,2,4
	.byte	'reserved_22',0,1
	.word	367
	.byte	2,0,2,35,2,4
	.byte	'FSIDIV',0,1
	.word	367
	.byte	2,6,2,35,3,4
	.byte	'reserved_26',0,1
	.word	367
	.byte	2,4,2,35,3,4
	.byte	'CLKSEL',0,1
	.word	367
	.byte	2,2,2,35,3,4
	.byte	'UP',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON0_Bits',0,2,111,3
	.word	25344
	.byte	3
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,2,114,16,4,4
	.byte	'CANDIV',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'ERAYDIV',0,1
	.word	367
	.byte	4,0,2,35,0,4
	.byte	'STMDIV',0,1
	.word	367
	.byte	4,4,2,35,1,4
	.byte	'GTMDIV',0,1
	.word	367
	.byte	4,0,2,35,1,4
	.byte	'ETHDIV',0,1
	.word	367
	.byte	4,4,2,35,2,4
	.byte	'ASCLINFDIV',0,1
	.word	367
	.byte	4,0,2,35,2,4
	.byte	'ASCLINSDIV',0,1
	.word	367
	.byte	4,4,2,35,3,4
	.byte	'INSEL',0,1
	.word	367
	.byte	2,2,2,35,3,4
	.byte	'UP',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON1_Bits',0,2,126,3
	.word	25626
	.byte	3
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,2,129,1,16,4,4
	.byte	'BBBDIV',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	192
	.byte	26,2,2,35,0,4
	.byte	'UP',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON2_Bits',0,2,135,1,3
	.word	25864
	.byte	3
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,2,138,1,16,4,4
	.byte	'PLLDIV',0,1
	.word	367
	.byte	6,2,2,35,0,4
	.byte	'PLLSEL',0,1
	.word	367
	.byte	2,0,2,35,0,4
	.byte	'PLLERAYDIV',0,1
	.word	367
	.byte	6,2,2,35,1,4
	.byte	'PLLERAYSEL',0,1
	.word	367
	.byte	2,0,2,35,1,4
	.byte	'SRIDIV',0,1
	.word	367
	.byte	6,2,2,35,2,4
	.byte	'SRISEL',0,1
	.word	367
	.byte	2,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	6,2,2,35,3,4
	.byte	'UP',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON3_Bits',0,2,149,1,3
	.word	25992
	.byte	3
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,2,152,1,16,4,4
	.byte	'SPBDIV',0,1
	.word	367
	.byte	6,2,2,35,0,4
	.byte	'SPBSEL',0,1
	.word	367
	.byte	2,0,2,35,0,4
	.byte	'GTMDIV',0,1
	.word	367
	.byte	6,2,2,35,1,4
	.byte	'GTMSEL',0,1
	.word	367
	.byte	2,0,2,35,1,4
	.byte	'STMDIV',0,1
	.word	367
	.byte	6,2,2,35,2,4
	.byte	'STMSEL',0,1
	.word	367
	.byte	2,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	6,2,2,35,3,4
	.byte	'UP',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON4_Bits',0,2,163,1,3
	.word	26219
	.byte	3
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,2,166,1,16,4,4
	.byte	'MAXDIV',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	192
	.byte	26,2,2,35,0,4
	.byte	'UP',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON5_Bits',0,2,172,1,3
	.word	26438
	.byte	3
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,2,175,1,16,4,4
	.byte	'CPU0DIV',0,1
	.word	367
	.byte	6,2,2,35,0,4
	.byte	'reserved_6',0,4
	.word	192
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON6_Bits',0,2,179,1,3
	.word	26566
	.byte	3
	.byte	'_Ifx_SCU_CHIPID_Bits',0,2,182,1,16,4,4
	.byte	'CHREV',0,1
	.word	367
	.byte	6,2,2,35,0,4
	.byte	'CHTEC',0,1
	.word	367
	.byte	2,0,2,35,0,4
	.byte	'CHID',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'EEA',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'UCODE',0,1
	.word	367
	.byte	7,0,2,35,2,4
	.byte	'FSIZE',0,1
	.word	367
	.byte	4,4,2,35,3,4
	.byte	'SP',0,1
	.word	367
	.byte	2,2,2,35,3,4
	.byte	'SEC',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'reserved_31',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CHIPID_Bits',0,2,193,1,3
	.word	26666
	.byte	3
	.byte	'_Ifx_SCU_DTSCON_Bits',0,2,196,1,16,4,4
	.byte	'PWD',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'START',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	2,4,2,35,0,4
	.byte	'CAL',0,4
	.word	192
	.byte	22,6,2,35,0,4
	.byte	'reserved_26',0,1
	.word	367
	.byte	5,1,2,35,3,4
	.byte	'SLCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_DTSCON_Bits',0,2,204,1,3
	.word	26874
	.byte	3
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,2,207,1,16,4,4
	.byte	'LOWER',0,2
	.word	384
	.byte	10,6,2,35,0,4
	.byte	'reserved_10',0,1
	.word	367
	.byte	5,1,2,35,1,4
	.byte	'LLU',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'UPPER',0,2
	.word	384
	.byte	10,6,2,35,2,4
	.byte	'reserved_26',0,1
	.word	367
	.byte	4,2,2,35,3,4
	.byte	'SLCK',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'UOF',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_DTSLIM_Bits',0,2,216,1,3
	.word	27039
	.byte	3
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,2,219,1,16,4,4
	.byte	'RESULT',0,2
	.word	384
	.byte	10,6,2,35,0,4
	.byte	'reserved_10',0,1
	.word	367
	.byte	4,2,2,35,1,4
	.byte	'RDY',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'BUSY',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,2,226,1,3
	.word	27222
	.byte	3
	.byte	'_Ifx_SCU_EICR_Bits',0,2,229,1,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'EXIS0',0,1
	.word	367
	.byte	3,1,2,35,0,4
	.byte	'reserved_7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'FEN0',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'REN0',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'LDEN0',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'EIEN0',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'INP0',0,1
	.word	367
	.byte	3,1,2,35,1,4
	.byte	'reserved_15',0,4
	.word	192
	.byte	5,12,2,35,0,4
	.byte	'EXIS1',0,1
	.word	367
	.byte	3,1,2,35,2,4
	.byte	'reserved_23',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'FEN1',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'REN1',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'LDEN1',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'EIEN1',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'INP1',0,1
	.word	367
	.byte	3,1,2,35,3,4
	.byte	'reserved_31',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EICR_Bits',0,2,248,1,3
	.word	27376
	.byte	3
	.byte	'_Ifx_SCU_EIFR_Bits',0,2,251,1,16,4,4
	.byte	'INTF0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'INTF1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'INTF2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'INTF3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'INTF4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'INTF5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'INTF6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'INTF7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,4
	.word	192
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_SCU_EIFR_Bits',0,2,134,2,3
	.word	27740
	.byte	3
	.byte	'_Ifx_SCU_EMSR_Bits',0,2,137,2,16,4,4
	.byte	'POL',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'MODE',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'ENON',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'PSEL',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,2
	.word	384
	.byte	12,0,2,35,0,4
	.byte	'EMSF',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'SEMSF',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'reserved_18',0,1
	.word	367
	.byte	6,0,2,35,2,4
	.byte	'EMSFM',0,1
	.word	367
	.byte	2,6,2,35,3,4
	.byte	'SEMSFM',0,1
	.word	367
	.byte	2,4,2,35,3,4
	.byte	'reserved_28',0,1
	.word	367
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_SCU_EMSR_Bits',0,2,150,2,3
	.word	27951
	.byte	3
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,2,153,2,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	7,1,2,35,0,4
	.byte	'EDCON',0,2
	.word	384
	.byte	2,7,2,35,0,4
	.byte	'reserved_9',0,4
	.word	192
	.byte	23,0,2,35,0,0,27
	.byte	'Ifx_SCU_ESRCFG_Bits',0,2,158,2,3
	.word	28203
	.byte	3
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,2,161,2,16,4,4
	.byte	'ARI',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'ARC',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	192
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_ESROCFG_Bits',0,2,166,2,3
	.word	28321
	.byte	3
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,2,169,2,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	28,4,2,35,0,4
	.byte	'EVR13OFF',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'BPEVR13OFF',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'reserved_30',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVR13CON_Bits',0,2,176,2,3
	.word	28432
	.byte	3
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,2,179,2,16,4,4
	.byte	'ADC13V',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'ADCSWDV',0,1
	.word	367
	.byte	8,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	7,1,2,35,3,4
	.byte	'VAL',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,2,186,2,3
	.word	28595
	.byte	3
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,2,189,2,16,4,4
	.byte	'EVR13OVMOD',0,1
	.word	367
	.byte	2,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	2,4,2,35,0,4
	.byte	'EVR13UVMOD',0,1
	.word	367
	.byte	2,2,2,35,0,4
	.byte	'reserved_6',0,2
	.word	384
	.byte	10,0,2,35,0,4
	.byte	'SWDOVMOD',0,1
	.word	367
	.byte	2,6,2,35,2,4
	.byte	'reserved_18',0,1
	.word	367
	.byte	2,4,2,35,2,4
	.byte	'SWDUVMOD',0,1
	.word	367
	.byte	2,2,2,35,2,4
	.byte	'reserved_22',0,2
	.word	384
	.byte	8,2,2,35,2,4
	.byte	'SLCK',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'reserved_31',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,2,201,2,3
	.word	28757
	.byte	3
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,2,204,2,16,4,4
	.byte	'EVR13OVVAL',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'SWDOVVAL',0,1
	.word	367
	.byte	8,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	6,2,2,35,3,4
	.byte	'SLCK',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVROVMON_Bits',0,2,212,2,3
	.word	29035
	.byte	3
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,2,215,2,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	28,4,2,35,0,4
	.byte	'RSTSWDOFF',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'BPRSTSWDOFF',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'SLCK',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,2,222,2,3
	.word	29214
	.byte	3
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,2,225,2,16,4,4
	.byte	'SD33P',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'reserved_4',0,1
	.word	367
	.byte	4,0,2,35,0,4
	.byte	'SD33I',0,1
	.word	367
	.byte	4,4,2,35,1,4
	.byte	'reserved_12',0,4
	.word	192
	.byte	19,1,2,35,0,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,2,232,2,3
	.word	29374
	.byte	3
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,2,235,2,16,4,4
	.byte	'SDFREQSPRD',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'reserved_4',0,1
	.word	367
	.byte	4,0,2,35,0,4
	.byte	'TON',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'TOFF',0,1
	.word	367
	.byte	8,0,2,35,2,4
	.byte	'SDSTEP',0,1
	.word	367
	.byte	4,4,2,35,3,4
	.byte	'SYNCDIV',0,1
	.word	367
	.byte	3,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,2,244,2,3
	.word	29535
	.byte	3
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,2,247,2,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'STBS',0,1
	.word	367
	.byte	2,6,2,35,1,4
	.byte	'STSP',0,1
	.word	367
	.byte	2,4,2,35,1,4
	.byte	'NS',0,1
	.word	367
	.byte	2,2,2,35,1,4
	.byte	'OL',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'PIAD',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'ADCMODE',0,1
	.word	367
	.byte	4,4,2,35,2,4
	.byte	'ADCLPF',0,1
	.word	367
	.byte	2,2,2,35,2,4
	.byte	'ADCLSB',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'reserved_23',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'SDLUT',0,1
	.word	367
	.byte	6,2,2,35,3,4
	.byte	'reserved_30',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,2,134,3,3
	.word	29727
	.byte	3
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,2,137,3,16,4,4
	.byte	'SDOLCON',0,1
	.word	367
	.byte	7,1,2,35,0,4
	.byte	'MODSEL',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'MODLOW',0,1
	.word	367
	.byte	7,1,2,35,1,4
	.byte	'reserved_15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'SDVOKLVL',0,1
	.word	367
	.byte	6,2,2,35,2,4
	.byte	'MODMAN',0,1
	.word	367
	.byte	2,0,2,35,2,4
	.byte	'MODHIGH',0,1
	.word	367
	.byte	7,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,2,147,3,3
	.word	30023
	.byte	3
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,2,150,3,16,4,4
	.byte	'EVR13',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'OV13',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	2,4,2,35,0,4
	.byte	'OVSWD',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'UV13',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'reserved_6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'UVSWD',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	2,6,2,35,1,4
	.byte	'BGPROK',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'reserved_11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'SCMOD',0,1
	.word	367
	.byte	2,2,2,35,1,4
	.byte	'reserved_14',0,4
	.word	192
	.byte	18,0,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,2,164,3,3
	.word	30238
	.byte	3
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,2,167,3,16,4,4
	.byte	'EVR13UVVAL',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'SWDUVVAL',0,1
	.word	367
	.byte	8,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	6,2,2,35,3,4
	.byte	'SLCK',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,2,175,3,3
	.word	30527
	.byte	3
	.byte	'_Ifx_SCU_EXTCON_Bits',0,2,178,3,16,4,4
	.byte	'EN0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'reserved_1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'SEL0',0,1
	.word	367
	.byte	4,2,2,35,0,4
	.byte	'reserved_6',0,2
	.word	384
	.byte	10,0,2,35,0,4
	.byte	'EN1',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'NSEL',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'SEL1',0,1
	.word	367
	.byte	4,2,2,35,2,4
	.byte	'reserved_22',0,1
	.word	367
	.byte	2,0,2,35,2,4
	.byte	'DIV1',0,1
	.word	367
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_SCU_EXTCON_Bits',0,2,189,3,3
	.word	30706
	.byte	3
	.byte	'_Ifx_SCU_FDR_Bits',0,2,192,3,16,4,4
	.byte	'STEP',0,2
	.word	384
	.byte	10,6,2,35,0,4
	.byte	'reserved_10',0,1
	.word	367
	.byte	4,2,2,35,1,4
	.byte	'DM',0,1
	.word	367
	.byte	2,0,2,35,1,4
	.byte	'RESULT',0,2
	.word	384
	.byte	10,6,2,35,2,4
	.byte	'reserved_26',0,1
	.word	367
	.byte	5,1,2,35,3,4
	.byte	'DISCLK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_FDR_Bits',0,2,200,3,3
	.word	30924
	.byte	3
	.byte	'_Ifx_SCU_FMR_Bits',0,2,203,3,16,4,4
	.byte	'FS0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'FS1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'FS2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'FS3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'FS4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'FS5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'FS6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'FS7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'FC0',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'FC1',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'FC2',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'FC3',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'FC4',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'FC5',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'FC6',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'FC7',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_SCU_FMR_Bits',0,2,223,3,3
	.word	31087
	.byte	3
	.byte	'_Ifx_SCU_ID_Bits',0,2,226,3,16,4,4
	.byte	'MODREV',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'MODTYPE',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'MODNUMBER',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_ID_Bits',0,2,231,3,3
	.word	31423
	.byte	3
	.byte	'_Ifx_SCU_IGCR_Bits',0,2,234,3,16,4,4
	.byte	'IPEN00',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'IPEN01',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'IPEN02',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'IPEN03',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'IPEN04',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'IPEN05',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'IPEN06',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'IPEN07',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	5,3,2,35,1,4
	.byte	'GEEN0',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'IGP0',0,1
	.word	367
	.byte	2,0,2,35,1,4
	.byte	'IPEN10',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'IPEN11',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'IPEN12',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'IPEN13',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'IPEN14',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'IPEN15',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'IPEN16',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'IPEN17',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	5,3,2,35,3,4
	.byte	'GEEN1',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'IGP1',0,1
	.word	367
	.byte	2,0,2,35,3,0,27
	.byte	'Ifx_SCU_IGCR_Bits',0,2,130,4,3
	.word	31530
	.byte	3
	.byte	'_Ifx_SCU_IN_Bits',0,2,133,4,16,4,4
	.byte	'P0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'P1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	192
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_IN_Bits',0,2,138,4,3
	.word	31982
	.byte	3
	.byte	'_Ifx_SCU_IOCR_Bits',0,2,141,4,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'PC0',0,1
	.word	367
	.byte	4,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	4,4,2,35,1,4
	.byte	'PC1',0,1
	.word	367
	.byte	4,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_IOCR_Bits',0,2,148,4,3
	.word	32081
	.byte	3
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,2,151,4,16,4,4
	.byte	'LBISTREQ',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'LBISTREQP',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'PATTERNS',0,2
	.word	384
	.byte	14,0,2,35,0,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,2,157,4,3
	.word	32231
	.byte	3
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,2,160,4,16,4,4
	.byte	'SEED',0,4
	.word	192
	.byte	23,9,2,35,0,4
	.byte	'reserved_23',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'SPLITSH',0,1
	.word	367
	.byte	3,5,2,35,3,4
	.byte	'BODY',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'LBISTFREQU',0,1
	.word	367
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,2,167,4,3
	.word	32380
	.byte	3
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,2,170,4,16,4,4
	.byte	'SIGNATURE',0,4
	.word	192
	.byte	24,8,2,35,0,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	7,1,2,35,3,4
	.byte	'LBISTDONE',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,2,175,4,3
	.word	32541
	.byte	3
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,2,178,4,16,4,4
	.byte	'reserved_0',0,2
	.word	384
	.byte	16,0,2,35,0,4
	.byte	'LS',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'reserved_17',0,2
	.word	384
	.byte	14,1,2,35,2,4
	.byte	'LSEN',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_LCLCON0_Bits',0,2,184,4,3
	.word	32671
	.byte	3
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,2,187,4,16,4,4
	.byte	'LCLT0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'LCLT1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	192
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_LCLTEST_Bits',0,2,192,4,3
	.word	32805
	.byte	3
	.byte	'_Ifx_SCU_MANID_Bits',0,2,195,4,16,4,4
	.byte	'DEPT',0,1
	.word	367
	.byte	5,3,2,35,0,4
	.byte	'MANUF',0,2
	.word	384
	.byte	11,0,2,35,0,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_MANID_Bits',0,2,200,4,3
	.word	32920
	.byte	3
	.byte	'_Ifx_SCU_OMR_Bits',0,2,203,4,16,4,4
	.byte	'PS0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,2
	.word	384
	.byte	14,0,2,35,0,4
	.byte	'PCL0',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'PCL1',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'reserved_18',0,2
	.word	384
	.byte	14,0,2,35,2,0,27
	.byte	'Ifx_SCU_OMR_Bits',0,2,211,4,3
	.word	33031
	.byte	3
	.byte	'_Ifx_SCU_OSCCON_Bits',0,2,214,4,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'PLLLV',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'OSCRES',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'GAINSEL',0,1
	.word	367
	.byte	2,3,2,35,0,4
	.byte	'MODE',0,1
	.word	367
	.byte	2,1,2,35,0,4
	.byte	'SHBY',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'PLLHV',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'reserved_9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'X1D',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'X1DEN',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'reserved_12',0,1
	.word	367
	.byte	4,0,2,35,1,4
	.byte	'OSCVAL',0,1
	.word	367
	.byte	5,3,2,35,2,4
	.byte	'reserved_21',0,1
	.word	367
	.byte	2,1,2,35,2,4
	.byte	'APREN',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_SCU_OSCCON_Bits',0,2,231,4,3
	.word	33189
	.byte	3
	.byte	'_Ifx_SCU_OUT_Bits',0,2,234,4,16,4,4
	.byte	'P0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'P1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	192
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_OUT_Bits',0,2,239,4,3
	.word	33529
	.byte	3
	.byte	'_Ifx_SCU_OVCCON_Bits',0,2,242,4,16,4,4
	.byte	'CSEL0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'CSEL1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'CSEL2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'reserved_3',0,2
	.word	384
	.byte	13,0,2,35,0,4
	.byte	'OVSTRT',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'OVSTP',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'DCINVAL',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'reserved_19',0,1
	.word	367
	.byte	5,0,2,35,2,4
	.byte	'OVCONF',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'POVCONF',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'reserved_26',0,1
	.word	367
	.byte	6,0,2,35,3,0,27
	.byte	'Ifx_SCU_OVCCON_Bits',0,2,255,4,3
	.word	33630
	.byte	3
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,2,130,5,16,4,4
	.byte	'OVEN0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'OVEN1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'OVEN2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'reserved_3',0,4
	.word	192
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,2,136,5,3
	.word	33897
	.byte	3
	.byte	'_Ifx_SCU_PDISC_Bits',0,2,139,5,16,4,4
	.byte	'PDIS0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'PDIS1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	192
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_PDISC_Bits',0,2,144,5,3
	.word	34033
	.byte	3
	.byte	'_Ifx_SCU_PDR_Bits',0,2,147,5,16,4,4
	.byte	'PD0',0,1
	.word	367
	.byte	3,5,2,35,0,4
	.byte	'PL0',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'PD1',0,1
	.word	367
	.byte	3,1,2,35,0,4
	.byte	'PL1',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,4
	.word	192
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_SCU_PDR_Bits',0,2,154,5,3
	.word	34144
	.byte	3
	.byte	'_Ifx_SCU_PDRR_Bits',0,2,157,5,16,4,4
	.byte	'PDR0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'PDR1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'PDR2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'PDR3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'PDR4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'PDR5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'PDR6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PDR7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,4
	.word	192
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_SCU_PDRR_Bits',0,2,168,5,3
	.word	34277
	.byte	3
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,2,171,5,16,4,4
	.byte	'VCOBYP',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'VCOPWD',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'MODEN',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'reserved_3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'SETFINDIS',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'CLRFINDIS',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'OSCDISCDIS',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'reserved_7',0,2
	.word	384
	.byte	2,7,2,35,0,4
	.byte	'NDIV',0,1
	.word	367
	.byte	7,0,2,35,1,4
	.byte	'PLLPWD',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'reserved_17',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'RESLD',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'reserved_19',0,1
	.word	367
	.byte	5,0,2,35,2,4
	.byte	'PDIV',0,1
	.word	367
	.byte	4,4,2,35,3,4
	.byte	'reserved_28',0,1
	.word	367
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_SCU_PLLCON0_Bits',0,2,188,5,3
	.word	34480
	.byte	3
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,2,191,5,16,4,4
	.byte	'K2DIV',0,1
	.word	367
	.byte	7,1,2,35,0,4
	.byte	'reserved_7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'K3DIV',0,1
	.word	367
	.byte	7,1,2,35,1,4
	.byte	'reserved_15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'K1DIV',0,1
	.word	367
	.byte	7,1,2,35,2,4
	.byte	'reserved_23',0,2
	.word	384
	.byte	9,0,2,35,2,0,27
	.byte	'Ifx_SCU_PLLCON1_Bits',0,2,199,5,3
	.word	34836
	.byte	3
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,2,202,5,16,4,4
	.byte	'MODCFG',0,2
	.word	384
	.byte	16,0,2,35,0,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_PLLCON2_Bits',0,2,206,5,3
	.word	35014
	.byte	3
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,2,209,5,16,4,4
	.byte	'VCOBYP',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'VCOPWD',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	2,4,2,35,0,4
	.byte	'SETFINDIS',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'CLRFINDIS',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'OSCDISCDIS',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'reserved_7',0,2
	.word	384
	.byte	2,7,2,35,0,4
	.byte	'NDIV',0,1
	.word	367
	.byte	5,2,2,35,1,4
	.byte	'reserved_14',0,1
	.word	367
	.byte	2,0,2,35,1,4
	.byte	'PLLPWD',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'reserved_17',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'RESLD',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'reserved_19',0,1
	.word	367
	.byte	5,0,2,35,2,4
	.byte	'PDIV',0,1
	.word	367
	.byte	4,4,2,35,3,4
	.byte	'reserved_28',0,1
	.word	367
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,2,226,5,3
	.word	35114
	.byte	3
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,2,229,5,16,4,4
	.byte	'K2DIV',0,1
	.word	367
	.byte	7,1,2,35,0,4
	.byte	'reserved_7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'K3DIV',0,1
	.word	367
	.byte	4,4,2,35,1,4
	.byte	'reserved_12',0,1
	.word	367
	.byte	4,0,2,35,1,4
	.byte	'K1DIV',0,1
	.word	367
	.byte	7,1,2,35,2,4
	.byte	'reserved_23',0,2
	.word	384
	.byte	9,0,2,35,2,0,27
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,2,237,5,3
	.word	35484
	.byte	3
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,2,240,5,16,4,4
	.byte	'VCOBYST',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'PWDSTAT',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'VCOLOCK',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'FINDIS',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'K1RDY',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'K2RDY',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'reserved_6',0,4
	.word	192
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,2,249,5,3
	.word	35670
	.byte	3
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,2,252,5,16,4,4
	.byte	'VCOBYST',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'reserved_1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'VCOLOCK',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'FINDIS',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'K1RDY',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'K2RDY',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'reserved_6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'MODRUN',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,4
	.word	192
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,2,135,6,3
	.word	35868
	.byte	3
	.byte	'_Ifx_SCU_PMCSR_Bits',0,2,138,6,16,4,4
	.byte	'REQSLP',0,1
	.word	367
	.byte	2,6,2,35,0,4
	.byte	'SMUSLP',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'reserved_3',0,1
	.word	367
	.byte	5,0,2,35,0,4
	.byte	'PMST',0,1
	.word	367
	.byte	3,5,2,35,1,4
	.byte	'reserved_11',0,4
	.word	192
	.byte	21,0,2,35,0,0,27
	.byte	'Ifx_SCU_PMCSR_Bits',0,2,145,6,3
	.word	36101
	.byte	3
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,2,148,6,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'ESR1WKEN',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'PINAWKEN',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'PINBWKEN',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'ESR0DFEN',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'ESR0EDCON',0,1
	.word	367
	.byte	2,1,2,35,0,4
	.byte	'ESR1DFEN',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'ESR1EDCON',0,1
	.word	367
	.byte	2,6,2,35,1,4
	.byte	'PINADFEN',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'PINAEDCON',0,1
	.word	367
	.byte	2,3,2,35,1,4
	.byte	'PINBDFEN',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'PINBEDCON',0,1
	.word	367
	.byte	2,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'STBYRAMSEL',0,1
	.word	367
	.byte	2,5,2,35,2,4
	.byte	'reserved_19',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'WUTWKEN',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'reserved_21',0,1
	.word	367
	.byte	2,1,2,35,2,4
	.byte	'PORSTDF',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'DCDCSYNC',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'reserved_26',0,1
	.word	367
	.byte	3,3,2,35,3,4
	.byte	'ESR0TRIST',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'reserved_30',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,2,174,6,3
	.word	36253
	.byte	3
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,2,177,6,16,4,4
	.byte	'reserved_0',0,2
	.word	384
	.byte	12,4,2,35,0,4
	.byte	'IRADIS',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'reserved_13',0,4
	.word	192
	.byte	14,5,2,35,0,4
	.byte	'STBYEVEN',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'STBYEV',0,1
	.word	367
	.byte	3,1,2,35,3,4
	.byte	'reserved_31',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,2,185,6,3
	.word	36812
	.byte	3
	.byte	'_Ifx_SCU_PMSWCR3_Bits',0,2,188,6,16,4,4
	.byte	'WUTREL',0,4
	.word	192
	.byte	24,8,2,35,0,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	4,4,2,35,3,4
	.byte	'WUTDIV',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'WUTEN',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'WUTMODE',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'LCK',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_PMSWCR3_Bits',0,2,196,6,3
	.word	36995
	.byte	3
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,2,199,6,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	2,6,2,35,0,4
	.byte	'ESR1WKP',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'ESR1OVRUN',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'PINAWKP',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'PINAOVRUN',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'PINBWKP',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PINBOVRUN',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'PORSTDF',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'HWCFGEVR',0,1
	.word	367
	.byte	3,3,2,35,1,4
	.byte	'STBYRAM',0,1
	.word	367
	.byte	2,1,2,35,1,4
	.byte	'reserved_15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'WUTWKP',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'WUTOVRUN',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'reserved_18',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'WUTWKEN',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'ESR1WKEN',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'PINAWKEN',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'PINBWKEN',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'reserved_23',0,2
	.word	384
	.byte	4,5,2,35,2,4
	.byte	'ESR0TRIST',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'reserved_28',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'WUTEN',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'WUTMODE',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'WUTRUN',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,2,226,6,3
	.word	37164
	.byte	3
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,2,229,6,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	2,6,2,35,0,4
	.byte	'ESR1WKPCLR',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'ESR1OVRUNCLR',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'PINAWKPCLR',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'PINAOVRUNCLR',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'PINBWKPCLR',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PINBOVRUNCLR',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'WUTWKPCLR',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'WUTOVRUNCLR',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'reserved_18',0,2
	.word	384
	.byte	14,0,2,35,2,0,27
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,2,242,6,3
	.word	37731
	.byte	3
	.byte	'_Ifx_SCU_PMSWUTCNT_Bits',0,2,245,6,16,4,4
	.byte	'WUTCNT',0,4
	.word	192
	.byte	24,8,2,35,0,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	7,1,2,35,3,4
	.byte	'VAL',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_PMSWUTCNT_Bits',0,2,250,6,3
	.word	38047
	.byte	3
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,2,253,6,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'CLRC',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,2
	.word	384
	.byte	10,4,2,35,0,4
	.byte	'CSS0',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'CSS1',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'CSS2',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'reserved_15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'USRINFO',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_RSTCON2_Bits',0,2,135,7,3
	.word	38166
	.byte	3
	.byte	'_Ifx_SCU_RSTCON_Bits',0,2,138,7,16,4,4
	.byte	'ESR0',0,1
	.word	367
	.byte	2,6,2,35,0,4
	.byte	'ESR1',0,1
	.word	367
	.byte	2,4,2,35,0,4
	.byte	'reserved_4',0,1
	.word	367
	.byte	2,2,2,35,0,4
	.byte	'SMU',0,1
	.word	367
	.byte	2,0,2,35,0,4
	.byte	'SW',0,1
	.word	367
	.byte	2,6,2,35,1,4
	.byte	'STM0',0,1
	.word	367
	.byte	2,4,2,35,1,4
	.byte	'STM1',0,1
	.word	367
	.byte	2,2,2,35,1,4
	.byte	'STM2',0,1
	.word	367
	.byte	2,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_RSTCON_Bits',0,2,149,7,3
	.word	38375
	.byte	3
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,2,152,7,16,4,4
	.byte	'ESR0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'ESR1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'SMU',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'SW',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'STM0',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'STM1',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'STM2',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'PORST',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'reserved_17',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'CB0',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'CB1',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'CB3',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'reserved_21',0,1
	.word	367
	.byte	2,1,2,35,2,4
	.byte	'EVR13',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'EVR33',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'SWD',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'reserved_26',0,1
	.word	367
	.byte	2,4,2,35,3,4
	.byte	'STBYR',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'reserved_29',0,1
	.word	367
	.byte	3,0,2,35,3,0,27
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,2,175,7,3
	.word	38586
	.byte	3
	.byte	'_Ifx_SCU_SAFECON_Bits',0,2,178,7,16,4,4
	.byte	'HBT',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'reserved_1',0,4
	.word	192
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_SCU_SAFECON_Bits',0,2,182,7,3
	.word	39018
	.byte	3
	.byte	'_Ifx_SCU_STSTAT_Bits',0,2,185,7,16,4,4
	.byte	'HWCFG',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'FTM',0,1
	.word	367
	.byte	7,1,2,35,1,4
	.byte	'MODE',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'FCBAE',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'LUDIS',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'reserved_18',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'TRSTL',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'SPDEN',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'reserved_21',0,1
	.word	367
	.byte	3,0,2,35,2,4
	.byte	'RAMINT',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'reserved_25',0,1
	.word	367
	.byte	7,0,2,35,3,0,27
	.byte	'Ifx_SCU_STSTAT_Bits',0,2,198,7,3
	.word	39114
	.byte	3
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,2,201,7,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'SWRSTREQ',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	192
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,2,206,7,3
	.word	39374
	.byte	3
	.byte	'_Ifx_SCU_SYSCON_Bits',0,2,209,7,16,4,4
	.byte	'CCTRIG0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'reserved_1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'RAMINTM',0,1
	.word	367
	.byte	2,4,2,35,0,4
	.byte	'SETLUDIS',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'reserved_5',0,1
	.word	367
	.byte	3,0,2,35,0,4
	.byte	'DATM',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'reserved_9',0,4
	.word	192
	.byte	23,0,2,35,0,0,27
	.byte	'Ifx_SCU_SYSCON_Bits',0,2,218,7,3
	.word	39499
	.byte	3
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,2,221,7,16,4,4
	.byte	'ESR0T',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'ESR1T',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'SMUT',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	192
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,2,228,7,3
	.word	39696
	.byte	3
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,2,231,7,16,4,4
	.byte	'ESR0T',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'ESR1T',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'SMUT',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	192
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,2,238,7,3
	.word	39849
	.byte	3
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,2,241,7,16,4,4
	.byte	'ESR0T',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'ESR1T',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'SMUT',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	192
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPSET_Bits',0,2,248,7,3
	.word	40002
	.byte	3
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,2,251,7,16,4,4
	.byte	'ESR0T',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'ESR1T',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'SMUT',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	192
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,2,130,8,3
	.word	40155
	.byte	27
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,2,139,8,3
	.word	231
	.byte	27
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,2,154,8,3
	.word	406
	.byte	27
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,2,170,8,3
	.word	650
	.byte	3
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,2,173,8,16,4,4
	.byte	'ENDINIT',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'LCK',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'PW',0,4
	.word	215
	.byte	14,16,2,35,0,4
	.byte	'REL',0,4
	.word	215
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,2,179,8,3
	.word	40410
	.byte	3
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,2,182,8,16,4,4
	.byte	'CLRIRF',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'reserved_1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'IR0',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'DR',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'IR1',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'UR',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PAR',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'TCR',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'TCTR',0,1
	.word	367
	.byte	7,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,2,195,8,3
	.word	40536
	.byte	3
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,2,198,8,16,4,4
	.byte	'AE',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'OE',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'IS0',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'DS',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'TO',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'IS1',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'US',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PAS',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'TCS',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'TCT',0,1
	.word	367
	.byte	7,0,2,35,1,4
	.byte	'TIM',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,2,211,8,3
	.word	40788
	.byte	5,2,219,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	24574
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ACCEN0',0,2,224,8,3
	.word	41007
	.byte	5,2,227,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	25131
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ACCEN1',0,2,232,8,3
	.word	41071
	.byte	5,2,235,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	25208
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ARSTDIS',0,2,240,8,3
	.word	41135
	.byte	5,2,243,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	25344
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON0',0,2,248,8,3
	.word	41200
	.byte	5,2,251,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	25626
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON1',0,2,128,9,3
	.word	41265
	.byte	5,2,131,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	25864
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON2',0,2,136,9,3
	.word	41330
	.byte	5,2,139,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	25992
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON3',0,2,144,9,3
	.word	41395
	.byte	5,2,147,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	26219
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON4',0,2,152,9,3
	.word	41460
	.byte	5,2,155,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	26438
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON5',0,2,160,9,3
	.word	41525
	.byte	5,2,163,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	26566
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON6',0,2,168,9,3
	.word	41590
	.byte	5,2,171,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	26666
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CHIPID',0,2,176,9,3
	.word	41655
	.byte	5,2,179,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	26874
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_DTSCON',0,2,184,9,3
	.word	41719
	.byte	5,2,187,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	27039
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_DTSLIM',0,2,192,9,3
	.word	41783
	.byte	5,2,195,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	27222
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_DTSSTAT',0,2,200,9,3
	.word	41847
	.byte	5,2,203,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	27376
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EICR',0,2,208,9,3
	.word	41912
	.byte	5,2,211,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	27740
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EIFR',0,2,216,9,3
	.word	41974
	.byte	5,2,219,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	27951
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EMSR',0,2,224,9,3
	.word	42036
	.byte	5,2,227,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	28203
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ESRCFG',0,2,232,9,3
	.word	42098
	.byte	5,2,235,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	28321
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ESROCFG',0,2,240,9,3
	.word	42162
	.byte	5,2,243,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	28432
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVR13CON',0,2,248,9,3
	.word	42227
	.byte	5,2,251,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	28595
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRADCSTAT',0,2,128,10,3
	.word	42293
	.byte	5,2,131,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	28757
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRMONCTRL',0,2,136,10,3
	.word	42361
	.byte	5,2,139,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	29035
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVROVMON',0,2,144,10,3
	.word	42429
	.byte	5,2,147,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	29214
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRRSTCON',0,2,152,10,3
	.word	42495
	.byte	5,2,155,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	29374
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,2,160,10,3
	.word	42562
	.byte	5,2,163,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	29535
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCTRL1',0,2,168,10,3
	.word	42631
	.byte	5,2,171,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	29727
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCTRL2',0,2,176,10,3
	.word	42699
	.byte	5,2,179,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	30023
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCTRL3',0,2,184,10,3
	.word	42767
	.byte	5,2,187,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	30238
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSTAT',0,2,192,10,3
	.word	42835
	.byte	5,2,195,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	30527
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRUVMON',0,2,200,10,3
	.word	42900
	.byte	5,2,203,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	30706
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EXTCON',0,2,208,10,3
	.word	42966
	.byte	5,2,211,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	30924
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_FDR',0,2,216,10,3
	.word	43030
	.byte	5,2,219,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	31087
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_FMR',0,2,224,10,3
	.word	43091
	.byte	5,2,227,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	31423
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ID',0,2,232,10,3
	.word	43152
	.byte	5,2,235,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	31530
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_IGCR',0,2,240,10,3
	.word	43212
	.byte	5,2,243,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	31982
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_IN',0,2,248,10,3
	.word	43274
	.byte	5,2,251,10,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	32081
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_IOCR',0,2,128,11,3
	.word	43334
	.byte	5,2,131,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	32231
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_LBISTCTRL0',0,2,136,11,3
	.word	43396
	.byte	5,2,139,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	32380
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_LBISTCTRL1',0,2,144,11,3
	.word	43464
	.byte	5,2,147,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	32541
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_LBISTCTRL2',0,2,152,11,3
	.word	43532
	.byte	5,2,155,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	32671
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_LCLCON0',0,2,160,11,3
	.word	43600
	.byte	5,2,163,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	32805
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_LCLTEST',0,2,168,11,3
	.word	43665
	.byte	5,2,171,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	32920
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_MANID',0,2,176,11,3
	.word	43730
	.byte	5,2,179,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	33031
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_OMR',0,2,184,11,3
	.word	43793
	.byte	5,2,187,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	33189
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_OSCCON',0,2,192,11,3
	.word	43854
	.byte	5,2,195,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	33529
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_OUT',0,2,200,11,3
	.word	43918
	.byte	5,2,203,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	33630
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_OVCCON',0,2,208,11,3
	.word	43979
	.byte	5,2,211,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	33897
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_OVCENABLE',0,2,216,11,3
	.word	44043
	.byte	5,2,219,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	34033
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PDISC',0,2,224,11,3
	.word	44110
	.byte	5,2,227,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	34144
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PDR',0,2,232,11,3
	.word	44173
	.byte	5,2,235,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	34277
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PDRR',0,2,240,11,3
	.word	44234
	.byte	5,2,243,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	34480
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLCON0',0,2,248,11,3
	.word	44296
	.byte	5,2,251,11,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	34836
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLCON1',0,2,128,12,3
	.word	44361
	.byte	5,2,131,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	35014
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLCON2',0,2,136,12,3
	.word	44426
	.byte	5,2,139,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	35114
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLERAYCON0',0,2,144,12,3
	.word	44491
	.byte	5,2,147,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	35484
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLERAYCON1',0,2,152,12,3
	.word	44560
	.byte	5,2,155,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	35670
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLERAYSTAT',0,2,160,12,3
	.word	44629
	.byte	5,2,163,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	35868
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLSTAT',0,2,168,12,3
	.word	44698
	.byte	5,2,171,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	36101
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMCSR',0,2,176,12,3
	.word	44763
	.byte	5,2,179,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	36253
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMSWCR0',0,2,184,12,3
	.word	44826
	.byte	5,2,187,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	36812
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMSWCR1',0,2,192,12,3
	.word	44891
	.byte	5,2,195,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	36995
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMSWCR3',0,2,200,12,3
	.word	44956
	.byte	5,2,203,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	37164
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMSWSTAT',0,2,208,12,3
	.word	45021
	.byte	5,2,211,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	37731
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMSWSTATCLR',0,2,216,12,3
	.word	45087
	.byte	5,2,219,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	38047
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMSWUTCNT',0,2,224,12,3
	.word	45156
	.byte	5,2,227,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	38375
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_RSTCON',0,2,232,12,3
	.word	45223
	.byte	5,2,235,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	38166
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_RSTCON2',0,2,240,12,3
	.word	45287
	.byte	5,2,243,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	38586
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_RSTSTAT',0,2,248,12,3
	.word	45352
	.byte	5,2,251,12,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	39018
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_SAFECON',0,2,128,13,3
	.word	45417
	.byte	5,2,131,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	39114
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_STSTAT',0,2,136,13,3
	.word	45482
	.byte	5,2,139,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	39374
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_SWRSTCON',0,2,144,13,3
	.word	45546
	.byte	5,2,147,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	39499
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_SYSCON',0,2,152,13,3
	.word	45612
	.byte	5,2,155,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	39696
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPCLR',0,2,160,13,3
	.word	45676
	.byte	5,2,163,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	39849
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPDIS',0,2,168,13,3
	.word	45741
	.byte	5,2,171,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	40002
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPSET',0,2,176,13,3
	.word	45806
	.byte	5,2,179,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	40155
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPSTAT',0,2,184,13,3
	.word	45871
	.byte	27
	.byte	'Ifx_SCU_WDTCPU_CON0',0,2,192,13,3
	.word	327
	.byte	27
	.byte	'Ifx_SCU_WDTCPU_CON1',0,2,200,13,3
	.word	610
	.byte	27
	.byte	'Ifx_SCU_WDTCPU_SR',0,2,208,13,3
	.word	841
	.byte	5,2,211,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	40410
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_WDTS_CON0',0,2,216,13,3
	.word	46022
	.byte	5,2,219,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	40536
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_WDTS_CON1',0,2,224,13,3
	.word	46089
	.byte	5,2,227,13,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	40788
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_WDTS_SR',0,2,232,13,3
	.word	46156
	.byte	7
	.word	881
	.byte	27
	.byte	'Ifx_SCU_WDTCPU',0,2,248,13,3
	.word	46221
	.byte	3
	.byte	'_Ifx_SCU_WDTS',0,2,251,13,25,12,6
	.byte	'CON0',0
	.word	46022
	.byte	4,2,35,0,6
	.byte	'CON1',0
	.word	46089
	.byte	4,2,35,4,6
	.byte	'SR',0
	.word	46156
	.byte	4,2,35,8,0,7
	.word	46250
	.byte	27
	.byte	'Ifx_SCU_WDTS',0,2,128,14,3
	.word	46311
	.byte	17,8
	.word	42098
	.byte	18,1,0,17,4
	.word	44763
	.byte	18,0,0,7
	.word	46250
	.byte	17,12
	.word	881
	.byte	18,0,0,7
	.word	46361
	.byte	17,16
	.word	367
	.byte	18,15,0,17,28
	.word	367
	.byte	18,27,0,17,20
	.word	367
	.byte	18,19,0,17,40
	.word	367
	.byte	18,39,0,17,16
	.word	41912
	.byte	18,3,0,17,16
	.word	43212
	.byte	18,3,0,17,188,1
	.word	367
	.byte	18,187,1,0,17,244,1
	.word	367
	.byte	18,243,1,0,3
	.byte	'_Ifx_SCU',0,2,141,14,25,128,8,6
	.byte	'reserved_0',0
	.word	5043
	.byte	8,2,35,0,6
	.byte	'ID',0
	.word	43152
	.byte	4,2,35,8,6
	.byte	'reserved_C',0
	.word	3224
	.byte	4,2,35,12,6
	.byte	'OSCCON',0
	.word	43854
	.byte	4,2,35,16,6
	.byte	'PLLSTAT',0
	.word	44698
	.byte	4,2,35,20,6
	.byte	'PLLCON0',0
	.word	44296
	.byte	4,2,35,24,6
	.byte	'PLLCON1',0
	.word	44361
	.byte	4,2,35,28,6
	.byte	'PLLCON2',0
	.word	44426
	.byte	4,2,35,32,6
	.byte	'PLLERAYSTAT',0
	.word	44629
	.byte	4,2,35,36,6
	.byte	'PLLERAYCON0',0
	.word	44491
	.byte	4,2,35,40,6
	.byte	'PLLERAYCON1',0
	.word	44560
	.byte	4,2,35,44,6
	.byte	'CCUCON0',0
	.word	41200
	.byte	4,2,35,48,6
	.byte	'CCUCON1',0
	.word	41265
	.byte	4,2,35,52,6
	.byte	'FDR',0
	.word	43030
	.byte	4,2,35,56,6
	.byte	'EXTCON',0
	.word	42966
	.byte	4,2,35,60,6
	.byte	'CCUCON2',0
	.word	41330
	.byte	4,2,35,64,6
	.byte	'CCUCON3',0
	.word	41395
	.byte	4,2,35,68,6
	.byte	'CCUCON4',0
	.word	41460
	.byte	4,2,35,72,6
	.byte	'CCUCON5',0
	.word	41525
	.byte	4,2,35,76,6
	.byte	'RSTSTAT',0
	.word	45352
	.byte	4,2,35,80,6
	.byte	'reserved_54',0
	.word	3224
	.byte	4,2,35,84,6
	.byte	'RSTCON',0
	.word	45223
	.byte	4,2,35,88,6
	.byte	'ARSTDIS',0
	.word	41135
	.byte	4,2,35,92,6
	.byte	'SWRSTCON',0
	.word	45546
	.byte	4,2,35,96,6
	.byte	'RSTCON2',0
	.word	45287
	.byte	4,2,35,100,6
	.byte	'reserved_68',0
	.word	3224
	.byte	4,2,35,104,6
	.byte	'EVRRSTCON',0
	.word	42495
	.byte	4,2,35,108,6
	.byte	'ESRCFG',0
	.word	46338
	.byte	8,2,35,112,6
	.byte	'ESROCFG',0
	.word	42162
	.byte	4,2,35,120,6
	.byte	'SYSCON',0
	.word	45612
	.byte	4,2,35,124,6
	.byte	'CCUCON6',0
	.word	41590
	.byte	4,3,35,128,1,6
	.byte	'reserved_84',0
	.word	4414
	.byte	24,3,35,132,1,6
	.byte	'PDR',0
	.word	44173
	.byte	4,3,35,156,1,6
	.byte	'IOCR',0
	.word	43334
	.byte	4,3,35,160,1,6
	.byte	'OUT',0
	.word	43918
	.byte	4,3,35,164,1,6
	.byte	'OMR',0
	.word	43793
	.byte	4,3,35,168,1,6
	.byte	'IN',0
	.word	43274
	.byte	4,3,35,172,1,6
	.byte	'EVRSTAT',0
	.word	42835
	.byte	4,3,35,176,1,6
	.byte	'reserved_B4',0
	.word	3224
	.byte	4,3,35,180,1,6
	.byte	'EVR13CON',0
	.word	42227
	.byte	4,3,35,184,1,6
	.byte	'reserved_BC',0
	.word	3224
	.byte	4,3,35,188,1,6
	.byte	'STSTAT',0
	.word	45482
	.byte	4,3,35,192,1,6
	.byte	'reserved_C4',0
	.word	3224
	.byte	4,3,35,196,1,6
	.byte	'PMSWCR0',0
	.word	44826
	.byte	4,3,35,200,1,6
	.byte	'PMSWSTAT',0
	.word	45021
	.byte	4,3,35,204,1,6
	.byte	'PMSWSTATCLR',0
	.word	45087
	.byte	4,3,35,208,1,6
	.byte	'PMCSR',0
	.word	46347
	.byte	4,3,35,212,1,6
	.byte	'reserved_D8',0
	.word	5043
	.byte	8,3,35,216,1,6
	.byte	'DTSSTAT',0
	.word	41847
	.byte	4,3,35,224,1,6
	.byte	'DTSCON',0
	.word	41719
	.byte	4,3,35,228,1,6
	.byte	'PMSWCR1',0
	.word	44891
	.byte	4,3,35,232,1,6
	.byte	'reserved_EC',0
	.word	3224
	.byte	4,3,35,236,1,6
	.byte	'WDTS',0
	.word	46356
	.byte	12,3,35,240,1,6
	.byte	'EMSR',0
	.word	42036
	.byte	4,3,35,252,1,6
	.byte	'WDTCPU',0
	.word	46370
	.byte	12,3,35,128,2,6
	.byte	'reserved_10C',0
	.word	4414
	.byte	24,3,35,140,2,6
	.byte	'TRAPSTAT',0
	.word	45871
	.byte	4,3,35,164,2,6
	.byte	'TRAPSET',0
	.word	45806
	.byte	4,3,35,168,2,6
	.byte	'TRAPCLR',0
	.word	45676
	.byte	4,3,35,172,2,6
	.byte	'TRAPDIS',0
	.word	45741
	.byte	4,3,35,176,2,6
	.byte	'LCLCON0',0
	.word	43600
	.byte	4,3,35,180,2,6
	.byte	'reserved_138',0
	.word	3224
	.byte	4,3,35,184,2,6
	.byte	'LCLTEST',0
	.word	43665
	.byte	4,3,35,188,2,6
	.byte	'CHIPID',0
	.word	41655
	.byte	4,3,35,192,2,6
	.byte	'MANID',0
	.word	43730
	.byte	4,3,35,196,2,6
	.byte	'reserved_148',0
	.word	5043
	.byte	8,3,35,200,2,6
	.byte	'SAFECON',0
	.word	45417
	.byte	4,3,35,208,2,6
	.byte	'reserved_154',0
	.word	46375
	.byte	16,3,35,212,2,6
	.byte	'LBISTCTRL0',0
	.word	43396
	.byte	4,3,35,228,2,6
	.byte	'LBISTCTRL1',0
	.word	43464
	.byte	4,3,35,232,2,6
	.byte	'LBISTCTRL2',0
	.word	43532
	.byte	4,3,35,236,2,6
	.byte	'reserved_170',0
	.word	46384
	.byte	28,3,35,240,2,6
	.byte	'PDISC',0
	.word	44110
	.byte	4,3,35,140,3,6
	.byte	'reserved_190',0
	.word	5383
	.byte	12,3,35,144,3,6
	.byte	'EVRADCSTAT',0
	.word	42293
	.byte	4,3,35,156,3,6
	.byte	'EVRUVMON',0
	.word	42900
	.byte	4,3,35,160,3,6
	.byte	'EVROVMON',0
	.word	42429
	.byte	4,3,35,164,3,6
	.byte	'EVRMONCTRL',0
	.word	42361
	.byte	4,3,35,168,3,6
	.byte	'reserved_1AC',0
	.word	3224
	.byte	4,3,35,172,3,6
	.byte	'EVRSDCTRL1',0
	.word	42631
	.byte	4,3,35,176,3,6
	.byte	'EVRSDCTRL2',0
	.word	42699
	.byte	4,3,35,180,3,6
	.byte	'EVRSDCTRL3',0
	.word	42767
	.byte	4,3,35,184,3,6
	.byte	'reserved_1BC',0
	.word	5043
	.byte	8,3,35,188,3,6
	.byte	'EVRSDCOEFF2',0
	.word	42562
	.byte	4,3,35,196,3,6
	.byte	'reserved_1C8',0
	.word	46393
	.byte	20,3,35,200,3,6
	.byte	'PMSWUTCNT',0
	.word	45156
	.byte	4,3,35,220,3,6
	.byte	'OVCENABLE',0
	.word	44043
	.byte	4,3,35,224,3,6
	.byte	'OVCCON',0
	.word	43979
	.byte	4,3,35,228,3,6
	.byte	'reserved_1E8',0
	.word	46402
	.byte	40,3,35,232,3,6
	.byte	'EICR',0
	.word	46411
	.byte	16,3,35,144,4,6
	.byte	'EIFR',0
	.word	41974
	.byte	4,3,35,160,4,6
	.byte	'FMR',0
	.word	43091
	.byte	4,3,35,164,4,6
	.byte	'PDRR',0
	.word	44234
	.byte	4,3,35,168,4,6
	.byte	'IGCR',0
	.word	46420
	.byte	16,3,35,172,4,6
	.byte	'reserved_23C',0
	.word	3224
	.byte	4,3,35,188,4,6
	.byte	'DTSLIM',0
	.word	41783
	.byte	4,3,35,192,4,6
	.byte	'reserved_244',0
	.word	46429
	.byte	188,1,3,35,196,4,6
	.byte	'PMSWCR3',0
	.word	44956
	.byte	4,3,35,128,6,6
	.byte	'reserved_304',0
	.word	46440
	.byte	244,1,3,35,132,6,6
	.byte	'ACCEN1',0
	.word	41071
	.byte	4,3,35,248,7,6
	.byte	'ACCEN0',0
	.word	41007
	.byte	4,3,35,252,7,0,7
	.word	46451
	.byte	27
	.byte	'Ifx_SCU',0,2,244,14,3
	.word	48347
	.byte	27
	.byte	'IfxSent_ChannelId',0,14,71,3
	.word	16172
	.byte	27
	.byte	'IfxSrc_Tos',0,7,53,3
	.word	1740
	.byte	27
	.byte	'Ifx_SRC_SRCR_Bits',0,6,62,3
	.word	1321
	.byte	27
	.byte	'Ifx_SRC_SRCR',0,6,75,3
	.word	1611
	.byte	3
	.byte	'_Ifx_SRC_ASCLIN',0,6,86,25,12,6
	.byte	'TX',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'RX',0
	.word	1611
	.byte	4,2,35,4,6
	.byte	'ERR',0
	.word	1611
	.byte	4,2,35,8,0,7
	.word	48461
	.byte	27
	.byte	'Ifx_SRC_ASCLIN',0,6,91,3
	.word	48520
	.byte	3
	.byte	'_Ifx_SRC_BCUSPB',0,6,94,25,4,6
	.byte	'SBSRC',0
	.word	1611
	.byte	4,2,35,0,0,7
	.word	48548
	.byte	27
	.byte	'Ifx_SRC_BCUSPB',0,6,97,3
	.word	48585
	.byte	17,64
	.word	1611
	.byte	18,15,0,3
	.byte	'_Ifx_SRC_CAN',0,6,100,25,64,6
	.byte	'INT',0
	.word	48613
	.byte	64,2,35,0,0,7
	.word	48622
	.byte	27
	.byte	'Ifx_SRC_CAN',0,6,103,3
	.word	48654
	.byte	17,32
	.word	1611
	.byte	18,7,0,3
	.byte	'_Ifx_SRC_CAN1',0,6,106,25,32,6
	.byte	'INT',0
	.word	48679
	.byte	32,2,35,0,0,7
	.word	48688
	.byte	27
	.byte	'Ifx_SRC_CAN1',0,6,109,3
	.word	48721
	.byte	3
	.byte	'_Ifx_SRC_CCU6',0,6,112,25,16,6
	.byte	'SR0',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'SR1',0
	.word	1611
	.byte	4,2,35,4,6
	.byte	'SR2',0
	.word	1611
	.byte	4,2,35,8,6
	.byte	'SR3',0
	.word	1611
	.byte	4,2,35,12,0,7
	.word	48747
	.byte	27
	.byte	'Ifx_SRC_CCU6',0,6,118,3
	.word	48819
	.byte	17,8
	.word	1611
	.byte	18,1,0,3
	.byte	'_Ifx_SRC_CERBERUS',0,6,121,25,8,6
	.byte	'SR',0
	.word	48845
	.byte	8,2,35,0,0,7
	.word	48854
	.byte	27
	.byte	'Ifx_SRC_CERBERUS',0,6,124,3
	.word	48890
	.byte	3
	.byte	'_Ifx_SRC_CPU',0,6,127,25,32,6
	.byte	'SBSRC',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'reserved_4',0
	.word	46384
	.byte	28,2,35,4,0,7
	.word	48920
	.byte	27
	.byte	'Ifx_SRC_CPU',0,6,131,1,3
	.word	48974
	.byte	3
	.byte	'_Ifx_SRC_DMA',0,6,134,1,25,80,6
	.byte	'ERR',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'reserved_4',0
	.word	5383
	.byte	12,2,35,4,6
	.byte	'CH',0
	.word	48613
	.byte	64,2,35,16,0,7
	.word	49000
	.byte	27
	.byte	'Ifx_SRC_DMA',0,6,139,1,3
	.word	49065
	.byte	3
	.byte	'_Ifx_SRC_EMEM',0,6,142,1,25,4,6
	.byte	'SR',0
	.word	1611
	.byte	4,2,35,0,0,7
	.word	49091
	.byte	27
	.byte	'Ifx_SRC_EMEM',0,6,145,1,3
	.word	49124
	.byte	3
	.byte	'_Ifx_SRC_ERAY',0,6,148,1,25,80,6
	.byte	'INT',0
	.word	48845
	.byte	8,2,35,0,6
	.byte	'TINT',0
	.word	48845
	.byte	8,2,35,8,6
	.byte	'NDAT',0
	.word	48845
	.byte	8,2,35,16,6
	.byte	'MBSC',0
	.word	48845
	.byte	8,2,35,24,6
	.byte	'OBUSY',0
	.word	1611
	.byte	4,2,35,32,6
	.byte	'IBUSY',0
	.word	1611
	.byte	4,2,35,36,6
	.byte	'reserved_28',0
	.word	46402
	.byte	40,2,35,40,0,7
	.word	49151
	.byte	27
	.byte	'Ifx_SRC_ERAY',0,6,157,1,3
	.word	49278
	.byte	3
	.byte	'_Ifx_SRC_ETH',0,6,160,1,25,4,6
	.byte	'SR',0
	.word	1611
	.byte	4,2,35,0,0,7
	.word	49305
	.byte	27
	.byte	'Ifx_SRC_ETH',0,6,163,1,3
	.word	49337
	.byte	3
	.byte	'_Ifx_SRC_EVR',0,6,166,1,25,8,6
	.byte	'WUT',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'SCDC',0
	.word	1611
	.byte	4,2,35,4,0,7
	.word	49363
	.byte	27
	.byte	'Ifx_SRC_EVR',0,6,170,1,3
	.word	49410
	.byte	3
	.byte	'_Ifx_SRC_FFT',0,6,173,1,25,12,6
	.byte	'DONE',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'ERR',0
	.word	1611
	.byte	4,2,35,4,6
	.byte	'RFS',0
	.word	1611
	.byte	4,2,35,8,0,7
	.word	49436
	.byte	27
	.byte	'Ifx_SRC_FFT',0,6,178,1,3
	.word	49496
	.byte	17,240,11
	.word	367
	.byte	18,239,11,0,3
	.byte	'_Ifx_SRC_GPSR',0,6,181,1,25,128,12,6
	.byte	'SR0',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'SR1',0
	.word	1611
	.byte	4,2,35,4,6
	.byte	'SR2',0
	.word	1611
	.byte	4,2,35,8,6
	.byte	'SR3',0
	.word	1611
	.byte	4,2,35,12,6
	.byte	'reserved_10',0
	.word	49522
	.byte	240,11,2,35,16,0,7
	.word	49533
	.byte	27
	.byte	'Ifx_SRC_GPSR',0,6,188,1,3
	.word	49629
	.byte	3
	.byte	'_Ifx_SRC_GPT12',0,6,191,1,25,48,6
	.byte	'CIRQ',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'T2',0
	.word	1611
	.byte	4,2,35,4,6
	.byte	'T3',0
	.word	1611
	.byte	4,2,35,8,6
	.byte	'T4',0
	.word	1611
	.byte	4,2,35,12,6
	.byte	'T5',0
	.word	1611
	.byte	4,2,35,16,6
	.byte	'T6',0
	.word	1611
	.byte	4,2,35,20,6
	.byte	'reserved_18',0
	.word	4414
	.byte	24,2,35,24,0,7
	.word	49656
	.byte	27
	.byte	'Ifx_SRC_GPT12',0,6,200,1,3
	.word	49773
	.byte	17,236,2
	.word	367
	.byte	18,235,2,0,17,32
	.word	48679
	.byte	18,0,0,17,224,7
	.word	367
	.byte	18,223,7,0,17,64
	.word	48679
	.byte	18,1,0,3
	.byte	'_Ifx_SRC_GTM',0,6,203,1,25,192,11,6
	.byte	'AEIIRQ',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'reserved_4',0
	.word	49801
	.byte	236,2,2,35,4,6
	.byte	'ERR',0
	.word	1611
	.byte	4,3,35,240,2,6
	.byte	'reserved_174',0
	.word	5383
	.byte	12,3,35,244,2,6
	.byte	'TIM',0
	.word	49812
	.byte	32,3,35,128,3,6
	.byte	'reserved_1A0',0
	.word	49821
	.byte	224,7,3,35,160,3,6
	.byte	'TOM',0
	.word	49832
	.byte	64,3,35,128,11,0,7
	.word	49841
	.byte	27
	.byte	'Ifx_SRC_GTM',0,6,212,1,3
	.word	49988
	.byte	3
	.byte	'_Ifx_SRC_HSM',0,6,215,1,25,8,6
	.byte	'HSM',0
	.word	48845
	.byte	8,2,35,0,0,7
	.word	50014
	.byte	27
	.byte	'Ifx_SRC_HSM',0,6,218,1,3
	.word	50047
	.byte	3
	.byte	'_Ifx_SRC_LMU',0,6,221,1,25,4,6
	.byte	'SR',0
	.word	1611
	.byte	4,2,35,0,0,7
	.word	50073
	.byte	27
	.byte	'Ifx_SRC_LMU',0,6,224,1,3
	.word	50105
	.byte	3
	.byte	'_Ifx_SRC_PMU',0,6,227,1,25,4,6
	.byte	'SR',0
	.word	1611
	.byte	4,2,35,0,0,7
	.word	50131
	.byte	27
	.byte	'Ifx_SRC_PMU',0,6,230,1,3
	.word	50163
	.byte	3
	.byte	'_Ifx_SRC_QSPI',0,6,233,1,25,24,6
	.byte	'TX',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'RX',0
	.word	1611
	.byte	4,2,35,4,6
	.byte	'ERR',0
	.word	1611
	.byte	4,2,35,8,6
	.byte	'PT',0
	.word	1611
	.byte	4,2,35,12,6
	.byte	'HC',0
	.word	1611
	.byte	4,2,35,16,6
	.byte	'U',0
	.word	1611
	.byte	4,2,35,20,0,7
	.word	50189
	.byte	27
	.byte	'Ifx_SRC_QSPI',0,6,241,1,3
	.word	50282
	.byte	17,16
	.word	1611
	.byte	18,3,0,3
	.byte	'_Ifx_SRC_SCU',0,6,244,1,25,20,6
	.byte	'DTS',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'ERU',0
	.word	50309
	.byte	16,2,35,4,0,7
	.word	50318
	.byte	27
	.byte	'Ifx_SRC_SCU',0,6,248,1,3
	.word	50364
	.byte	3
	.byte	'_Ifx_SRC_SENT',0,6,251,1,25,16,6
	.byte	'SR',0
	.word	50309
	.byte	16,2,35,0,0,7
	.word	50390
	.byte	27
	.byte	'Ifx_SRC_SENT',0,6,254,1,3
	.word	50423
	.byte	17,12
	.word	1611
	.byte	18,2,0,3
	.byte	'_Ifx_SRC_SMU',0,6,129,2,25,12,6
	.byte	'SR',0
	.word	50450
	.byte	12,2,35,0,0,7
	.word	50459
	.byte	27
	.byte	'Ifx_SRC_SMU',0,6,132,2,3
	.word	50491
	.byte	3
	.byte	'_Ifx_SRC_STM',0,6,135,2,25,96,6
	.byte	'SR0',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'SR1',0
	.word	1611
	.byte	4,2,35,4,6
	.byte	'reserved_8',0
	.word	10981
	.byte	88,2,35,8,0,7
	.word	50517
	.byte	27
	.byte	'Ifx_SRC_STM',0,6,140,2,3
	.word	50583
	.byte	17,176,2
	.word	367
	.byte	18,175,2,0,3
	.byte	'_Ifx_SRC_VADCCG',0,6,143,2,25,192,2,6
	.byte	'SR0',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'SR1',0
	.word	1611
	.byte	4,2,35,4,6
	.byte	'SR2',0
	.word	1611
	.byte	4,2,35,8,6
	.byte	'SR3',0
	.word	1611
	.byte	4,2,35,12,6
	.byte	'reserved_10',0
	.word	50609
	.byte	176,2,2,35,16,0,7
	.word	50620
	.byte	27
	.byte	'Ifx_SRC_VADCCG',0,6,150,2,3
	.word	50718
	.byte	3
	.byte	'_Ifx_SRC_VADCG',0,6,153,2,25,16,6
	.byte	'SR0',0
	.word	1611
	.byte	4,2,35,0,6
	.byte	'SR1',0
	.word	1611
	.byte	4,2,35,4,6
	.byte	'SR2',0
	.word	1611
	.byte	4,2,35,8,6
	.byte	'SR3',0
	.word	1611
	.byte	4,2,35,12,0,7
	.word	50747
	.byte	27
	.byte	'Ifx_SRC_VADCG',0,6,159,2,3
	.word	50821
	.byte	3
	.byte	'_Ifx_SRC_XBAR',0,6,162,2,25,4,6
	.byte	'SRC',0
	.word	1611
	.byte	4,2,35,0,0,7
	.word	50849
	.byte	27
	.byte	'Ifx_SRC_XBAR',0,6,165,2,3
	.word	50883
	.byte	17,24
	.word	48461
	.byte	18,1,0,7
	.word	50910
	.byte	3
	.byte	'_Ifx_SRC_GASCLIN',0,6,178,2,25,24,6
	.byte	'ASCLIN',0
	.word	50919
	.byte	24,2,35,0,0,7
	.word	50924
	.byte	27
	.byte	'Ifx_SRC_GASCLIN',0,6,181,2,3
	.word	50964
	.byte	7
	.word	48548
	.byte	3
	.byte	'_Ifx_SRC_GBCU',0,6,184,2,25,4,6
	.byte	'SPB',0
	.word	50994
	.byte	4,2,35,0,0,7
	.word	50999
	.byte	27
	.byte	'Ifx_SRC_GBCU',0,6,187,2,3
	.word	51033
	.byte	17,64
	.word	48622
	.byte	18,0,0,7
	.word	51060
	.byte	17,32
	.word	48688
	.byte	18,0,0,7
	.word	51074
	.byte	3
	.byte	'_Ifx_SRC_GCAN',0,6,190,2,25,96,6
	.byte	'CAN',0
	.word	51069
	.byte	64,2,35,0,6
	.byte	'CAN1',0
	.word	51083
	.byte	32,2,35,64,0,7
	.word	51088
	.byte	27
	.byte	'Ifx_SRC_GCAN',0,6,194,2,3
	.word	51136
	.byte	17,32
	.word	48747
	.byte	18,1,0,7
	.word	51163
	.byte	3
	.byte	'_Ifx_SRC_GCCU6',0,6,197,2,25,32,6
	.byte	'CCU6',0
	.word	51172
	.byte	32,2,35,0,0,7
	.word	51177
	.byte	27
	.byte	'Ifx_SRC_GCCU6',0,6,200,2,3
	.word	51213
	.byte	7
	.word	48854
	.byte	3
	.byte	'_Ifx_SRC_GCERBERUS',0,6,203,2,25,8,6
	.byte	'CERBERUS',0
	.word	51241
	.byte	8,2,35,0,0,7
	.word	51246
	.byte	27
	.byte	'Ifx_SRC_GCERBERUS',0,6,206,2,3
	.word	51290
	.byte	17,32
	.word	48920
	.byte	18,0,0,7
	.word	51322
	.byte	3
	.byte	'_Ifx_SRC_GCPU',0,6,209,2,25,32,6
	.byte	'CPU',0
	.word	51331
	.byte	32,2,35,0,0,7
	.word	51336
	.byte	27
	.byte	'Ifx_SRC_GCPU',0,6,212,2,3
	.word	51370
	.byte	17,80
	.word	49000
	.byte	18,0,0,7
	.word	51397
	.byte	3
	.byte	'_Ifx_SRC_GDMA',0,6,215,2,25,80,6
	.byte	'DMA',0
	.word	51406
	.byte	80,2,35,0,0,7
	.word	51411
	.byte	27
	.byte	'Ifx_SRC_GDMA',0,6,218,2,3
	.word	51445
	.byte	17,4
	.word	49091
	.byte	18,0,0,7
	.word	51472
	.byte	3
	.byte	'_Ifx_SRC_GEMEM',0,6,221,2,25,4,6
	.byte	'EMEM',0
	.word	51481
	.byte	4,2,35,0,0,7
	.word	51486
	.byte	27
	.byte	'Ifx_SRC_GEMEM',0,6,224,2,3
	.word	51522
	.byte	17,80
	.word	49151
	.byte	18,0,0,7
	.word	51550
	.byte	3
	.byte	'_Ifx_SRC_GERAY',0,6,227,2,25,80,6
	.byte	'ERAY',0
	.word	51559
	.byte	80,2,35,0,0,7
	.word	51564
	.byte	27
	.byte	'Ifx_SRC_GERAY',0,6,230,2,3
	.word	51600
	.byte	17,4
	.word	49305
	.byte	18,0,0,7
	.word	51628
	.byte	3
	.byte	'_Ifx_SRC_GETH',0,6,233,2,25,4,6
	.byte	'ETH',0
	.word	51637
	.byte	4,2,35,0,0,7
	.word	51642
	.byte	27
	.byte	'Ifx_SRC_GETH',0,6,236,2,3
	.word	51676
	.byte	17,8
	.word	49363
	.byte	18,0,0,7
	.word	51703
	.byte	3
	.byte	'_Ifx_SRC_GEVR',0,6,239,2,25,8,6
	.byte	'EVR',0
	.word	51712
	.byte	8,2,35,0,0,7
	.word	51717
	.byte	27
	.byte	'Ifx_SRC_GEVR',0,6,242,2,3
	.word	51751
	.byte	17,12
	.word	49436
	.byte	18,0,0,7
	.word	51778
	.byte	3
	.byte	'_Ifx_SRC_GFFT',0,6,245,2,25,12,6
	.byte	'FFT',0
	.word	51787
	.byte	12,2,35,0,0,7
	.word	51792
	.byte	27
	.byte	'Ifx_SRC_GFFT',0,6,248,2,3
	.word	51826
	.byte	17,128,12
	.word	49533
	.byte	18,0,0,7
	.word	51853
	.byte	3
	.byte	'_Ifx_SRC_GGPSR',0,6,251,2,25,128,12,6
	.byte	'GPSR',0
	.word	51863
	.byte	128,12,2,35,0,0,7
	.word	51868
	.byte	27
	.byte	'Ifx_SRC_GGPSR',0,6,254,2,3
	.word	51906
	.byte	17,48
	.word	49656
	.byte	18,0,0,7
	.word	51934
	.byte	3
	.byte	'_Ifx_SRC_GGPT12',0,6,129,3,25,48,6
	.byte	'GPT12',0
	.word	51943
	.byte	48,2,35,0,0,7
	.word	51948
	.byte	27
	.byte	'Ifx_SRC_GGPT12',0,6,132,3,3
	.word	51986
	.byte	17,192,11
	.word	49841
	.byte	18,0,0,7
	.word	52015
	.byte	3
	.byte	'_Ifx_SRC_GGTM',0,6,135,3,25,192,11,6
	.byte	'GTM',0
	.word	52025
	.byte	192,11,2,35,0,0,7
	.word	52030
	.byte	27
	.byte	'Ifx_SRC_GGTM',0,6,138,3,3
	.word	52066
	.byte	17,8
	.word	50014
	.byte	18,0,0,7
	.word	52093
	.byte	3
	.byte	'_Ifx_SRC_GHSM',0,6,141,3,25,8,6
	.byte	'HSM',0
	.word	52102
	.byte	8,2,35,0,0,7
	.word	52107
	.byte	27
	.byte	'Ifx_SRC_GHSM',0,6,144,3,3
	.word	52141
	.byte	17,4
	.word	50073
	.byte	18,0,0,7
	.word	52168
	.byte	3
	.byte	'_Ifx_SRC_GLMU',0,6,147,3,25,4,6
	.byte	'LMU',0
	.word	52177
	.byte	4,2,35,0,0,7
	.word	52182
	.byte	27
	.byte	'Ifx_SRC_GLMU',0,6,150,3,3
	.word	52216
	.byte	17,8
	.word	50131
	.byte	18,1,0,7
	.word	52243
	.byte	3
	.byte	'_Ifx_SRC_GPMU',0,6,153,3,25,8,6
	.byte	'PMU',0
	.word	52252
	.byte	8,2,35,0,0,7
	.word	52257
	.byte	27
	.byte	'Ifx_SRC_GPMU',0,6,156,3,3
	.word	52291
	.byte	17,96
	.word	50189
	.byte	18,3,0,7
	.word	52318
	.byte	3
	.byte	'_Ifx_SRC_GQSPI',0,6,159,3,25,96,6
	.byte	'QSPI',0
	.word	52327
	.byte	96,2,35,0,0,7
	.word	52332
	.byte	27
	.byte	'Ifx_SRC_GQSPI',0,6,162,3,3
	.word	52368
	.byte	7
	.word	50318
	.byte	3
	.byte	'_Ifx_SRC_GSCU',0,6,165,3,25,20,6
	.byte	'SCU',0
	.word	52396
	.byte	20,2,35,0,0,7
	.word	52401
	.byte	27
	.byte	'Ifx_SRC_GSCU',0,6,168,3,3
	.word	52435
	.byte	17,16
	.word	50390
	.byte	18,0,0,7
	.word	52462
	.byte	3
	.byte	'_Ifx_SRC_GSENT',0,6,171,3,25,16,6
	.byte	'SENT',0
	.word	52471
	.byte	16,2,35,0,0,7
	.word	52476
	.byte	27
	.byte	'Ifx_SRC_GSENT',0,6,174,3,3
	.word	52512
	.byte	17,12
	.word	50459
	.byte	18,0,0,7
	.word	52540
	.byte	3
	.byte	'_Ifx_SRC_GSMU',0,6,177,3,25,12,6
	.byte	'SMU',0
	.word	52549
	.byte	12,2,35,0,0,7
	.word	52554
	.byte	27
	.byte	'Ifx_SRC_GSMU',0,6,180,3,3
	.word	52588
	.byte	17,96
	.word	50517
	.byte	18,0,0,7
	.word	52615
	.byte	3
	.byte	'_Ifx_SRC_GSTM',0,6,183,3,25,96,6
	.byte	'STM',0
	.word	52624
	.byte	96,2,35,0,0,7
	.word	52629
	.byte	27
	.byte	'Ifx_SRC_GSTM',0,6,186,3,3
	.word	52663
	.byte	17,64
	.word	50747
	.byte	18,3,0,7
	.word	52690
	.byte	17,224,1
	.word	367
	.byte	18,223,1,0,17,192,2
	.word	50620
	.byte	18,0,0,7
	.word	52715
	.byte	3
	.byte	'_Ifx_SRC_GVADC',0,6,189,3,25,224,4,6
	.byte	'G',0
	.word	52699
	.byte	64,2,35,0,6
	.byte	'reserved_40',0
	.word	52704
	.byte	224,1,2,35,64,6
	.byte	'CG',0
	.word	52725
	.byte	192,2,3,35,160,2,0,7
	.word	52730
	.byte	27
	.byte	'Ifx_SRC_GVADC',0,6,194,3,3
	.word	52800
	.byte	7
	.word	50849
	.byte	3
	.byte	'_Ifx_SRC_GXBAR',0,6,197,3,25,4,6
	.byte	'XBAR',0
	.word	52828
	.byte	4,2,35,0,0,7
	.word	52833
	.byte	27
	.byte	'Ifx_SRC_GXBAR',0,6,200,3,3
	.word	52869
	.byte	3
	.byte	'_Ifx_CPU_A_Bits',0,22,45,16,4,4
	.byte	'ADDR',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_A_Bits',0,22,48,3
	.word	52897
	.byte	3
	.byte	'_Ifx_CPU_BIV_Bits',0,22,51,16,4,4
	.byte	'VSS',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'BIV',0,4
	.word	215
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_CPU_BIV_Bits',0,22,55,3
	.word	52958
	.byte	3
	.byte	'_Ifx_CPU_BTV_Bits',0,22,58,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'BTV',0,4
	.word	215
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_CPU_BTV_Bits',0,22,62,3
	.word	53037
	.byte	3
	.byte	'_Ifx_CPU_CCNT_Bits',0,22,65,16,4,4
	.byte	'CountValue',0,4
	.word	215
	.byte	31,1,2,35,0,4
	.byte	'SOvf',0,4
	.word	215
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_CPU_CCNT_Bits',0,22,69,3
	.word	53123
	.byte	3
	.byte	'_Ifx_CPU_CCTRL_Bits',0,22,72,16,4,4
	.byte	'CM',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'CE',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'M1',0,4
	.word	215
	.byte	3,27,2,35,0,4
	.byte	'M2',0,4
	.word	215
	.byte	3,24,2,35,0,4
	.byte	'M3',0,4
	.word	215
	.byte	3,21,2,35,0,4
	.byte	'reserved_11',0,4
	.word	215
	.byte	21,0,2,35,0,0,27
	.byte	'Ifx_CPU_CCTRL_Bits',0,22,80,3
	.word	53212
	.byte	3
	.byte	'_Ifx_CPU_COMPAT_Bits',0,22,83,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'RM',0,4
	.word	215
	.byte	1,28,2,35,0,4
	.byte	'SP',0,4
	.word	215
	.byte	1,27,2,35,0,4
	.byte	'reserved_5',0,4
	.word	215
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_CPU_COMPAT_Bits',0,22,89,3
	.word	53358
	.byte	3
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,22,92,16,4,4
	.byte	'CORE_ID',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'reserved_3',0,4
	.word	215
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_CPU_CORE_ID_Bits',0,22,96,3
	.word	53485
	.byte	3
	.byte	'_Ifx_CPU_CPR_L_Bits',0,22,99,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'LOWBND',0,4
	.word	215
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_CPU_CPR_L_Bits',0,22,103,3
	.word	53583
	.byte	3
	.byte	'_Ifx_CPU_CPR_U_Bits',0,22,106,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'UPPBND',0,4
	.word	215
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_CPU_CPR_U_Bits',0,22,110,3
	.word	53676
	.byte	3
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,22,113,16,4,4
	.byte	'MODREV',0,4
	.word	215
	.byte	8,24,2,35,0,4
	.byte	'MOD_32B',0,4
	.word	215
	.byte	8,16,2,35,0,4
	.byte	'MOD',0,4
	.word	215
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_CPU_CPU_ID_Bits',0,22,118,3
	.word	53769
	.byte	3
	.byte	'_Ifx_CPU_CPXE_Bits',0,22,121,16,4,4
	.byte	'XE',0,4
	.word	215
	.byte	8,24,2,35,0,4
	.byte	'reserved_8',0,4
	.word	215
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_CPU_CPXE_Bits',0,22,125,3
	.word	53876
	.byte	3
	.byte	'_Ifx_CPU_CREVT_Bits',0,22,128,1,16,4,4
	.byte	'EVTA',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'BBM',0,4
	.word	215
	.byte	1,28,2,35,0,4
	.byte	'BOD',0,4
	.word	215
	.byte	1,27,2,35,0,4
	.byte	'SUSP',0,4
	.word	215
	.byte	1,26,2,35,0,4
	.byte	'CNT',0,4
	.word	215
	.byte	2,24,2,35,0,4
	.byte	'reserved_8',0,4
	.word	215
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_CPU_CREVT_Bits',0,22,136,1,3
	.word	53963
	.byte	3
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,22,139,1,16,4,4
	.byte	'CID',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'reserved_3',0,4
	.word	215
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_CPU_CUS_ID_Bits',0,22,143,1,3
	.word	54117
	.byte	3
	.byte	'_Ifx_CPU_D_Bits',0,22,146,1,16,4,4
	.byte	'DATA',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_D_Bits',0,22,149,1,3
	.word	54211
	.byte	3
	.byte	'_Ifx_CPU_DATR_Bits',0,22,152,1,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'SBE',0,4
	.word	215
	.byte	1,28,2,35,0,4
	.byte	'reserved_4',0,4
	.word	215
	.byte	5,23,2,35,0,4
	.byte	'CWE',0,4
	.word	215
	.byte	1,22,2,35,0,4
	.byte	'CFE',0,4
	.word	215
	.byte	1,21,2,35,0,4
	.byte	'reserved_11',0,4
	.word	215
	.byte	3,18,2,35,0,4
	.byte	'SOE',0,4
	.word	215
	.byte	1,17,2,35,0,4
	.byte	'SME',0,4
	.word	215
	.byte	1,16,2,35,0,4
	.byte	'reserved_16',0,4
	.word	215
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_CPU_DATR_Bits',0,22,163,1,3
	.word	54274
	.byte	3
	.byte	'_Ifx_CPU_DBGSR_Bits',0,22,166,1,16,4,4
	.byte	'DE',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'HALT',0,4
	.word	215
	.byte	2,29,2,35,0,4
	.byte	'SIH',0,4
	.word	215
	.byte	1,28,2,35,0,4
	.byte	'SUSP',0,4
	.word	215
	.byte	1,27,2,35,0,4
	.byte	'reserved_5',0,4
	.word	215
	.byte	1,26,2,35,0,4
	.byte	'PREVSUSP',0,4
	.word	215
	.byte	1,25,2,35,0,4
	.byte	'PEVT',0,4
	.word	215
	.byte	1,24,2,35,0,4
	.byte	'EVTSRC',0,4
	.word	215
	.byte	5,19,2,35,0,4
	.byte	'reserved_13',0,4
	.word	215
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_CPU_DBGSR_Bits',0,22,177,1,3
	.word	54492
	.byte	3
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,22,180,1,16,4,4
	.byte	'DTA',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'reserved_1',0,4
	.word	215
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_CPU_DBGTCR_Bits',0,22,184,1,3
	.word	54707
	.byte	3
	.byte	'_Ifx_CPU_DCON0_Bits',0,22,187,1,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'DCBYP',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'reserved_2',0,4
	.word	215
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_CPU_DCON0_Bits',0,22,192,1,3
	.word	54801
	.byte	3
	.byte	'_Ifx_CPU_DCON2_Bits',0,22,195,1,16,4,4
	.byte	'DCACHE_SZE',0,4
	.word	215
	.byte	16,16,2,35,0,4
	.byte	'DSCRATCH_SZE',0,4
	.word	215
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_CPU_DCON2_Bits',0,22,199,1,3
	.word	54917
	.byte	3
	.byte	'_Ifx_CPU_DCX_Bits',0,22,202,1,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	6,26,2,35,0,4
	.byte	'DCXValue',0,4
	.word	215
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_CPU_DCX_Bits',0,22,206,1,3
	.word	55018
	.byte	3
	.byte	'_Ifx_CPU_DEADD_Bits',0,22,209,1,16,4,4
	.byte	'ERROR_ADDRESS',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_DEADD_Bits',0,22,212,1,3
	.word	55111
	.byte	3
	.byte	'_Ifx_CPU_DIEAR_Bits',0,22,215,1,16,4,4
	.byte	'TA',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_DIEAR_Bits',0,22,218,1,3
	.word	55191
	.byte	3
	.byte	'_Ifx_CPU_DIETR_Bits',0,22,221,1,16,4,4
	.byte	'IED',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'IE_T',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'IE_C',0,4
	.word	215
	.byte	1,29,2,35,0,4
	.byte	'IE_S',0,4
	.word	215
	.byte	1,28,2,35,0,4
	.byte	'IE_BI',0,4
	.word	215
	.byte	1,27,2,35,0,4
	.byte	'E_INFO',0,4
	.word	215
	.byte	6,21,2,35,0,4
	.byte	'IE_DUAL',0,4
	.word	215
	.byte	1,20,2,35,0,4
	.byte	'IE_SP',0,4
	.word	215
	.byte	1,19,2,35,0,4
	.byte	'IE_BS',0,4
	.word	215
	.byte	1,18,2,35,0,4
	.byte	'reserved_14',0,4
	.word	215
	.byte	18,0,2,35,0,0,27
	.byte	'Ifx_CPU_DIETR_Bits',0,22,233,1,3
	.word	55260
	.byte	3
	.byte	'_Ifx_CPU_DMS_Bits',0,22,236,1,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'DMSValue',0,4
	.word	215
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_CPU_DMS_Bits',0,22,240,1,3
	.word	55489
	.byte	3
	.byte	'_Ifx_CPU_DPR_L_Bits',0,22,243,1,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'LOWBND',0,4
	.word	215
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_CPU_DPR_L_Bits',0,22,247,1,3
	.word	55582
	.byte	3
	.byte	'_Ifx_CPU_DPR_U_Bits',0,22,250,1,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'UPPBND',0,4
	.word	215
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_CPU_DPR_U_Bits',0,22,254,1,3
	.word	55677
	.byte	3
	.byte	'_Ifx_CPU_DPRE_Bits',0,22,129,2,16,4,4
	.byte	'RE',0,4
	.word	215
	.byte	16,16,2,35,0,4
	.byte	'reserved_16',0,4
	.word	215
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_CPU_DPRE_Bits',0,22,133,2,3
	.word	55772
	.byte	3
	.byte	'_Ifx_CPU_DPWE_Bits',0,22,136,2,16,4,4
	.byte	'WE',0,4
	.word	215
	.byte	16,16,2,35,0,4
	.byte	'reserved_16',0,4
	.word	215
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_CPU_DPWE_Bits',0,22,140,2,3
	.word	55862
	.byte	3
	.byte	'_Ifx_CPU_DSTR_Bits',0,22,143,2,16,4,4
	.byte	'SRE',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'GAE',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'LBE',0,4
	.word	215
	.byte	1,29,2,35,0,4
	.byte	'reserved_3',0,4
	.word	215
	.byte	3,26,2,35,0,4
	.byte	'CRE',0,4
	.word	215
	.byte	1,25,2,35,0,4
	.byte	'reserved_7',0,4
	.word	215
	.byte	7,18,2,35,0,4
	.byte	'DTME',0,4
	.word	215
	.byte	1,17,2,35,0,4
	.byte	'LOE',0,4
	.word	215
	.byte	1,16,2,35,0,4
	.byte	'SDE',0,4
	.word	215
	.byte	1,15,2,35,0,4
	.byte	'SCE',0,4
	.word	215
	.byte	1,14,2,35,0,4
	.byte	'CAC',0,4
	.word	215
	.byte	1,13,2,35,0,4
	.byte	'MPE',0,4
	.word	215
	.byte	1,12,2,35,0,4
	.byte	'CLE',0,4
	.word	215
	.byte	1,11,2,35,0,4
	.byte	'reserved_21',0,4
	.word	215
	.byte	3,8,2,35,0,4
	.byte	'ALN',0,4
	.word	215
	.byte	1,7,2,35,0,4
	.byte	'reserved_25',0,4
	.word	215
	.byte	7,0,2,35,0,0,27
	.byte	'Ifx_CPU_DSTR_Bits',0,22,161,2,3
	.word	55952
	.byte	3
	.byte	'_Ifx_CPU_EXEVT_Bits',0,22,164,2,16,4,4
	.byte	'EVTA',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'BBM',0,4
	.word	215
	.byte	1,28,2,35,0,4
	.byte	'BOD',0,4
	.word	215
	.byte	1,27,2,35,0,4
	.byte	'SUSP',0,4
	.word	215
	.byte	1,26,2,35,0,4
	.byte	'CNT',0,4
	.word	215
	.byte	2,24,2,35,0,4
	.byte	'reserved_8',0,4
	.word	215
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_CPU_EXEVT_Bits',0,22,172,2,3
	.word	56276
	.byte	3
	.byte	'_Ifx_CPU_FCX_Bits',0,22,175,2,16,4,4
	.byte	'FCXO',0,4
	.word	215
	.byte	16,16,2,35,0,4
	.byte	'FCXS',0,4
	.word	215
	.byte	4,12,2,35,0,4
	.byte	'reserved_20',0,4
	.word	215
	.byte	12,0,2,35,0,0,27
	.byte	'Ifx_CPU_FCX_Bits',0,22,180,2,3
	.word	56430
	.byte	3
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,22,183,2,16,4,4
	.byte	'TST',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'TCL',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'reserved_2',0,4
	.word	215
	.byte	6,24,2,35,0,4
	.byte	'RM',0,4
	.word	215
	.byte	2,22,2,35,0,4
	.byte	'reserved_10',0,4
	.word	215
	.byte	8,14,2,35,0,4
	.byte	'FXE',0,4
	.word	215
	.byte	1,13,2,35,0,4
	.byte	'FUE',0,4
	.word	215
	.byte	1,12,2,35,0,4
	.byte	'FZE',0,4
	.word	215
	.byte	1,11,2,35,0,4
	.byte	'FVE',0,4
	.word	215
	.byte	1,10,2,35,0,4
	.byte	'FIE',0,4
	.word	215
	.byte	1,9,2,35,0,4
	.byte	'reserved_23',0,4
	.word	215
	.byte	3,6,2,35,0,4
	.byte	'FX',0,4
	.word	215
	.byte	1,5,2,35,0,4
	.byte	'FU',0,4
	.word	215
	.byte	1,4,2,35,0,4
	.byte	'FZ',0,4
	.word	215
	.byte	1,3,2,35,0,4
	.byte	'FV',0,4
	.word	215
	.byte	1,2,2,35,0,4
	.byte	'FI',0,4
	.word	215
	.byte	1,1,2,35,0,4
	.byte	'reserved_31',0,4
	.word	215
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,22,202,2,3
	.word	56536
	.byte	3
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,205,2,16,4,4
	.byte	'OPC',0,4
	.word	215
	.byte	8,24,2,35,0,4
	.byte	'FMT',0,4
	.word	215
	.byte	1,23,2,35,0,4
	.byte	'reserved_9',0,4
	.word	215
	.byte	7,16,2,35,0,4
	.byte	'DREG',0,4
	.word	215
	.byte	4,12,2,35,0,4
	.byte	'reserved_20',0,4
	.word	215
	.byte	12,0,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,212,2,3
	.word	56885
	.byte	3
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,22,215,2,16,4,4
	.byte	'PC',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,22,218,2,3
	.word	57045
	.byte	3
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,221,2,16,4,4
	.byte	'SRC1',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,224,2,3
	.word	57126
	.byte	3
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,227,2,16,4,4
	.byte	'SRC2',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,230,2,3
	.word	57213
	.byte	3
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,233,2,16,4,4
	.byte	'SRC3',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,236,2,3
	.word	57300
	.byte	3
	.byte	'_Ifx_CPU_ICNT_Bits',0,22,239,2,16,4,4
	.byte	'CountValue',0,4
	.word	215
	.byte	31,1,2,35,0,4
	.byte	'SOvf',0,4
	.word	215
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_CPU_ICNT_Bits',0,22,243,2,3
	.word	57387
	.byte	3
	.byte	'_Ifx_CPU_ICR_Bits',0,22,246,2,16,4,4
	.byte	'CCPN',0,4
	.word	215
	.byte	10,22,2,35,0,4
	.byte	'reserved_10',0,4
	.word	215
	.byte	5,17,2,35,0,4
	.byte	'IE',0,4
	.word	215
	.byte	1,16,2,35,0,4
	.byte	'PIPN',0,4
	.word	215
	.byte	10,6,2,35,0,4
	.byte	'reserved_26',0,4
	.word	215
	.byte	6,0,2,35,0,0,27
	.byte	'Ifx_CPU_ICR_Bits',0,22,253,2,3
	.word	57478
	.byte	3
	.byte	'_Ifx_CPU_ISP_Bits',0,22,128,3,16,4,4
	.byte	'ISP',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_ISP_Bits',0,22,131,3,3
	.word	57621
	.byte	3
	.byte	'_Ifx_CPU_LCX_Bits',0,22,134,3,16,4,4
	.byte	'LCXO',0,4
	.word	215
	.byte	16,16,2,35,0,4
	.byte	'LCXS',0,4
	.word	215
	.byte	4,12,2,35,0,4
	.byte	'reserved_20',0,4
	.word	215
	.byte	12,0,2,35,0,0,27
	.byte	'Ifx_CPU_LCX_Bits',0,22,139,3,3
	.word	57687
	.byte	3
	.byte	'_Ifx_CPU_M1CNT_Bits',0,22,142,3,16,4,4
	.byte	'CountValue',0,4
	.word	215
	.byte	31,1,2,35,0,4
	.byte	'SOvf',0,4
	.word	215
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_CPU_M1CNT_Bits',0,22,146,3,3
	.word	57793
	.byte	3
	.byte	'_Ifx_CPU_M2CNT_Bits',0,22,149,3,16,4,4
	.byte	'CountValue',0,4
	.word	215
	.byte	31,1,2,35,0,4
	.byte	'SOvf',0,4
	.word	215
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_CPU_M2CNT_Bits',0,22,153,3,3
	.word	57886
	.byte	3
	.byte	'_Ifx_CPU_M3CNT_Bits',0,22,156,3,16,4,4
	.byte	'CountValue',0,4
	.word	215
	.byte	31,1,2,35,0,4
	.byte	'SOvf',0,4
	.word	215
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_CPU_M3CNT_Bits',0,22,160,3,3
	.word	57979
	.byte	3
	.byte	'_Ifx_CPU_PC_Bits',0,22,163,3,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'PC',0,4
	.word	215
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_CPU_PC_Bits',0,22,167,3,3
	.word	58072
	.byte	3
	.byte	'_Ifx_CPU_PCON0_Bits',0,22,170,3,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'PCBYP',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'reserved_2',0,4
	.word	215
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_CPU_PCON0_Bits',0,22,175,3,3
	.word	58157
	.byte	3
	.byte	'_Ifx_CPU_PCON1_Bits',0,22,178,3,16,4,4
	.byte	'PCINV',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'PBINV',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'reserved_2',0,4
	.word	215
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_CPU_PCON1_Bits',0,22,183,3,3
	.word	58273
	.byte	3
	.byte	'_Ifx_CPU_PCON2_Bits',0,22,186,3,16,4,4
	.byte	'PCACHE_SZE',0,4
	.word	215
	.byte	16,16,2,35,0,4
	.byte	'PSCRATCH_SZE',0,4
	.word	215
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_CPU_PCON2_Bits',0,22,190,3,3
	.word	58384
	.byte	3
	.byte	'_Ifx_CPU_PCXI_Bits',0,22,193,3,16,4,4
	.byte	'PCXO',0,4
	.word	215
	.byte	16,16,2,35,0,4
	.byte	'PCXS',0,4
	.word	215
	.byte	4,12,2,35,0,4
	.byte	'UL',0,4
	.word	215
	.byte	1,11,2,35,0,4
	.byte	'PIE',0,4
	.word	215
	.byte	1,10,2,35,0,4
	.byte	'PCPN',0,4
	.word	215
	.byte	10,0,2,35,0,0,27
	.byte	'Ifx_CPU_PCXI_Bits',0,22,200,3,3
	.word	58485
	.byte	3
	.byte	'_Ifx_CPU_PIEAR_Bits',0,22,203,3,16,4,4
	.byte	'TA',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_PIEAR_Bits',0,22,206,3,3
	.word	58615
	.byte	3
	.byte	'_Ifx_CPU_PIETR_Bits',0,22,209,3,16,4,4
	.byte	'IED',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'IE_T',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'IE_C',0,4
	.word	215
	.byte	1,29,2,35,0,4
	.byte	'IE_S',0,4
	.word	215
	.byte	1,28,2,35,0,4
	.byte	'IE_BI',0,4
	.word	215
	.byte	1,27,2,35,0,4
	.byte	'E_INFO',0,4
	.word	215
	.byte	6,21,2,35,0,4
	.byte	'IE_DUAL',0,4
	.word	215
	.byte	1,20,2,35,0,4
	.byte	'IE_SP',0,4
	.word	215
	.byte	1,19,2,35,0,4
	.byte	'IE_BS',0,4
	.word	215
	.byte	1,18,2,35,0,4
	.byte	'reserved_14',0,4
	.word	215
	.byte	18,0,2,35,0,0,27
	.byte	'Ifx_CPU_PIETR_Bits',0,22,221,3,3
	.word	58684
	.byte	3
	.byte	'_Ifx_CPU_PMA0_Bits',0,22,224,3,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	13,19,2,35,0,4
	.byte	'DAC',0,4
	.word	215
	.byte	3,16,2,35,0,4
	.byte	'reserved_16',0,4
	.word	215
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_CPU_PMA0_Bits',0,22,229,3,3
	.word	58913
	.byte	3
	.byte	'_Ifx_CPU_PMA1_Bits',0,22,232,3,16,4,4
	.byte	'reserved_0',0,4
	.word	215
	.byte	14,18,2,35,0,4
	.byte	'CAC',0,4
	.word	215
	.byte	2,16,2,35,0,4
	.byte	'reserved_16',0,4
	.word	215
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_CPU_PMA1_Bits',0,22,237,3,3
	.word	59026
	.byte	3
	.byte	'_Ifx_CPU_PMA2_Bits',0,22,240,3,16,4,4
	.byte	'PSI',0,4
	.word	215
	.byte	16,16,2,35,0,4
	.byte	'reserved_16',0,4
	.word	215
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_CPU_PMA2_Bits',0,22,244,3,3
	.word	59139
	.byte	3
	.byte	'_Ifx_CPU_PSTR_Bits',0,22,247,3,16,4,4
	.byte	'FRE',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'reserved_1',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'FBE',0,4
	.word	215
	.byte	1,29,2,35,0,4
	.byte	'reserved_3',0,4
	.word	215
	.byte	9,20,2,35,0,4
	.byte	'FPE',0,4
	.word	215
	.byte	1,19,2,35,0,4
	.byte	'reserved_13',0,4
	.word	215
	.byte	1,18,2,35,0,4
	.byte	'FME',0,4
	.word	215
	.byte	1,17,2,35,0,4
	.byte	'reserved_15',0,4
	.word	215
	.byte	17,0,2,35,0,0,27
	.byte	'Ifx_CPU_PSTR_Bits',0,22,129,4,3
	.word	59230
	.byte	3
	.byte	'_Ifx_CPU_PSW_Bits',0,22,132,4,16,4,4
	.byte	'CDC',0,4
	.word	215
	.byte	7,25,2,35,0,4
	.byte	'CDE',0,4
	.word	215
	.byte	1,24,2,35,0,4
	.byte	'GW',0,4
	.word	215
	.byte	1,23,2,35,0,4
	.byte	'IS',0,4
	.word	215
	.byte	1,22,2,35,0,4
	.byte	'IO',0,4
	.word	215
	.byte	2,20,2,35,0,4
	.byte	'PRS',0,4
	.word	215
	.byte	2,18,2,35,0,4
	.byte	'S',0,4
	.word	215
	.byte	1,17,2,35,0,4
	.byte	'reserved_15',0,4
	.word	215
	.byte	12,5,2,35,0,4
	.byte	'SAV',0,4
	.word	215
	.byte	1,4,2,35,0,4
	.byte	'AV',0,4
	.word	215
	.byte	1,3,2,35,0,4
	.byte	'SV',0,4
	.word	215
	.byte	1,2,2,35,0,4
	.byte	'V',0,4
	.word	215
	.byte	1,1,2,35,0,4
	.byte	'C',0,4
	.word	215
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_CPU_PSW_Bits',0,22,147,4,3
	.word	59433
	.byte	3
	.byte	'_Ifx_CPU_SEGEN_Bits',0,22,150,4,16,4,4
	.byte	'ADFLIP',0,4
	.word	215
	.byte	8,24,2,35,0,4
	.byte	'ADTYPE',0,4
	.word	215
	.byte	2,22,2,35,0,4
	.byte	'reserved_10',0,4
	.word	215
	.byte	21,1,2,35,0,4
	.byte	'AE',0,4
	.word	215
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_CPU_SEGEN_Bits',0,22,156,4,3
	.word	59676
	.byte	3
	.byte	'_Ifx_CPU_SMACON_Bits',0,22,159,4,16,4,4
	.byte	'PC',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'reserved_1',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'PT',0,4
	.word	215
	.byte	1,29,2,35,0,4
	.byte	'reserved_3',0,4
	.word	215
	.byte	5,24,2,35,0,4
	.byte	'DC',0,4
	.word	215
	.byte	1,23,2,35,0,4
	.byte	'reserved_9',0,4
	.word	215
	.byte	1,22,2,35,0,4
	.byte	'DT',0,4
	.word	215
	.byte	1,21,2,35,0,4
	.byte	'reserved_11',0,4
	.word	215
	.byte	13,8,2,35,0,4
	.byte	'IODT',0,4
	.word	215
	.byte	1,7,2,35,0,4
	.byte	'reserved_25',0,4
	.word	215
	.byte	7,0,2,35,0,0,27
	.byte	'Ifx_CPU_SMACON_Bits',0,22,171,4,3
	.word	59804
	.byte	3
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,22,174,4,16,4,4
	.byte	'EN',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,22,177,4,3
	.word	60045
	.byte	3
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,22,180,4,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,22,183,4,3
	.word	60128
	.byte	3
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,22,186,4,16,4,4
	.byte	'EN',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,22,189,4,3
	.word	60219
	.byte	3
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,22,192,4,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,22,195,4,3
	.word	60310
	.byte	3
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,22,198,4,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	5,3,2,35,0,4
	.byte	'ADDR',0,4
	.word	192
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,22,202,4,3
	.word	60409
	.byte	3
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,22,205,4,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	5,3,2,35,0,4
	.byte	'ADDR',0,4
	.word	192
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,22,209,4,3
	.word	60516
	.byte	3
	.byte	'_Ifx_CPU_SWEVT_Bits',0,22,212,4,16,4,4
	.byte	'EVTA',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'BBM',0,4
	.word	215
	.byte	1,28,2,35,0,4
	.byte	'BOD',0,4
	.word	215
	.byte	1,27,2,35,0,4
	.byte	'SUSP',0,4
	.word	215
	.byte	1,26,2,35,0,4
	.byte	'CNT',0,4
	.word	215
	.byte	2,24,2,35,0,4
	.byte	'reserved_8',0,4
	.word	215
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_CPU_SWEVT_Bits',0,22,220,4,3
	.word	60623
	.byte	3
	.byte	'_Ifx_CPU_SYSCON_Bits',0,22,223,4,16,4,4
	.byte	'FCDSF',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'PROTEN',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'TPROTEN',0,4
	.word	215
	.byte	1,29,2,35,0,4
	.byte	'IS',0,4
	.word	215
	.byte	1,28,2,35,0,4
	.byte	'IT',0,4
	.word	215
	.byte	1,27,2,35,0,4
	.byte	'reserved_5',0,4
	.word	215
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_CPU_SYSCON_Bits',0,22,231,4,3
	.word	60777
	.byte	3
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,22,234,4,16,4,4
	.byte	'ASI',0,4
	.word	215
	.byte	5,27,2,35,0,4
	.byte	'reserved_5',0,4
	.word	215
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,22,238,4,3
	.word	60938
	.byte	3
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,22,241,4,16,4,4
	.byte	'TEXP0',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'TEXP1',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'TEXP2',0,4
	.word	215
	.byte	1,29,2,35,0,4
	.byte	'reserved_3',0,4
	.word	215
	.byte	13,16,2,35,0,4
	.byte	'TTRAP',0,4
	.word	215
	.byte	1,15,2,35,0,4
	.byte	'reserved_17',0,4
	.word	215
	.byte	15,0,2,35,0,0,27
	.byte	'Ifx_CPU_TPS_CON_Bits',0,22,249,4,3
	.word	61036
	.byte	3
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,22,252,4,16,4,4
	.byte	'Timer',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,22,255,4,3
	.word	61208
	.byte	3
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,22,130,5,16,4,4
	.byte	'ADDR',0,4
	.word	215
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CPU_TR_ADR_Bits',0,22,133,5,3
	.word	61288
	.byte	3
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,22,136,5,16,4,4
	.byte	'EVTA',0,4
	.word	215
	.byte	3,29,2,35,0,4
	.byte	'BBM',0,4
	.word	215
	.byte	1,28,2,35,0,4
	.byte	'BOD',0,4
	.word	215
	.byte	1,27,2,35,0,4
	.byte	'SUSP',0,4
	.word	215
	.byte	1,26,2,35,0,4
	.byte	'CNT',0,4
	.word	215
	.byte	2,24,2,35,0,4
	.byte	'reserved_8',0,4
	.word	215
	.byte	4,20,2,35,0,4
	.byte	'TYP',0,4
	.word	215
	.byte	1,19,2,35,0,4
	.byte	'RNG',0,4
	.word	215
	.byte	1,18,2,35,0,4
	.byte	'reserved_14',0,4
	.word	215
	.byte	1,17,2,35,0,4
	.byte	'ASI_EN',0,4
	.word	215
	.byte	1,16,2,35,0,4
	.byte	'ASI',0,4
	.word	215
	.byte	5,11,2,35,0,4
	.byte	'reserved_21',0,4
	.word	215
	.byte	6,5,2,35,0,4
	.byte	'AST',0,4
	.word	215
	.byte	1,4,2,35,0,4
	.byte	'ALD',0,4
	.word	215
	.byte	1,3,2,35,0,4
	.byte	'reserved_29',0,4
	.word	215
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_CPU_TR_EVT_Bits',0,22,153,5,3
	.word	61361
	.byte	3
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,22,156,5,16,4,4
	.byte	'T0',0,4
	.word	215
	.byte	1,31,2,35,0,4
	.byte	'T1',0,4
	.word	215
	.byte	1,30,2,35,0,4
	.byte	'T2',0,4
	.word	215
	.byte	1,29,2,35,0,4
	.byte	'T3',0,4
	.word	215
	.byte	1,28,2,35,0,4
	.byte	'T4',0,4
	.word	215
	.byte	1,27,2,35,0,4
	.byte	'T5',0,4
	.word	215
	.byte	1,26,2,35,0,4
	.byte	'T6',0,4
	.word	215
	.byte	1,25,2,35,0,4
	.byte	'T7',0,4
	.word	215
	.byte	1,24,2,35,0,4
	.byte	'reserved_8',0,4
	.word	215
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,22,167,5,3
	.word	61679
	.byte	5,22,175,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	52897
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_A',0,22,180,5,3
	.word	61874
	.byte	5,22,183,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	52958
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_BIV',0,22,188,5,3
	.word	61933
	.byte	5,22,191,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	53037
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_BTV',0,22,196,5,3
	.word	61994
	.byte	5,22,199,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	53123
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_CCNT',0,22,204,5,3
	.word	62055
	.byte	5,22,207,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	53212
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_CCTRL',0,22,212,5,3
	.word	62117
	.byte	5,22,215,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	53358
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_COMPAT',0,22,220,5,3
	.word	62180
	.byte	5,22,223,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	53485
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_CORE_ID',0,22,228,5,3
	.word	62244
	.byte	5,22,231,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	53583
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_CPR_L',0,22,236,5,3
	.word	62309
	.byte	5,22,239,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	53676
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_CPR_U',0,22,244,5,3
	.word	62372
	.byte	5,22,247,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	53769
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_CPU_ID',0,22,252,5,3
	.word	62435
	.byte	5,22,255,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	53876
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_CPXE',0,22,132,6,3
	.word	62499
	.byte	5,22,135,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	53963
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_CREVT',0,22,140,6,3
	.word	62561
	.byte	5,22,143,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	54117
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_CUS_ID',0,22,148,6,3
	.word	62624
	.byte	5,22,151,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	54211
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_D',0,22,156,6,3
	.word	62688
	.byte	5,22,159,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	54274
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DATR',0,22,164,6,3
	.word	62747
	.byte	5,22,167,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	54492
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DBGSR',0,22,172,6,3
	.word	62809
	.byte	5,22,175,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	54707
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DBGTCR',0,22,180,6,3
	.word	62872
	.byte	5,22,183,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	54801
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DCON0',0,22,188,6,3
	.word	62936
	.byte	5,22,191,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	54917
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DCON2',0,22,196,6,3
	.word	62999
	.byte	5,22,199,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	55018
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DCX',0,22,204,6,3
	.word	63062
	.byte	5,22,207,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	55111
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DEADD',0,22,212,6,3
	.word	63123
	.byte	5,22,215,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	55191
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DIEAR',0,22,220,6,3
	.word	63186
	.byte	5,22,223,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	55260
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DIETR',0,22,228,6,3
	.word	63249
	.byte	5,22,231,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	55489
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DMS',0,22,236,6,3
	.word	63312
	.byte	5,22,239,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	55582
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DPR_L',0,22,244,6,3
	.word	63373
	.byte	5,22,247,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	55677
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DPR_U',0,22,252,6,3
	.word	63436
	.byte	5,22,255,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	55772
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DPRE',0,22,132,7,3
	.word	63499
	.byte	5,22,135,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	55862
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DPWE',0,22,140,7,3
	.word	63561
	.byte	5,22,143,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	55952
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_DSTR',0,22,148,7,3
	.word	63623
	.byte	5,22,151,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	56276
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_EXEVT',0,22,156,7,3
	.word	63685
	.byte	5,22,159,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	56430
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_FCX',0,22,164,7,3
	.word	63748
	.byte	5,22,167,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	56536
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,22,172,7,3
	.word	63809
	.byte	5,22,175,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	56885
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,22,180,7,3
	.word	63879
	.byte	5,22,183,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	57045
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,22,188,7,3
	.word	63949
	.byte	5,22,191,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	57126
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,22,196,7,3
	.word	64018
	.byte	5,22,199,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	57213
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,22,204,7,3
	.word	64089
	.byte	5,22,207,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	57300
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,22,212,7,3
	.word	64160
	.byte	5,22,215,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	57387
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_ICNT',0,22,220,7,3
	.word	64231
	.byte	5,22,223,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	57478
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_ICR',0,22,228,7,3
	.word	64293
	.byte	5,22,231,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	57621
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_ISP',0,22,236,7,3
	.word	64354
	.byte	5,22,239,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	57687
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_LCX',0,22,244,7,3
	.word	64415
	.byte	5,22,247,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	57793
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_M1CNT',0,22,252,7,3
	.word	64476
	.byte	5,22,255,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	57886
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_M2CNT',0,22,132,8,3
	.word	64539
	.byte	5,22,135,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	57979
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_M3CNT',0,22,140,8,3
	.word	64602
	.byte	5,22,143,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	58072
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PC',0,22,148,8,3
	.word	64665
	.byte	5,22,151,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	58157
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PCON0',0,22,156,8,3
	.word	64725
	.byte	5,22,159,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	58273
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PCON1',0,22,164,8,3
	.word	64788
	.byte	5,22,167,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	58384
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PCON2',0,22,172,8,3
	.word	64851
	.byte	5,22,175,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	58485
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PCXI',0,22,180,8,3
	.word	64914
	.byte	5,22,183,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	58615
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PIEAR',0,22,188,8,3
	.word	64976
	.byte	5,22,191,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	58684
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PIETR',0,22,196,8,3
	.word	65039
	.byte	5,22,199,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	58913
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PMA0',0,22,204,8,3
	.word	65102
	.byte	5,22,207,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	59026
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PMA1',0,22,212,8,3
	.word	65164
	.byte	5,22,215,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	59139
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PMA2',0,22,220,8,3
	.word	65226
	.byte	5,22,223,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	59230
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PSTR',0,22,228,8,3
	.word	65288
	.byte	5,22,231,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	59433
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_PSW',0,22,236,8,3
	.word	65350
	.byte	5,22,239,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	59676
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_SEGEN',0,22,244,8,3
	.word	65411
	.byte	5,22,247,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	59804
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_SMACON',0,22,252,8,3
	.word	65474
	.byte	5,22,255,8,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	60045
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_ACCENA',0,22,132,9,3
	.word	65538
	.byte	5,22,135,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	60128
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_ACCENB',0,22,140,9,3
	.word	65608
	.byte	5,22,143,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	60219
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,22,148,9,3
	.word	65678
	.byte	5,22,151,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	60310
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,22,156,9,3
	.word	65752
	.byte	5,22,159,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	60409
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,22,164,9,3
	.word	65826
	.byte	5,22,167,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	60516
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,22,172,9,3
	.word	65896
	.byte	5,22,175,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	60623
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_SWEVT',0,22,180,9,3
	.word	65966
	.byte	5,22,183,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	60777
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_SYSCON',0,22,188,9,3
	.word	66029
	.byte	5,22,191,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	60938
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_TASK_ASI',0,22,196,9,3
	.word	66093
	.byte	5,22,199,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	61036
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_TPS_CON',0,22,204,9,3
	.word	66159
	.byte	5,22,207,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	61208
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_TPS_TIMER',0,22,212,9,3
	.word	66224
	.byte	5,22,215,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	61288
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_TR_ADR',0,22,220,9,3
	.word	66291
	.byte	5,22,223,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	61361
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_TR_EVT',0,22,228,9,3
	.word	66355
	.byte	5,22,231,9,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	61679
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CPU_TRIG_ACC',0,22,236,9,3
	.word	66419
	.byte	3
	.byte	'_Ifx_CPU_CPR',0,22,247,9,25,8,6
	.byte	'L',0
	.word	62309
	.byte	4,2,35,0,6
	.byte	'U',0
	.word	62372
	.byte	4,2,35,4,0,7
	.word	66485
	.byte	27
	.byte	'Ifx_CPU_CPR',0,22,251,9,3
	.word	66527
	.byte	3
	.byte	'_Ifx_CPU_DPR',0,22,254,9,25,8,6
	.byte	'L',0
	.word	63373
	.byte	4,2,35,0,6
	.byte	'U',0
	.word	63436
	.byte	4,2,35,4,0,7
	.word	66553
	.byte	27
	.byte	'Ifx_CPU_DPR',0,22,130,10,3
	.word	66595
	.byte	3
	.byte	'_Ifx_CPU_SPROT_RGN',0,22,133,10,25,16,6
	.byte	'LA',0
	.word	65826
	.byte	4,2,35,0,6
	.byte	'UA',0
	.word	65896
	.byte	4,2,35,4,6
	.byte	'ACCENA',0
	.word	65678
	.byte	4,2,35,8,6
	.byte	'ACCENB',0
	.word	65752
	.byte	4,2,35,12,0,7
	.word	66621
	.byte	27
	.byte	'Ifx_CPU_SPROT_RGN',0,22,139,10,3
	.word	66703
	.byte	17,12
	.word	66224
	.byte	18,2,0,3
	.byte	'_Ifx_CPU_TPS',0,22,142,10,25,16,6
	.byte	'CON',0
	.word	66159
	.byte	4,2,35,0,6
	.byte	'TIMER',0
	.word	66735
	.byte	12,2,35,4,0,7
	.word	66744
	.byte	27
	.byte	'Ifx_CPU_TPS',0,22,146,10,3
	.word	66792
	.byte	3
	.byte	'_Ifx_CPU_TR',0,22,149,10,25,8,6
	.byte	'EVT',0
	.word	66355
	.byte	4,2,35,0,6
	.byte	'ADR',0
	.word	66291
	.byte	4,2,35,4,0,7
	.word	66818
	.byte	27
	.byte	'Ifx_CPU_TR',0,22,153,10,3
	.word	66863
	.byte	27
	.byte	'IfxCpu_ResourceCpu',0,9,87,3
	.word	1858
	.byte	14,8,118,9,1,15
	.byte	'IfxCpu_CounterMode_normal',0,0,15
	.byte	'IfxCpu_CounterMode_task',0,1,0,27
	.byte	'IfxCpu_CounterMode',0,8,122,3
	.word	66915
	.byte	19,8,132,1,9,6,6
	.byte	'counter',0
	.word	1989
	.byte	4,2,35,0,6
	.byte	'overlfow',0
	.word	367
	.byte	1,2,35,4,0,27
	.byte	'IfxCpu_Counter',0,8,136,1,3
	.word	67002
	.byte	19,8,144,1,9,32,6
	.byte	'instruction',0
	.word	67002
	.byte	6,2,35,0,6
	.byte	'clock',0
	.word	67002
	.byte	6,2,35,6,6
	.byte	'counter1',0
	.word	67002
	.byte	6,2,35,12,6
	.byte	'counter2',0
	.word	67002
	.byte	6,2,35,18,6
	.byte	'counter3',0
	.word	67002
	.byte	6,2,35,24,0,27
	.byte	'IfxCpu_Perf',0,8,151,1,3
	.word	67068
	.byte	3
	.byte	'_Ifx_STM_ACCEN0_Bits',0,23,45,16,4,4
	.byte	'EN0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'EN1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'EN2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'EN3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'EN4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'EN5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'EN6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'EN7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'EN8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'EN9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'EN10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'EN11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'EN12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'EN13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'EN14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'EN15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'EN16',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'EN17',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'EN18',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'EN19',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'EN20',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'EN21',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'EN22',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'EN23',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'EN24',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'EN25',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'EN26',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'EN27',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'EN28',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'EN29',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'EN30',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'EN31',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_STM_ACCEN0_Bits',0,23,79,3
	.word	67186
	.byte	3
	.byte	'_Ifx_STM_ACCEN1_Bits',0,23,82,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_ACCEN1_Bits',0,23,85,3
	.word	67743
	.byte	3
	.byte	'_Ifx_STM_CAP_Bits',0,23,88,16,4,4
	.byte	'STMCAP63_32',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_CAP_Bits',0,23,91,3
	.word	67820
	.byte	3
	.byte	'_Ifx_STM_CAPSV_Bits',0,23,94,16,4,4
	.byte	'STMCAP63_32',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_CAPSV_Bits',0,23,97,3
	.word	67892
	.byte	3
	.byte	'_Ifx_STM_CLC_Bits',0,23,100,16,4,4
	.byte	'DISR',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'DISS',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'EDIS',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	192
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_STM_CLC_Bits',0,23,107,3
	.word	67968
	.byte	3
	.byte	'_Ifx_STM_CMCON_Bits',0,23,110,16,4,4
	.byte	'MSIZE0',0,1
	.word	367
	.byte	5,3,2,35,0,4
	.byte	'reserved_5',0,1
	.word	367
	.byte	3,0,2,35,0,4
	.byte	'MSTART0',0,1
	.word	367
	.byte	5,3,2,35,1,4
	.byte	'reserved_13',0,1
	.word	367
	.byte	3,0,2,35,1,4
	.byte	'MSIZE1',0,1
	.word	367
	.byte	5,3,2,35,2,4
	.byte	'reserved_21',0,1
	.word	367
	.byte	3,0,2,35,2,4
	.byte	'MSTART1',0,1
	.word	367
	.byte	5,3,2,35,3,4
	.byte	'reserved_29',0,1
	.word	367
	.byte	3,0,2,35,3,0,27
	.byte	'Ifx_STM_CMCON_Bits',0,23,120,3
	.word	68109
	.byte	3
	.byte	'_Ifx_STM_CMP_Bits',0,23,123,16,4,4
	.byte	'CMPVAL',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_CMP_Bits',0,23,126,3
	.word	68327
	.byte	3
	.byte	'_Ifx_STM_ICR_Bits',0,23,129,1,16,4,4
	.byte	'CMP0EN',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'CMP0IR',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'CMP0OS',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'reserved_3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'CMP1EN',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'CMP1IR',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'CMP1OS',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'reserved_7',0,4
	.word	192
	.byte	25,0,2,35,0,0,27
	.byte	'Ifx_STM_ICR_Bits',0,23,139,1,3
	.word	68394
	.byte	3
	.byte	'_Ifx_STM_ID_Bits',0,23,142,1,16,4,4
	.byte	'MODREV',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'MODTYPE',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'MODNUMBER',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_STM_ID_Bits',0,23,147,1,3
	.word	68597
	.byte	3
	.byte	'_Ifx_STM_ISCR_Bits',0,23,150,1,16,4,4
	.byte	'CMP0IRR',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'CMP0IRS',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'CMP1IRR',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'CMP1IRS',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	192
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_STM_ISCR_Bits',0,23,157,1,3
	.word	68704
	.byte	3
	.byte	'_Ifx_STM_KRST0_Bits',0,23,160,1,16,4,4
	.byte	'RST',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'RSTSTAT',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	192
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_STM_KRST0_Bits',0,23,165,1,3
	.word	68855
	.byte	3
	.byte	'_Ifx_STM_KRST1_Bits',0,23,168,1,16,4,4
	.byte	'RST',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'reserved_1',0,4
	.word	192
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_STM_KRST1_Bits',0,23,172,1,3
	.word	68966
	.byte	3
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,23,175,1,16,4,4
	.byte	'CLR',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'reserved_1',0,4
	.word	192
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_STM_KRSTCLR_Bits',0,23,179,1,3
	.word	69058
	.byte	3
	.byte	'_Ifx_STM_OCS_Bits',0,23,182,1,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	24,8,2,35,0,4
	.byte	'SUS',0,1
	.word	367
	.byte	4,4,2,35,3,4
	.byte	'SUS_P',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'SUSSTA',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'reserved_30',0,1
	.word	367
	.byte	2,0,2,35,3,0,27
	.byte	'Ifx_STM_OCS_Bits',0,23,189,1,3
	.word	69154
	.byte	3
	.byte	'_Ifx_STM_TIM0_Bits',0,23,192,1,16,4,4
	.byte	'STM31_0',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_TIM0_Bits',0,23,195,1,3
	.word	69300
	.byte	3
	.byte	'_Ifx_STM_TIM0SV_Bits',0,23,198,1,16,4,4
	.byte	'STM31_0',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_TIM0SV_Bits',0,23,201,1,3
	.word	69372
	.byte	3
	.byte	'_Ifx_STM_TIM1_Bits',0,23,204,1,16,4,4
	.byte	'STM35_4',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_TIM1_Bits',0,23,207,1,3
	.word	69448
	.byte	3
	.byte	'_Ifx_STM_TIM2_Bits',0,23,210,1,16,4,4
	.byte	'STM39_8',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_TIM2_Bits',0,23,213,1,3
	.word	69520
	.byte	3
	.byte	'_Ifx_STM_TIM3_Bits',0,23,216,1,16,4,4
	.byte	'STM43_12',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_TIM3_Bits',0,23,219,1,3
	.word	69592
	.byte	3
	.byte	'_Ifx_STM_TIM4_Bits',0,23,222,1,16,4,4
	.byte	'STM47_16',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_TIM4_Bits',0,23,225,1,3
	.word	69665
	.byte	3
	.byte	'_Ifx_STM_TIM5_Bits',0,23,228,1,16,4,4
	.byte	'STM51_20',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_TIM5_Bits',0,23,231,1,3
	.word	69738
	.byte	3
	.byte	'_Ifx_STM_TIM6_Bits',0,23,234,1,16,4,4
	.byte	'STM63_32',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_STM_TIM6_Bits',0,23,237,1,3
	.word	69811
	.byte	5,23,245,1,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	67186
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_ACCEN0',0,23,250,1,3
	.word	69884
	.byte	5,23,253,1,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	67743
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_ACCEN1',0,23,130,2,3
	.word	69948
	.byte	5,23,133,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	67820
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_CAP',0,23,138,2,3
	.word	70012
	.byte	5,23,141,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	67892
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_CAPSV',0,23,146,2,3
	.word	70073
	.byte	5,23,149,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	67968
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_CLC',0,23,154,2,3
	.word	70136
	.byte	5,23,157,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	68109
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_CMCON',0,23,162,2,3
	.word	70197
	.byte	5,23,165,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	68327
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_CMP',0,23,170,2,3
	.word	70260
	.byte	5,23,173,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	68394
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_ICR',0,23,178,2,3
	.word	70321
	.byte	5,23,181,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	68597
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_ID',0,23,186,2,3
	.word	70382
	.byte	5,23,189,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	68704
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_ISCR',0,23,194,2,3
	.word	70442
	.byte	5,23,197,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	68855
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_KRST0',0,23,202,2,3
	.word	70504
	.byte	5,23,205,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	68966
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_KRST1',0,23,210,2,3
	.word	70567
	.byte	5,23,213,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	69058
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_KRSTCLR',0,23,218,2,3
	.word	70630
	.byte	5,23,221,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	69154
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_OCS',0,23,226,2,3
	.word	70695
	.byte	5,23,229,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	69300
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_TIM0',0,23,234,2,3
	.word	70756
	.byte	5,23,237,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	69372
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_TIM0SV',0,23,242,2,3
	.word	70818
	.byte	5,23,245,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	69448
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_TIM1',0,23,250,2,3
	.word	70882
	.byte	5,23,253,2,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	69520
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_TIM2',0,23,130,3,3
	.word	70944
	.byte	5,23,133,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	69592
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_TIM3',0,23,138,3,3
	.word	71006
	.byte	5,23,141,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	69665
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_TIM4',0,23,146,3,3
	.word	71068
	.byte	5,23,149,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	69738
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_TIM5',0,23,154,3,3
	.word	71130
	.byte	5,23,157,3,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	69811
	.byte	4,2,35,0,0,27
	.byte	'Ifx_STM_TIM6',0,23,162,3,3
	.word	71192
	.byte	3
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,24,45,16,4,4
	.byte	'EN0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'EN1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'EN2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'EN3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'EN4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'EN5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'EN6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'EN7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'EN8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'EN9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'EN10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'EN11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'EN12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'EN13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'EN14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'EN15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'EN16',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'EN17',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'EN18',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'EN19',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'EN20',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'EN21',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'EN22',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'EN23',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'EN24',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'EN25',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'EN26',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'EN27',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'EN28',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'EN29',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'EN30',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'EN31',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,24,79,3
	.word	71254
	.byte	3
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,24,82,16,4,4
	.byte	'reserved_0',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,24,85,3
	.word	71815
	.byte	3
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,24,88,16,4,4
	.byte	'SEL',0,1
	.word	367
	.byte	6,2,2,35,0,4
	.byte	'reserved_6',0,1
	.word	367
	.byte	2,0,2,35,0,4
	.byte	'CLR',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'DIS',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'reserved_10',0,4
	.word	192
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,24,95,3
	.word	71896
	.byte	3
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,24,98,16,4,4
	.byte	'VLD0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'VLD1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'VLD2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'VLD3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'VLD4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'VLD5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'VLD6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'VLD7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'VLD8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'VLD9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'reserved_10',0,4
	.word	192
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,24,111,3
	.word	72049
	.byte	3
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,24,114,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	5,3,2,35,0,4
	.byte	'ADDR',0,4
	.word	192
	.byte	19,8,2,35,0,4
	.byte	'ERR',0,1
	.word	367
	.byte	6,2,2,35,3,4
	.byte	'VLD',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'CLR',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,24,121,3
	.word	72297
	.byte	3
	.byte	'_Ifx_FLASH_COMM0_Bits',0,24,124,16,4,4
	.byte	'STATUS',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'reserved_8',0,4
	.word	192
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_FLASH_COMM0_Bits',0,24,128,1,3
	.word	72443
	.byte	3
	.byte	'_Ifx_FLASH_COMM1_Bits',0,24,131,1,16,4,4
	.byte	'STATUS',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'DATA',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_FLASH_COMM1_Bits',0,24,136,1,3
	.word	72541
	.byte	3
	.byte	'_Ifx_FLASH_COMM2_Bits',0,24,139,1,16,4,4
	.byte	'STATUS',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'DATA',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_FLASH_COMM2_Bits',0,24,144,1,3
	.word	72657
	.byte	3
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,24,147,1,16,4,4
	.byte	'RCODE',0,4
	.word	192
	.byte	22,10,2,35,0,4
	.byte	'reserved_22',0,2
	.word	384
	.byte	8,2,2,35,2,4
	.byte	'EDCERRINJ',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'ECCORDIS',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_ECCRD_Bits',0,24,153,1,3
	.word	72773
	.byte	3
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,24,156,1,16,4,4
	.byte	'RCODE',0,4
	.word	192
	.byte	22,10,2,35,0,4
	.byte	'reserved_22',0,2
	.word	384
	.byte	8,2,2,35,2,4
	.byte	'EDCERRINJ',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'ECCORDIS',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_ECCRP_Bits',0,24,162,1,3
	.word	72913
	.byte	3
	.byte	'_Ifx_FLASH_ECCW_Bits',0,24,165,1,16,4,4
	.byte	'WCODE',0,4
	.word	192
	.byte	22,10,2,35,0,4
	.byte	'reserved_22',0,2
	.word	384
	.byte	8,2,2,35,2,4
	.byte	'DECENCDIS',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'PECENCDIS',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_ECCW_Bits',0,24,171,1,3
	.word	73053
	.byte	3
	.byte	'_Ifx_FLASH_FCON_Bits',0,24,174,1,16,4,4
	.byte	'WSPFLASH',0,1
	.word	367
	.byte	4,4,2,35,0,4
	.byte	'WSECPF',0,1
	.word	367
	.byte	2,2,2,35,0,4
	.byte	'WSDFLASH',0,2
	.word	384
	.byte	6,4,2,35,0,4
	.byte	'WSECDF',0,1
	.word	367
	.byte	3,1,2,35,1,4
	.byte	'IDLE',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'ESLDIS',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'SLEEP',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'NSAFECC',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'STALL',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'RES21',0,1
	.word	367
	.byte	2,2,2,35,2,4
	.byte	'RES23',0,1
	.word	367
	.byte	2,0,2,35,2,4
	.byte	'VOPERM',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'SQERM',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'PROERM',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'reserved_27',0,1
	.word	367
	.byte	3,2,2,35,3,4
	.byte	'PR5V',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'EOBM',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_FCON_Bits',0,24,193,1,3
	.word	73192
	.byte	3
	.byte	'_Ifx_FLASH_FPRO_Bits',0,24,196,1,16,4,4
	.byte	'PROINP',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'PRODISP',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'PROIND',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'PRODISD',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'PROINHSMCOTP',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'RES5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'PROINOTP',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'RES7',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'PROINDBG',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'PRODISDBG',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'PROINHSM',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'reserved_11',0,1
	.word	367
	.byte	5,0,2,35,1,4
	.byte	'DCFP',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'DDFP',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'DDFPX',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'reserved_19',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'DDFD',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'reserved_21',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'ENPE',0,1
	.word	367
	.byte	2,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	367
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_FLASH_FPRO_Bits',0,24,218,1,3
	.word	73554
	.byte	3
	.byte	'_Ifx_FLASH_FSR_Bits',0,24,221,1,16,4,4
	.byte	'FABUSY',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'D0BUSY',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'RES1',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'P0BUSY',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'RES4',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'RES5',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'RES6',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'PROG',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'ERASE',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'PFPAGE',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'DFPAGE',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'OPER',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'SQER',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'PROER',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'PFSBER',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'PFDBER',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'PFMBER',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'RES17',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'DFSBER',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'DFDBER',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'DFTBER',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'DFMBER',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'SRIADDERR',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'reserved_23',0,2
	.word	384
	.byte	2,7,2,35,2,4
	.byte	'PVER',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'EVER',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'SPND',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'SLM',0,1
	.word	367
	.byte	1,3,2,35,3,4
	.byte	'reserved_29',0,1
	.word	367
	.byte	1,2,2,35,3,4
	.byte	'ORIER',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'reserved_31',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_FSR_Bits',0,24,254,1,3
	.word	73995
	.byte	3
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,24,129,2,16,4,4
	.byte	'LCKHSMUCB',0,1
	.word	367
	.byte	2,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	192
	.byte	22,8,2,35,0,4
	.byte	'VOPERM',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'SQERM',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'reserved_26',0,1
	.word	367
	.byte	5,1,2,35,3,4
	.byte	'EOBM',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,24,137,2,3
	.word	74599
	.byte	3
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,24,140,2,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	2,6,2,35,0,4
	.byte	'D1BUSY',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'reserved_3',0,1
	.word	367
	.byte	4,1,2,35,0,4
	.byte	'PROG',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'ERASE',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'reserved_9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'DFPAGE',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'OPER',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'SQER',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'reserved_13',0,4
	.word	192
	.byte	12,7,2,35,0,4
	.byte	'PVER',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'EVER',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'SPND',0,1
	.word	367
	.byte	1,4,2,35,3,4
	.byte	'reserved_28',0,1
	.word	367
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,24,156,2,3
	.word	74779
	.byte	3
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,24,159,2,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'SELD1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'SPND',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'SPNDERR',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'reserved_5',0,4
	.word	192
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,24,167,2,3
	.word	75101
	.byte	3
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,24,170,2,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	3,5,2,35,0,4
	.byte	'ADD',0,4
	.word	192
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,24,174,2,3
	.word	75282
	.byte	3
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,24,177,2,16,4,4
	.byte	'STRT',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'STP',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'BUSY',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'DONE',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'ERR',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'reserved_5',0,1
	.word	367
	.byte	3,0,2,35,0,4
	.byte	'EOBM',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'reserved_9',0,1
	.word	367
	.byte	7,0,2,35,1,4
	.byte	'CNT',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,24,188,2,3
	.word	75382
	.byte	3
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,24,191,2,16,4,4
	.byte	'DATA',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,24,194,2,3
	.word	75598
	.byte	3
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,24,197,2,16,4,4
	.byte	'DATA',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,24,200,2,3
	.word	75677
	.byte	3
	.byte	'_Ifx_FLASH_ID_Bits',0,24,203,2,16,4,4
	.byte	'MODREV',0,1
	.word	367
	.byte	8,0,2,35,0,4
	.byte	'MODTYPE',0,1
	.word	367
	.byte	8,0,2,35,1,4
	.byte	'MODNUMBER',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_FLASH_ID_Bits',0,24,208,2,3
	.word	75756
	.byte	3
	.byte	'_Ifx_FLASH_MARD_Bits',0,24,211,2,16,4,4
	.byte	'HMARGIN',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'SELD0',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'SPND',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'SPNDERR',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'reserved_5',0,2
	.word	384
	.byte	10,1,2,35,0,4
	.byte	'TRAPDIS',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_FLASH_MARD_Bits',0,24,221,2,3
	.word	75867
	.byte	3
	.byte	'_Ifx_FLASH_MARP_Bits',0,24,224,2,16,4,4
	.byte	'SELP0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'RES1',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'RES2',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'RES3',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,2
	.word	384
	.byte	11,1,2,35,0,4
	.byte	'TRAPDIS',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_FLASH_MARP_Bits',0,24,233,2,3
	.word	76081
	.byte	3
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,24,236,2,16,4,4
	.byte	'L',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'NSAFECC',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'RAMIN',0,1
	.word	367
	.byte	2,4,2,35,0,4
	.byte	'RAMINSEL',0,1
	.word	367
	.byte	4,0,2,35,0,4
	.byte	'RES8',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'RES9',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'RES10',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'RES11',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'RES12',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'RES13',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'RES14',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'RES15',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'ESR0CNT',0,2
	.word	384
	.byte	12,4,2,35,2,4
	.byte	'RES29',0,1
	.word	367
	.byte	2,2,2,35,3,4
	.byte	'RES30',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'RPRO',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_PROCOND_Bits',0,24,254,2,3
	.word	76267
	.byte	3
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,24,129,3,16,4,4
	.byte	'OCDSDIS',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'DBGIFLCK',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'EDM',0,1
	.word	367
	.byte	2,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	192
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,24,135,3,3
	.word	76602
	.byte	3
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,24,138,3,16,4,4
	.byte	'HSMDBGDIS',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'DBGIFLCK',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'TSTIFLCK',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'HSMTSTDIS',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'RES15',0,2
	.word	384
	.byte	12,0,2,35,0,4
	.byte	'reserved_16',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,24,146,3,3
	.word	76745
	.byte	3
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,24,149,3,16,4,4
	.byte	'HSMBOOTEN',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'SSWWAIT',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'HSMDX',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'HSM6X',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'HSM16X',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'HSM17X',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'S6ROM',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'HSMENPINS',0,2
	.word	384
	.byte	2,7,2,35,0,4
	.byte	'HSMENRES',0,1
	.word	367
	.byte	2,5,2,35,1,4
	.byte	'DESTDBG',0,1
	.word	367
	.byte	2,3,2,35,1,4
	.byte	'BLKFLAN',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'BOOTSEL',0,1
	.word	367
	.byte	2,0,2,35,1,4
	.byte	'S16ROM',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'S17ROM',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'reserved_18',0,2
	.word	384
	.byte	14,0,2,35,2,0,27
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,24,166,3,3
	.word	76934
	.byte	3
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,24,169,3,16,4,4
	.byte	'S0ROM',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'S1ROM',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'S2ROM',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'S3ROM',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'S4ROM',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'S5ROM',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'S6ROM',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'S7ROM',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'S8ROM',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'S9ROM',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'S10ROM',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'S11ROM',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'S12ROM',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'S13ROM',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'S14ROM',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'S15ROM',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'S16ROM',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'S17ROM',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'S18ROM',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'S19ROM',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'S20ROM',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'S21ROM',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'S22ROM',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'S23ROM',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'S24ROM',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'S25ROM',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'S26ROM',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'reserved_27',0,1
	.word	367
	.byte	2,3,2,35,3,4
	.byte	'BML',0,1
	.word	367
	.byte	2,1,2,35,3,4
	.byte	'TP',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,24,201,3,3
	.word	77293
	.byte	3
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,24,204,3,16,4,4
	.byte	'S0L',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'S1L',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'S2L',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'S3L',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'S4L',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'S5L',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'S6L',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'S7L',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'S8L',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'S9L',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'S10L',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'S11L',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'S12L',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'S13L',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'S14L',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'S15L',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'S16L',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'S17L',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'S18L',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'S19L',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'S20L',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'S21L',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'S22L',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'S23L',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'S24L',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'S25L',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'S26L',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'reserved_27',0,1
	.word	367
	.byte	4,1,2,35,3,4
	.byte	'RPRO',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_PROCONP_Bits',0,24,235,3,3
	.word	77888
	.byte	3
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,24,238,3,16,4,4
	.byte	'S0WOP',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'S1WOP',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'S2WOP',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'S3WOP',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'S4WOP',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'S5WOP',0,1
	.word	367
	.byte	1,2,2,35,0,4
	.byte	'S6WOP',0,1
	.word	367
	.byte	1,1,2,35,0,4
	.byte	'S7WOP',0,1
	.word	367
	.byte	1,0,2,35,0,4
	.byte	'S8WOP',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'S9WOP',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'S10WOP',0,1
	.word	367
	.byte	1,5,2,35,1,4
	.byte	'S11WOP',0,1
	.word	367
	.byte	1,4,2,35,1,4
	.byte	'S12WOP',0,1
	.word	367
	.byte	1,3,2,35,1,4
	.byte	'S13WOP',0,1
	.word	367
	.byte	1,2,2,35,1,4
	.byte	'S14WOP',0,1
	.word	367
	.byte	1,1,2,35,1,4
	.byte	'S15WOP',0,1
	.word	367
	.byte	1,0,2,35,1,4
	.byte	'S16WOP',0,1
	.word	367
	.byte	1,7,2,35,2,4
	.byte	'S17WOP',0,1
	.word	367
	.byte	1,6,2,35,2,4
	.byte	'S18WOP',0,1
	.word	367
	.byte	1,5,2,35,2,4
	.byte	'S19WOP',0,1
	.word	367
	.byte	1,4,2,35,2,4
	.byte	'S20WOP',0,1
	.word	367
	.byte	1,3,2,35,2,4
	.byte	'S21WOP',0,1
	.word	367
	.byte	1,2,2,35,2,4
	.byte	'S22WOP',0,1
	.word	367
	.byte	1,1,2,35,2,4
	.byte	'S23WOP',0,1
	.word	367
	.byte	1,0,2,35,2,4
	.byte	'S24WOP',0,1
	.word	367
	.byte	1,7,2,35,3,4
	.byte	'S25WOP',0,1
	.word	367
	.byte	1,6,2,35,3,4
	.byte	'S26WOP',0,1
	.word	367
	.byte	1,5,2,35,3,4
	.byte	'reserved_27',0,1
	.word	367
	.byte	4,1,2,35,3,4
	.byte	'DATM',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,24,141,4,3
	.word	78412
	.byte	3
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,24,144,4,16,4,4
	.byte	'TAG',0,1
	.word	367
	.byte	6,2,2,35,0,4
	.byte	'reserved_6',0,4
	.word	192
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,24,148,4,3
	.word	78994
	.byte	3
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,24,151,4,16,4,4
	.byte	'TAG',0,1
	.word	367
	.byte	6,2,2,35,0,4
	.byte	'reserved_6',0,4
	.word	192
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,24,155,4,3
	.word	79096
	.byte	3
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,24,158,4,16,4,4
	.byte	'TAG',0,1
	.word	367
	.byte	6,2,2,35,0,4
	.byte	'reserved_6',0,4
	.word	192
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,24,162,4,3
	.word	79198
	.byte	3
	.byte	'_Ifx_FLASH_RRAD_Bits',0,24,165,4,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	3,5,2,35,0,4
	.byte	'ADD',0,4
	.word	192
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_FLASH_RRAD_Bits',0,24,169,4,3
	.word	79300
	.byte	3
	.byte	'_Ifx_FLASH_RRCT_Bits',0,24,172,4,16,4,4
	.byte	'STRT',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'STP',0,1
	.word	367
	.byte	1,6,2,35,0,4
	.byte	'BUSY',0,1
	.word	367
	.byte	1,5,2,35,0,4
	.byte	'DONE',0,1
	.word	367
	.byte	1,4,2,35,0,4
	.byte	'ERR',0,1
	.word	367
	.byte	1,3,2,35,0,4
	.byte	'reserved_5',0,1
	.word	367
	.byte	3,0,2,35,0,4
	.byte	'EOBM',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'reserved_9',0,1
	.word	367
	.byte	7,0,2,35,1,4
	.byte	'CNT',0,2
	.word	384
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_FLASH_RRCT_Bits',0,24,183,4,3
	.word	79394
	.byte	3
	.byte	'_Ifx_FLASH_RRD0_Bits',0,24,186,4,16,4,4
	.byte	'DATA',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_FLASH_RRD0_Bits',0,24,189,4,3
	.word	79604
	.byte	3
	.byte	'_Ifx_FLASH_RRD1_Bits',0,24,192,4,16,4,4
	.byte	'DATA',0,4
	.word	192
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_FLASH_RRD1_Bits',0,24,195,4,3
	.word	79677
	.byte	3
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,24,198,4,16,4,4
	.byte	'SEL',0,1
	.word	367
	.byte	6,2,2,35,0,4
	.byte	'reserved_6',0,1
	.word	367
	.byte	2,0,2,35,0,4
	.byte	'CLR',0,1
	.word	367
	.byte	1,7,2,35,1,4
	.byte	'DIS',0,1
	.word	367
	.byte	1,6,2,35,1,4
	.byte	'reserved_10',0,4
	.word	192
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,24,205,4,3
	.word	79750
	.byte	3
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,24,208,4,16,4,4
	.byte	'VLD0',0,1
	.word	367
	.byte	1,7,2,35,0,4
	.byte	'reserved_1',0,4
	.word	192
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,24,212,4,3
	.word	79905
	.byte	3
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,24,215,4,16,4,4
	.byte	'reserved_0',0,1
	.word	367
	.byte	5,3,2,35,0,4
	.byte	'ADDR',0,4
	.word	192
	.byte	19,8,2,35,0,4
	.byte	'ERR',0,1
	.word	367
	.byte	6,2,2,35,3,4
	.byte	'VLD',0,1
	.word	367
	.byte	1,1,2,35,3,4
	.byte	'CLR',0,1
	.word	367
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,24,222,4,3
	.word	80010
	.byte	5,24,230,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	71254
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_ACCEN0',0,24,235,4,3
	.word	80158
	.byte	5,24,238,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	71815
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_ACCEN1',0,24,243,4,3
	.word	80224
	.byte	5,24,246,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	71896
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_CBAB_CFG',0,24,251,4,3
	.word	80290
	.byte	5,24,254,4,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	72049
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_CBAB_STAT',0,24,131,5,3
	.word	80358
	.byte	5,24,134,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	72297
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_CBAB_TOP',0,24,139,5,3
	.word	80427
	.byte	5,24,142,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	72443
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_COMM0',0,24,147,5,3
	.word	80495
	.byte	5,24,150,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	72541
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_COMM1',0,24,155,5,3
	.word	80560
	.byte	5,24,158,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	72657
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_COMM2',0,24,163,5,3
	.word	80625
	.byte	5,24,166,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	72773
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_ECCRD',0,24,171,5,3
	.word	80690
	.byte	5,24,174,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	72913
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_ECCRP',0,24,179,5,3
	.word	80755
	.byte	5,24,182,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	73053
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_ECCW',0,24,187,5,3
	.word	80820
	.byte	5,24,190,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	73192
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_FCON',0,24,195,5,3
	.word	80884
	.byte	5,24,198,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	73554
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_FPRO',0,24,203,5,3
	.word	80948
	.byte	5,24,206,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	73995
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_FSR',0,24,211,5,3
	.word	81012
	.byte	5,24,214,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	74599
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_HSMFCON',0,24,219,5,3
	.word	81075
	.byte	5,24,222,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	74779
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_HSMFSR',0,24,227,5,3
	.word	81142
	.byte	5,24,230,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	75101
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_HSMMARD',0,24,235,5,3
	.word	81208
	.byte	5,24,238,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	75282
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_HSMRRAD',0,24,243,5,3
	.word	81275
	.byte	5,24,246,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	75382
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_HSMRRCT',0,24,251,5,3
	.word	81342
	.byte	5,24,254,5,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	75598
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_HSMRRD0',0,24,131,6,3
	.word	81409
	.byte	5,24,134,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	75677
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_HSMRRD1',0,24,139,6,3
	.word	81476
	.byte	5,24,142,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	75756
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_ID',0,24,147,6,3
	.word	81543
	.byte	5,24,150,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	75867
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_MARD',0,24,155,6,3
	.word	81605
	.byte	5,24,158,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	76081
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_MARP',0,24,163,6,3
	.word	81669
	.byte	5,24,166,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	76267
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_PROCOND',0,24,171,6,3
	.word	81733
	.byte	5,24,174,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	76602
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_PROCONDBG',0,24,179,6,3
	.word	81800
	.byte	5,24,182,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	76745
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_PROCONHSM',0,24,187,6,3
	.word	81869
	.byte	5,24,190,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	76934
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,24,195,6,3
	.word	81938
	.byte	5,24,198,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	77293
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_PROCONOTP',0,24,203,6,3
	.word	82011
	.byte	5,24,206,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	77888
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_PROCONP',0,24,211,6,3
	.word	82080
	.byte	5,24,214,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	78412
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_PROCONWOP',0,24,219,6,3
	.word	82147
	.byte	5,24,222,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	78994
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_RDB_CFG0',0,24,227,6,3
	.word	82216
	.byte	5,24,230,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	79096
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_RDB_CFG1',0,24,235,6,3
	.word	82284
	.byte	5,24,238,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	79198
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_RDB_CFG2',0,24,243,6,3
	.word	82352
	.byte	5,24,246,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	79300
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_RRAD',0,24,251,6,3
	.word	82420
	.byte	5,24,254,6,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	79394
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_RRCT',0,24,131,7,3
	.word	82484
	.byte	5,24,134,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	79604
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_RRD0',0,24,139,7,3
	.word	82548
	.byte	5,24,142,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	79677
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_RRD1',0,24,147,7,3
	.word	82612
	.byte	5,24,150,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	79750
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_UBAB_CFG',0,24,155,7,3
	.word	82676
	.byte	5,24,158,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	79905
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_UBAB_STAT',0,24,163,7,3
	.word	82744
	.byte	5,24,166,7,9,4,6
	.byte	'U',0
	.word	192
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	208
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	80010
	.byte	4,2,35,0,0,27
	.byte	'Ifx_FLASH_UBAB_TOP',0,24,171,7,3
	.word	82813
	.byte	17,36
	.word	367
	.byte	18,35,0,3
	.byte	'_Ifx_FLASH_CBAB',0,24,182,7,25,48,6
	.byte	'CFG',0
	.word	80290
	.byte	4,2,35,0,6
	.byte	'STAT',0
	.word	80358
	.byte	4,2,35,4,6
	.byte	'TOP',0
	.word	80427
	.byte	4,2,35,8,6
	.byte	'reserved_C',0
	.word	82881
	.byte	36,2,35,12,0,7
	.word	82890
	.byte	27
	.byte	'Ifx_FLASH_CBAB',0,24,188,7,3
	.word	82973
	.byte	3
	.byte	'_Ifx_FLASH_RDB',0,24,191,7,25,48,6
	.byte	'CFG0',0
	.word	82216
	.byte	4,2,35,0,6
	.byte	'CFG1',0
	.word	82284
	.byte	4,2,35,4,6
	.byte	'CFG2',0
	.word	82352
	.byte	4,2,35,8,6
	.byte	'reserved_C',0
	.word	82881
	.byte	36,2,35,12,0,7
	.word	83002
	.byte	27
	.byte	'Ifx_FLASH_RDB',0,24,197,7,3
	.word	83086
	.byte	17,80
	.word	367
	.byte	18,79,0,3
	.byte	'_Ifx_FLASH_UBAB',0,24,200,7,25,92,6
	.byte	'CFG',0
	.word	82676
	.byte	4,2,35,0,6
	.byte	'STAT',0
	.word	82744
	.byte	4,2,35,4,6
	.byte	'TOP',0
	.word	82813
	.byte	4,2,35,8,6
	.byte	'reserved_C',0
	.word	83114
	.byte	80,2,35,12,0,7
	.word	83123
	.byte	27
	.byte	'Ifx_FLASH_UBAB',0,24,206,7,3
	.word	83206
	.byte	27
	.byte	'Ifx_P_ACCEN0_Bits',0,11,79,3
	.word	8089
	.byte	27
	.byte	'Ifx_P_ACCEN1_Bits',0,11,85,3
	.word	8002
	.byte	27
	.byte	'Ifx_P_ESR_Bits',0,11,107,3
	.word	5052
	.byte	27
	.byte	'Ifx_P_ID_Bits',0,11,115,3
	.word	3105
	.byte	27
	.byte	'Ifx_P_IN_Bits',0,11,137,1,3
	.word	4100
	.byte	27
	.byte	'Ifx_P_IOCR0_Bits',0,11,150,1,3
	.word	3233
	.byte	27
	.byte	'Ifx_P_IOCR12_Bits',0,11,163,1,3
	.word	3880
	.byte	27
	.byte	'Ifx_P_IOCR4_Bits',0,11,176,1,3
	.word	3448
	.byte	27
	.byte	'Ifx_P_IOCR8_Bits',0,11,189,1,3
	.word	3663
	.byte	27
	.byte	'Ifx_P_OMCR0_Bits',0,11,200,1,3
	.word	6632
	.byte	27
	.byte	'Ifx_P_OMCR12_Bits',0,11,210,1,3
	.word	7156
	.byte	27
	.byte	'Ifx_P_OMCR4_Bits',0,11,221,1,3
	.word	6806
	.byte	27
	.byte	'Ifx_P_OMCR8_Bits',0,11,232,1,3
	.word	6980
	.byte	27
	.byte	'Ifx_P_OMCR_Bits',0,11,254,1,3
	.word	7645
	.byte	27
	.byte	'Ifx_P_OMR_Bits',0,11,163,2,3
	.word	2534
	.byte	27
	.byte	'Ifx_P_OMSR0_Bits',0,11,173,2,3
	.word	5969
	.byte	27
	.byte	'Ifx_P_OMSR12_Bits',0,11,184,2,3
	.word	6457
	.byte	27
	.byte	'Ifx_P_OMSR4_Bits',0,11,195,2,3
	.word	6116
	.byte	27
	.byte	'Ifx_P_OMSR8_Bits',0,11,206,2,3
	.word	6285
	.byte	27
	.byte	'Ifx_P_OMSR_Bits',0,11,228,2,3
	.word	7312
	.byte	27
	.byte	'Ifx_P_OUT_Bits',0,11,250,2,3
	.word	2218
	.byte	27
	.byte	'Ifx_P_PCSR_Bits',0,11,135,3,3
	.word	5758
	.byte	27
	.byte	'Ifx_P_PDISC_Bits',0,11,157,3,3
	.word	5392
	.byte	27
	.byte	'Ifx_P_PDR0_Bits',0,11,178,3,3
	.word	4423
	.byte	27
	.byte	'Ifx_P_PDR1_Bits',0,11,199,3,3
	.word	4727
	.byte	27
	.byte	'Ifx_P_ACCEN0',0,11,212,3,3
	.word	8616
	.byte	27
	.byte	'Ifx_P_ACCEN1',0,11,220,3,3
	.word	8049
	.byte	27
	.byte	'Ifx_P_ESR',0,11,228,3,3
	.word	5343
	.byte	27
	.byte	'Ifx_P_ID',0,11,236,3,3
	.word	3184
	.byte	27
	.byte	'Ifx_P_IN',0,11,244,3,3
	.word	4374
	.byte	27
	.byte	'Ifx_P_IOCR0',0,11,252,3,3
	.word	3408
	.byte	27
	.byte	'Ifx_P_IOCR12',0,11,132,4,3
	.word	4060
	.byte	27
	.byte	'Ifx_P_IOCR4',0,11,140,4,3
	.word	3623
	.byte	27
	.byte	'Ifx_P_IOCR8',0,11,148,4,3
	.word	3840
	.byte	27
	.byte	'Ifx_P_OMCR',0,11,156,4,3
	.word	7953
	.byte	27
	.byte	'Ifx_P_OMCR0',0,11,164,4,3
	.word	6766
	.byte	27
	.byte	'Ifx_P_OMCR12',0,11,172,4,3
	.word	7272
	.byte	27
	.byte	'Ifx_P_OMCR4',0,11,180,4,3
	.word	6940
	.byte	27
	.byte	'Ifx_P_OMCR8',0,11,188,4,3
	.word	7116
	.byte	27
	.byte	'Ifx_P_OMR',0,11,196,4,3
	.word	3065
	.byte	27
	.byte	'Ifx_P_OMSR',0,11,204,4,3
	.word	7605
	.byte	27
	.byte	'Ifx_P_OMSR0',0,11,212,4,3
	.word	6076
	.byte	27
	.byte	'Ifx_P_OMSR12',0,11,220,4,3
	.word	6592
	.byte	27
	.byte	'Ifx_P_OMSR4',0,11,228,4,3
	.word	6245
	.byte	27
	.byte	'Ifx_P_OMSR8',0,11,236,4,3
	.word	6417
	.byte	27
	.byte	'Ifx_P_OUT',0,11,244,4,3
	.word	2494
	.byte	27
	.byte	'Ifx_P_PCSR',0,11,252,4,3
	.word	5929
	.byte	27
	.byte	'Ifx_P_PDISC',0,11,132,5,3
	.word	5718
	.byte	27
	.byte	'Ifx_P_PDR0',0,11,140,5,3
	.word	4687
	.byte	27
	.byte	'Ifx_P_PDR1',0,11,148,5,3
	.word	5003
	.byte	7
	.word	8656
	.byte	27
	.byte	'Ifx_P',0,11,193,5,3
	.word	84382
	.byte	27
	.byte	'IfxPort_InputMode',0,10,60,3
	.word	9199
	.byte	27
	.byte	'IfxPort_Mode',0,10,87,3
	.word	18075
	.byte	27
	.byte	'IfxPort_OutputIdx',0,10,101,3
	.word	9473
	.byte	27
	.byte	'IfxPort_OutputMode',0,10,109,3
	.word	9404
	.byte	27
	.byte	'IfxPort_PadDriver',0,10,125,3
	.word	17275
	.byte	27
	.byte	'IfxPort_State',0,10,137,1,3
	.word	9786
	.byte	27
	.byte	'IfxPort_Pin',0,10,153,1,3
	.word	16890
	.byte	29,1,1,8
	.word	84572
	.byte	27
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,25,129,1,16
	.word	84575
	.byte	19,25,197,5,9,8,6
	.byte	'value',0
	.word	1989
	.byte	4,2,35,0,6
	.byte	'mask',0
	.word	1989
	.byte	4,2,35,4,0,27
	.byte	'IfxScuCcu_CcuconRegConfig',0,25,201,5,3
	.word	84620
	.byte	19,25,206,5,9,8,6
	.byte	'pDivider',0
	.word	367
	.byte	1,2,35,0,6
	.byte	'nDivider',0
	.word	367
	.byte	1,2,35,1,6
	.byte	'k2Initial',0
	.word	367
	.byte	1,2,35,2,6
	.byte	'waitTime',0
	.word	19062
	.byte	4,2,35,4,0,27
	.byte	'IfxScuCcu_InitialStepConfig',0,25,212,5,3
	.word	84691
	.byte	19,25,216,5,9,12,6
	.byte	'k2Step',0
	.word	367
	.byte	1,2,35,0,6
	.byte	'waitTime',0
	.word	19062
	.byte	4,2,35,2,6
	.byte	'hookFunction',0
	.word	84580
	.byte	4,2,35,8,0,27
	.byte	'IfxScuCcu_PllStepsConfig',0,25,221,5,3
	.word	84808
	.byte	8
	.word	84572
	.byte	19,25,229,5,9,40,6
	.byte	'ccucon0',0
	.word	84620
	.byte	8,2,35,0,6
	.byte	'ccucon1',0
	.word	84620
	.byte	8,2,35,8,6
	.byte	'ccucon2',0
	.word	84620
	.byte	8,2,35,16,6
	.byte	'ccucon5',0
	.word	84620
	.byte	8,2,35,24,6
	.byte	'ccucon6',0
	.word	84620
	.byte	8,2,35,32,0,27
	.byte	'IfxScuCcu_ClockDistributionConfig',0,25,236,5,3
	.word	84910
	.byte	19,25,240,5,9,8,6
	.byte	'value',0
	.word	1989
	.byte	4,2,35,0,6
	.byte	'mask',0
	.word	1989
	.byte	4,2,35,4,0,27
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,25,244,5,3
	.word	85045
	.byte	8
	.word	84808
	.byte	19,25,249,5,9,16,6
	.byte	'numOfPllDividerSteps',0
	.word	367
	.byte	1,2,35,0,6
	.byte	'pllDividerStep',0
	.word	85121
	.byte	4,2,35,4,6
	.byte	'pllInitialStep',0
	.word	84691
	.byte	8,2,35,8,0,27
	.byte	'IfxScuCcu_SysPllConfig',0,25,254,5,3
	.word	85126
	.byte	27
	.byte	'Ifx_SENT_ACCEN0_Bits',0,13,79,3
	.word	11577
	.byte	27
	.byte	'Ifx_SENT_ACCEN1_Bits',0,13,85,3
	.word	11487
	.byte	27
	.byte	'Ifx_SENT_CH_CFDR_Bits',0,13,94,3
	.word	12255
	.byte	27
	.byte	'Ifx_SENT_CH_CPDR_Bits',0,13,101,3
	.word	12147
	.byte	27
	.byte	'Ifx_SENT_CH_INP_Bits',0,13,114,3
	.word	15133
	.byte	27
	.byte	'Ifx_SENT_CH_INTCLR_Bits',0,13,134,1,3
	.word	14521
	.byte	27
	.byte	'Ifx_SENT_CH_INTEN_Bits',0,13,154,1,3
	.word	14827
	.byte	27
	.byte	'Ifx_SENT_CH_INTSET_Bits',0,13,174,1,3
	.word	14214
	.byte	27
	.byte	'Ifx_SENT_CH_INTSTAT_Bits',0,13,194,1,3
	.word	13906
	.byte	27
	.byte	'Ifx_SENT_CH_IOCR_Bits',0,13,216,1,3
	.word	13004
	.byte	27
	.byte	'Ifx_SENT_CH_RCR_Bits',0,13,235,1,3
	.word	12401
	.byte	27
	.byte	'Ifx_SENT_CH_RSR_Bits',0,13,245,1,3
	.word	12693
	.byte	27
	.byte	'Ifx_SENT_CH_SCR_Bits',0,13,128,2,3
	.word	13348
	.byte	27
	.byte	'Ifx_SENT_CH_SDS_Bits',0,13,138,2,3
	.word	12852
	.byte	27
	.byte	'Ifx_SENT_CH_VIEW_Bits',0,13,159,2,3
	.word	13518
	.byte	27
	.byte	'Ifx_SENT_CH_WDT_Bits',0,13,166,2,3
	.word	15322
	.byte	27
	.byte	'Ifx_SENT_CLC_Bits',0,13,178,2,3
	.word	9967
	.byte	27
	.byte	'Ifx_SENT_FDR_Bits',0,13,188,2,3
	.word	10286
	.byte	27
	.byte	'Ifx_SENT_ID_Bits',0,13,196,2,3
	.word	10163
	.byte	27
	.byte	'Ifx_SENT_INTOV_Bits',0,13,206,2,3
	.word	10446
	.byte	27
	.byte	'Ifx_SENT_KRST0_Bits',0,13,214,2,3
	.word	11363
	.byte	27
	.byte	'Ifx_SENT_KRST1_Bits',0,13,221,2,3
	.word	11258
	.byte	27
	.byte	'Ifx_SENT_KRSTCLR_Bits',0,13,228,2,3
	.word	11151
	.byte	27
	.byte	'Ifx_SENT_OCS_Bits',0,13,238,2,3
	.word	10990
	.byte	27
	.byte	'Ifx_SENT_RDR_Bits',0,13,251,2,3
	.word	10786
	.byte	27
	.byte	'Ifx_SENT_RTS_Bits',0,13,129,3,3
	.word	15695
	.byte	27
	.byte	'Ifx_SENT_TPD_Bits',0,13,136,3,3
	.word	10681
	.byte	27
	.byte	'Ifx_SENT_TSR_Bits',0,13,142,3,3
	.word	10600
	.byte	27
	.byte	'Ifx_SENT_ACCEN0',0,13,155,3,3
	.word	12107
	.byte	27
	.byte	'Ifx_SENT_ACCEN1',0,13,163,3,3
	.word	11537
	.byte	27
	.byte	'Ifx_SENT_CH_CFDR',0,13,171,3,3
	.word	12361
	.byte	27
	.byte	'Ifx_SENT_CH_CPDR',0,13,179,3,3
	.word	12215
	.byte	27
	.byte	'Ifx_SENT_CH_INP',0,13,187,3,3
	.word	15282
	.byte	27
	.byte	'Ifx_SENT_CH_INTCLR',0,13,195,3,3
	.word	14787
	.byte	27
	.byte	'Ifx_SENT_CH_INTEN',0,13,203,3,3
	.word	15093
	.byte	27
	.byte	'Ifx_SENT_CH_INTSET',0,13,211,3,3
	.word	14481
	.byte	27
	.byte	'Ifx_SENT_CH_INTSTAT',0,13,219,3,3
	.word	14174
	.byte	27
	.byte	'Ifx_SENT_CH_IOCR',0,13,227,3,3
	.word	13308
	.byte	27
	.byte	'Ifx_SENT_CH_RCR',0,13,235,3,3
	.word	12653
	.byte	27
	.byte	'Ifx_SENT_CH_RSR',0,13,243,3,3
	.word	12812
	.byte	27
	.byte	'Ifx_SENT_CH_SCR',0,13,251,3,3
	.word	13478
	.byte	27
	.byte	'Ifx_SENT_CH_SDS',0,13,131,4,3
	.word	12964
	.byte	27
	.byte	'Ifx_SENT_CH_VIEW',0,13,139,4,3
	.word	13866
	.byte	27
	.byte	'Ifx_SENT_CH_WDT',0,13,147,4,3
	.word	15390
	.byte	27
	.byte	'Ifx_SENT_CLC',0,13,155,4,3
	.word	10123
	.byte	27
	.byte	'Ifx_SENT_FDR',0,13,163,4,3
	.word	10406
	.byte	27
	.byte	'Ifx_SENT_ID',0,13,171,4,3
	.word	10246
	.byte	27
	.byte	'Ifx_SENT_INTOV',0,13,179,4,3
	.word	10560
	.byte	27
	.byte	'Ifx_SENT_KRST0',0,13,187,4,3
	.word	11447
	.byte	27
	.byte	'Ifx_SENT_KRST1',0,13,195,4,3
	.word	11323
	.byte	27
	.byte	'Ifx_SENT_KRSTCLR',0,13,203,4,3
	.word	11218
	.byte	27
	.byte	'Ifx_SENT_OCS',0,13,211,4,3
	.word	11111
	.byte	27
	.byte	'Ifx_SENT_RDR',0,13,219,4,3
	.word	10932
	.byte	27
	.byte	'Ifx_SENT_RTS',0,13,227,4,3
	.word	15736
	.byte	27
	.byte	'Ifx_SENT_TPD',0,13,235,4,3
	.word	10746
	.byte	27
	.byte	'Ifx_SENT_TSR',0,13,243,4,3
	.word	10641
	.byte	7
	.word	15430
	.byte	27
	.byte	'Ifx_SENT_CH',0,13,143,5,3
	.word	86756
	.byte	7
	.word	15794
	.byte	27
	.byte	'Ifx_SENT',0,13,179,5,3
	.word	86782
	.byte	20
	.word	17047
	.byte	27
	.byte	'IfxSent_Sent_In',0,15,45,3
	.word	86805
	.byte	20
	.word	17195
	.byte	27
	.byte	'IfxSent_Spc_Out',0,15,54,3
	.word	86834
	.byte	27
	.byte	'IfxSent_AlternateInput',0,12,74,3
	.word	16291
	.byte	27
	.byte	'IfxSent_ClockDividerMode',0,12,93,3
	.word	19163
	.byte	27
	.byte	'IfxSent_ConfigBit',0,12,101,3
	.word	23831
	.byte	27
	.byte	'IfxSent_DigitalGlitchesLength',0,12,123,3
	.word	19686
	.byte	27
	.byte	'IfxSent_ExtendedSerialFrameMode',0,12,131,1,3
	.word	20867
	.byte	27
	.byte	'IfxSent_ExternalTrigger',0,12,147,1,3
	.word	20244
	.byte	27
	.byte	'IfxSent_FrameCheckMode',0,12,155,1,3
	.word	20780
	.byte	27
	.byte	'IfxSent_InterruptNodePointer',0,12,171,1,3
	.word	21734
	.byte	27
	.byte	'IfxSent_Nibble',0,12,185,1,3
	.word	22502
	.byte	14,12,190,1,9,1,15
	.byte	'IfxSent_SleepMode_enable',0,0,15
	.byte	'IfxSent_SleepMode_disable',0,1,0,27
	.byte	'IfxSent_SleepMode',0,12,194,1,3
	.word	87159
	.byte	27
	.byte	'IfxSent_SpcMode',0,12,203,1,3
	.word	21536
	.byte	27
	.byte	'IfxSent_TimeBase',0,12,211,1,3
	.word	21456
	.byte	27
	.byte	'IfxSent_TriggerSource',0,12,221,1,3
	.word	21311
	.byte	27
	.byte	'IfxSent_Sent_Enable',0,17,137,3,3
	.word	22906
	.byte	27
	.byte	'IfxSent_Sent',0,17,148,3,3
	.word	19493
	.byte	27
	.byte	'IfxSent_Sent_EnabledInterrupts',0,17,156,3,3
	.word	23420
	.byte	27
	.byte	'IfxSent_Sent_InputOutputControl',0,17,170,3,3
	.word	20531
	.byte	27
	.byte	'IfxSent_Sent_Interrupt',0,17,178,3,3
	.word	22860
	.byte	27
	.byte	'IfxSent_Sent_InterruptNodeControl',0,17,192,3,3
	.word	22101
	.byte	27
	.byte	'IfxSent_Sent_NibbleControl',0,17,206,3,3
	.word	22661
	.byte	27
	.byte	'IfxSent_Sent_Pins',0,17,217,3,3
	.word	22408
	.byte	27
	.byte	'IfxSent_Sent_ReceiveControl',0,17,235,3,3
	.word	20959
	.byte	27
	.byte	'IfxSent_Sent_TransmitControl',0,17,246,3,3
	.word	21622
	.byte	27
	.byte	'IfxSent_Sent_Channel',0,17,131,4,3
	.word	19622
	.byte	27
	.byte	'IfxSent_Sent_ChannelConfig',0,17,150,4,3
	.word	23456
	.byte	27
	.byte	'IfxSent_Sent_Config',0,17,159,4,3
	.word	19519
	.byte	27
	.byte	'IfxSent_Sent_Frame',0,17,168,4,3
	.word	23764
	.byte	27
	.byte	'IfxSent_Sent_SerialMessageFrame',0,17,178,4,3
	.word	23881
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L39:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,19,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,4,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,5,23,1,58,15,59,15,57,15,11,15,0,0,6,13,0,3,8,73
	.byte	19,11,15,56,9,0,0,7,53,0,73,19,0,0,8,15,0,73,19,0,0,9,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0
	.byte	10,5,0,3,8,58,15,59,15,57,15,73,19,0,0,11,11,0,0,0,12,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39
	.byte	12,0,0,13,59,0,3,8,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,11,1,0,0,17,1,1,11
	.byte	15,73,19,0,0,18,33,0,47,15,0,0,19,19,1,58,15,59,15,57,15,11,15,0,0,20,38,0,73,19,0,0,21,46,1,49,19,0,0
	.byte	22,5,0,49,19,0,0,23,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,24,46,0,3,8,58,15,59,15,57
	.byte	15,73,19,54,15,39,12,63,12,60,12,0,0,25,29,1,49,19,0,0,26,11,0,49,19,0,0,27,22,0,3,8,58,15,59,15,57,15
	.byte	73,19,0,0,28,21,0,54,15,0,0,29,21,0,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L40:
	.word	.L309-.L308
.L308:
	.half	3
	.word	.L311-.L310
.L310:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Reg',0
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuWdt.h',0
	.byte	0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxSrc_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxCpu_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Std\\IfxSent.h',0
	.byte	0,0,0
	.byte	'IfxSent_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxSent_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_PinMap\\IfxSent_PinMap.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.h',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0
	.byte	'stdio.h',0,2,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxScu_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuCcu.h',0
	.byte	0,0,0,0
.L311:
.L309:
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_info'
.L41:
	.word	312
	.half	3
	.word	.L42
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L44,.L43
	.byte	2
	.word	.L37
	.byte	3
	.byte	'IfxSent_Sent_deInitModule',0,1,36,6,1,1,1
	.word	.L20,.L86,.L19
	.byte	4
	.byte	'driver',0,1,36,46
	.word	.L87,.L88
	.byte	5
	.word	.L20,.L86
	.byte	6
	.byte	'sentSFR',0,1,38,15
	.word	.L89,.L90
	.byte	6
	.byte	'passwd',0,1,39,15
	.word	.L91,.L92
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_abbrev'
.L42:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_line'
.L43:
	.word	.L313-.L312
.L312:
	.half	3
	.word	.L315-.L314
.L314:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0,0
.L315:
	.byte	5,31,7,0,5,2
	.word	.L20
	.byte	3,37,1,5,57,9
	.half	.L265-.L20
	.byte	3,1,1,5,23,9
	.half	.L264-.L265
	.byte	1,5,31,9
	.half	.L267-.L264
	.byte	3,1,1,5,25,9
	.half	.L266-.L267
	.byte	3,1,1,5,29,9
	.half	.L269-.L266
	.byte	3,1,1,5,1,9
	.half	.L45-.L269
	.byte	3,1,0,1,1
.L313:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_ranges'
.L44:
	.word	-1,.L20,0,.L45-.L20,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_info'
.L46:
	.word	460
	.half	3
	.word	.L47
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L49,.L48
	.byte	2
	.word	.L37
	.byte	3
	.byte	'IfxSent_Sent_initModule',0,1,249,1,9
	.word	.L93
	.byte	1,1,1
	.word	.L30,.L94,.L29
	.byte	4
	.byte	'driver',0,1,249,1,47
	.word	.L87,.L95
	.byte	4
	.byte	'config',0,1,249,1,82
	.word	.L96,.L97
	.byte	5
	.word	.L30,.L94
	.byte	6
	.byte	'sentSFR',0,1,252,1,18
	.word	.L89,.L98
	.byte	5
	.word	.L99,.L94
	.byte	6
	.byte	'passwd',0,1,255,1,18
	.word	.L91,.L100
	.byte	5
	.word	.L101,.L94
	.byte	6
	.byte	'tempCLC',0,1,130,2,18
	.word	.L102,.L103
	.byte	7
	.word	.L104,.L105,.L106
	.byte	8
	.word	.L107,.L108
	.byte	9
	.word	.L109,.L105,.L106
	.byte	0,7
	.word	.L110,.L111,.L112
	.byte	8
	.word	.L113,.L114
	.byte	8
	.word	.L115,.L116
	.byte	9
	.word	.L117,.L111,.L112
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_abbrev'
.L47:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_line'
.L48:
	.word	.L317-.L316
.L316:
	.half	3
	.word	.L319-.L318
.L318:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Std\\IfxSent.h',0
	.byte	0,0,0,0
.L319:
	.byte	5,9,7,0,5,2
	.word	.L30
	.byte	3,248,1,1,5,34,9
	.half	.L297-.L30
	.byte	3,3,1,5,18,9
	.half	.L298-.L297
	.byte	3,1,1,5,59,9
	.half	.L99-.L298
	.byte	3,2,1,5,25,9
	.half	.L296-.L99
	.byte	1,5,31,9
	.half	.L299-.L296
	.byte	3,1,1,5,29,9
	.half	.L101-.L299
	.byte	3,4,1,5,20,9
	.half	.L320-.L101
	.byte	3,127,1,5,77,3,6,1,5,29,9
	.half	.L300-.L320
	.byte	3,123,1,5,20,9
	.half	.L321-.L300
	.byte	1,5,22,9
	.half	.L322-.L321
	.byte	3,1,1,5,77,9
	.half	.L323-.L322
	.byte	3,4,1,5,20,9
	.half	.L324-.L323
	.byte	3,124,1,3,1,1,4,2,5,16,9
	.half	.L105-.L324
	.byte	3,168,1,1,5,22,9
	.half	.L325-.L105
	.byte	1,4,1,5,77,9
	.half	.L106-.L325
	.byte	3,219,126,1,5,51,9
	.half	.L301-.L106
	.byte	3,1,1,4,2,5,16,9
	.half	.L111-.L301
	.byte	3,234,1,1,5,22,9
	.half	.L326-.L111
	.byte	1,4,1,5,29,9
	.half	.L112-.L326
	.byte	3,152,126,1,5,12,9
	.half	.L327-.L112
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L50-.L327
	.byte	0,1,1
.L317:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_ranges'
.L49:
	.word	-1,.L30,0,.L50-.L30,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_info'
.L51:
	.word	296
	.half	3
	.word	.L52
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L54,.L53
	.byte	2
	.word	.L37
	.byte	3
	.byte	'IfxSent_Sent_initModuleConfig',0,1,146,2,6,1,1,1
	.word	.L32,.L118,.L31
	.byte	4
	.byte	'config',0,1,146,2,57
	.word	.L119,.L120
	.byte	4
	.byte	'sent',0,1,146,2,75
	.word	.L89,.L121
	.byte	5
	.word	.L32,.L118
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_abbrev'
.L52:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_line'
.L53:
	.word	.L329-.L328
.L328:
	.half	3
	.word	.L331-.L330
.L330:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0,0
.L331:
	.byte	5,32,7,0,5,2
	.word	.L32
	.byte	3,150,2,1,5,6,3,3,1,5,5,9
	.half	.L332-.L32
	.byte	3,127,1,5,6,3,1,1,5,1,9
	.half	.L333-.L332
	.byte	3,2,1,9
	.half	.L55-.L333
	.byte	0,1,1
.L329:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_ranges'
.L54:
	.word	-1,.L32,0,.L55-.L32,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_info'
.L56:
	.word	1213
	.half	3
	.word	.L57
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L59,.L58
	.byte	2
	.word	.L37
	.byte	3
	.byte	'IfxSent_Sent_initChannel',0,1,46,9
	.word	.L93
	.byte	1,1,1
	.word	.L22,.L122,.L21
	.byte	4
	.byte	'channel',0,1,46,56
	.word	.L123,.L124
	.byte	4
	.byte	'config',0,1,46,99
	.word	.L125,.L126
	.byte	5
	.word	.L22,.L122
	.byte	6
	.word	.L127
	.byte	7
	.byte	'sentSFR',0,1,51,18
	.word	.L89,.L129
	.byte	7
	.byte	'sentCh',0,1,52,18
	.word	.L130,.L131
	.byte	8
	.word	.L132,.L133,.L134
	.byte	9
	.word	.L135,.L136
	.byte	9
	.word	.L137,.L138
	.byte	10
	.word	.L139,.L133,.L134
	.byte	0,5
	.word	.L140,.L122
	.byte	7
	.byte	'tempRCR',0,1,59,21
	.word	.L141,.L142
	.byte	8
	.word	.L143,.L144,.L145
	.byte	9
	.word	.L146,.L147
	.byte	9
	.word	.L148,.L149
	.byte	10
	.word	.L150,.L144,.L145
	.byte	0,5
	.word	.L145,.L122
	.byte	7
	.byte	'tempVIEW',0,1,77,22
	.word	.L151,.L152
	.byte	5
	.word	.L153,.L122
	.byte	7
	.byte	'tempIOCR',0,1,89,22
	.word	.L154,.L155
	.byte	5
	.word	.L156,.L122
	.byte	7
	.byte	'tempINP',0,1,101,21
	.word	.L157,.L158
	.byte	5
	.word	.L159,.L3
	.byte	7
	.byte	'timeOut',0,1,124,16
	.word	.L91,.L160
	.byte	7
	.byte	'error',0,1,125,16
	.word	.L93,.L161
	.byte	5
	.word	.L162,.L3
	.byte	7
	.byte	'tempSCR',0,1,141,1,29
	.word	.L163,.L164
	.byte	0,0,5
	.word	.L3,.L122
	.byte	7
	.byte	'pinsConfig',0,1,157,1,30
	.word	.L165,.L166
	.byte	5
	.word	.L167,.L10
	.byte	7
	.byte	'sentIn',0,1,161,1,32
	.word	.L168,.L169
	.byte	8
	.word	.L170,.L171,.L11
	.byte	9
	.word	.L172,.L173
	.byte	9
	.word	.L174,.L175
	.byte	11
	.word	.L176,.L171,.L11
	.byte	8
	.word	.L177,.L171,.L178
	.byte	9
	.word	.L179,.L180
	.byte	9
	.word	.L181,.L182
	.byte	9
	.word	.L183,.L184
	.byte	12
	.word	.L185,.L186
	.byte	0,8
	.word	.L187,.L188,.L11
	.byte	9
	.word	.L189,.L190
	.byte	9
	.word	.L191,.L192
	.byte	9
	.word	.L193,.L194
	.byte	10
	.word	.L195,.L188,.L11
	.byte	0,0,0,5
	.word	.L11,.L10
	.byte	7
	.byte	'spcOut',0,1,168,1,32
	.word	.L196,.L197
	.byte	8
	.word	.L198,.L199,.L10
	.byte	9
	.word	.L200,.L201
	.byte	9
	.word	.L202,.L203
	.byte	9
	.word	.L204,.L205
	.byte	11
	.word	.L206,.L199,.L10
	.byte	8
	.word	.L207,.L199,.L208
	.byte	9
	.word	.L209,.L210
	.byte	9
	.word	.L211,.L212
	.byte	9
	.word	.L213,.L214
	.byte	9
	.word	.L215,.L216
	.byte	10
	.word	.L217,.L199,.L208
	.byte	0,0,0,0,0,5
	.word	.L10,.L13
	.byte	7
	.byte	'tos',0,1,177,1,20
	.word	.L218,.L219
	.byte	5
	.word	.L220,.L13
	.byte	8
	.word	.L221,.L220,.L222
	.byte	9
	.word	.L223,.L224
	.byte	12
	.word	.L225,.L226
	.byte	0,8
	.word	.L221,.L227,.L228
	.byte	9
	.word	.L223,.L224
	.byte	0,8
	.word	.L229,.L228,.L230
	.byte	9
	.word	.L231,.L232
	.byte	9
	.word	.L233,.L234
	.byte	9
	.word	.L235,.L236
	.byte	11
	.word	.L237,.L228,.L230
	.byte	8
	.word	.L238,.L239,.L230
	.byte	9
	.word	.L240,.L241
	.byte	10
	.word	.L242,.L239,.L230
	.byte	0,0,0,8
	.word	.L243,.L230,.L13
	.byte	9
	.word	.L244,.L245
	.byte	10
	.word	.L246,.L230,.L13
	.byte	0,0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_abbrev'
.L57:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	11,1,85,6,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0
	.byte	0,10,11,0,49,16,17,1,18,1,0,0,11,11,1,49,16,17,1,18,1,0,0,12,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_line'
.L58:
	.word	.L335-.L334
.L334:
	.half	3
	.word	.L337-.L336
.L336:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Std\\IfxSent.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0,0
.L337:
	.byte	5,9,7,0,5,2
	.word	.L22
	.byte	3,45,1,5,29,9
	.half	.L272-.L22
	.byte	3,4,1,5,21,9
	.half	.L338-.L272
	.byte	1,5,34,9
	.half	.L128-.L338
	.byte	3,1,1,5,47,9
	.half	.L339-.L128
	.byte	3,1,1,5,42,9
	.half	.L340-.L339
	.byte	3,127,1,5,47,9
	.half	.L275-.L340
	.byte	3,1,1,5,40,9
	.half	.L341-.L275
	.byte	1,5,24,9
	.half	.L274-.L341
	.byte	3,1,1,5,32,9
	.half	.L342-.L274
	.byte	3,1,1,5,24,9
	.half	.L343-.L342
	.byte	1,5,43,9
	.half	.L344-.L343
	.byte	3,2,1,4,2,5,35,9
	.half	.L133-.L344
	.byte	3,234,2,1,4,1,5,73,9
	.half	.L134-.L133
	.byte	3,151,125,1,5,54,9
	.half	.L271-.L134
	.byte	1,5,73,9
	.half	.L345-.L271
	.byte	1,5,21,9
	.half	.L140-.L345
	.byte	3,3,1,5,45,3,1,1,5,21,9
	.half	.L276-.L140
	.byte	1,5,45,3,1,1,5,21,9
	.half	.L346-.L276
	.byte	1,5,45,3,1,1,5,21,9
	.half	.L347-.L346
	.byte	1,5,45,3,1,1,5,21,9
	.half	.L348-.L347
	.byte	1,5,45,3,1,1,5,21,9
	.half	.L349-.L348
	.byte	1,5,45,3,1,1,5,21,9
	.half	.L350-.L349
	.byte	1,5,45,3,1,1,5,21,9
	.half	.L351-.L350
	.byte	1,5,45,3,1,1,5,21,9
	.half	.L352-.L351
	.byte	1,5,45,3,1,1,5,21,9
	.half	.L353-.L352
	.byte	1,5,45,3,1,1,5,21,9
	.half	.L354-.L353
	.byte	1,5,45,3,1,1,5,21,9
	.half	.L355-.L354
	.byte	1,5,45,3,1,1,5,21,9
	.half	.L356-.L355
	.byte	1,3,1,1,5,42,9
	.half	.L273-.L356
	.byte	3,2,1,4,2,5,35,9
	.half	.L144-.L273
	.byte	3,221,2,1,4,1,5,22,9
	.half	.L145-.L144
	.byte	3,166,125,1,5,45,9
	.half	.L280-.L145
	.byte	3,1,1,5,22,9
	.half	.L357-.L280
	.byte	1,5,45,3,1,1,5,22,9
	.half	.L358-.L357
	.byte	1,5,45,3,1,1,5,22,9
	.half	.L359-.L358
	.byte	1,5,45,3,1,1,5,22,9
	.half	.L360-.L359
	.byte	1,5,45,3,1,1,5,22,9
	.half	.L361-.L360
	.byte	1,5,45,3,1,1,5,22,9
	.half	.L362-.L361
	.byte	1,5,45,3,1,1,5,22,9
	.half	.L363-.L362
	.byte	1,5,45,3,1,1,5,22,9
	.half	.L364-.L363
	.byte	1,3,1,1,9
	.half	.L153-.L364
	.byte	3,3,1,5,50,9
	.half	.L282-.L153
	.byte	3,1,1,5,22,9
	.half	.L281-.L282
	.byte	1,5,50,3,1,1,5,22,9
	.half	.L365-.L281
	.byte	1,5,50,3,1,1,5,22,9
	.half	.L366-.L365
	.byte	1,5,50,3,1,1,5,22,9
	.half	.L367-.L366
	.byte	1,5,50,3,1,1,5,22,9
	.half	.L368-.L367
	.byte	1,5,50,3,1,1,5,22,9
	.half	.L369-.L368
	.byte	1,5,50,3,1,1,5,22,9
	.half	.L370-.L369
	.byte	1,5,50,3,1,1,5,22,9
	.half	.L371-.L370
	.byte	1,3,1,1,5,21,9
	.half	.L156-.L371
	.byte	3,3,1,5,50,9
	.half	.L284-.L156
	.byte	3,1,1,5,21,9
	.half	.L283-.L284
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L372-.L283
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L373-.L372
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L374-.L373
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L375-.L374
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L376-.L375
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L377-.L376
	.byte	1,5,50,3,1,1,5,21,9
	.half	.L378-.L377
	.byte	1,3,1,1,5,48,9
	.half	.L379-.L378
	.byte	3,2,1,5,21,9
	.half	.L285-.L379
	.byte	1,5,31,9
	.half	.L380-.L285
	.byte	3,2,1,5,5,9
	.half	.L381-.L380
	.byte	1,5,24,7,9
	.half	.L382-.L381
	.byte	3,3,1,5,29,9
	.half	.L383-.L382
	.byte	1,5,24,9
	.half	.L384-.L383
	.byte	3,1,1,5,29,9
	.half	.L385-.L384
	.byte	1,5,15,9
	.half	.L2-.L385
	.byte	3,3,1,5,5,9
	.half	.L386-.L2
	.byte	1,5,24,7,9
	.half	.L159-.L386
	.byte	3,2,1,9
	.half	.L286-.L159
	.byte	3,1,1,5,57,3,3,1,5,20,9
	.half	.L5-.L286
	.byte	3,3,1,5,30,9
	.half	.L4-.L5
	.byte	3,125,1,5,16,9
	.half	.L387-.L4
	.byte	1,5,53,7,9
	.half	.L388-.L387
	.byte	1,5,19,7,9
	.half	.L6-.L388
	.byte	3,8,1,5,9,9
	.half	.L389-.L6
	.byte	3,3,1,5,28,7,9
	.half	.L162-.L389
	.byte	3,3,1,5,53,3,1,1,5,28,9
	.half	.L287-.L162
	.byte	1,5,53,3,1,1,5,28,9
	.half	.L390-.L287
	.byte	1,5,53,3,1,1,5,28,9
	.half	.L391-.L390
	.byte	1,5,53,3,1,1,5,28,9
	.half	.L392-.L391
	.byte	1,3,1,1,5,40,9
	.half	.L393-.L392
	.byte	3,2,1,5,13,9
	.half	.L288-.L393
	.byte	1,5,32,7,9
	.half	.L394-.L288
	.byte	3,3,1,5,37,9
	.half	.L395-.L394
	.byte	1,5,76,9
	.half	.L3-.L395
	.byte	3,5,1,5,5,9
	.half	.L278-.L3
	.byte	3,2,1,5,51,7,9
	.half	.L167-.L278
	.byte	3,2,1,5,9,9
	.half	.L279-.L167
	.byte	3,2,1,4,2,5,40,7,9
	.half	.L171-.L279
	.byte	3,168,2,1,4,1,5,51,9
	.half	.L396-.L171
	.byte	3,218,125,1,4,3,5,40,9
	.half	.L397-.L396
	.byte	3,224,2,1,4,2,5,32,9
	.half	.L178-.L397
	.byte	3,71,1,5,48,9
	.half	.L398-.L178
	.byte	1,5,91,9
	.half	.L399-.L398
	.byte	1,5,14,9
	.half	.L188-.L399
	.byte	3,13,1,5,13,9
	.half	.L400-.L188
	.byte	1,5,31,9
	.half	.L401-.L400
	.byte	1,5,37,9
	.half	.L402-.L401
	.byte	1,4,1,5,51,9
	.half	.L11-.L402
	.byte	3,207,125,1,5,9,9
	.half	.L289-.L11
	.byte	3,2,1,5,71,7,9
	.half	.L403-.L289
	.byte	3,2,1,4,2,5,41,9
	.half	.L199-.L403
	.byte	3,166,2,1,5,88,9
	.half	.L404-.L199
	.byte	1,4,1,5,50,9
	.half	.L405-.L404
	.byte	3,218,125,1,4,3,5,61,9
	.half	.L406-.L405
	.byte	3,223,2,1,5,40,1,4,2,9
	.half	.L208-.L406
	.byte	3,72,1,5,69,9
	.half	.L290-.L208
	.byte	1,4,1,5,30,9
	.half	.L10-.L290
	.byte	3,224,125,1,5,43,9
	.half	.L407-.L10
	.byte	3,126,1,5,9,9
	.half	.L292-.L407
	.byte	3,2,1,4,2,5,36,7,9
	.half	.L220-.L292
	.byte	3,146,2,1,4,1,5,70,9
	.half	.L222-.L220
	.byte	3,240,125,1,4,2,5,36,9
	.half	.L227-.L222
	.byte	3,144,2,1,5,39,9
	.half	.L291-.L227
	.byte	1,4,4,5,17,9
	.half	.L228-.L291
	.byte	3,187,126,1,5,11,9
	.half	.L408-.L228
	.byte	3,1,1,5,17,9
	.half	.L409-.L408
	.byte	1,5,11,9
	.half	.L239-.L409
	.byte	3,103,1,5,17,9
	.half	.L410-.L239
	.byte	1,5,11,9
	.half	.L230-.L410
	.byte	3,18,1,5,16,9
	.half	.L411-.L230
	.byte	1,4,1,5,12,9
	.half	.L13-.L411
	.byte	3,65,1,5,1,3,1,1,7,9
	.half	.L60-.L13
	.byte	0,1,1
.L335:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_ranges'
.L59:
	.word	-1,.L22,0,.L60-.L22,0,0
.L127:
	.word	-1,.L22,.L128-.L22,.L122-.L22,-1,.L26,0,.L80-.L26,0,0
.L186:
	.word	-1,.L22,.L171-.L22,.L178-.L22,-1,.L24,0,.L85-.L24,0,0
.L226:
	.word	-1,.L22,.L220-.L22,.L222-.L22,.L227-.L22,.L228-.L22,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_info'
.L61:
	.word	299
	.half	3
	.word	.L62
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L64,.L63
	.byte	2
	.word	.L37
	.byte	3
	.byte	'IfxSent_Sent_initChannelConfig',0,1,191,1,6,1,1,1
	.word	.L28,.L247,.L27
	.byte	4
	.byte	'config',0,1,191,1,65
	.word	.L248,.L249
	.byte	4
	.byte	'driver',0,1,191,1,87
	.word	.L87,.L250
	.byte	5
	.word	.L28,.L247
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_abbrev'
.L62:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_line'
.L63:
	.word	.L413-.L412
.L412:
	.half	3
	.word	.L415-.L414
.L414:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0,0
.L415:
	.byte	5,61,7,0,5,2
	.word	.L28
	.byte	3,192,1,1,5,20,9
	.half	.L416-.L28
	.byte	3,51,1,9
	.half	.L294-.L416
	.byte	3,1,1,5,1,9
	.half	.L295-.L294
	.byte	3,1,1,7,9
	.half	.L65-.L295
	.byte	0,1,1
.L413:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_ranges'
.L64:
	.word	-1,.L28,0,.L65-.L28,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_info'
.L66:
	.word	355
	.half	3
	.word	.L67
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L69,.L68
	.byte	2
	.word	.L37
	.byte	3
	.byte	'IfxSent_Sent_readChannelSerialDataFrame',0,1,159,2,9
	.word	.L93
	.byte	1,1,1
	.word	.L34,.L251,.L33
	.byte	4
	.byte	'channel',0,1,159,2,71
	.word	.L123,.L252
	.byte	4
	.byte	'frame',0,1,159,2,100
	.word	.L253,.L254
	.byte	5
	.word	.L34,.L251
	.byte	6
	.byte	'sentSFR',0,1,163,2,23
	.word	.L89,.L255
	.byte	6
	.byte	'ChanIdx',0,1,164,2,23
	.word	.L256,.L257
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_abbrev'
.L67:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_line'
.L68:
	.word	.L418-.L417
.L417:
	.half	3
	.word	.L420-.L419
.L419:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0,0
.L420:
	.byte	5,40,7,0,5,2
	.word	.L34
	.byte	3,162,2,1,9
	.half	.L421-.L34
	.byte	3,1,1,5,12,9
	.half	.L302-.L421
	.byte	3,5,1,5,48,9
	.half	.L422-.L302
	.byte	3,122,1,5,39,9
	.half	.L304-.L422
	.byte	3,2,1,5,48,9
	.half	.L305-.L304
	.byte	1,5,25,9
	.half	.L303-.L305
	.byte	1,5,48,9
	.half	.L423-.L303
	.byte	3,1,1,5,25,9
	.half	.L424-.L423
	.byte	1,5,34,9
	.half	.L425-.L424
	.byte	3,1,1,5,50,9
	.half	.L426-.L425
	.byte	1,5,25,9
	.half	.L427-.L426
	.byte	1,5,1,9
	.half	.L428-.L427
	.byte	3,3,1,7,9
	.half	.L70-.L428
	.byte	0,1,1
.L418:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_ranges'
.L69:
	.word	-1,.L34,0,.L70-.L34,0,0
	.sdecl	'.debug_info',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_info'
.L71:
	.word	335
	.half	3
	.word	.L72
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L74,.L73
	.byte	2
	.word	.L37
	.byte	3
	.byte	'IfxSent_Sent_readChannelSerialMessageFrame',0,1,173,2,9
	.word	.L93
	.byte	1,1,1
	.word	.L36,.L258,.L35
	.byte	4
	.byte	'channel',0,1,173,2,74
	.word	.L123,.L259
	.byte	4
	.byte	'message',0,1,173,2,116
	.word	.L260,.L261
	.byte	5
	.word	.L36,.L258
	.byte	6
	.byte	'sds',0,1,178,2,21
	.word	.L262,.L263
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_abbrev'
.L72:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_line'
.L73:
	.word	.L430-.L429
.L429:
	.half	3
	.word	.L432-.L431
.L431:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0,0
.L432:
	.byte	5,37,7,0,5,2
	.word	.L36
	.byte	3,176,2,1,5,12,9
	.half	.L433-.L36
	.byte	3,10,1,5,38,9
	.half	.L434-.L433
	.byte	3,121,1,5,25,9
	.half	.L306-.L434
	.byte	3,2,1,5,32,9
	.half	.L435-.L306
	.byte	3,1,1,5,25,1,5,32,9
	.half	.L436-.L435
	.byte	3,1,1,5,25,9
	.half	.L307-.L436
	.byte	1,5,32,9
	.half	.L437-.L307
	.byte	3,1,1,5,25,1,5,1,9
	.half	.L438-.L437
	.byte	3,3,1,7,9
	.half	.L75-.L438
	.byte	0,1,1
.L430:
	.sdecl	'.debug_ranges',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_ranges'
.L74:
	.word	-1,.L36,0,.L75-.L36,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L76:
	.word	226
	.half	3
	.word	.L77
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L79,.L78
	.byte	2
	.word	.L37
	.byte	3
	.byte	'.cocofun_7',0,1,46,9,1
	.word	.L26,.L80,.L25
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L77:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L78:
	.word	.L440-.L439
.L439:
	.half	3
	.word	.L442-.L441
.L441:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Std\\IfxSent.h',0
	.byte	0,0,0,0
.L442:
	.byte	5,43,7,0,5,2
	.word	.L26
	.byte	3,55,1,4,2,5,14,9
	.half	.L277-.L26
	.byte	3,234,2,1,5,13,9
	.half	.L443-.L277
	.byte	1,5,30,9
	.half	.L444-.L443
	.byte	1,9
	.half	.L80-.L444
	.byte	0,1,1,5,42,0,5,2
	.word	.L26
	.byte	3,202,0,1,4,2,5,14,9
	.half	.L277-.L26
	.byte	3,221,2,1,5,13,9
	.half	.L443-.L277
	.byte	1,5,30,9
	.half	.L444-.L443
	.byte	1,9
	.half	.L445-.L444
	.byte	3,122,1,7,9
	.half	.L80-.L445
	.byte	0,1,1
.L440:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L79:
	.word	-1,.L26,0,.L80-.L26,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_8')
	.sect	'.debug_info'
.L81:
	.word	226
	.half	3
	.word	.L82
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L84,.L83
	.byte	2
	.word	.L37
	.byte	3
	.byte	'.cocofun_8',0,1,46,9,1
	.word	.L24,.L85,.L23
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_8')
	.sect	'.debug_abbrev'
.L82:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_8')
	.sect	'.debug_line'
.L83:
	.word	.L447-.L446
.L446:
	.half	3
	.word	.L449-.L448
.L448:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Sent\\IfxSent_Sent.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Sent\\Std\\IfxSent.h',0
	.byte	0,0,0,0
.L449:
	.byte	4,2,5,40,7,0,5,2
	.word	.L24
	.byte	3,202,3,1,5,58,9
	.half	.L450-.L24
	.byte	1,9
	.half	.L85-.L450
	.byte	0,1,1,4,2,5,41,0,5,2
	.word	.L24
	.byte	3,209,3,1,5,59,9
	.half	.L450-.L24
	.byte	1,5,58,9
	.half	.L451-.L450
	.byte	3,121,1,7,9
	.half	.L85-.L451
	.byte	0,1,1,4,2,5,40,0,5,2
	.word	.L24
	.byte	3,210,3,1,5,58,9
	.half	.L450-.L24
	.byte	1,9
	.half	.L451-.L450
	.byte	3,120,1,7,9
	.half	.L85-.L451
	.byte	0,1,1
.L447:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_8')
	.sect	'.debug_ranges'
.L84:
	.word	-1,.L24,0,.L85-.L24,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L25:
	.word	-1,.L26,0,.L80-.L26
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_8')
	.sect	'.debug_loc'
.L23:
	.word	-1,.L24,0,.L85-.L24
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_loc'
.L19:
	.word	-1,.L20,0,.L86-.L20
	.half	2
	.byte	138,0
	.word	0,0
.L88:
	.word	-1,.L20,0,.L264-.L20
	.half	1
	.byte	100
	.word	0,0
.L92:
	.word	-1,.L20,.L264-.L20,.L266-.L20
	.half	1
	.byte	82
	.word	.L267-.L20,.L86-.L20
	.half	1
	.byte	95
	.word	.L270-.L20,.L86-.L20
	.half	1
	.byte	84
	.word	0,0
.L90:
	.word	-1,.L20,.L265-.L20,.L86-.L20
	.half	1
	.byte	111
	.word	.L268-.L20,.L269-.L20
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_loc'
.L21:
	.word	-1,.L22,0,.L122-.L22
	.half	2
	.byte	138,0
	.word	0,0
.L194:
	.word	0,0
.L124:
	.word	-1,.L22,.L26-.L22,.L80-.L22
	.half	1
	.byte	100
	.word	0,.L271-.L22
	.half	1
	.byte	100
	.word	0,0
.L138:
	.word	0,0
.L149:
	.word	0,0
.L224:
	.word	0,0
.L192:
	.word	0,0
.L126:
	.word	-1,.L22,.L26-.L22,.L80-.L22
	.half	1
	.byte	101
	.word	.L26-.L22,.L80-.L22
	.half	1
	.byte	111
	.word	0,.L140-.L22
	.half	1
	.byte	101
	.word	.L272-.L22,.L273-.L22
	.half	1
	.byte	111
	.word	.L24-.L22,.L85-.L22
	.half	1
	.byte	111
	.word	.L144-.L22,.L208-.L22
	.half	1
	.byte	111
	.word	.L290-.L22,.L291-.L22
	.half	1
	.byte	111
	.word	0,0
.L161:
	.word	-1,.L22,.L5-.L22,.L287-.L22
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L216:
	.word	0,0
.L175:
	.word	0,0
.L184:
	.word	0,0
.L214:
	.word	0,0
.L205:
	.word	0,0
.L182:
	.word	0,0
.L212:
	.word	0,0
.L166:
	.word	-1,.L22,.L24-.L22,.L85-.L22
	.half	1
	.byte	109
	.word	.L278-.L22,.L208-.L22
	.half	1
	.byte	109
	.word	.L290-.L22,.L122-.L22
	.half	1
	.byte	109
	.word	0,0
.L180:
	.word	0,0
.L210:
	.word	0,0
.L236:
	.word	0,0
.L136:
	.word	0,0
.L147:
	.word	0,0
.L190:
	.word	0,0
.L131:
	.word	-1,.L22,.L26-.L22,.L80-.L22
	.half	1
	.byte	109
	.word	.L274-.L22,.L273-.L22
	.half	1
	.byte	109
	.word	.L144-.L22,.L278-.L22
	.half	1
	.byte	109
	.word	0,0
.L169:
	.word	-1,.L22,.L24-.L22,.L85-.L22
	.half	1
	.byte	108
	.word	.L279-.L22,.L289-.L22
	.half	1
	.byte	108
	.word	0,0
.L173:
	.word	0,0
.L129:
	.word	-1,.L22,.L26-.L22,.L80-.L22
	.half	1
	.byte	108
	.word	.L275-.L22,.L273-.L22
	.half	1
	.byte	108
	.word	.L271-.L22,.L140-.L22
	.half	1
	.byte	100
	.word	.L144-.L22,.L279-.L22
	.half	1
	.byte	108
	.word	0,0
.L197:
	.word	-1,.L22,.L24-.L22,.L85-.L22
	.half	1
	.byte	108
	.word	.L289-.L22,.L208-.L22
	.half	1
	.byte	108
	.word	.L290-.L22,.L10-.L22
	.half	1
	.byte	108
	.word	0,0
.L201:
	.word	0,0
.L203:
	.word	0,0
.L241:
	.word	0,0
.L245:
	.word	0,0
.L232:
	.word	0,0
.L158:
	.word	-1,.L22,.L284-.L22,.L285-.L22
	.half	1
	.byte	95
	.word	0,0
.L155:
	.word	-1,.L22,.L282-.L22,.L283-.L22
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L142:
	.word	-1,.L22,.L276-.L22,.L273-.L22
	.half	1
	.byte	95
	.word	.L26-.L22,.L277-.L22
	.half	1
	.byte	95
	.word	0,0
.L164:
	.word	-1,.L22,.L287-.L22,.L288-.L22
	.half	1
	.byte	95
	.word	0,0
.L152:
	.word	-1,.L22,.L280-.L22,.L281-.L22
	.half	1
	.byte	95
	.word	0,0
.L160:
	.word	-1,.L22,.L286-.L22,.L287-.L22
	.half	1
	.byte	95
	.word	0,0
.L219:
	.word	-1,.L22,.L292-.L22,.L122-.L22
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L234:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_loc'
.L27:
	.word	-1,.L28,0,.L247-.L28
	.half	2
	.byte	138,0
	.word	0,0
.L249:
	.word	-1,.L28,0,.L15-.L28
	.half	1
	.byte	100
	.word	.L293-.L28,.L247-.L28
	.half	1
	.byte	98
	.word	.L294-.L28,.L295-.L28
	.half	1
	.byte	100
	.word	0,0
.L250:
	.word	-1,.L28,0,.L247-.L28
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_loc'
.L29:
	.word	-1,.L30,0,.L94-.L30
	.half	2
	.byte	138,0
	.word	0,0
.L97:
	.word	-1,.L30,0,.L296-.L30
	.half	1
	.byte	101
	.word	.L297-.L30,.L94-.L30
	.half	1
	.byte	108
	.word	0,0
.L95:
	.word	-1,.L30,0,.L296-.L30
	.half	1
	.byte	100
	.word	0,0
.L100:
	.word	-1,.L30,.L296-.L30,.L101-.L30
	.half	1
	.byte	82
	.word	.L299-.L30,.L94-.L30
	.half	1
	.byte	88
	.word	0,0
.L108:
	.word	0,0
.L114:
	.word	0,0
.L98:
	.word	-1,.L30,.L298-.L30,.L94-.L30
	.half	1
	.byte	111
	.word	.L300-.L30,.L301-.L30
	.half	1
	.byte	100
	.word	0,0
.L103:
	.word	-1,.L30,.L300-.L30,.L301-.L30
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L116:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_loc'
.L31:
	.word	-1,.L32,0,.L118-.L32
	.half	2
	.byte	138,0
	.word	0,0
.L120:
	.word	-1,.L32,0,.L118-.L32
	.half	1
	.byte	100
	.word	0,0
.L121:
	.word	-1,.L32,0,.L118-.L32
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_loc'
.L257:
	.word	-1,.L34,.L302-.L34,.L303-.L34
	.half	1
	.byte	95
	.word	0,0
.L33:
	.word	-1,.L34,0,.L251-.L34
	.half	2
	.byte	138,0
	.word	0,0
.L252:
	.word	-1,.L34,0,.L251-.L34
	.half	1
	.byte	100
	.word	0,0
.L254:
	.word	-1,.L34,0,.L251-.L34
	.half	1
	.byte	101
	.word	0,0
.L255:
	.word	-1,.L34,.L304-.L34,.L305-.L34
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_loc'
.L35:
	.word	-1,.L36,0,.L258-.L36
	.half	2
	.byte	138,0
	.word	0,0
.L259:
	.word	-1,.L36,0,.L258-.L36
	.half	1
	.byte	100
	.word	0,0
.L261:
	.word	-1,.L36,0,.L258-.L36
	.half	1
	.byte	101
	.word	0,0
.L263:
	.word	-1,.L36,.L306-.L36,.L307-.L36
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L452:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_deInitModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L452,.L20,.L86-.L20
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_initChannel')
	.sect	'.debug_frame'
	.word	12
	.word	.L452,.L22,.L122-.L22
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_initChannelConfig')
	.sect	'.debug_frame'
	.word	16
	.word	.L452,.L28,.L247-.L28
	.byte	8,19,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_initModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L452,.L30,.L94-.L30
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_initModuleConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L452,.L32,.L118-.L32
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_readChannelSerialDataFrame')
	.sect	'.debug_frame'
	.word	20
	.word	.L452,.L34,.L251-.L34
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxSent_Sent_readChannelSerialMessageFrame')
	.sect	'.debug_frame'
	.word	20
	.word	.L452,.L36,.L258-.L36
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L453:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_8')
	.sect	'.debug_frame'
	.word	24
	.word	.L453,.L24,.L85-.L24
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L453,.L26,.L80-.L26
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
