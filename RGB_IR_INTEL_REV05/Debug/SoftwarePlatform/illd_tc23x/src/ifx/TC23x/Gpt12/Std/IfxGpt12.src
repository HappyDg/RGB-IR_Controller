	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc22740a --dep-file=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\.IfxGpt12.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -DNDEBUG -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --no-warnings=542 --make-target=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.src ..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c"
	.compiler_name		"ctc"
	;source	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c'

	
$TC16X
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_T2_getFrequency',code,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.text.IfxGpt12.IfxGpt12_T2_getFrequency'
	.align	2
	
	.global	IfxGpt12_T2_getFrequency

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	     2   * \file IfxGpt12.c
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	     4   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	     5   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	     7   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	     9   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    10   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    15   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    16   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    22   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    23   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    24  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    25  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    26  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    27  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    28  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    29  #include "IfxGpt12.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    30  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    31  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    32  /*-------------------------Function Implementations---------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    33  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    34  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    35  float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12)
; Function IfxGpt12_T2_getFrequency
.L90:
IfxGpt12_T2_getFrequency:	.type	func
	mov.aa	a15,a4
.L357:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1250  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1303  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1334  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1335  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1341  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1348  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1354  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1355  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1360  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1366  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1367  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1372  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1384  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1391  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1410  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1423  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1428  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1429  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1430  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1431  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1432  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1433      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1434      gpt12->T6CON.B.T6M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1435  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1436  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1437  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1438  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1439  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1440      gpt12->T6CON.B.T6UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1441  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1442  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1443  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1444  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1445  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1446      gpt12->T6CON.B.T6I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1447  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1449  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1450  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1451  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1452      gpt12->T6.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1453  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1454  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1456  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1457  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1458      return &MODULE_SRC.GPT12.GPT12[0].CIRQ;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1459  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1460  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1461  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1462  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1463  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1464      return IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L358:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    36  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    37      float32                      freq = IfxGpt12_getModuleFrequency(gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    39      IfxGpt12_Mode                mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    40      IfxGpt12_TimerInputPrescaler prescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    41  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    42      IfxGpt12_Gpt1BlockPrescaler  bps1 = gpt12->T3CON.B.BPS1;
	fcall	.cocofun_15
.L363:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
	ld.bu	d15,[a15]16
.L411:
	extr.u	d15,d15,#3,#3

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    43  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    44      switch (bps1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    45      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    46      case IfxGpt12_Gpt1BlockPrescaler_4:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    47          freq = freq / 4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    48          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    49      case IfxGpt12_Gpt1BlockPrescaler_8:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    50          freq = freq / 8;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    51          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    52      case IfxGpt12_Gpt1BlockPrescaler_16:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    53          freq = freq / 16;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    54          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    55      default: /* case IfxGpt12_Gpt1BlockPrescaler_32: */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    56          freq = freq / 32;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    57          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    58      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    59  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    60      mode      = IfxGpt12_T2_getMode(gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    61      prescaler = (IfxGpt12_TimerInputPrescaler)gpt12->T2CON.B.T2I;
	ld.bu	d1,[a15]16
.L364:
	and	d1,d1,#7
.L413:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    62  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    63      if ((mode == IfxGpt12_Mode_timer) || (mode == IfxGpt12_Mode_highGatedTimer) || (mode == IfxGpt12_Mode_lowGatedTimer))
	jeq	d15,#0,.L9
.L501:
	jeq	d15,#3,.L10
.L502:
	jne	d15,#2,.L11
.L10:
.L9:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    64      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    65          freq = freq / (1 << prescaler);
	fcall	.cocofun_17
.L412:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    66      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    67      else // FIXME:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    68      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    69          freq = freq / 2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    70      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    72      return freq;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    73  }
	ret
.L11:
	fcall	.cocofun_22
.L503:
	ret
.L348:
	
__IfxGpt12_T2_getFrequency_function_end:
	.size	IfxGpt12_T2_getFrequency,__IfxGpt12_T2_getFrequency_function_end-IfxGpt12_T2_getFrequency
.L152:
	; End of function
	
	.sdecl	'.text.IfxGpt12..cocofun_22',code,cluster('.cocofun_22')
	.sect	'.text.IfxGpt12..cocofun_22'
	.align	2
; Function .cocofun_22
.L92:
.cocofun_22:	.type	func
; Function body .cocofun_22, coco_iter:0
	movh	d15,#16128
.L420:
	mul.f	d2,d0,d15
	fret
.L217:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_17',code,cluster('.cocofun_17')
	.sect	'.text.IfxGpt12..cocofun_17'
	.align	2
; Function .cocofun_17
.L94:
.cocofun_17:	.type	func
; Function body .cocofun_17, coco_iter:0
	mov	d15,#1
.L417:
	sha	d15,d15,d1
	itof	d15,d15
.L418:
	div.f	d2,d0,d15
	fret
.L192:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_15',code,cluster('.cocofun_15')
	.sect	'.text.IfxGpt12..cocofun_15'
	.align	2
; Function .cocofun_15
.L96:
.cocofun_15:	.type	func
; Function body .cocofun_15, coco_iter:0
	ld.bu	d15,[a15]21
	extr.u	d15,d15,#3,#2
.L410:
	jeq	d15,#0,.L2
.L547:
	jeq	d15,#1,.L3
.L548:
	jeq	d15,#3,.L4
.L549:
	j	.L5
.L3:
	movh	d15,#16000
	j	.L6
.L2:
	movh	d15,#15872
	j	.L7
.L4:
	movh	d15,#15744
	j	.L8
.L5:
	movh	d15,#15616
.L6:
.L7:
.L8:
	mul.f	d0,d2,d15
	fret
.L182:
	; End of function
	.sdecl	'.text.IfxGpt12.IfxGpt12_T3_getFrequency',code,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.text.IfxGpt12.IfxGpt12_T3_getFrequency'
	.align	2
	
	.global	IfxGpt12_T3_getFrequency

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    74  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    75  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    76  float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12)
; Function IfxGpt12_T3_getFrequency
.L98:
IfxGpt12_T3_getFrequency:	.type	func
	mov.aa	a15,a4
.L375:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1250  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1303  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1334  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1335  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1341  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1348  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1354  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1355  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1360  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1366  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1367  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1372  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1384  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1391  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1410  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1423  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1428  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1429  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1430  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1431  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1432  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1433      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1434      gpt12->T6CON.B.T6M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1435  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1436  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1437  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1438  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1439  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1440      gpt12->T6CON.B.T6UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1441  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1442  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1443  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1444  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1445  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1446      gpt12->T6CON.B.T6I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1447  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1449  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1450  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1451  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1452      gpt12->T6.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1453  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1454  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1456  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1457  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1458      return &MODULE_SRC.GPT12.GPT12[0].CIRQ;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1459  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1460  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1461  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1462  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1463  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1464      return IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L376:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    77  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    78      float32                      freq = IfxGpt12_getModuleFrequency(gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    79  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    80      IfxGpt12_Mode                mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    81      IfxGpt12_TimerInputPrescaler prescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    82  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    83      IfxGpt12_Gpt1BlockPrescaler  bps1 = gpt12->T3CON.B.BPS1;
	fcall	.cocofun_15
.L414:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    84  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    85      switch (bps1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    86      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    87      case IfxGpt12_Gpt1BlockPrescaler_4:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    88          freq = freq / 4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    89          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    90      case IfxGpt12_Gpt1BlockPrescaler_8:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    91          freq = freq / 8;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    92          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    93      case IfxGpt12_Gpt1BlockPrescaler_16:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    94          freq = freq / 16;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    95          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    96      default: /* case IfxGpt12_Gpt1BlockPrescaler_32: */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    97          freq = freq / 32;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    98          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	    99      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   100  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   101      mode      = (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
	ld.bu	d15,[a15]20
.L508:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   102      prescaler = (IfxGpt12_TimerInputPrescaler)gpt12->T3CON.B.T3I;
	extr.u	d15,d15,#3,#3
	ld.bu	d1,[a15]20
.L416:
	and	d1,d1,#7
.L421:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   104      if ((mode == IfxGpt12_Mode_timer) || (mode == IfxGpt12_Mode_highGatedTimer) || (mode == IfxGpt12_Mode_lowGatedTimer))
	jeq	d15,#0,.L21
.L509:
	jeq	d15,#3,.L22
.L510:
	jne	d15,#2,.L23
.L22:
.L21:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   105      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   106          freq = freq / (1 << prescaler);
	fcall	.cocofun_17
.L415:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   107      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   108      else // FIXME:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   109      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   110          freq = freq / 2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   111      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   113      return freq;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   114  }
	ret
.L23:
	fcall	.cocofun_22
.L419:
	ret
.L368:
	
__IfxGpt12_T3_getFrequency_function_end:
	.size	IfxGpt12_T3_getFrequency,__IfxGpt12_T3_getFrequency_function_end-IfxGpt12_T3_getFrequency
.L157:
	; End of function
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_T4_getFrequency',code,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.text.IfxGpt12.IfxGpt12_T4_getFrequency'
	.align	2
	
	.global	IfxGpt12_T4_getFrequency

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   115  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   117  float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12)
; Function IfxGpt12_T4_getFrequency
.L100:
IfxGpt12_T4_getFrequency:	.type	func
	mov.aa	a15,a4
.L384:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1250  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1303  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1334  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1335  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1341  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1348  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1354  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1355  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1360  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1366  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1367  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1372  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1384  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1391  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1410  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1423  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1428  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1429  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1430  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1431  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1432  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1433      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1434      gpt12->T6CON.B.T6M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1435  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1436  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1437  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1438  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1439  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1440      gpt12->T6CON.B.T6UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1441  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1442  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1443  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1444  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1445  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1446      gpt12->T6CON.B.T6I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1447  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1449  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1450  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1451  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1452      gpt12->T6.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1453  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1454  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1456  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1457  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1458      return &MODULE_SRC.GPT12.GPT12[0].CIRQ;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1459  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1460  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1461  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1462  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1463  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1464      return IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L385:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   118  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   119      float32                      freq = IfxGpt12_getModuleFrequency(gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   120  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   121      IfxGpt12_Mode                mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   122      IfxGpt12_TimerInputPrescaler prescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   124      IfxGpt12_Gpt1BlockPrescaler  bps1 = gpt12->T3CON.B.BPS1;
	fcall	.cocofun_15
.L422:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   125  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   126      switch (bps1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   127      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   128      case IfxGpt12_Gpt1BlockPrescaler_4:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   129          freq = freq / 4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   130          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   131      case IfxGpt12_Gpt1BlockPrescaler_8:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   132          freq = freq / 8;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   133          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   134      case IfxGpt12_Gpt1BlockPrescaler_16:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   135          freq = freq / 16;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   136          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   137      default: /* case IfxGpt12_Gpt1BlockPrescaler_32: */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   138          freq = freq / 32;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   139          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   140      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   142      mode      = (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
	ld.bu	d15,[a15]24
.L515:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   143      prescaler = (IfxGpt12_TimerInputPrescaler)gpt12->T4CON.B.T4I;
	extr.u	d15,d15,#3,#3
	ld.bu	d1,[a15]24
.L424:
	and	d1,d1,#7
.L426:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   144  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   145      if ((mode == IfxGpt12_Mode_timer) || (mode == IfxGpt12_Mode_highGatedTimer) || (mode == IfxGpt12_Mode_lowGatedTimer))
	jeq	d15,#0,.L33
.L516:
	jeq	d15,#3,.L34
.L517:
	jne	d15,#2,.L35
.L34:
.L33:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   146      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   147          freq = freq / (1 << prescaler);
	fcall	.cocofun_17
.L423:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   148      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   149      else // FIXME:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   150      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   151          freq = freq / 2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   152      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   154      return freq;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   155  }
	ret
.L35:
	fcall	.cocofun_22
.L425:
	ret
.L378:
	
__IfxGpt12_T4_getFrequency_function_end:
	.size	IfxGpt12_T4_getFrequency,__IfxGpt12_T4_getFrequency_function_end-IfxGpt12_T4_getFrequency
.L162:
	; End of function
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_T5_getFrequency',code,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.text.IfxGpt12.IfxGpt12_T5_getFrequency'
	.align	2
	
	.global	IfxGpt12_T5_getFrequency

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   156  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   158  float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12)
; Function IfxGpt12_T5_getFrequency
.L102:
IfxGpt12_T5_getFrequency:	.type	func
	mov.aa	a15,a4
.L395:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1250  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1303  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1334  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1335  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1341  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1348  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1354  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1355  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1360  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1366  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1367  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1372  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1384  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1391  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1410  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1423  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1428  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1429  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1430  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1431  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1432  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1433      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1434      gpt12->T6CON.B.T6M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1435  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1436  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1437  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1438  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1439  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1440      gpt12->T6CON.B.T6UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1441  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1442  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1443  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1444  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1445  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1446      gpt12->T6CON.B.T6I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1447  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1449  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1450  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1451  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1452      gpt12->T6.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1453  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1454  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1456  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1457  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1458      return &MODULE_SRC.GPT12.GPT12[0].CIRQ;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1459  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1460  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1461  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1462  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1463  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1464      return IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L396:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   160      float32                      freq = IfxGpt12_getModuleFrequency(gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   161  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   162      IfxGpt12_Mode                mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   163      IfxGpt12_TimerInputPrescaler prescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   164  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   165      IfxGpt12_Gpt2BlockPrescaler  bps2 = gpt12->T6CON.B.BPS2;
	fcall	.cocofun_16
.L427:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   167      switch (bps2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   168      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   169      case IfxGpt12_Gpt2BlockPrescaler_2:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   170          freq = freq / 2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   171          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   172      case IfxGpt12_Gpt2BlockPrescaler_4:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   173          freq = freq / 4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   174          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   175      case IfxGpt12_Gpt2BlockPrescaler_8:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   176          freq = freq / 8;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   177          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   178      default: /* case IfxGpt12_Gpt2BlockPrescaler_16: */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   179          freq = freq / 16;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   180          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   181      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   182  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   183      mode      = (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
	ld.bu	d15,[a15]28
.L429:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   184      prescaler = (IfxGpt12_TimerInputPrescaler)gpt12->T5CON.B.T5I;
	extr.u	d15,d15,#3,#3
	ld.bu	d1,[a15]28
.L431:
	and	d1,d1,#7
.L433:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   185  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   186      if ((mode == IfxGpt12_Mode_timer) || (mode == IfxGpt12_Mode_highGatedTimer) || (mode == IfxGpt12_Mode_lowGatedTimer))
	jeq	d15,#0,.L45
.L522:
	jeq	d15,#3,.L46
.L523:
	jne	d15,#2,.L47
.L46:
.L45:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   187      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   188          freq = freq / (1 << prescaler);
	fcall	.cocofun_17
.L430:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   189      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   190      else // FIXME:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   191      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   192          freq = freq / 2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   193      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   195      return freq;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   196  }
	ret
.L47:
	fcall	.cocofun_22
.L432:
	ret
.L387:
	
__IfxGpt12_T5_getFrequency_function_end:
	.size	IfxGpt12_T5_getFrequency,__IfxGpt12_T5_getFrequency_function_end-IfxGpt12_T5_getFrequency
.L167:
	; End of function
	
	.sdecl	'.text.IfxGpt12..cocofun_16',code,cluster('.cocofun_16')
	.sect	'.text.IfxGpt12..cocofun_16'
	.align	2
; Function .cocofun_16
.L104:
.cocofun_16:	.type	func
; Function body .cocofun_16, coco_iter:0
	ld.bu	d15,[a15]33
	extr.u	d15,d15,#3,#2
.L428:
	jeq	d15,#0,.L38
.L554:
	jeq	d15,#1,.L39
.L555:
	jeq	d15,#3,.L40
.L556:
	j	.L41
.L39:
	movh	d15,#16128
	j	.L42
.L38:
	movh	d15,#16000
	j	.L43
.L40:
	movh	d15,#15872
	j	.L44
.L41:
	movh	d15,#15744
.L42:
.L43:
.L44:
	mul.f	d0,d2,d15
	fret
.L187:
	; End of function
	.sdecl	'.text.IfxGpt12.IfxGpt12_T6_getFrequency',code,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.text.IfxGpt12.IfxGpt12_T6_getFrequency'
	.align	2
	
	.global	IfxGpt12_T6_getFrequency

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   197  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   198  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   199  float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12)
; Function IfxGpt12_T6_getFrequency
.L106:
IfxGpt12_T6_getFrequency:	.type	func
	mov.aa	a15,a4
.L404:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1250  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1303  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1334  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1335  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1341  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1348  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1354  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1355  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1360  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1366  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1367  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1372  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1384  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1391  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1410  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1423  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1428  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1429  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1430  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1431  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1432  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1433      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1434      gpt12->T6CON.B.T6M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1435  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1436  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1437  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1438  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1439  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1440      gpt12->T6CON.B.T6UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1441  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1442  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1443  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1444  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1445  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1446      gpt12->T6CON.B.T6I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1447  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1449  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1450  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1451  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1452      gpt12->T6.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1453  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1454  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1456  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1457  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1458      return &MODULE_SRC.GPT12.GPT12[0].CIRQ;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1459  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1460  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1461  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1462  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1463  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1464      return IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L405:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   200  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   201      float32                      freq = IfxGpt12_getModuleFrequency(gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   203      IfxGpt12_Mode                mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   204      IfxGpt12_TimerInputPrescaler prescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   205  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   206      IfxGpt12_Gpt2BlockPrescaler  bps2 = gpt12->T6CON.B.BPS2;
	fcall	.cocofun_16
.L434:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   208      switch (bps2)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   209      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   210      case IfxGpt12_Gpt2BlockPrescaler_2:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   211          freq = freq / 2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   212          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   213      case IfxGpt12_Gpt2BlockPrescaler_4:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   214          freq = freq / 4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   215          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   216      case IfxGpt12_Gpt2BlockPrescaler_8:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   217          freq = freq / 8;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   218          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   219      default: /* case IfxGpt12_Gpt2BlockPrescaler_16: */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   220          freq = freq / 16;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   221          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   222      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   223  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   224      mode      = (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
	ld.bu	d15,[a15]32
.L528:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   225      prescaler = (IfxGpt12_TimerInputPrescaler)gpt12->T6CON.B.T6I;
	extr.u	d15,d15,#3,#3
	ld.bu	d1,[a15]32
.L436:
	and	d1,d1,#7
.L438:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   227      if ((mode == IfxGpt12_Mode_timer) || (mode == IfxGpt12_Mode_highGatedTimer) || (mode == IfxGpt12_Mode_lowGatedTimer))
	jeq	d15,#0,.L57
.L529:
	jeq	d15,#3,.L58
.L530:
	jne	d15,#2,.L59
.L58:
.L57:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   228      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   229          freq = freq / (1 << prescaler);
	fcall	.cocofun_17
.L435:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   230      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   231      else // FIXME:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   232      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   233          freq = freq / 2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   234      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   235  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   236      return freq;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   237  }
	ret
.L59:
	fcall	.cocofun_22
.L437:
	ret
.L398:
	
__IfxGpt12_T6_getFrequency_function_end:
	.size	IfxGpt12_T6_getFrequency,__IfxGpt12_T6_getFrequency_function_end-IfxGpt12_T6_getFrequency
.L172:
	; End of function
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_enableModule',code,cluster('IfxGpt12_enableModule')
	.sect	'.text.IfxGpt12.IfxGpt12_enableModule'
	.align	2
	
	.global	IfxGpt12_enableModule

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   239  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   240  void IfxGpt12_enableModule(Ifx_GPT12 *gpt12)
; Function IfxGpt12_enableModule
.L108:
IfxGpt12_enableModule:	.type	func
	mov.aa	a15,a4
.L440:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   242      uint16 psw = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L439:
	mov	d15,d2
.L442:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   243      IfxScuWdt_clearCpuEndinit(psw);
	mov	d4,d15
	call	IfxScuWdt_clearCpuEndinit
.L441:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   244      gpt12->CLC.B.DISR = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   245      IfxScuWdt_setCpuEndinit(psw);
	mov	d4,d15
	ld.bu	d0,[a15]
.L443:
	insert	d0,d0,#0,#0,#1
	st.b	[a15],d0
.L462:
	j	IfxScuWdt_setCpuEndinit
.L233:
	
__IfxGpt12_enableModule_function_end:
	.size	IfxGpt12_enableModule,__IfxGpt12_enableModule_function_end-IfxGpt12_enableModule
.L137:
	; End of function
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_initTxEudInPin',code,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.text.IfxGpt12.IfxGpt12_initTxEudInPin'
	.align	2
	
	.global	IfxGpt12_initTxEudInPin

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   246  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   247  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   248  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   249  void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode)
; Function IfxGpt12_initTxEudInPin
.L110:
IfxGpt12_initTxEudInPin:	.type	func
	sub.a	a10,#24
.L444:
	fcall	.cocofun_23
.L245:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	call	IfxPort_setPinMode
.L246:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   251      IfxPort_setPinModeInput(txEudIn->pin.port, txEudIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   252  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   253      switch (txEudIn->timer)
	ld.bu	d15,[a13]4
.L467:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   254      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   255      case 2:
	jeq	d15,#2,.L62
.L468:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   256          IfxGpt12_T2_setEudInput(txEudIn->module, (IfxGpt12_EudInput)txEudIn->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   257          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   258      case 3:
	jeq	d15,#3,.L63
.L469:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   259          IfxGpt12_T3_setEudInput(txEudIn->module, (IfxGpt12_EudInput)txEudIn->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   260          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   261      case 4:
	jeq	d15,#4,.L64
.L470:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   262          IfxGpt12_T4_setEudInput(txEudIn->module, (IfxGpt12_EudInput)txEudIn->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   263          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   264      case 5:
	jeq	d15,#5,.L65
.L471:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   265          IfxGpt12_T5_setEudInput(txEudIn->module, (IfxGpt12_EudInput)txEudIn->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   266          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   267      case 6:
	jeq	d15,#6,.L66
.L472:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   268          IfxGpt12_T6_setEudInput(txEudIn->module, (IfxGpt12_EudInput)txEudIn->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   269          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   270      default:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   271          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   272      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   273  }
	ret
.L62:
	fcall	.cocofun_24
.L255:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
	jlt.u	d8,#2,.L68
.L473:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
	fcall	.cocofun_18
	st.a	[a10],a2
	fcall	.cocofun_19
	st.a	[a10]4,a15
	fcall	.cocofun_20
	st.a	[a10]8,a15
	mov	d15,#1009
	st.w	[a10]12,d15
	movh.a	a15,#@his(.9.IfxGpt12_T2_setEudInput.__func__)
	lea	a15,[a15]@los(.9.IfxGpt12_T2_setEudInput.__func__)
	st.a	[a10]16,a15
	fcall	.cocofun_21
	call	printf

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
.L68:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
	ld.bu	d15,[a12]4
.L474:
	insert	d15,d15,d8,#1,#1
	st.b	[a12]4,d15
.L256:
	ret
.L63:
	fcall	.cocofun_25
.L265:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
	insert	d15,d15,d0,#4,#2
	st.b	[a15]4,d15
.L266:
	ret
.L64:
	ld.a	a15,[a13]
.L475:
	ld.bu	d0,[a13]16
.L273:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
	ld.bu	d15,[a15]5
.L476:
	insert	d15,d15,d0,#0,#2
	st.b	[a15]5,d15
.L274:
	ret
.L65:
	fcall	.cocofun_24
.L281:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
	jlt.u	d8,#2,.L72
.L477:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1250  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1303  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
	fcall	.cocofun_18
	st.a	[a10],a2
	fcall	.cocofun_19
	st.a	[a10]4,a15
	fcall	.cocofun_20
	st.a	[a10]8,a15
	mov	d15,#1331
	st.w	[a10]12,d15
	movh.a	a15,#@his(.10.IfxGpt12_T5_setEudInput.__func__)
	lea	a15,[a15]@los(.10.IfxGpt12_T5_setEudInput.__func__)
	st.a	[a10]16,a15
	fcall	.cocofun_21
	call	printf

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
.L72:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
	ld.bu	d15,[a12]5
.L478:
	insert	d15,d15,d8,#3,#1
	j	.L73
.L66:
	fcall	.cocofun_24
.L289:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
	jlt.u	d8,#2,.L74
.L479:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1250  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1303  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1334  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1335  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1341  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1348  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1354  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1355  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1360  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1366  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1367  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1372  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1384  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1391  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1410  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
	fcall	.cocofun_18
	st.a	[a10],a2
	fcall	.cocofun_19
	st.a	[a10]4,a15
	fcall	.cocofun_20
	st.a	[a10]8,a15
	mov	d15,#1419
	st.w	[a10]12,d15
	movh.a	a15,#@his(.11.IfxGpt12_T6_setEudInput.__func__)
	lea	a15,[a15]@los(.11.IfxGpt12_T6_setEudInput.__func__)
	st.a	[a10]16,a15
	fcall	.cocofun_21
	call	printf

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
.L74:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
	ld.bu	d15,[a12]5
.L480:
	insert	d15,d15,d8,#5,#1
.L73:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1250  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1303  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1334  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1335  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1341  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1348  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1354  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1355  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1360  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1366  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1367  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1372  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1384  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1391  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1410  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
	st.b	[a12]5,d15
.L290:
	ret
.L238:
	
__IfxGpt12_initTxEudInPin_function_end:
	.size	IfxGpt12_initTxEudInPin,__IfxGpt12_initTxEudInPin_function_end-IfxGpt12_initTxEudInPin
.L142:
	; End of function
	
	.sdecl	'.text.IfxGpt12..cocofun_25',code,cluster('.cocofun_25')
	.sect	'.text.IfxGpt12..cocofun_25'
	.align	2
; Function .cocofun_25
.L112:
.cocofun_25:	.type	func
; Function body .cocofun_25, coco_iter:0
	ld.a	a15,[a13]
.L600:
	ld.bu	d0,[a13]16
.L601:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
	ld.bu	d15,[a15]4
.L602:
	fret
.L232:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_24',code,cluster('.cocofun_24')
	.sect	'.text.IfxGpt12..cocofun_24'
	.align	2
; Function .cocofun_24
.L114:
.cocofun_24:	.type	func
; Function body .cocofun_24, coco_iter:0
	ld.a	a12,[a13]
.L594:
	ld.bu	d8,[a13]16
.L595:
	fret
.L227:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_23',code,cluster('.cocofun_23')
	.sect	'.text.IfxGpt12..cocofun_23'
	.align	2
; Function .cocofun_23
.L116:
.cocofun_23:	.type	func
; Function body .cocofun_23, coco_iter:0
	mov.aa	a13,a4
.L446:
	ld.bu	d15,[a13]12
.L589:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d4,#0,#8
	ld.a	a4,[a13]8
.L445:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	mov	d4,d15
	fret
.L222:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_21',code,cluster('.cocofun_21')
	.sect	'.text.IfxGpt12..cocofun_21'
	.align	2
; Function .cocofun_21
.L118:
.cocofun_21:	.type	func
; Function body .cocofun_21, coco_iter:0

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
	movh.a	a4,#@his(.1.str)
	lea	a4,[a4]@los(.1.str)
.L580:
	fret
.L212:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_20',code,cluster('.cocofun_20')
	.sect	'.text.IfxGpt12..cocofun_20'
	.align	2
; Function .cocofun_20
.L120:
.cocofun_20:	.type	func
; Function body .cocofun_20, coco_iter:0
	movh.a	a15,#@his(.5.str)
	lea	a15,[a15]@los(.5.str)
.L575:
	fret
.L207:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_19',code,cluster('.cocofun_19')
	.sect	'.text.IfxGpt12..cocofun_19'
	.align	2
; Function .cocofun_19
.L122:
.cocofun_19:	.type	func
; Function body .cocofun_19, coco_iter:0
	movh.a	a15,#@his(.4.str)
	lea	a15,[a15]@los(.4.str)
.L570:
	fret
.L202:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_18',code,cluster('.cocofun_18')
	.sect	'.text.IfxGpt12..cocofun_18'
	.align	2
; Function .cocofun_18
.L124:
.cocofun_18:	.type	func
; Function body .cocofun_18, coco_iter:0
	movh.a	a2,#@his(verboseLevelStr+8)
	ld.a	a2,[a2]@los(verboseLevelStr+8)
.L565:
	fret
.L197:
	; End of function
	.sdecl	'.text.IfxGpt12.IfxGpt12_initTxInPin',code,cluster('IfxGpt12_initTxInPin')
	.sect	'.text.IfxGpt12.IfxGpt12_initTxInPin'
	.align	2
	
	.global	IfxGpt12_initTxInPin

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   276  void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode)
; Function IfxGpt12_initTxInPin
.L126:
IfxGpt12_initTxInPin:	.type	func
	sub.a	a10,#24
.L447:
	fcall	.cocofun_23
.L301:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	call	IfxPort_setPinMode
.L302:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   277  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   278      IfxPort_setPinModeInput(txIn->pin.port, txIn->pin.pinIndex, inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   280      switch (txIn->timer)
	ld.bu	d15,[a13]4
.L485:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   281      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   282      case 2:
	jeq	d15,#2,.L75
.L486:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   283          IfxGpt12_T2_setInput(txIn->module, (IfxGpt12_Input)txIn->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   284          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   285      case 3:
	jeq	d15,#3,.L76
.L487:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   286          IfxGpt12_T3_setInput(txIn->module, (IfxGpt12_Input)txIn->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   287          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   288      case 4:
	jeq	d15,#4,.L77
.L488:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   289          IfxGpt12_T4_setInput(txIn->module, (IfxGpt12_Input)txIn->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   290          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   291      case 5:
	jeq	d15,#5,.L78
.L489:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   292          IfxGpt12_T5_setInput(txIn->module, (IfxGpt12_Input)txIn->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   293          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   294      case 6:
	jeq	d15,#6,.L79
.L490:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   295          IfxGpt12_T6_setInput(txIn->module, (IfxGpt12_Input)txIn->select);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   296          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   297      default:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   298          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   299      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   300  }
	ret
.L75:
	fcall	.cocofun_24
.L307:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
	jlt.u	d8,#2,.L81
.L491:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
	fcall	.cocofun_18
	st.a	[a10],a2
	fcall	.cocofun_19
	st.a	[a10]4,a15
	fcall	.cocofun_20
	st.a	[a10]8,a15
	mov	d15,#1022
	st.w	[a10]12,d15
	movh.a	a15,#@his(.12.IfxGpt12_T2_setInput.__func__)
	lea	a15,[a15]@los(.12.IfxGpt12_T2_setInput.__func__)
	st.a	[a10]16,a15
	fcall	.cocofun_21
	call	printf

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
.L81:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
	ld.bu	d15,[a12]4
.L492:
	insert	d15,d15,d8,#0,#1
	st.b	[a12]4,d15
.L308:
	ret
.L76:
	fcall	.cocofun_25
.L316:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
	insert	d15,d15,d0,#2,#2
	j	.L83
.L77:
	fcall	.cocofun_25
.L323:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
	insert	d15,d15,d0,#6,#2
.L83:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
	st.b	[a15]4,d15
.L324:
	ret
.L78:
	fcall	.cocofun_24
.L331:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
	jlt.u	d8,#2,.L85
.L493:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1250  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1303  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1334  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1335  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
	fcall	.cocofun_18
	st.a	[a10],a2
	fcall	.cocofun_19
	st.a	[a10]4,a15
	fcall	.cocofun_20
	st.a	[a10]8,a15
	mov	d15,#1338
	st.w	[a10]12,d15
	movh.a	a15,#@his(.13.IfxGpt12_T5_setInput.__func__)
	lea	a15,[a15]@los(.13.IfxGpt12_T5_setInput.__func__)
	st.a	[a10]16,a15
	fcall	.cocofun_21
	call	printf

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
.L85:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
	ld.bu	d15,[a12]5
.L494:
	insert	d15,d15,d8,#2,#1
	j	.L86
.L79:
	fcall	.cocofun_24
.L339:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
	jlt.u	d8,#2,.L87
.L495:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1250  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1303  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1334  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1335  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1341  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1348  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1354  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1355  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1360  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1366  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1367  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1372  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1384  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1391  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1410  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1423  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
	fcall	.cocofun_18
	st.a	[a10],a2
	fcall	.cocofun_19
	st.a	[a10]4,a15
	fcall	.cocofun_20
	st.a	[a10]8,a15
	mov	d15,#1426
	st.w	[a10]12,d15
	movh.a	a15,#@his(.14.IfxGpt12_T6_setInput.__func__)
	lea	a15,[a15]@los(.14.IfxGpt12_T6_setInput.__func__)
	st.a	[a10]16,a15
	fcall	.cocofun_21
	call	printf

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */      (inlined)
.L87:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
	ld.bu	d15,[a12]5
.L496:
	insert	d15,d15,d8,#4,#1
.L86:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    34   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    35  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    49  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    58   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    60  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    66  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    68   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    70  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    79   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    85  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    88   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    90  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	    99   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   101  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   113   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   121  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   124   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   132  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   135   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   137  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   146   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   157   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   159  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   168   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   170  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   183   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   197   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   199  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   206   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   208  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   215   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   217  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   221  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   224   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   226  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   236  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   239   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   241  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   248   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   250  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   267   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   273   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   279   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   285   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   291   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   293  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   297   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   299  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   308  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   320   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   327   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   334   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   341   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   343  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   348   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   355   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   357  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   362   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   364  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   369   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   376   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   383   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   390   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   397   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   399  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   404   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   406  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   411   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   418   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   420  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   425   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   432   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   439   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   446   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   448  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   460   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   462  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   467   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   469  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   474   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   476  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   481   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   483  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   488   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   490  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   495   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   497  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   509   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   511  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   516   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   523   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   530   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   532  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   537   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   544   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   551   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   553  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   565   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   567  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   572   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   574  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   579   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   586   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   593   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   595  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   600   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   607   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   614   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   621   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   623  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   628   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   630  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   635   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   637  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   642   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   644  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   663   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   665  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   670   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   672  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   677   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   684   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   691   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   693  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   698   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   706   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   708  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   713   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   715  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   720   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   722  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   727   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   729  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   737   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   739  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   744   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   751   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   753  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   755  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   758  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   766   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   768  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   772   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   774  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   778   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   780  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   790   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   796   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   798  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   802   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   804  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   808   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   810  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   820   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   822  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   826   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   836   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   838  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   842   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   844  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   848   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   850  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   854   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   856  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   860   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   862  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   864  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   867  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   871  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   876   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   878  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   883   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   885  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   890   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   892  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   897   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   899  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   904   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   906  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   911   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   913  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   918   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   920  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   925   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   927  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   932   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   934  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   939   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   941  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   946   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   948  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   956   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   958  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   960  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   964  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   966  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   968  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   969  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   972  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   974  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   975  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   976  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   978  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   980  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   981  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   982  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   984  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   986  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   987  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   990  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   992  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   994  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   996  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   998  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	   999  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1005  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1006  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1013  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1018  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1019  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1025  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1026  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1032  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1043  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1044  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1049  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1050  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1055  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1056  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1062  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1073  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1074  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1080  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1086  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1092  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1098  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1111  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1116  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1117  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1165  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1190  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1195  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1214  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1250  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1267  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1273  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1279  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1291  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1303  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1321  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1334  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1335  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1341  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1348  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1349  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1354  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1355  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1360  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1366  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1367  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1372  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1378  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1384  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1390  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1391  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1402  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1409  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1410  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1416  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1423  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
	st.b	[a12]5,d15
.L340:
	ret
.L297:
	
__IfxGpt12_initTxInPin_function_end:
	.size	IfxGpt12_initTxInPin,__IfxGpt12_initTxInPin_function_end-IfxGpt12_initTxInPin
.L147:
	; End of function
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_resetModule',code,cluster('IfxGpt12_resetModule')
	.sect	'.text.IfxGpt12.IfxGpt12_resetModule'
	.align	2
	
	.global	IfxGpt12_resetModule

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   301  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   302  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   303  void IfxGpt12_resetModule(Ifx_GPT12 *gpt12)
; Function IfxGpt12_resetModule
.L128:
IfxGpt12_resetModule:	.type	func
	mov.aa	a15,a4
.L449:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   304  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   305      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L448:
	mov	d8,d2
.L451:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   306  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   307      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L450:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   308      gpt12->KRST0.B.RST = 1;         /* Only if both Kernel reset bits are set a reset is executed */
	ld.bu	d15,[a15]244
.L535:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   309      gpt12->KRST1.B.RST = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   310      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
.L452:
	or	d15,#1
	st.b	[a15]244,d15
.L536:
	ld.bu	d15,[a15]240
.L537:
	or	d15,#1
	st.b	[a15]240,d15
.L538:
	call	IfxScuWdt_setCpuEndinit

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   311  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   312      while (0 == gpt12->KRST0.B.RSTSTAT)     /* Wait until reset is executed */
.L88:
	ld.bu	d15,[a15]244
.L539:
	jz.t	d15:1,.L88
.L540:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   314      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   315  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   316      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L541:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   317      gpt12->KRSTCLR.B.CLR = 1;           /* Clear Kernel reset status bit */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   318      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
	ld.bu	d15,[a15]236
.L453:
	or	d15,#1
	st.b	[a15]236,d15
.L542:
	j	IfxScuWdt_setCpuEndinit
.L407:
	
__IfxGpt12_resetModule_function_end:
	.size	IfxGpt12_resetModule,__IfxGpt12_resetModule_function_end-IfxGpt12_resetModule
.L177:
	; End of function
	
	.sdecl	'.rodata.IfxCpu..1.str',data,rom
	.sect	'.rodata.IfxCpu..1.str'
.1.str:	.type	object
	.size	.1.str,43
	.byte	91,65,83,83
	.byte	69,82,84,58
	.byte	37,115,93,32
	.byte	39,37,115,39
	.byte	32,105,110,32
	.byte	37,115,58,37
	.byte	100,32,40,102
	.byte	117,110,99,116
	.byte	105,111,110,32
	.byte	39,37,115,39
	.byte	41,10
	.space	1
	.sdecl	'.rodata.IfxGpt12..4.str',data,rom
	.sect	'.rodata.IfxGpt12..4.str'
.4.str:	.type	object
	.size	.4.str,11
	.byte	105,110,112,117
	.byte	116,32,60,61
	.byte	32,49
	.space	1
	.sdecl	'.rodata.IfxGpt12..5.str',data,rom
	.sect	'.rodata.IfxGpt12..5.str'
.5.str:	.type	object
	.size	.5.str,66
	.byte	46,46,92,83
	.byte	111,102,116,119
	.byte	97,114,101,80
	.byte	108,97,116,102
	.byte	111,114,109,92
	.byte	105,108,108,100
	.byte	95,116,99,50
	.byte	51,120,92,115
	.byte	114,99,92,105
	.byte	102,120,92,84
	.byte	67,50,51,120
	.byte	92,71,112,116
	.byte	49,50,92,83
	.byte	116,100,92,73
	.byte	102,120,71,112
	.byte	116,49,50,46
	.byte	104
	.space	1
	.sdecl	'.rodata.IfxGpt12..9.IfxGpt12_T2_setEudInput.__func__',data,rom,cluster('.9.IfxGpt12_T2_setEudInput.__func__')
	.sect	'.rodata.IfxGpt12..9.IfxGpt12_T2_setEudInput.__func__'
.9.IfxGpt12_T2_setEudInput.__func__:	.type	object
	.size	.9.IfxGpt12_T2_setEudInput.__func__,24
	.byte	73,102,120,71
	.byte	112,116,49,50
	.byte	95,84,50,95
	.byte	115,101,116,69
	.byte	117,100,73,110
	.byte	112,117,116
	.space	1
	.sdecl	'.rodata.IfxGpt12..12.IfxGpt12_T2_setInput.__func__',data,rom,cluster('.12.IfxGpt12_T2_setInput.__func__')
	.sect	'.rodata.IfxGpt12..12.IfxGpt12_T2_setInput.__func__'
.12.IfxGpt12_T2_setInput.__func__:	.type	object
	.size	.12.IfxGpt12_T2_setInput.__func__,21
	.byte	73,102,120,71
	.byte	112,116,49,50
	.byte	95,84,50,95
	.byte	115,101,116,73
	.byte	110,112,117,116
	.space	1
	.sdecl	'.rodata.IfxGpt12..10.IfxGpt12_T5_setEudInput.__func__',data,rom,cluster('.10.IfxGpt12_T5_setEudInput.__func__')
	.sect	'.rodata.IfxGpt12..10.IfxGpt12_T5_setEudInput.__func__'
.10.IfxGpt12_T5_setEudInput.__func__:	.type	object
	.size	.10.IfxGpt12_T5_setEudInput.__func__,24
	.byte	73,102,120,71
	.byte	112,116,49,50
	.byte	95,84,53,95
	.byte	115,101,116,69
	.byte	117,100,73,110
	.byte	112,117,116
	.space	1
	.sdecl	'.rodata.IfxGpt12..13.IfxGpt12_T5_setInput.__func__',data,rom,cluster('.13.IfxGpt12_T5_setInput.__func__')
	.sect	'.rodata.IfxGpt12..13.IfxGpt12_T5_setInput.__func__'
.13.IfxGpt12_T5_setInput.__func__:	.type	object
	.size	.13.IfxGpt12_T5_setInput.__func__,21
	.byte	73,102,120,71
	.byte	112,116,49,50
	.byte	95,84,53,95
	.byte	115,101,116,73
	.byte	110,112,117,116
	.space	1
	.sdecl	'.rodata.IfxGpt12..11.IfxGpt12_T6_setEudInput.__func__',data,rom,cluster('.11.IfxGpt12_T6_setEudInput.__func__')
	.sect	'.rodata.IfxGpt12..11.IfxGpt12_T6_setEudInput.__func__'
.11.IfxGpt12_T6_setEudInput.__func__:	.type	object
	.size	.11.IfxGpt12_T6_setEudInput.__func__,24
	.byte	73,102,120,71
	.byte	112,116,49,50
	.byte	95,84,54,95
	.byte	115,101,116,69
	.byte	117,100,73,110
	.byte	112,117,116
	.space	1
	.sdecl	'.rodata.IfxGpt12..14.IfxGpt12_T6_setInput.__func__',data,rom,cluster('.14.IfxGpt12_T6_setInput.__func__')
	.sect	'.rodata.IfxGpt12..14.IfxGpt12_T6_setInput.__func__'
.14.IfxGpt12_T6_setInput.__func__:	.type	object
	.size	.14.IfxGpt12_T6_setInput.__func__,21
	.byte	73,102,120,71
	.byte	112,116,49,50
	.byte	95,84,54,95
	.byte	115,101,116,73
	.byte	110,112,117,116
	.space	1
	.calls	'IfxGpt12_T2_getFrequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxGpt12_T3_getFrequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxGpt12_T4_getFrequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxGpt12_T5_getFrequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxGpt12_T6_getFrequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxGpt12_enableModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxGpt12_enableModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxGpt12_enableModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxGpt12_initTxEudInPin','IfxPort_setPinMode'
	.calls	'IfxGpt12_initTxEudInPin','printf'
	.calls	'IfxGpt12_initTxInPin','IfxPort_setPinMode'
	.calls	'IfxGpt12_initTxInPin','printf'
	.calls	'IfxGpt12_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxGpt12_resetModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxGpt12_resetModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxGpt12_T2_getFrequency','.cocofun_15'
	.calls	'IfxGpt12_T2_getFrequency','.cocofun_17'
	.calls	'IfxGpt12_T2_getFrequency','.cocofun_22'
	.calls	'IfxGpt12_T3_getFrequency','.cocofun_15'
	.calls	'IfxGpt12_T3_getFrequency','.cocofun_17'
	.calls	'IfxGpt12_T3_getFrequency','.cocofun_22'
	.calls	'IfxGpt12_T4_getFrequency','.cocofun_15'
	.calls	'IfxGpt12_T4_getFrequency','.cocofun_17'
	.calls	'IfxGpt12_T4_getFrequency','.cocofun_22'
	.calls	'IfxGpt12_T5_getFrequency','.cocofun_16'
	.calls	'IfxGpt12_T5_getFrequency','.cocofun_17'
	.calls	'IfxGpt12_T5_getFrequency','.cocofun_22'
	.calls	'IfxGpt12_T6_getFrequency','.cocofun_16'
	.calls	'IfxGpt12_T6_getFrequency','.cocofun_17'
	.calls	'IfxGpt12_T6_getFrequency','.cocofun_22'
	.calls	'IfxGpt12_initTxEudInPin','.cocofun_23'
	.calls	'IfxGpt12_initTxEudInPin','.cocofun_24'
	.calls	'IfxGpt12_initTxEudInPin','.cocofun_18'
	.calls	'IfxGpt12_initTxEudInPin','.cocofun_19'
	.calls	'IfxGpt12_initTxEudInPin','.cocofun_20'
	.calls	'IfxGpt12_initTxEudInPin','.cocofun_21'
	.calls	'IfxGpt12_initTxEudInPin','.cocofun_25'
	.calls	'IfxGpt12_initTxInPin','.cocofun_23'
	.calls	'IfxGpt12_initTxInPin','.cocofun_24'
	.calls	'IfxGpt12_initTxInPin','.cocofun_18'
	.calls	'IfxGpt12_initTxInPin','.cocofun_19'
	.calls	'IfxGpt12_initTxInPin','.cocofun_20'
	.calls	'IfxGpt12_initTxInPin','.cocofun_21'
	.calls	'IfxGpt12_initTxInPin','.cocofun_25'
	.calls	'IfxGpt12_T2_getFrequency','',0
	.calls	'.cocofun_22','',0
	.calls	'.cocofun_17','',0
	.calls	'.cocofun_15','',0
	.calls	'IfxGpt12_T3_getFrequency','',0
	.calls	'IfxGpt12_T4_getFrequency','',0
	.calls	'IfxGpt12_T5_getFrequency','',0
	.calls	'.cocofun_16','',0
	.calls	'IfxGpt12_T6_getFrequency','',0
	.calls	'IfxGpt12_enableModule','',0
	.calls	'IfxGpt12_initTxEudInPin','',24
	.calls	'.cocofun_25','',0
	.calls	'.cocofun_24','',0
	.calls	'.cocofun_23','',0
	.calls	'.cocofun_21','',0
	.calls	'.cocofun_20','',0
	.calls	'.cocofun_19','',0
	.calls	'.cocofun_18','',0
	.calls	'IfxGpt12_initTxInPin','',24
	.extern	printf
	.extern	verboseLevelStr
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxPort_setPinMode
	.extern	IfxScuCcu_getSpbFrequency
	.extern	__printf_int
	.calls	'IfxGpt12_resetModule','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L130:
	.word	82730
	.half	3
	.word	.L131
	.byte	4
.L129:
	.byte	1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L132
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0,4
	.byte	'unsigned long long int',0,8,7,5
	.byte	'void',0,6
	.word	243
	.byte	7
	.byte	'__ld64',0,3,2,110,19
	.word	217
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	249
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	249
	.byte	8
	.byte	'value',0,2,118,43
	.word	217
	.byte	3,0,4
	.byte	'unsigned int',0,4,7,4
	.byte	'int',0,4,5,4
	.byte	'unsigned char',0,1,8,9
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,10
	.byte	'SRPN',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	2,6,2,35,1,10
	.byte	'SRE',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'TOS',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	353
	.byte	4,0,2,35,1,10
	.byte	'ECC',0,1
	.word	353
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	353
	.byte	3,0,2,35,2,10
	.byte	'SRR',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'CLRR',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'SETR',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'IOV',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'IOVCLR',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'SWS',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'SWSCLR',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	353
	.byte	1,0,2,35,3,0,11,4,70,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	370
	.byte	4,2,35,0,0,13
	.word	660
	.byte	6
	.word	699
	.byte	2
	.byte	'IfxSrc_clearRequest',0,3,3,230,1,17,1,1,8
	.byte	'src',0,3,230,1,60
	.word	704
	.byte	3,0,4
	.byte	'unsigned int',0,4,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,133,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	752
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	752
	.byte	16,0,2,35,0,0,11,6,187,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	768
	.byte	4,2,35,0,0
.L236:
	.byte	4
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,142,8,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	2,6,2,35,0,10
	.byte	'IR0',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	353
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,6,195,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	926
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,157,8,16,4,10
	.byte	'AE',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	353
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,6,203,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1170
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU',0,6,243,13,25,12,12
	.byte	'CON0',0
	.word	864
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	1130
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	1361
	.byte	4,2,35,8,0,13
	.word	1401
	.byte	6
	.word	1464
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,130,3,17,1,1,8
	.byte	'watchdog',0,5,130,3,65
	.word	1469
	.byte	8
	.byte	'password',0,5,130,3,82
	.word	904
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,222,3,17,1,1,8
	.byte	'watchdog',0,5,222,3,63
	.word	1469
	.byte	8
	.byte	'password',0,5,222,3,80
	.word	904
	.byte	3,0,7
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,187,3,19
	.word	904
	.byte	1,1,8
	.byte	'watchdog',0,5,187,3,74
	.word	1469
	.byte	3,0,14,8,83,9,1,15
	.byte	'IfxCpu_ResourceCpu_0',0,0,15
	.byte	'IfxCpu_ResourceCpu_none',0,1,0,7
	.byte	'IfxCpu_getCoreIndex',0,3,7,170,5,31
	.word	1699
	.byte	1,1,3,0,7
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,185,4,20
	.word	353
	.byte	1,1,3,0,4
	.byte	'unsigned long int',0,4,7,7
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,190,5,19
	.word	1830
	.byte	1,1,8
	.byte	'address',0,7,190,5,55
	.word	1830
	.byte	3,0,7
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,198,5,20
	.word	353
	.byte	1,1,8
	.byte	'address',0,7,198,5,70
	.word	1830
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,153,7,17,1,1,8
	.byte	'address',0,7,153,7,56
	.word	1830
	.byte	8
	.byte	'count',0,7,153,7,72
	.word	1830
	.byte	3,0,9
	.byte	'_Ifx_P_OUT_Bits',0,10,231,2,16,4,10
	.byte	'P0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,10,239,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2059
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMR_Bits',0,10,129,2,16,4,10
	.byte	'PS0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'PCL0',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	353
	.byte	1,0,2,35,3,0,11,10,191,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2375
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ID_Bits',0,10,110,16,4,10
	.byte	'MODREV',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,10,231,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2946
	.byte	4,2,35,0,0,16,4
	.word	353
	.byte	17,3,0,9
	.byte	'_Ifx_P_IOCR0_Bits',0,10,140,1,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'PC0',0,1
	.word	353
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	3,5,2,35,1,10
	.byte	'PC1',0,1
	.word	353
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	353
	.byte	3,5,2,35,2,10
	.byte	'PC2',0,1
	.word	353
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	3,5,2,35,3,10
	.byte	'PC3',0,1
	.word	353
	.byte	5,0,2,35,3,0,11,10,247,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3074
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR4_Bits',0,10,166,1,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'PC4',0,1
	.word	353
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	3,5,2,35,1,10
	.byte	'PC5',0,1
	.word	353
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	353
	.byte	3,5,2,35,2,10
	.byte	'PC6',0,1
	.word	353
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	3,5,2,35,3,10
	.byte	'PC7',0,1
	.word	353
	.byte	5,0,2,35,3,0,11,10,135,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3289
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR8_Bits',0,10,179,1,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'PC8',0,1
	.word	353
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	3,5,2,35,1,10
	.byte	'PC9',0,1
	.word	353
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	353
	.byte	3,5,2,35,2,10
	.byte	'PC10',0,1
	.word	353
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	3,5,2,35,3,10
	.byte	'PC11',0,1
	.word	353
	.byte	5,0,2,35,3,0,11,10,143,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3504
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR12_Bits',0,10,153,1,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'PC12',0,1
	.word	353
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	3,5,2,35,1,10
	.byte	'PC13',0,1
	.word	353
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	353
	.byte	3,5,2,35,2,10
	.byte	'PC14',0,1
	.word	353
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	3,5,2,35,3,10
	.byte	'PC15',0,1
	.word	353
	.byte	5,0,2,35,3,0,11,10,255,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3721
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IN_Bits',0,10,118,16,4,10
	.byte	'P0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,10,239,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3941
	.byte	4,2,35,0,0,16,24
	.word	353
	.byte	17,23,0,9
	.byte	'_Ifx_P_PDR0_Bits',0,10,160,3,16,4,10
	.byte	'PD0',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	353
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'PD2',0,1
	.word	353
	.byte	3,5,2,35,1,10
	.byte	'PL2',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'PD3',0,1
	.word	353
	.byte	3,1,2,35,1,10
	.byte	'PL3',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'PD4',0,1
	.word	353
	.byte	3,5,2,35,2,10
	.byte	'PL4',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'PD5',0,1
	.word	353
	.byte	3,1,2,35,2,10
	.byte	'PL5',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'PD6',0,1
	.word	353
	.byte	3,5,2,35,3,10
	.byte	'PL6',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'PD7',0,1
	.word	353
	.byte	3,1,2,35,3,10
	.byte	'PL7',0,1
	.word	353
	.byte	1,0,2,35,3,0,11,10,135,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4264
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PDR1_Bits',0,10,181,3,16,4,10
	.byte	'PD8',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'PL8',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'PD9',0,1
	.word	353
	.byte	3,1,2,35,0,10
	.byte	'PL9',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'PD10',0,1
	.word	353
	.byte	3,5,2,35,1,10
	.byte	'PL10',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'PD11',0,1
	.word	353
	.byte	3,1,2,35,1,10
	.byte	'PL11',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'PD12',0,1
	.word	353
	.byte	3,5,2,35,2,10
	.byte	'PL12',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'PD13',0,1
	.word	353
	.byte	3,1,2,35,2,10
	.byte	'PL13',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'PD14',0,1
	.word	353
	.byte	3,5,2,35,3,10
	.byte	'PL14',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'PD15',0,1
	.word	353
	.byte	3,1,2,35,3,10
	.byte	'PL15',0,1
	.word	353
	.byte	1,0,2,35,3,0,11,10,143,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4568
	.byte	4,2,35,0,0,16,8
	.word	353
	.byte	17,7,0,9
	.byte	'_Ifx_P_ESR_Bits',0,10,88,16,4,10
	.byte	'EN0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,10,223,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4893
	.byte	4,2,35,0,0,16,12
	.word	353
	.byte	17,11,0,9
	.byte	'_Ifx_P_PDISC_Bits',0,10,138,3,16,4,10
	.byte	'PDIS0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'PDIS2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'PDIS3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'PDIS4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'PDIS5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'PDIS6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PDIS7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'PDIS8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'PDIS9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'PDIS10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'PDIS11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'PDIS12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'PDIS13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'PDIS14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'PDIS15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,10,255,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5233
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PCSR_Bits',0,10,253,2,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'SEL1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'SEL2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	904
	.byte	6,7,2,35,0,10
	.byte	'SEL9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'SEL10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	330
	.byte	20,1,2,35,0,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,11,10,247,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5599
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR0_Bits',0,10,166,2,16,4,10
	.byte	'PS0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	330
	.byte	28,0,2,35,0,0,11,10,207,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5810
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR4_Bits',0,10,187,2,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	4,4,2,35,0,10
	.byte	'PS4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	330
	.byte	24,0,2,35,0,0,11,10,223,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5957
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR8_Bits',0,10,198,2,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'PS8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	330
	.byte	20,0,2,35,0,0,11,10,231,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6126
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR12_Bits',0,10,176,2,16,4,10
	.byte	'reserved_0',0,2
	.word	904
	.byte	12,4,2,35,0,10
	.byte	'PS12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,10,215,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6298
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR0_Bits',0,10,192,1,16,4,10
	.byte	'reserved_0',0,2
	.word	904
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	904
	.byte	12,0,2,35,2,0,11,10,159,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6473
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR4_Bits',0,10,213,1,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	20,12,2,35,0,10
	.byte	'PCL4',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	8,0,2,35,3,0,11,10,175,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6647
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR8_Bits',0,10,224,1,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	24,8,2,35,0,10
	.byte	'PCL8',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	353
	.byte	4,0,2,35,3,0,11,10,183,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6821
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR12_Bits',0,10,203,1,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	28,4,2,35,0,10
	.byte	'PCL12',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	353
	.byte	1,0,2,35,3,0,11,10,167,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6997
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR_Bits',0,10,209,2,16,4,10
	.byte	'PS0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,10,199,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7153
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR_Bits',0,10,235,1,16,4,10
	.byte	'reserved_0',0,2
	.word	904
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	353
	.byte	1,0,2,35,3,0,11,10,151,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7486
	.byte	4,2,35,0,0,16,96
	.word	353
	.byte	17,95,0,9
	.byte	'_Ifx_P_ACCEN1_Bits',0,10,82,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	32,0,2,35,0,0,11,10,215,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7843
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ACCEN0_Bits',0,10,45,16,4,10
	.byte	'EN0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	353
	.byte	1,0,2,35,3,0,11,10,207,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7930
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P',0,10,159,5,25,128,2,12
	.byte	'OUT',0
	.word	2335
	.byte	4,2,35,0,12
	.byte	'OMR',0
	.word	2906
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	3025
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3065
	.byte	4,2,35,12,12
	.byte	'IOCR0',0
	.word	3249
	.byte	4,2,35,16,12
	.byte	'IOCR4',0
	.word	3464
	.byte	4,2,35,20,12
	.byte	'IOCR8',0
	.word	3681
	.byte	4,2,35,24,12
	.byte	'IOCR12',0
	.word	3901
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	3065
	.byte	4,2,35,32,12
	.byte	'IN',0
	.word	4215
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	4255
	.byte	24,2,35,40,12
	.byte	'PDR0',0
	.word	4528
	.byte	4,2,35,64,12
	.byte	'PDR1',0
	.word	4844
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	4884
	.byte	8,2,35,72,12
	.byte	'ESR',0
	.word	5184
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	5224
	.byte	12,2,35,84,12
	.byte	'PDISC',0
	.word	5559
	.byte	4,2,35,96,12
	.byte	'PCSR',0
	.word	5770
	.byte	4,2,35,100,12
	.byte	'reserved_64',0
	.word	4884
	.byte	8,2,35,104,12
	.byte	'OMSR0',0
	.word	5917
	.byte	4,2,35,112,12
	.byte	'OMSR4',0
	.word	6086
	.byte	4,2,35,116,12
	.byte	'OMSR8',0
	.word	6258
	.byte	4,2,35,120,12
	.byte	'OMSR12',0
	.word	6433
	.byte	4,2,35,124,12
	.byte	'OMCR0',0
	.word	6607
	.byte	4,3,35,128,1,12
	.byte	'OMCR4',0
	.word	6781
	.byte	4,3,35,132,1,12
	.byte	'OMCR8',0
	.word	6957
	.byte	4,3,35,136,1,12
	.byte	'OMCR12',0
	.word	7113
	.byte	4,3,35,140,1,12
	.byte	'OMSR',0
	.word	7446
	.byte	4,3,35,144,1,12
	.byte	'OMCR',0
	.word	7794
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	7834
	.byte	96,3,35,152,1,12
	.byte	'ACCEN1',0
	.word	7890
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	8457
	.byte	4,3,35,252,1,0,13
	.word	8497
	.byte	6
	.word	9030
.L241:
	.byte	14,9,54,9,1,15
	.byte	'IfxPort_InputMode_undefined',0,127,15
	.byte	'IfxPort_InputMode_noPullDevice',0,0,15
	.byte	'IfxPort_InputMode_pullDown',0,8,15
	.byte	'IfxPort_InputMode_pullUp',0,16,0
.L244:
	.byte	2
	.byte	'IfxPort_setPinModeInput',0,3,9,131,4,17,1,1
.L247:
	.byte	8
	.byte	'port',0,9,131,4,48
	.word	9035
.L249:
	.byte	8
	.byte	'pinIndex',0,9,131,4,60
	.word	353
.L251:
	.byte	8
	.byte	'mode',0,9,131,4,88
	.word	9040
.L253:
	.byte	3,0,14,9,105,9,1,15
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,15
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,14,9,91,9,1,15
	.byte	'IfxPort_OutputIdx_general',0,128,1,15
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,15
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,15
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,15
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,15
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,15
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,15
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,2
	.byte	'IfxPort_setPinModeOutput',0,3,9,137,4,17,1,1,8
	.byte	'port',0,9,137,4,49
	.word	9035
	.byte	8
	.byte	'pinIndex',0,9,137,4,61
	.word	353
	.byte	8
	.byte	'mode',0,9,137,4,90
	.word	9245
	.byte	8
	.byte	'index',0,9,137,4,114
	.word	9314
	.byte	3,0,14,9,131,1,9,4,15
	.byte	'IfxPort_State_notChanged',0,0,15
	.byte	'IfxPort_State_high',0,1,15
	.byte	'IfxPort_State_low',0,128,128,4,15
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,9,143,4,17,1,1,8
	.byte	'port',0,9,143,4,44
	.word	9035
	.byte	8
	.byte	'pinIndex',0,9,143,4,56
	.word	353
	.byte	8
	.byte	'action',0,9,143,4,80
	.word	9627
	.byte	3,0,9
	.byte	'_Ifx_GPT12_CLC_Bits',0,12,95,16,4,10
	.byte	'DISR',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	330
	.byte	28,0,2,35,0,0,11,12,184,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9808
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_PISEL_Bits',0,12,145,1,16,4,10
	.byte	'IST2IN',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'IST2EUD',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'IST3IN',0,1
	.word	353
	.byte	2,4,2,35,0,10
	.byte	'IST3EUD',0,1
	.word	353
	.byte	2,2,2,35,0,10
	.byte	'IST4IN',0,1
	.word	353
	.byte	2,0,2,35,0,10
	.byte	'IST4EUD',0,1
	.word	353
	.byte	2,6,2,35,1,10
	.byte	'IST5IN',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'IST5EUD',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'IST6IN',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'IST6EUD',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'ISCAPIN',0,1
	.word	353
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,232,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9966
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_ID_Bits',0,12,105,16,4,10
	.byte	'MODREV',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,192,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10262
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T2CON_Bits',0,12,169,1,16,4,10
	.byte	'T2I',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'T2M',0,1
	.word	353
	.byte	3,2,2,35,0,10
	.byte	'T2R',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'T2UD',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'T2UDE',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'T2RC',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	353
	.byte	2,4,2,35,1,10
	.byte	'T2IRDIS',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'T2EDGE',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'T2CHDIR',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'T2RDIR',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,248,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10385
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T3CON_Bits',0,12,193,1,16,4,10
	.byte	'T3I',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'T3M',0,1
	.word	353
	.byte	3,2,2,35,0,10
	.byte	'T3R',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'T3UD',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'T3UDE',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'T3OE',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'T3OTL',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'BPS1',0,1
	.word	353
	.byte	2,3,2,35,1,10
	.byte	'T3EDGE',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'T3CHDIR',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'T3RDIR',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,136,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10668
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T4CON_Bits',0,12,217,1,16,4,10
	.byte	'T4I',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'T4M',0,1
	.word	353
	.byte	3,2,2,35,0,10
	.byte	'T4R',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'T4UD',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'T4UDE',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'T4RC',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'CLRT2EN',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'CLRT3EN',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'T4IRDIS',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'T4EDGE',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'T4CHDIR',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'T4RDIR',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,152,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10942
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T5CON_Bits',0,12,242,1,16,4,10
	.byte	'T5I',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'T5M',0,1
	.word	353
	.byte	3,2,2,35,0,10
	.byte	'T5R',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'T5UD',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'T5UDE',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'T5RC',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'CT3',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'CI',0,1
	.word	353
	.byte	2,2,2,35,1,10
	.byte	'T5CLR',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'T5SC',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,168,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11240
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T6CON_Bits',0,12,138,2,16,4,10
	.byte	'T6I',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'T6M',0,1
	.word	353
	.byte	3,2,2,35,0,10
	.byte	'T6R',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'T6UD',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'T6UDE',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'T6OE',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'T6OTL',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'BPS2',0,1
	.word	353
	.byte	2,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'T6CLR',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'T6SR',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,184,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11511
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_CAPREL_Bits',0,12,88,16,4,10
	.byte	'CAPREL',0,2
	.word	904
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,176,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11786
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T2_Bits',0,12,162,1,16,4,10
	.byte	'T2',0,2
	.word	904
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,240,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11896
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T3_Bits',0,12,186,1,16,4,10
	.byte	'T3',0,2
	.word	904
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,128,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11999
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T4_Bits',0,12,210,1,16,4,10
	.byte	'T4',0,2
	.word	904
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,144,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12102
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T5_Bits',0,12,235,1,16,4,10
	.byte	'T5',0,2
	.word	904
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,160,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12205
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T6_Bits',0,12,131,2,16,4,10
	.byte	'T6',0,2
	.word	904
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,11,12,176,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12308
	.byte	4,2,35,0,0,16,160,1
	.word	353
	.byte	17,159,1,0,9
	.byte	'_Ifx_GPT12_OCS_Bits',0,12,135,1,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	353
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	353
	.byte	2,0,2,35,3,0,11,12,224,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12422
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_KRSTCLR_Bits',0,12,128,1,16,4,10
	.byte	'CLR',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	330
	.byte	31,0,2,35,0,0,11,12,216,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12584
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_KRST1_Bits',0,12,121,16,4,10
	.byte	'RST',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	330
	.byte	31,0,2,35,0,0,11,12,208,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12692
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_KRST0_Bits',0,12,113,16,4,10
	.byte	'RST',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	330
	.byte	30,0,2,35,0,0,11,12,200,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12797
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_ACCEN1_Bits',0,12,82,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	32,0,2,35,0,0,11,12,168,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12921
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_ACCEN0_Bits',0,12,45,16,4,10
	.byte	'EN0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	353
	.byte	1,0,2,35,3,0,11,12,160,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13012
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12',0,12,200,3,25,128,2,12
	.byte	'CLC',0
	.word	9926
	.byte	4,2,35,0,12
	.byte	'PISEL',0
	.word	10222
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	10345
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3065
	.byte	4,2,35,12,12
	.byte	'T2CON',0
	.word	10628
	.byte	4,2,35,16,12
	.byte	'T3CON',0
	.word	10902
	.byte	4,2,35,20,12
	.byte	'T4CON',0
	.word	11200
	.byte	4,2,35,24,12
	.byte	'T5CON',0
	.word	11471
	.byte	4,2,35,28,12
	.byte	'T6CON',0
	.word	11746
	.byte	4,2,35,32,12
	.byte	'reserved_24',0
	.word	5224
	.byte	12,2,35,36,12
	.byte	'CAPREL',0
	.word	11856
	.byte	4,2,35,48,12
	.byte	'T2',0
	.word	11959
	.byte	4,2,35,52,12
	.byte	'T3',0
	.word	12062
	.byte	4,2,35,56,12
	.byte	'T4',0
	.word	12165
	.byte	4,2,35,60,12
	.byte	'T5',0
	.word	12268
	.byte	4,2,35,64,12
	.byte	'T6',0
	.word	12371
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	12411
	.byte	160,1,2,35,72,12
	.byte	'OCS',0
	.word	12544
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	12652
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	12757
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	12881
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	12972
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	13543
	.byte	4,3,35,252,1,0,13
	.word	13583
.L234:
	.byte	6
	.word	13954
	.byte	14,11,114,9,1,15
	.byte	'IfxGpt12_EudInput_A',0,0,15
	.byte	'IfxGpt12_EudInput_B',0,1,15
	.byte	'IfxGpt12_EudInput_C',0,2,15
	.byte	'IfxGpt12_EudInput_D',0,3,0
.L254:
	.byte	2
	.byte	'IfxGpt12_T2_setEudInput',0,3,11,239,7,17,1,1
.L257:
	.byte	8
	.byte	'gpt12',0,11,239,7,52
	.word	13959
.L259:
	.byte	8
	.byte	'input',0,11,239,7,77
	.word	13964
.L261:
	.byte	3,0,14,11,158,1,9,1,15
	.byte	'IfxGpt12_Input_A',0,0,15
	.byte	'IfxGpt12_Input_B',0,1,15
	.byte	'IfxGpt12_Input_C',0,2,15
	.byte	'IfxGpt12_Input_D',0,3,0
.L306:
	.byte	2
	.byte	'IfxGpt12_T2_setInput',0,3,11,252,7,17,1,1
.L309:
	.byte	8
	.byte	'gpt12',0,11,252,7,49
	.word	13959
.L311:
	.byte	8
	.byte	'input',0,11,252,7,71
	.word	14122
.L313:
	.byte	3,0
.L264:
	.byte	2
	.byte	'IfxGpt12_T3_setEudInput',0,3,11,216,8,17,1,1
.L267:
	.byte	8
	.byte	'gpt12',0,11,216,8,52
	.word	13959
.L269:
	.byte	8
	.byte	'input',0,11,216,8,77
	.word	13964
.L271:
	.byte	3,0
.L315:
	.byte	2
	.byte	'IfxGpt12_T3_setInput',0,3,11,228,8,17,1,1
.L317:
	.byte	8
	.byte	'gpt12',0,11,228,8,49
	.word	13959
.L319:
	.byte	8
	.byte	'input',0,11,228,8,71
	.word	14122
.L321:
	.byte	3,0
.L272:
	.byte	2
	.byte	'IfxGpt12_T4_setEudInput',0,3,11,185,9,17,1,1
.L275:
	.byte	8
	.byte	'gpt12',0,11,185,9,52
	.word	13959
.L277:
	.byte	8
	.byte	'input',0,11,185,9,77
	.word	13964
.L279:
	.byte	3,0
.L322:
	.byte	2
	.byte	'IfxGpt12_T4_setInput',0,3,11,197,9,17,1,1
.L325:
	.byte	8
	.byte	'gpt12',0,11,197,9,49
	.word	13959
.L327:
	.byte	8
	.byte	'input',0,11,197,9,71
	.word	14122
.L329:
	.byte	3,0
.L280:
	.byte	2
	.byte	'IfxGpt12_T5_setEudInput',0,3,11,177,10,17,1,1
.L282:
	.byte	8
	.byte	'gpt12',0,11,177,10,52
	.word	13959
.L284:
	.byte	8
	.byte	'input',0,11,177,10,77
	.word	13964
.L286:
	.byte	3,0
.L330:
	.byte	2
	.byte	'IfxGpt12_T5_setInput',0,3,11,184,10,17,1,1
.L332:
	.byte	8
	.byte	'gpt12',0,11,184,10,49
	.word	13959
.L334:
	.byte	8
	.byte	'input',0,11,184,10,71
	.word	14122
.L336:
	.byte	3,0
.L288:
	.byte	2
	.byte	'IfxGpt12_T6_setEudInput',0,3,11,137,11,17,1,1
.L291:
	.byte	8
	.byte	'gpt12',0,11,137,11,52
	.word	13959
.L293:
	.byte	8
	.byte	'input',0,11,137,11,77
	.word	13964
.L295:
	.byte	3,0
.L338:
	.byte	2
	.byte	'IfxGpt12_T6_setInput',0,3,11,144,11,17,1,1
.L341:
	.byte	8
	.byte	'gpt12',0,11,144,11,49
	.word	13959
.L343:
	.byte	8
	.byte	'input',0,11,144,11,71
	.word	14122
.L345:
	.byte	3,0,14,11,59,9,1,15
	.byte	'IfxGpt12_CaptureInput_A',0,0,15
	.byte	'IfxGpt12_CaptureInput_B',0,1,15
	.byte	'IfxGpt12_CaptureInput_C',0,2,15
	.byte	'IfxGpt12_CaptureInput_D',0,3,0,2
	.byte	'IfxGpt12_setCaptureInput',0,3,11,202,11,17,1,1,8
	.byte	'gpt12',0,11,202,11,53
	.word	13959
	.byte	8
	.byte	'input',0,11,202,11,82
	.word	14766
	.byte	3,0
.L371:
	.byte	14,11,169,1,9,1,15
	.byte	'IfxGpt12_Mode_timer',0,0,15
	.byte	'IfxGpt12_Mode_counter',0,1,15
	.byte	'IfxGpt12_Mode_lowGatedTimer',0,2,15
	.byte	'IfxGpt12_Mode_highGatedTimer',0,3,15
	.byte	'IfxGpt12_Mode_reload',0,4,15
	.byte	'IfxGpt12_Mode_capture',0,5,15
	.byte	'IfxGpt12_Mode_incrementalInterfaceRotationDetection',0,6,15
	.byte	'IfxGpt12_Mode_incrementalInterfaceEdgeDetection',0,7,0
.L362:
	.byte	7
	.byte	'IfxGpt12_T2_getMode',0,3,11,197,7,26
	.word	14941
	.byte	1,1
.L365:
	.byte	8
	.byte	'gpt12',0,11,197,7,57
	.word	13959
.L367:
	.byte	3,0
.L347:
	.byte	4
	.byte	'float',0,4,4
.L356:
	.byte	7
	.byte	'IfxGpt12_getModuleFrequency',0,3,11,182,11,20
	.word	15255
	.byte	1,1
.L359:
	.byte	8
	.byte	'gpt12',0,11,182,11,59
	.word	13959
.L361:
	.byte	3,0,4
	.byte	'char',0,1,6,18
	.word	15321
	.byte	6
	.word	15329
	.byte	19
	.word	15334
	.byte	20
	.byte	'printf',0,13,143,1,16
	.word	346
	.byte	1,1,1,1,21,13,143,1,38
	.word	15339
	.byte	22,13,143,1,50,0,23
	.word	188
	.byte	3,0,23
	.word	254
	.byte	24
	.word	272
	.byte	3,0,23
	.word	287
	.byte	24
	.word	301
	.byte	24
	.word	314
	.byte	3,0,23
	.word	709
	.byte	24
	.word	737
	.byte	3,0,23
	.word	1474
	.byte	24
	.word	1514
	.byte	24
	.word	1532
	.byte	3,0,23
	.word	1552
	.byte	24
	.word	1590
	.byte	24
	.word	1608
	.byte	3,0,25
	.byte	'IfxScuWdt_clearCpuEndinit',0,5,187,1,17,1,1,1,1,8
	.byte	'password',0,5,187,1,50
	.word	904
	.byte	0,25
	.byte	'IfxScuWdt_setCpuEndinit',0,5,209,1,17,1,1,1,1,8
	.byte	'password',0,5,209,1,48
	.word	904
	.byte	0,23
	.word	1628
	.byte	24
	.word	1679
	.byte	3,0,26
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,5,221,2,19
	.word	904
	.byte	1,1,1,1,23
	.word	1754
	.byte	3,0,23
	.word	1788
	.byte	3,0,23
	.word	1851
	.byte	24
	.word	1892
	.byte	3,0,23
	.word	1911
	.byte	24
	.word	1966
	.byte	3,0,23
	.word	1985
	.byte	24
	.word	2025
	.byte	24
	.word	2042
	.byte	3,0,23
	.word	9165
	.byte	24
	.word	9197
	.byte	24
	.word	9211
	.byte	24
	.word	9229
	.byte	3,0,23
	.word	9531
	.byte	24
	.word	9564
	.byte	24
	.word	9578
	.byte	24
	.word	9596
	.byte	24
	.word	9610
	.byte	3,0,23
	.word	9730
	.byte	24
	.word	9758
	.byte	24
	.word	9772
	.byte	24
	.word	9790
	.byte	3,0,14,9,66,9,1,15
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,15
	.byte	'IfxPort_Mode_inputPullDown',0,8,15
	.byte	'IfxPort_Mode_inputPullUp',0,16,15
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,15
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,25
	.byte	'IfxPort_setPinMode',0,9,206,2,17,1,1,1,1,8
	.byte	'port',0,9,206,2,43
	.word	9035
	.byte	8
	.byte	'pinIndex',0,9,206,2,55
	.word	353
	.byte	8
	.byte	'mode',0,9,206,2,78
	.word	15751
	.byte	0,26
	.byte	'IfxScuCcu_getSpbFrequency',0,14,145,7,20
	.word	15255
	.byte	1,1,1,1,23
	.word	14058
	.byte	24
	.word	14090
	.byte	24
	.word	14105
	.byte	3,0,23
	.word	14205
	.byte	24
	.word	14234
	.byte	24
	.word	14249
	.byte	3,0,23
	.word	14266
	.byte	24
	.word	14298
	.byte	24
	.word	14313
	.byte	3,0,23
	.word	14330
	.byte	24
	.word	14359
	.byte	24
	.word	14374
	.byte	3,0,23
	.word	14391
	.byte	24
	.word	14423
	.byte	24
	.word	14438
	.byte	3,0,23
	.word	14455
	.byte	24
	.word	14484
	.byte	24
	.word	14499
	.byte	3,0,23
	.word	14516
	.byte	24
	.word	14548
	.byte	24
	.word	14563
	.byte	3,0,23
	.word	14580
	.byte	24
	.word	14609
	.byte	24
	.word	14624
	.byte	3,0,23
	.word	14641
	.byte	24
	.word	14673
	.byte	24
	.word	14688
	.byte	3,0,23
	.word	14705
	.byte	24
	.word	14734
	.byte	24
	.word	14749
	.byte	3,0,23
	.word	14876
	.byte	24
	.word	14909
	.byte	24
	.word	14924
	.byte	3,0,27,9,149,1,9,8,12
	.byte	'port',0
	.word	9035
	.byte	4,2,35,0,12
	.byte	'pinIndex',0
	.word	353
	.byte	1,2,35,4,0,14,16,94,9,1,15
	.byte	'Ifx_RxSel_a',0,0,15
	.byte	'Ifx_RxSel_b',0,1,15
	.byte	'Ifx_RxSel_c',0,2,15
	.byte	'Ifx_RxSel_d',0,3,15
	.byte	'Ifx_RxSel_e',0,4,15
	.byte	'Ifx_RxSel_f',0,5,15
	.byte	'Ifx_RxSel_g',0,6,15
	.byte	'Ifx_RxSel_h',0,7,0,27,15,47,15,20,12
	.byte	'module',0
	.word	13959
	.byte	4,2,35,0,12
	.byte	'timer',0
	.word	353
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	16721
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	16760
	.byte	1,2,35,16,0,18
	.word	16878
.L239:
	.byte	6
	.word	16944
	.byte	16,24
	.word	15321
	.byte	17,23,0
.L263:
	.byte	18
	.word	16954
.L287:
	.byte	18
	.word	16954
.L296:
	.byte	18
	.word	16954
	.byte	27,15,56,15,20,12
	.byte	'module',0
	.word	13959
	.byte	4,2,35,0,12
	.byte	'timer',0
	.word	353
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	16721
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	16760
	.byte	1,2,35,16,0,18
	.word	16978
.L298:
	.byte	6
	.word	17044
	.byte	16,21
	.word	15321
	.byte	17,20,0
.L314:
	.byte	18
	.word	17054
.L337:
	.byte	18
	.word	17054
.L346:
	.byte	18
	.word	17054
	.byte	23
	.word	15206
	.byte	24
	.word	15238
	.byte	3,0,23
	.word	15264
	.byte	24
	.word	15304
	.byte	3,0
.L352:
	.byte	14,11,225,1,9,1,15
	.byte	'IfxGpt12_TimerInputPrescaler_1',0,0,15
	.byte	'IfxGpt12_TimerInputPrescaler_2',0,1,15
	.byte	'IfxGpt12_TimerInputPrescaler_4',0,2,15
	.byte	'IfxGpt12_TimerInputPrescaler_8',0,3,15
	.byte	'IfxGpt12_TimerInputPrescaler_16',0,4,15
	.byte	'IfxGpt12_TimerInputPrescaler_32',0,5,15
	.byte	'IfxGpt12_TimerInputPrescaler_64',0,6,15
	.byte	'IfxGpt12_TimerInputPrescaler_128',0,7,0
.L354:
	.byte	14,11,125,9,1,15
	.byte	'IfxGpt12_Gpt1BlockPrescaler_8',0,0,15
	.byte	'IfxGpt12_Gpt1BlockPrescaler_4',0,1,15
	.byte	'IfxGpt12_Gpt1BlockPrescaler_32',0,2,15
	.byte	'IfxGpt12_Gpt1BlockPrescaler_16',0,3,0
.L393:
	.byte	14,11,136,1,9,1,15
	.byte	'IfxGpt12_Gpt2BlockPrescaler_4',0,0,15
	.byte	'IfxGpt12_Gpt2BlockPrescaler_2',0,1,15
	.byte	'IfxGpt12_Gpt2BlockPrescaler_16',0,2,15
	.byte	'IfxGpt12_Gpt2BlockPrescaler_8',0,3,0,4
	.byte	'short int',0,2,5,28
	.byte	'__wchar_t',0,17,1,1
	.word	17650
	.byte	28
	.byte	'__size_t',0,17,1,1
	.word	330
	.byte	28
	.byte	'__ptrdiff_t',0,17,1,1
	.word	346
	.byte	29,1,6
	.word	17718
	.byte	28
	.byte	'__codeptr',0,17,1,1
	.word	17720
	.byte	28
	.byte	'__intptr_t',0,17,1,1
	.word	346
	.byte	28
	.byte	'__uintptr_t',0,17,1,1
	.word	330
	.byte	14,18,49,9,1,15
	.byte	'IfxSrc_Tos_cpu0',0,0,15
	.byte	'IfxSrc_Tos_dma',0,1,0,28
	.byte	'IfxSrc_Tos',0,18,53,3
	.word	17782
	.byte	28
	.byte	'_iob_flag_t',0,13,82,25
	.word	904
	.byte	16,24
	.word	15334
	.byte	17,5,0,30
	.byte	'verboseLevelStr',0,19,29,20
	.word	17862
	.byte	1,1,28
	.byte	'uint8',0,20,89,24
	.word	353
	.byte	28
	.byte	'sint16',0,20,90,24
	.word	17650
	.byte	28
	.byte	'uint16',0,20,91,24
	.word	904
	.byte	4
	.byte	'long int',0,4,5,28
	.byte	'sint32',0,20,92,24
	.word	17941
	.byte	28
	.byte	'uint32',0,20,93,24
	.word	1830
	.byte	28
	.byte	'float32',0,20,94,24
	.word	15255
	.byte	28
	.byte	'boolean',0,20,104,24
	.word	353
	.byte	4
	.byte	'long long int',0,8,5,28
	.byte	'sint64',0,16,36,28
	.word	18015
	.byte	28
	.byte	'uint64',0,16,37,28
	.word	217
	.byte	28
	.byte	'pvoid',0,16,40,28
	.word	249
	.byte	28
	.byte	'Ifx_TickTime',0,16,43,28
	.word	18015
	.byte	28
	.byte	'Ifx_Priority',0,16,67,16
	.word	904
	.byte	28
	.byte	'Ifx_RxSel',0,16,104,3
	.word	16760
	.byte	28
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	370
	.byte	28
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	660
	.byte	9
	.byte	'_Ifx_SRC_ASCLIN',0,4,86,25,12,12
	.byte	'TX',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	660
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	660
	.byte	4,2,35,8,0,13
	.word	18183
	.byte	28
	.byte	'Ifx_SRC_ASCLIN',0,4,91,3
	.word	18242
	.byte	9
	.byte	'_Ifx_SRC_BCUSPB',0,4,94,25,4,12
	.byte	'SBSRC',0
	.word	660
	.byte	4,2,35,0,0,13
	.word	18270
	.byte	28
	.byte	'Ifx_SRC_BCUSPB',0,4,97,3
	.word	18307
	.byte	16,64
	.word	660
	.byte	17,15,0,9
	.byte	'_Ifx_SRC_CAN',0,4,100,25,64,12
	.byte	'INT',0
	.word	18335
	.byte	64,2,35,0,0,13
	.word	18344
	.byte	28
	.byte	'Ifx_SRC_CAN',0,4,103,3
	.word	18376
	.byte	16,32
	.word	660
	.byte	17,7,0,9
	.byte	'_Ifx_SRC_CAN1',0,4,106,25,32,12
	.byte	'INT',0
	.word	18401
	.byte	32,2,35,0,0,13
	.word	18410
	.byte	28
	.byte	'Ifx_SRC_CAN1',0,4,109,3
	.word	18443
	.byte	9
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,12
	.byte	'SR0',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	660
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	660
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	660
	.byte	4,2,35,12,0,13
	.word	18469
	.byte	28
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	18541
	.byte	16,8
	.word	660
	.byte	17,1,0,9
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,12
	.byte	'SR',0
	.word	18567
	.byte	8,2,35,0,0,13
	.word	18576
	.byte	28
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	18612
	.byte	16,28
	.word	353
	.byte	17,27,0,9
	.byte	'_Ifx_SRC_CPU',0,4,127,25,32,12
	.byte	'SBSRC',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	18642
	.byte	28,2,35,4,0,13
	.word	18651
	.byte	28
	.byte	'Ifx_SRC_CPU',0,4,131,1,3
	.word	18705
	.byte	9
	.byte	'_Ifx_SRC_DMA',0,4,134,1,25,80,12
	.byte	'ERR',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	5224
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	18335
	.byte	64,2,35,16,0,13
	.word	18731
	.byte	28
	.byte	'Ifx_SRC_DMA',0,4,139,1,3
	.word	18796
	.byte	9
	.byte	'_Ifx_SRC_EMEM',0,4,142,1,25,4,12
	.byte	'SR',0
	.word	660
	.byte	4,2,35,0,0,13
	.word	18822
	.byte	28
	.byte	'Ifx_SRC_EMEM',0,4,145,1,3
	.word	18855
	.byte	16,40
	.word	353
	.byte	17,39,0,9
	.byte	'_Ifx_SRC_ERAY',0,4,148,1,25,80,12
	.byte	'INT',0
	.word	18567
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	18567
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	18567
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	18567
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	660
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	660
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	18882
	.byte	40,2,35,40,0,13
	.word	18891
	.byte	28
	.byte	'Ifx_SRC_ERAY',0,4,157,1,3
	.word	19018
	.byte	9
	.byte	'_Ifx_SRC_ETH',0,4,160,1,25,4,12
	.byte	'SR',0
	.word	660
	.byte	4,2,35,0,0,13
	.word	19045
	.byte	28
	.byte	'Ifx_SRC_ETH',0,4,163,1,3
	.word	19077
	.byte	9
	.byte	'_Ifx_SRC_EVR',0,4,166,1,25,8,12
	.byte	'WUT',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'SCDC',0
	.word	660
	.byte	4,2,35,4,0,13
	.word	19103
	.byte	28
	.byte	'Ifx_SRC_EVR',0,4,170,1,3
	.word	19150
	.byte	9
	.byte	'_Ifx_SRC_FFT',0,4,173,1,25,12,12
	.byte	'DONE',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'ERR',0
	.word	660
	.byte	4,2,35,4,12
	.byte	'RFS',0
	.word	660
	.byte	4,2,35,8,0,13
	.word	19176
	.byte	28
	.byte	'Ifx_SRC_FFT',0,4,178,1,3
	.word	19236
	.byte	16,240,11
	.word	353
	.byte	17,239,11,0,9
	.byte	'_Ifx_SRC_GPSR',0,4,181,1,25,128,12,12
	.byte	'SR0',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	660
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	660
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	660
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	19262
	.byte	240,11,2,35,16,0,13
	.word	19273
	.byte	28
	.byte	'Ifx_SRC_GPSR',0,4,188,1,3
	.word	19369
	.byte	9
	.byte	'_Ifx_SRC_GPT12',0,4,191,1,25,48,12
	.byte	'CIRQ',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	660
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	660
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	660
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	660
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	660
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	4255
	.byte	24,2,35,24,0,13
	.word	19396
	.byte	28
	.byte	'Ifx_SRC_GPT12',0,4,200,1,3
	.word	19513
	.byte	16,236,2
	.word	353
	.byte	17,235,2,0,16,32
	.word	18401
	.byte	17,0,0,16,224,7
	.word	353
	.byte	17,223,7,0,16,64
	.word	18401
	.byte	17,1,0,9
	.byte	'_Ifx_SRC_GTM',0,4,203,1,25,192,11,12
	.byte	'AEIIRQ',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	19541
	.byte	236,2,2,35,4,12
	.byte	'ERR',0
	.word	660
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	5224
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	19552
	.byte	32,3,35,128,3,12
	.byte	'reserved_1A0',0
	.word	19561
	.byte	224,7,3,35,160,3,12
	.byte	'TOM',0
	.word	19572
	.byte	64,3,35,128,11,0,13
	.word	19581
	.byte	28
	.byte	'Ifx_SRC_GTM',0,4,212,1,3
	.word	19728
	.byte	9
	.byte	'_Ifx_SRC_HSM',0,4,215,1,25,8,12
	.byte	'HSM',0
	.word	18567
	.byte	8,2,35,0,0,13
	.word	19754
	.byte	28
	.byte	'Ifx_SRC_HSM',0,4,218,1,3
	.word	19787
	.byte	9
	.byte	'_Ifx_SRC_LMU',0,4,221,1,25,4,12
	.byte	'SR',0
	.word	660
	.byte	4,2,35,0,0,13
	.word	19813
	.byte	28
	.byte	'Ifx_SRC_LMU',0,4,224,1,3
	.word	19845
	.byte	9
	.byte	'_Ifx_SRC_PMU',0,4,227,1,25,4,12
	.byte	'SR',0
	.word	660
	.byte	4,2,35,0,0,13
	.word	19871
	.byte	28
	.byte	'Ifx_SRC_PMU',0,4,230,1,3
	.word	19903
	.byte	9
	.byte	'_Ifx_SRC_QSPI',0,4,233,1,25,24,12
	.byte	'TX',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	660
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	660
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	660
	.byte	4,2,35,12,12
	.byte	'HC',0
	.word	660
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	660
	.byte	4,2,35,20,0,13
	.word	19929
	.byte	28
	.byte	'Ifx_SRC_QSPI',0,4,241,1,3
	.word	20022
	.byte	16,16
	.word	660
	.byte	17,3,0,9
	.byte	'_Ifx_SRC_SCU',0,4,244,1,25,20,12
	.byte	'DTS',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	20049
	.byte	16,2,35,4,0,13
	.word	20058
	.byte	28
	.byte	'Ifx_SRC_SCU',0,4,248,1,3
	.word	20104
	.byte	9
	.byte	'_Ifx_SRC_SENT',0,4,251,1,25,16,12
	.byte	'SR',0
	.word	20049
	.byte	16,2,35,0,0,13
	.word	20130
	.byte	28
	.byte	'Ifx_SRC_SENT',0,4,254,1,3
	.word	20163
	.byte	16,12
	.word	660
	.byte	17,2,0,9
	.byte	'_Ifx_SRC_SMU',0,4,129,2,25,12,12
	.byte	'SR',0
	.word	20190
	.byte	12,2,35,0,0,13
	.word	20199
	.byte	28
	.byte	'Ifx_SRC_SMU',0,4,132,2,3
	.word	20231
	.byte	16,88
	.word	353
	.byte	17,87,0,9
	.byte	'_Ifx_SRC_STM',0,4,135,2,25,96,12
	.byte	'SR0',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	660
	.byte	4,2,35,4,12
	.byte	'reserved_8',0
	.word	20257
	.byte	88,2,35,8,0,13
	.word	20266
	.byte	28
	.byte	'Ifx_SRC_STM',0,4,140,2,3
	.word	20332
	.byte	16,176,2
	.word	353
	.byte	17,175,2,0,9
	.byte	'_Ifx_SRC_VADCCG',0,4,143,2,25,192,2,12
	.byte	'SR0',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	660
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	660
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	660
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	20358
	.byte	176,2,2,35,16,0,13
	.word	20369
	.byte	28
	.byte	'Ifx_SRC_VADCCG',0,4,150,2,3
	.word	20467
	.byte	9
	.byte	'_Ifx_SRC_VADCG',0,4,153,2,25,16,12
	.byte	'SR0',0
	.word	660
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	660
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	660
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	660
	.byte	4,2,35,12,0,13
	.word	20496
	.byte	28
	.byte	'Ifx_SRC_VADCG',0,4,159,2,3
	.word	20570
	.byte	9
	.byte	'_Ifx_SRC_XBAR',0,4,162,2,25,4,12
	.byte	'SRC',0
	.word	660
	.byte	4,2,35,0,0,13
	.word	20598
	.byte	28
	.byte	'Ifx_SRC_XBAR',0,4,165,2,3
	.word	20632
	.byte	16,24
	.word	18183
	.byte	17,1,0,13
	.word	20659
	.byte	9
	.byte	'_Ifx_SRC_GASCLIN',0,4,178,2,25,24,12
	.byte	'ASCLIN',0
	.word	20668
	.byte	24,2,35,0,0,13
	.word	20673
	.byte	28
	.byte	'Ifx_SRC_GASCLIN',0,4,181,2,3
	.word	20713
	.byte	13
	.word	18270
	.byte	9
	.byte	'_Ifx_SRC_GBCU',0,4,184,2,25,4,12
	.byte	'SPB',0
	.word	20743
	.byte	4,2,35,0,0,13
	.word	20748
	.byte	28
	.byte	'Ifx_SRC_GBCU',0,4,187,2,3
	.word	20782
	.byte	16,64
	.word	18344
	.byte	17,0,0,13
	.word	20809
	.byte	16,32
	.word	18410
	.byte	17,0,0,13
	.word	20823
	.byte	9
	.byte	'_Ifx_SRC_GCAN',0,4,190,2,25,96,12
	.byte	'CAN',0
	.word	20818
	.byte	64,2,35,0,12
	.byte	'CAN1',0
	.word	20832
	.byte	32,2,35,64,0,13
	.word	20837
	.byte	28
	.byte	'Ifx_SRC_GCAN',0,4,194,2,3
	.word	20885
	.byte	16,32
	.word	18469
	.byte	17,1,0,13
	.word	20912
	.byte	9
	.byte	'_Ifx_SRC_GCCU6',0,4,197,2,25,32,12
	.byte	'CCU6',0
	.word	20921
	.byte	32,2,35,0,0,13
	.word	20926
	.byte	28
	.byte	'Ifx_SRC_GCCU6',0,4,200,2,3
	.word	20962
	.byte	13
	.word	18576
	.byte	9
	.byte	'_Ifx_SRC_GCERBERUS',0,4,203,2,25,8,12
	.byte	'CERBERUS',0
	.word	20990
	.byte	8,2,35,0,0,13
	.word	20995
	.byte	28
	.byte	'Ifx_SRC_GCERBERUS',0,4,206,2,3
	.word	21039
	.byte	16,32
	.word	18651
	.byte	17,0,0,13
	.word	21071
	.byte	9
	.byte	'_Ifx_SRC_GCPU',0,4,209,2,25,32,12
	.byte	'CPU',0
	.word	21080
	.byte	32,2,35,0,0,13
	.word	21085
	.byte	28
	.byte	'Ifx_SRC_GCPU',0,4,212,2,3
	.word	21119
	.byte	16,80
	.word	18731
	.byte	17,0,0,13
	.word	21146
	.byte	9
	.byte	'_Ifx_SRC_GDMA',0,4,215,2,25,80,12
	.byte	'DMA',0
	.word	21155
	.byte	80,2,35,0,0,13
	.word	21160
	.byte	28
	.byte	'Ifx_SRC_GDMA',0,4,218,2,3
	.word	21194
	.byte	16,4
	.word	18822
	.byte	17,0,0,13
	.word	21221
	.byte	9
	.byte	'_Ifx_SRC_GEMEM',0,4,221,2,25,4,12
	.byte	'EMEM',0
	.word	21230
	.byte	4,2,35,0,0,13
	.word	21235
	.byte	28
	.byte	'Ifx_SRC_GEMEM',0,4,224,2,3
	.word	21271
	.byte	16,80
	.word	18891
	.byte	17,0,0,13
	.word	21299
	.byte	9
	.byte	'_Ifx_SRC_GERAY',0,4,227,2,25,80,12
	.byte	'ERAY',0
	.word	21308
	.byte	80,2,35,0,0,13
	.word	21313
	.byte	28
	.byte	'Ifx_SRC_GERAY',0,4,230,2,3
	.word	21349
	.byte	16,4
	.word	19045
	.byte	17,0,0,13
	.word	21377
	.byte	9
	.byte	'_Ifx_SRC_GETH',0,4,233,2,25,4,12
	.byte	'ETH',0
	.word	21386
	.byte	4,2,35,0,0,13
	.word	21391
	.byte	28
	.byte	'Ifx_SRC_GETH',0,4,236,2,3
	.word	21425
	.byte	16,8
	.word	19103
	.byte	17,0,0,13
	.word	21452
	.byte	9
	.byte	'_Ifx_SRC_GEVR',0,4,239,2,25,8,12
	.byte	'EVR',0
	.word	21461
	.byte	8,2,35,0,0,13
	.word	21466
	.byte	28
	.byte	'Ifx_SRC_GEVR',0,4,242,2,3
	.word	21500
	.byte	16,12
	.word	19176
	.byte	17,0,0,13
	.word	21527
	.byte	9
	.byte	'_Ifx_SRC_GFFT',0,4,245,2,25,12,12
	.byte	'FFT',0
	.word	21536
	.byte	12,2,35,0,0,13
	.word	21541
	.byte	28
	.byte	'Ifx_SRC_GFFT',0,4,248,2,3
	.word	21575
	.byte	16,128,12
	.word	19273
	.byte	17,0,0,13
	.word	21602
	.byte	9
	.byte	'_Ifx_SRC_GGPSR',0,4,251,2,25,128,12,12
	.byte	'GPSR',0
	.word	21612
	.byte	128,12,2,35,0,0,13
	.word	21617
	.byte	28
	.byte	'Ifx_SRC_GGPSR',0,4,254,2,3
	.word	21655
	.byte	16,48
	.word	19396
	.byte	17,0,0,13
	.word	21683
	.byte	9
	.byte	'_Ifx_SRC_GGPT12',0,4,129,3,25,48,12
	.byte	'GPT12',0
	.word	21692
	.byte	48,2,35,0,0,13
	.word	21697
	.byte	28
	.byte	'Ifx_SRC_GGPT12',0,4,132,3,3
	.word	21735
	.byte	16,192,11
	.word	19581
	.byte	17,0,0,13
	.word	21764
	.byte	9
	.byte	'_Ifx_SRC_GGTM',0,4,135,3,25,192,11,12
	.byte	'GTM',0
	.word	21774
	.byte	192,11,2,35,0,0,13
	.word	21779
	.byte	28
	.byte	'Ifx_SRC_GGTM',0,4,138,3,3
	.word	21815
	.byte	16,8
	.word	19754
	.byte	17,0,0,13
	.word	21842
	.byte	9
	.byte	'_Ifx_SRC_GHSM',0,4,141,3,25,8,12
	.byte	'HSM',0
	.word	21851
	.byte	8,2,35,0,0,13
	.word	21856
	.byte	28
	.byte	'Ifx_SRC_GHSM',0,4,144,3,3
	.word	21890
	.byte	16,4
	.word	19813
	.byte	17,0,0,13
	.word	21917
	.byte	9
	.byte	'_Ifx_SRC_GLMU',0,4,147,3,25,4,12
	.byte	'LMU',0
	.word	21926
	.byte	4,2,35,0,0,13
	.word	21931
	.byte	28
	.byte	'Ifx_SRC_GLMU',0,4,150,3,3
	.word	21965
	.byte	16,8
	.word	19871
	.byte	17,1,0,13
	.word	21992
	.byte	9
	.byte	'_Ifx_SRC_GPMU',0,4,153,3,25,8,12
	.byte	'PMU',0
	.word	22001
	.byte	8,2,35,0,0,13
	.word	22006
	.byte	28
	.byte	'Ifx_SRC_GPMU',0,4,156,3,3
	.word	22040
	.byte	16,96
	.word	19929
	.byte	17,3,0,13
	.word	22067
	.byte	9
	.byte	'_Ifx_SRC_GQSPI',0,4,159,3,25,96,12
	.byte	'QSPI',0
	.word	22076
	.byte	96,2,35,0,0,13
	.word	22081
	.byte	28
	.byte	'Ifx_SRC_GQSPI',0,4,162,3,3
	.word	22117
	.byte	13
	.word	20058
	.byte	9
	.byte	'_Ifx_SRC_GSCU',0,4,165,3,25,20,12
	.byte	'SCU',0
	.word	22145
	.byte	20,2,35,0,0,13
	.word	22150
	.byte	28
	.byte	'Ifx_SRC_GSCU',0,4,168,3,3
	.word	22184
	.byte	16,16
	.word	20130
	.byte	17,0,0,13
	.word	22211
	.byte	9
	.byte	'_Ifx_SRC_GSENT',0,4,171,3,25,16,12
	.byte	'SENT',0
	.word	22220
	.byte	16,2,35,0,0,13
	.word	22225
	.byte	28
	.byte	'Ifx_SRC_GSENT',0,4,174,3,3
	.word	22261
	.byte	16,12
	.word	20199
	.byte	17,0,0,13
	.word	22289
	.byte	9
	.byte	'_Ifx_SRC_GSMU',0,4,177,3,25,12,12
	.byte	'SMU',0
	.word	22298
	.byte	12,2,35,0,0,13
	.word	22303
	.byte	28
	.byte	'Ifx_SRC_GSMU',0,4,180,3,3
	.word	22337
	.byte	16,96
	.word	20266
	.byte	17,0,0,13
	.word	22364
	.byte	9
	.byte	'_Ifx_SRC_GSTM',0,4,183,3,25,96,12
	.byte	'STM',0
	.word	22373
	.byte	96,2,35,0,0,13
	.word	22378
	.byte	28
	.byte	'Ifx_SRC_GSTM',0,4,186,3,3
	.word	22412
	.byte	16,64
	.word	20496
	.byte	17,3,0,13
	.word	22439
	.byte	16,224,1
	.word	353
	.byte	17,223,1,0,16,192,2
	.word	20369
	.byte	17,0,0,13
	.word	22464
	.byte	9
	.byte	'_Ifx_SRC_GVADC',0,4,189,3,25,224,4,12
	.byte	'G',0
	.word	22448
	.byte	64,2,35,0,12
	.byte	'reserved_40',0
	.word	22453
	.byte	224,1,2,35,64,12
	.byte	'CG',0
	.word	22474
	.byte	192,2,3,35,160,2,0,13
	.word	22479
	.byte	28
	.byte	'Ifx_SRC_GVADC',0,4,194,3,3
	.word	22549
	.byte	13
	.word	20598
	.byte	9
	.byte	'_Ifx_SRC_GXBAR',0,4,197,3,25,4,12
	.byte	'XBAR',0
	.word	22577
	.byte	4,2,35,0,0,13
	.word	22582
	.byte	28
	.byte	'Ifx_SRC_GXBAR',0,4,200,3,3
	.word	22618
	.byte	14,21,139,10,9,1,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,28
	.byte	'IfxScu_CCUCON0_CLKSEL',0,21,143,10,3
	.word	22646
	.byte	14,21,153,10,9,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,15
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,28
	.byte	'IfxScu_WDTCON1_IR',0,21,158,10,3
	.word	22743
	.byte	9
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,10
	.byte	'EN0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	22865
	.byte	9
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	23422
	.byte	9
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,10
	.byte	'STM0DIS',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'STM1DIS',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'STM2DIS',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	330
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	23499
	.byte	9
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	4,4,2,35,0,10
	.byte	'BAUD2DIV',0,1
	.word	353
	.byte	4,0,2,35,0,10
	.byte	'SRIDIV',0,1
	.word	353
	.byte	4,4,2,35,1,10
	.byte	'LPDIV',0,1
	.word	353
	.byte	4,0,2,35,1,10
	.byte	'SPBDIV',0,1
	.word	353
	.byte	4,4,2,35,2,10
	.byte	'FSI2DIV',0,1
	.word	353
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	353
	.byte	2,0,2,35,2,10
	.byte	'FSIDIV',0,1
	.word	353
	.byte	2,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	353
	.byte	2,4,2,35,3,10
	.byte	'CLKSEL',0,1
	.word	353
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	23635
	.byte	9
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,10
	.byte	'CANDIV',0,1
	.word	353
	.byte	4,4,2,35,0,10
	.byte	'ERAYDIV',0,1
	.word	353
	.byte	4,0,2,35,0,10
	.byte	'STMDIV',0,1
	.word	353
	.byte	4,4,2,35,1,10
	.byte	'GTMDIV',0,1
	.word	353
	.byte	4,0,2,35,1,10
	.byte	'ETHDIV',0,1
	.word	353
	.byte	4,4,2,35,2,10
	.byte	'ASCLINFDIV',0,1
	.word	353
	.byte	4,0,2,35,2,10
	.byte	'ASCLINSDIV',0,1
	.word	353
	.byte	4,4,2,35,3,10
	.byte	'INSEL',0,1
	.word	353
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	23917
	.byte	9
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,10
	.byte	'BBBDIV',0,1
	.word	353
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	330
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	24155
	.byte	9
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,10
	.byte	'PLLDIV',0,1
	.word	353
	.byte	6,2,2,35,0,10
	.byte	'PLLSEL',0,1
	.word	353
	.byte	2,0,2,35,0,10
	.byte	'PLLERAYDIV',0,1
	.word	353
	.byte	6,2,2,35,1,10
	.byte	'PLLERAYSEL',0,1
	.word	353
	.byte	2,0,2,35,1,10
	.byte	'SRIDIV',0,1
	.word	353
	.byte	6,2,2,35,2,10
	.byte	'SRISEL',0,1
	.word	353
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,149,1,3
	.word	24283
	.byte	9
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,152,1,16,4,10
	.byte	'SPBDIV',0,1
	.word	353
	.byte	6,2,2,35,0,10
	.byte	'SPBSEL',0,1
	.word	353
	.byte	2,0,2,35,0,10
	.byte	'GTMDIV',0,1
	.word	353
	.byte	6,2,2,35,1,10
	.byte	'GTMSEL',0,1
	.word	353
	.byte	2,0,2,35,1,10
	.byte	'STMDIV',0,1
	.word	353
	.byte	6,2,2,35,2,10
	.byte	'STMSEL',0,1
	.word	353
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,163,1,3
	.word	24510
	.byte	9
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,166,1,16,4,10
	.byte	'MAXDIV',0,1
	.word	353
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	330
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,172,1,3
	.word	24729
	.byte	9
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,175,1,16,4,10
	.byte	'CPU0DIV',0,1
	.word	353
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	330
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,179,1,3
	.word	24857
	.byte	9
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,182,1,16,4,10
	.byte	'CHREV',0,1
	.word	353
	.byte	6,2,2,35,0,10
	.byte	'CHTEC',0,1
	.word	353
	.byte	2,0,2,35,0,10
	.byte	'CHID',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'EEA',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'UCODE',0,1
	.word	353
	.byte	7,0,2,35,2,10
	.byte	'FSIZE',0,1
	.word	353
	.byte	4,4,2,35,3,10
	.byte	'SP',0,1
	.word	353
	.byte	2,2,2,35,3,10
	.byte	'SEC',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,193,1,3
	.word	24957
	.byte	9
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,196,1,16,4,10
	.byte	'PWD',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'START',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	2,4,2,35,0,10
	.byte	'CAL',0,4
	.word	330
	.byte	22,6,2,35,0,10
	.byte	'reserved_26',0,1
	.word	353
	.byte	5,1,2,35,3,10
	.byte	'SLCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,204,1,3
	.word	25165
	.byte	9
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,207,1,16,4,10
	.byte	'LOWER',0,2
	.word	904
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	353
	.byte	5,1,2,35,1,10
	.byte	'LLU',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'UPPER',0,2
	.word	904
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	353
	.byte	4,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'UOF',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,216,1,3
	.word	25330
	.byte	9
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,219,1,16,4,10
	.byte	'RESULT',0,2
	.word	904
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	353
	.byte	4,2,2,35,1,10
	.byte	'RDY',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'BUSY',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,226,1,3
	.word	25513
	.byte	9
	.byte	'_Ifx_SCU_EICR_Bits',0,6,229,1,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	4,4,2,35,0,10
	.byte	'EXIS0',0,1
	.word	353
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'FEN0',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'REN0',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'LDEN0',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'EIEN0',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'INP0',0,1
	.word	353
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	330
	.byte	5,12,2,35,0,10
	.byte	'EXIS1',0,1
	.word	353
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'FEN1',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'REN1',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'LDEN1',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'EIEN1',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'INP1',0,1
	.word	353
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EICR_Bits',0,6,248,1,3
	.word	25667
	.byte	9
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,251,1,16,4,10
	.byte	'INTF0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'INTF1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'INTF2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'INTF3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'INTF4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'INTF5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'INTF6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'INTF7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	330
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR_Bits',0,6,134,2,3
	.word	26031
	.byte	9
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,137,2,16,4,10
	.byte	'POL',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'MODE',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'ENON',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'PSEL',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	904
	.byte	12,0,2,35,0,10
	.byte	'EMSF',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'SEMSF',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	353
	.byte	6,0,2,35,2,10
	.byte	'EMSFM',0,1
	.word	353
	.byte	2,6,2,35,3,10
	.byte	'SEMSFM',0,1
	.word	353
	.byte	2,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	353
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_EMSR_Bits',0,6,150,2,3
	.word	26242
	.byte	9
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,153,2,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	7,1,2,35,0,10
	.byte	'EDCON',0,2
	.word	904
	.byte	2,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	330
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,158,2,3
	.word	26494
	.byte	9
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,161,2,16,4,10
	.byte	'ARI',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'ARC',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	330
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,166,2,3
	.word	26612
	.byte	9
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,169,2,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	28,4,2,35,0,10
	.byte	'EVR13OFF',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'BPEVR13OFF',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,176,2,3
	.word	26723
	.byte	9
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,179,2,16,4,10
	.byte	'ADC13V',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'ADCSWDV',0,1
	.word	353
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,186,2,3
	.word	26886
	.byte	9
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,189,2,16,4,10
	.byte	'EVR13OVMOD',0,1
	.word	353
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	2,4,2,35,0,10
	.byte	'EVR13UVMOD',0,1
	.word	353
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	904
	.byte	10,0,2,35,0,10
	.byte	'SWDOVMOD',0,1
	.word	353
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	353
	.byte	2,4,2,35,2,10
	.byte	'SWDUVMOD',0,1
	.word	353
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	904
	.byte	8,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,201,2,3
	.word	27048
	.byte	9
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,204,2,16,4,10
	.byte	'EVR13OVVAL',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'SWDOVVAL',0,1
	.word	353
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,212,2,3
	.word	27326
	.byte	9
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,215,2,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	28,4,2,35,0,10
	.byte	'RSTSWDOFF',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'BPRSTSWDOFF',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,222,2,3
	.word	27505
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,225,2,16,4,10
	.byte	'SD33P',0,1
	.word	353
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	353
	.byte	4,0,2,35,0,10
	.byte	'SD33I',0,1
	.word	353
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	330
	.byte	19,1,2,35,0,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,232,2,3
	.word	27665
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,235,2,16,4,10
	.byte	'SDFREQSPRD',0,1
	.word	353
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	353
	.byte	4,0,2,35,0,10
	.byte	'TON',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'TOFF',0,1
	.word	353
	.byte	8,0,2,35,2,10
	.byte	'SDSTEP',0,1
	.word	353
	.byte	4,4,2,35,3,10
	.byte	'SYNCDIV',0,1
	.word	353
	.byte	3,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,244,2,3
	.word	27826
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,247,2,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'STBS',0,1
	.word	353
	.byte	2,6,2,35,1,10
	.byte	'STSP',0,1
	.word	353
	.byte	2,4,2,35,1,10
	.byte	'NS',0,1
	.word	353
	.byte	2,2,2,35,1,10
	.byte	'OL',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'PIAD',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'ADCMODE',0,1
	.word	353
	.byte	4,4,2,35,2,10
	.byte	'ADCLPF',0,1
	.word	353
	.byte	2,2,2,35,2,10
	.byte	'ADCLSB',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'SDLUT',0,1
	.word	353
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,134,3,3
	.word	28018
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,137,3,16,4,10
	.byte	'SDOLCON',0,1
	.word	353
	.byte	7,1,2,35,0,10
	.byte	'MODSEL',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'MODLOW',0,1
	.word	353
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'SDVOKLVL',0,1
	.word	353
	.byte	6,2,2,35,2,10
	.byte	'MODMAN',0,1
	.word	353
	.byte	2,0,2,35,2,10
	.byte	'MODHIGH',0,1
	.word	353
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,147,3,3
	.word	28314
	.byte	9
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,150,3,16,4,10
	.byte	'EVR13',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'OV13',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	2,4,2,35,0,10
	.byte	'OVSWD',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'UV13',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'UVSWD',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	2,6,2,35,1,10
	.byte	'BGPROK',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'SCMOD',0,1
	.word	353
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,4
	.word	330
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,164,3,3
	.word	28529
	.byte	9
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,167,3,16,4,10
	.byte	'EVR13UVVAL',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'SWDUVVAL',0,1
	.word	353
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,175,3,3
	.word	28818
	.byte	9
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,178,3,16,4,10
	.byte	'EN0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'SEL0',0,1
	.word	353
	.byte	4,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	904
	.byte	10,0,2,35,0,10
	.byte	'EN1',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'NSEL',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'SEL1',0,1
	.word	353
	.byte	4,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	353
	.byte	2,0,2,35,2,10
	.byte	'DIV1',0,1
	.word	353
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,189,3,3
	.word	28997
	.byte	9
	.byte	'_Ifx_SCU_FDR_Bits',0,6,192,3,16,4,10
	.byte	'STEP',0,2
	.word	904
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	353
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	353
	.byte	2,0,2,35,1,10
	.byte	'RESULT',0,2
	.word	904
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	353
	.byte	5,1,2,35,3,10
	.byte	'DISCLK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_FDR_Bits',0,6,200,3,3
	.word	29215
	.byte	9
	.byte	'_Ifx_SCU_FMR_Bits',0,6,203,3,16,4,10
	.byte	'FS0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'FS1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'FS2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'FS3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'FS4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'FS5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'FS6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'FS7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'FC0',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'FC1',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'FC2',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'FC3',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'FC4',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'FC5',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'FC6',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'FC7',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_FMR_Bits',0,6,223,3,3
	.word	29378
	.byte	9
	.byte	'_Ifx_SCU_ID_Bits',0,6,226,3,16,4,10
	.byte	'MODREV',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_ID_Bits',0,6,231,3,3
	.word	29714
	.byte	9
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,234,3,16,4,10
	.byte	'IPEN00',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'IPEN01',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'IPEN02',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'IPEN03',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'IPEN04',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'IPEN05',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'IPEN06',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'IPEN07',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	5,3,2,35,1,10
	.byte	'GEEN0',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'IGP0',0,1
	.word	353
	.byte	2,0,2,35,1,10
	.byte	'IPEN10',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'IPEN11',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'IPEN12',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'IPEN13',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'IPEN14',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'IPEN15',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'IPEN16',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'IPEN17',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	5,3,2,35,3,10
	.byte	'GEEN1',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'IGP1',0,1
	.word	353
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_SCU_IGCR_Bits',0,6,130,4,3
	.word	29821
	.byte	9
	.byte	'_Ifx_SCU_IN_Bits',0,6,133,4,16,4,10
	.byte	'P0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	330
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_IN_Bits',0,6,138,4,3
	.word	30273
	.byte	9
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,141,4,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	4,4,2,35,0,10
	.byte	'PC0',0,1
	.word	353
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	4,4,2,35,1,10
	.byte	'PC1',0,1
	.word	353
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_IOCR_Bits',0,6,148,4,3
	.word	30372
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,151,4,16,4,10
	.byte	'LBISTREQ',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'LBISTREQP',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'PATTERNS',0,2
	.word	904
	.byte	14,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,157,4,3
	.word	30522
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,160,4,16,4,10
	.byte	'SEED',0,4
	.word	330
	.byte	23,9,2,35,0,10
	.byte	'reserved_23',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'SPLITSH',0,1
	.word	353
	.byte	3,5,2,35,3,10
	.byte	'BODY',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'LBISTFREQU',0,1
	.word	353
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,167,4,3
	.word	30671
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,170,4,16,4,10
	.byte	'SIGNATURE',0,4
	.word	330
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	7,1,2,35,3,10
	.byte	'LBISTDONE',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,175,4,3
	.word	30832
	.byte	9
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,6,178,4,16,4,10
	.byte	'reserved_0',0,2
	.word	904
	.byte	16,0,2,35,0,10
	.byte	'LS',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	904
	.byte	14,1,2,35,2,10
	.byte	'LSEN',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LCLCON0_Bits',0,6,184,4,3
	.word	30962
	.byte	9
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,187,4,16,4,10
	.byte	'LCLT0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'LCLT1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	330
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,192,4,3
	.word	31096
	.byte	9
	.byte	'_Ifx_SCU_MANID_Bits',0,6,195,4,16,4,10
	.byte	'DEPT',0,1
	.word	353
	.byte	5,3,2,35,0,10
	.byte	'MANUF',0,2
	.word	904
	.byte	11,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_MANID_Bits',0,6,200,4,3
	.word	31211
	.byte	9
	.byte	'_Ifx_SCU_OMR_Bits',0,6,203,4,16,4,10
	.byte	'PS0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	904
	.byte	14,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	904
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_OMR_Bits',0,6,211,4,3
	.word	31322
	.byte	9
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,214,4,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'PLLLV',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'OSCRES',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	353
	.byte	2,3,2,35,0,10
	.byte	'MODE',0,1
	.word	353
	.byte	2,1,2,35,0,10
	.byte	'SHBY',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'PLLHV',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'X1D',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'X1DEN',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	353
	.byte	4,0,2,35,1,10
	.byte	'OSCVAL',0,1
	.word	353
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	353
	.byte	2,1,2,35,2,10
	.byte	'APREN',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,231,4,3
	.word	31480
	.byte	9
	.byte	'_Ifx_SCU_OUT_Bits',0,6,234,4,16,4,10
	.byte	'P0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	330
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_OUT_Bits',0,6,239,4,3
	.word	31820
	.byte	9
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,242,4,16,4,10
	.byte	'CSEL0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'CSEL1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'CSEL2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	904
	.byte	13,0,2,35,0,10
	.byte	'OVSTRT',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'OVSTP',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'DCINVAL',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	353
	.byte	5,0,2,35,2,10
	.byte	'OVCONF',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'POVCONF',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	353
	.byte	6,0,2,35,3,0,28
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,255,4,3
	.word	31921
	.byte	9
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,130,5,16,4,10
	.byte	'OVEN0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'OVEN1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'OVEN2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	330
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,136,5,3
	.word	32188
	.byte	9
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,139,5,16,4,10
	.byte	'PDIS0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	330
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC_Bits',0,6,144,5,3
	.word	32324
	.byte	9
	.byte	'_Ifx_SCU_PDR_Bits',0,6,147,5,16,4,10
	.byte	'PD0',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	353
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	330
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDR_Bits',0,6,154,5,3
	.word	32435
	.byte	9
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,157,5,16,4,10
	.byte	'PDR0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'PDR1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'PDR2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'PDR3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'PDR4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'PDR5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'PDR6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PDR7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	330
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR_Bits',0,6,168,5,3
	.word	32568
	.byte	9
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,171,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'MODEN',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	904
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	353
	.byte	7,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	353
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	353
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	353
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,188,5,3
	.word	32771
	.byte	9
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,191,5,16,4,10
	.byte	'K2DIV',0,1
	.word	353
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	353
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	353
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	904
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,199,5,3
	.word	33127
	.byte	9
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,202,5,16,4,10
	.byte	'MODCFG',0,2
	.word	904
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,206,5,3
	.word	33305
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,209,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	2,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	904
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	353
	.byte	5,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	353
	.byte	2,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	353
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	353
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	353
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,226,5,3
	.word	33405
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,229,5,16,4,10
	.byte	'K2DIV',0,1
	.word	353
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	353
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	353
	.byte	4,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	353
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	904
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,237,5,3
	.word	33775
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,240,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'PWDSTAT',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	330
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,249,5,3
	.word	33961
	.byte	9
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,252,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'MODRUN',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	330
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,135,6,3
	.word	34159
	.byte	9
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,138,6,16,4,10
	.byte	'REQSLP',0,1
	.word	353
	.byte	2,6,2,35,0,10
	.byte	'SMUSLP',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	353
	.byte	5,0,2,35,0,10
	.byte	'PMST',0,1
	.word	353
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	330
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,145,6,3
	.word	34392
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,148,6,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'ESR1WKEN',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'PINAWKEN',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'PINBWKEN',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'ESR0DFEN',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'ESR0EDCON',0,1
	.word	353
	.byte	2,1,2,35,0,10
	.byte	'ESR1DFEN',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'ESR1EDCON',0,1
	.word	353
	.byte	2,6,2,35,1,10
	.byte	'PINADFEN',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'PINAEDCON',0,1
	.word	353
	.byte	2,3,2,35,1,10
	.byte	'PINBDFEN',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'PINBEDCON',0,1
	.word	353
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'STBYRAMSEL',0,1
	.word	353
	.byte	2,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	353
	.byte	2,1,2,35,2,10
	.byte	'PORSTDF',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'DCDCSYNC',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	353
	.byte	3,3,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,174,6,3
	.word	34544
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,177,6,16,4,10
	.byte	'reserved_0',0,2
	.word	904
	.byte	12,4,2,35,0,10
	.byte	'IRADIS',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	330
	.byte	14,5,2,35,0,10
	.byte	'STBYEVEN',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'STBYEV',0,1
	.word	353
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,185,6,3
	.word	35103
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR3_Bits',0,6,188,6,16,4,10
	.byte	'WUTREL',0,4
	.word	330
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	4,4,2,35,3,10
	.byte	'WUTDIV',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR3_Bits',0,6,196,6,3
	.word	35286
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,199,6,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKP',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUN',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'PINAWKP',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUN',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'PINBWKP',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUN',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'PORSTDF',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'HWCFGEVR',0,1
	.word	353
	.byte	3,3,2,35,1,10
	.byte	'STBYRAM',0,1
	.word	353
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'WUTWKP',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUN',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'ESR1WKEN',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'PINAWKEN',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'PINBWKEN',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	904
	.byte	4,5,2,35,2,10
	.byte	'ESR0TRIST',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'WUTRUN',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,226,6,3
	.word	35455
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,229,6,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKPCLR',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUNCLR',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'PINAWKPCLR',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUNCLR',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'PINBWKPCLR',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUNCLR',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'WUTWKPCLR',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUNCLR',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	904
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,242,6,3
	.word	36022
	.byte	9
	.byte	'_Ifx_SCU_PMSWUTCNT_Bits',0,6,245,6,16,4,10
	.byte	'WUTCNT',0,4
	.word	330
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWUTCNT_Bits',0,6,250,6,3
	.word	36338
	.byte	9
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,253,6,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'CLRC',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	904
	.byte	10,4,2,35,0,10
	.byte	'CSS0',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'CSS1',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'CSS2',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'USRINFO',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,135,7,3
	.word	36457
	.byte	9
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,138,7,16,4,10
	.byte	'ESR0',0,1
	.word	353
	.byte	2,6,2,35,0,10
	.byte	'ESR1',0,1
	.word	353
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	353
	.byte	2,2,2,35,0,10
	.byte	'SMU',0,1
	.word	353
	.byte	2,0,2,35,0,10
	.byte	'SW',0,1
	.word	353
	.byte	2,6,2,35,1,10
	.byte	'STM0',0,1
	.word	353
	.byte	2,4,2,35,1,10
	.byte	'STM1',0,1
	.word	353
	.byte	2,2,2,35,1,10
	.byte	'STM2',0,1
	.word	353
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,149,7,3
	.word	36666
	.byte	9
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,152,7,16,4,10
	.byte	'ESR0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'ESR1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'SMU',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'SW',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'STM0',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'STM1',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'STM2',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'PORST',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'CB0',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'CB1',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'CB3',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	353
	.byte	2,1,2,35,2,10
	.byte	'EVR13',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'EVR33',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'SWD',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	353
	.byte	2,4,2,35,3,10
	.byte	'STBYR',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	353
	.byte	3,0,2,35,3,0,28
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,175,7,3
	.word	36877
	.byte	9
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,178,7,16,4,10
	.byte	'HBT',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	330
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,182,7,3
	.word	37309
	.byte	9
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,185,7,16,4,10
	.byte	'HWCFG',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'FTM',0,1
	.word	353
	.byte	7,1,2,35,1,10
	.byte	'MODE',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'FCBAE',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'LUDIS',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'TRSTL',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'SPDEN',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	353
	.byte	3,0,2,35,2,10
	.byte	'RAMINT',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	353
	.byte	7,0,2,35,3,0,28
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,198,7,3
	.word	37405
	.byte	9
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,201,7,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'SWRSTREQ',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	330
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,206,7,3
	.word	37665
	.byte	9
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,209,7,16,4,10
	.byte	'CCTRIG0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'RAMINTM',0,1
	.word	353
	.byte	2,4,2,35,0,10
	.byte	'SETLUDIS',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	353
	.byte	3,0,2,35,0,10
	.byte	'DATM',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	330
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,218,7,3
	.word	37790
	.byte	9
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,221,7,16,4,10
	.byte	'ESR0T',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	330
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,228,7,3
	.word	37987
	.byte	9
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,231,7,16,4,10
	.byte	'ESR0T',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	330
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,238,7,3
	.word	38140
	.byte	9
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,241,7,16,4,10
	.byte	'ESR0T',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	330
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,248,7,3
	.word	38293
	.byte	9
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,251,7,16,4,10
	.byte	'ESR0T',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	330
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,130,8,3
	.word	38446
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,139,8,3
	.word	768
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,154,8,3
	.word	926
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,170,8,3
	.word	1170
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,173,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	752
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	752
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,179,8,3
	.word	38701
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,182,8,16,4,10
	.byte	'CLRIRF',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'IR0',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	353
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,195,8,3
	.word	38827
	.byte	9
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,198,8,16,4,10
	.byte	'AE',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	353
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,211,8,3
	.word	39079
	.byte	11,6,219,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22865
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN0',0,6,224,8,3
	.word	39298
	.byte	11,6,227,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23422
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1',0,6,232,8,3
	.word	39362
	.byte	11,6,235,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23499
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS',0,6,240,8,3
	.word	39426
	.byte	11,6,243,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23635
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON0',0,6,248,8,3
	.word	39491
	.byte	11,6,251,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23917
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON1',0,6,128,9,3
	.word	39556
	.byte	11,6,131,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24155
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON2',0,6,136,9,3
	.word	39621
	.byte	11,6,139,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24283
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON3',0,6,144,9,3
	.word	39686
	.byte	11,6,147,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24510
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON4',0,6,152,9,3
	.word	39751
	.byte	11,6,155,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24729
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON5',0,6,160,9,3
	.word	39816
	.byte	11,6,163,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24857
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6',0,6,168,9,3
	.word	39881
	.byte	11,6,171,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24957
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CHIPID',0,6,176,9,3
	.word	39946
	.byte	11,6,179,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25165
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSCON',0,6,184,9,3
	.word	40010
	.byte	11,6,187,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25330
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSLIM',0,6,192,9,3
	.word	40074
	.byte	11,6,195,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25513
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSSTAT',0,6,200,9,3
	.word	40138
	.byte	11,6,203,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25667
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EICR',0,6,208,9,3
	.word	40203
	.byte	11,6,211,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26031
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR',0,6,216,9,3
	.word	40265
	.byte	11,6,219,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26242
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EMSR',0,6,224,9,3
	.word	40327
	.byte	11,6,227,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26494
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG',0,6,232,9,3
	.word	40389
	.byte	11,6,235,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26612
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG',0,6,240,9,3
	.word	40453
	.byte	11,6,243,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26723
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVR13CON',0,6,248,9,3
	.word	40518
	.byte	11,6,251,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26886
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,128,10,3
	.word	40584
	.byte	11,6,131,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27048
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,136,10,3
	.word	40652
	.byte	11,6,139,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27326
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVROVMON',0,6,144,10,3
	.word	40720
	.byte	11,6,147,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27505
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRRSTCON',0,6,152,10,3
	.word	40786
	.byte	11,6,155,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27665
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,160,10,3
	.word	40853
	.byte	11,6,163,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27826
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,168,10,3
	.word	40922
	.byte	11,6,171,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28018
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,176,10,3
	.word	40990
	.byte	11,6,179,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28314
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,184,10,3
	.word	41058
	.byte	11,6,187,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28529
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT',0,6,192,10,3
	.word	41126
	.byte	11,6,195,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28818
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRUVMON',0,6,200,10,3
	.word	41191
	.byte	11,6,203,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28997
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EXTCON',0,6,208,10,3
	.word	41257
	.byte	11,6,211,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29215
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FDR',0,6,216,10,3
	.word	41321
	.byte	11,6,219,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29378
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FMR',0,6,224,10,3
	.word	41382
	.byte	11,6,227,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29714
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ID',0,6,232,10,3
	.word	41443
	.byte	11,6,235,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29821
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IGCR',0,6,240,10,3
	.word	41503
	.byte	11,6,243,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30273
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IN',0,6,248,10,3
	.word	41565
	.byte	11,6,251,10,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30372
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IOCR',0,6,128,11,3
	.word	41625
	.byte	11,6,131,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30522
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,136,11,3
	.word	41687
	.byte	11,6,139,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30671
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,144,11,3
	.word	41755
	.byte	11,6,147,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30832
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,152,11,3
	.word	41823
	.byte	11,6,155,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30962
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLCON0',0,6,160,11,3
	.word	41891
	.byte	11,6,163,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31096
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST',0,6,168,11,3
	.word	41956
	.byte	11,6,171,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31211
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_MANID',0,6,176,11,3
	.word	42021
	.byte	11,6,179,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31322
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OMR',0,6,184,11,3
	.word	42084
	.byte	11,6,187,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31480
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OSCCON',0,6,192,11,3
	.word	42145
	.byte	11,6,195,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31820
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OUT',0,6,200,11,3
	.word	42209
	.byte	11,6,203,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31921
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCCON',0,6,208,11,3
	.word	42270
	.byte	11,6,211,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32188
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE',0,6,216,11,3
	.word	42334
	.byte	11,6,219,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32324
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC',0,6,224,11,3
	.word	42401
	.byte	11,6,227,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32435
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDR',0,6,232,11,3
	.word	42464
	.byte	11,6,235,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32568
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR',0,6,240,11,3
	.word	42525
	.byte	11,6,243,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32771
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON0',0,6,248,11,3
	.word	42587
	.byte	11,6,251,11,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33127
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON1',0,6,128,12,3
	.word	42652
	.byte	11,6,131,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33305
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON2',0,6,136,12,3
	.word	42717
	.byte	11,6,139,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33405
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,144,12,3
	.word	42782
	.byte	11,6,147,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33775
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,152,12,3
	.word	42851
	.byte	11,6,155,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33961
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,160,12,3
	.word	42920
	.byte	11,6,163,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34159
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT',0,6,168,12,3
	.word	42989
	.byte	11,6,171,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34392
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR',0,6,176,12,3
	.word	43054
	.byte	11,6,179,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34544
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR0',0,6,184,12,3
	.word	43117
	.byte	11,6,187,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35103
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR1',0,6,192,12,3
	.word	43182
	.byte	11,6,195,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35286
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR3',0,6,200,12,3
	.word	43247
	.byte	11,6,203,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35455
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTAT',0,6,208,12,3
	.word	43312
	.byte	11,6,211,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36022
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,216,12,3
	.word	43378
	.byte	11,6,219,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36338
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWUTCNT',0,6,224,12,3
	.word	43447
	.byte	11,6,227,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36666
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON',0,6,232,12,3
	.word	43514
	.byte	11,6,235,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36457
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON2',0,6,240,12,3
	.word	43578
	.byte	11,6,243,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36877
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTSTAT',0,6,248,12,3
	.word	43643
	.byte	11,6,251,12,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37309
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON',0,6,128,13,3
	.word	43708
	.byte	11,6,131,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37405
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STSTAT',0,6,136,13,3
	.word	43773
	.byte	11,6,139,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37665
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON',0,6,144,13,3
	.word	43837
	.byte	11,6,147,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37790
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON',0,6,152,13,3
	.word	43903
	.byte	11,6,155,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37987
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR',0,6,160,13,3
	.word	43967
	.byte	11,6,163,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38140
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS',0,6,168,13,3
	.word	44032
	.byte	11,6,171,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38293
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET',0,6,176,13,3
	.word	44097
	.byte	11,6,179,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38446
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT',0,6,184,13,3
	.word	44162
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,192,13,3
	.word	864
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,200,13,3
	.word	1130
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,208,13,3
	.word	1361
	.byte	11,6,211,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38701
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0',0,6,216,13,3
	.word	44313
	.byte	11,6,219,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38827
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON1',0,6,224,13,3
	.word	44380
	.byte	11,6,227,13,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39079
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_SR',0,6,232,13,3
	.word	44447
	.byte	13
	.word	1401
	.byte	28
	.byte	'Ifx_SCU_WDTCPU',0,6,248,13,3
	.word	44512
	.byte	9
	.byte	'_Ifx_SCU_WDTS',0,6,251,13,25,12,12
	.byte	'CON0',0
	.word	44313
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	44380
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	44447
	.byte	4,2,35,8,0,13
	.word	44541
	.byte	28
	.byte	'Ifx_SCU_WDTS',0,6,128,14,3
	.word	44602
	.byte	16,8
	.word	40389
	.byte	17,1,0,16,4
	.word	43054
	.byte	17,0,0,13
	.word	44541
	.byte	16,12
	.word	1401
	.byte	17,0,0,13
	.word	44652
	.byte	16,16
	.word	353
	.byte	17,15,0,16,20
	.word	353
	.byte	17,19,0,16,16
	.word	40203
	.byte	17,3,0,16,16
	.word	41503
	.byte	17,3,0,16,188,1
	.word	353
	.byte	17,187,1,0,16,244,1
	.word	353
	.byte	17,243,1,0,9
	.byte	'_Ifx_SCU',0,6,141,14,25,128,8,12
	.byte	'reserved_0',0
	.word	4884
	.byte	8,2,35,0,12
	.byte	'ID',0
	.word	41443
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3065
	.byte	4,2,35,12,12
	.byte	'OSCCON',0
	.word	42145
	.byte	4,2,35,16,12
	.byte	'PLLSTAT',0
	.word	42989
	.byte	4,2,35,20,12
	.byte	'PLLCON0',0
	.word	42587
	.byte	4,2,35,24,12
	.byte	'PLLCON1',0
	.word	42652
	.byte	4,2,35,28,12
	.byte	'PLLCON2',0
	.word	42717
	.byte	4,2,35,32,12
	.byte	'PLLERAYSTAT',0
	.word	42920
	.byte	4,2,35,36,12
	.byte	'PLLERAYCON0',0
	.word	42782
	.byte	4,2,35,40,12
	.byte	'PLLERAYCON1',0
	.word	42851
	.byte	4,2,35,44,12
	.byte	'CCUCON0',0
	.word	39491
	.byte	4,2,35,48,12
	.byte	'CCUCON1',0
	.word	39556
	.byte	4,2,35,52,12
	.byte	'FDR',0
	.word	41321
	.byte	4,2,35,56,12
	.byte	'EXTCON',0
	.word	41257
	.byte	4,2,35,60,12
	.byte	'CCUCON2',0
	.word	39621
	.byte	4,2,35,64,12
	.byte	'CCUCON3',0
	.word	39686
	.byte	4,2,35,68,12
	.byte	'CCUCON4',0
	.word	39751
	.byte	4,2,35,72,12
	.byte	'CCUCON5',0
	.word	39816
	.byte	4,2,35,76,12
	.byte	'RSTSTAT',0
	.word	43643
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	3065
	.byte	4,2,35,84,12
	.byte	'RSTCON',0
	.word	43514
	.byte	4,2,35,88,12
	.byte	'ARSTDIS',0
	.word	39426
	.byte	4,2,35,92,12
	.byte	'SWRSTCON',0
	.word	43837
	.byte	4,2,35,96,12
	.byte	'RSTCON2',0
	.word	43578
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	3065
	.byte	4,2,35,104,12
	.byte	'EVRRSTCON',0
	.word	40786
	.byte	4,2,35,108,12
	.byte	'ESRCFG',0
	.word	44629
	.byte	8,2,35,112,12
	.byte	'ESROCFG',0
	.word	40453
	.byte	4,2,35,120,12
	.byte	'SYSCON',0
	.word	43903
	.byte	4,2,35,124,12
	.byte	'CCUCON6',0
	.word	39881
	.byte	4,3,35,128,1,12
	.byte	'reserved_84',0
	.word	4255
	.byte	24,3,35,132,1,12
	.byte	'PDR',0
	.word	42464
	.byte	4,3,35,156,1,12
	.byte	'IOCR',0
	.word	41625
	.byte	4,3,35,160,1,12
	.byte	'OUT',0
	.word	42209
	.byte	4,3,35,164,1,12
	.byte	'OMR',0
	.word	42084
	.byte	4,3,35,168,1,12
	.byte	'IN',0
	.word	41565
	.byte	4,3,35,172,1,12
	.byte	'EVRSTAT',0
	.word	41126
	.byte	4,3,35,176,1,12
	.byte	'reserved_B4',0
	.word	3065
	.byte	4,3,35,180,1,12
	.byte	'EVR13CON',0
	.word	40518
	.byte	4,3,35,184,1,12
	.byte	'reserved_BC',0
	.word	3065
	.byte	4,3,35,188,1,12
	.byte	'STSTAT',0
	.word	43773
	.byte	4,3,35,192,1,12
	.byte	'reserved_C4',0
	.word	3065
	.byte	4,3,35,196,1,12
	.byte	'PMSWCR0',0
	.word	43117
	.byte	4,3,35,200,1,12
	.byte	'PMSWSTAT',0
	.word	43312
	.byte	4,3,35,204,1,12
	.byte	'PMSWSTATCLR',0
	.word	43378
	.byte	4,3,35,208,1,12
	.byte	'PMCSR',0
	.word	44638
	.byte	4,3,35,212,1,12
	.byte	'reserved_D8',0
	.word	4884
	.byte	8,3,35,216,1,12
	.byte	'DTSSTAT',0
	.word	40138
	.byte	4,3,35,224,1,12
	.byte	'DTSCON',0
	.word	40010
	.byte	4,3,35,228,1,12
	.byte	'PMSWCR1',0
	.word	43182
	.byte	4,3,35,232,1,12
	.byte	'reserved_EC',0
	.word	3065
	.byte	4,3,35,236,1,12
	.byte	'WDTS',0
	.word	44647
	.byte	12,3,35,240,1,12
	.byte	'EMSR',0
	.word	40327
	.byte	4,3,35,252,1,12
	.byte	'WDTCPU',0
	.word	44661
	.byte	12,3,35,128,2,12
	.byte	'reserved_10C',0
	.word	4255
	.byte	24,3,35,140,2,12
	.byte	'TRAPSTAT',0
	.word	44162
	.byte	4,3,35,164,2,12
	.byte	'TRAPSET',0
	.word	44097
	.byte	4,3,35,168,2,12
	.byte	'TRAPCLR',0
	.word	43967
	.byte	4,3,35,172,2,12
	.byte	'TRAPDIS',0
	.word	44032
	.byte	4,3,35,176,2,12
	.byte	'LCLCON0',0
	.word	41891
	.byte	4,3,35,180,2,12
	.byte	'reserved_138',0
	.word	3065
	.byte	4,3,35,184,2,12
	.byte	'LCLTEST',0
	.word	41956
	.byte	4,3,35,188,2,12
	.byte	'CHIPID',0
	.word	39946
	.byte	4,3,35,192,2,12
	.byte	'MANID',0
	.word	42021
	.byte	4,3,35,196,2,12
	.byte	'reserved_148',0
	.word	4884
	.byte	8,3,35,200,2,12
	.byte	'SAFECON',0
	.word	43708
	.byte	4,3,35,208,2,12
	.byte	'reserved_154',0
	.word	44666
	.byte	16,3,35,212,2,12
	.byte	'LBISTCTRL0',0
	.word	41687
	.byte	4,3,35,228,2,12
	.byte	'LBISTCTRL1',0
	.word	41755
	.byte	4,3,35,232,2,12
	.byte	'LBISTCTRL2',0
	.word	41823
	.byte	4,3,35,236,2,12
	.byte	'reserved_170',0
	.word	18642
	.byte	28,3,35,240,2,12
	.byte	'PDISC',0
	.word	42401
	.byte	4,3,35,140,3,12
	.byte	'reserved_190',0
	.word	5224
	.byte	12,3,35,144,3,12
	.byte	'EVRADCSTAT',0
	.word	40584
	.byte	4,3,35,156,3,12
	.byte	'EVRUVMON',0
	.word	41191
	.byte	4,3,35,160,3,12
	.byte	'EVROVMON',0
	.word	40720
	.byte	4,3,35,164,3,12
	.byte	'EVRMONCTRL',0
	.word	40652
	.byte	4,3,35,168,3,12
	.byte	'reserved_1AC',0
	.word	3065
	.byte	4,3,35,172,3,12
	.byte	'EVRSDCTRL1',0
	.word	40922
	.byte	4,3,35,176,3,12
	.byte	'EVRSDCTRL2',0
	.word	40990
	.byte	4,3,35,180,3,12
	.byte	'EVRSDCTRL3',0
	.word	41058
	.byte	4,3,35,184,3,12
	.byte	'reserved_1BC',0
	.word	4884
	.byte	8,3,35,188,3,12
	.byte	'EVRSDCOEFF2',0
	.word	40853
	.byte	4,3,35,196,3,12
	.byte	'reserved_1C8',0
	.word	44675
	.byte	20,3,35,200,3,12
	.byte	'PMSWUTCNT',0
	.word	43447
	.byte	4,3,35,220,3,12
	.byte	'OVCENABLE',0
	.word	42334
	.byte	4,3,35,224,3,12
	.byte	'OVCCON',0
	.word	42270
	.byte	4,3,35,228,3,12
	.byte	'reserved_1E8',0
	.word	18882
	.byte	40,3,35,232,3,12
	.byte	'EICR',0
	.word	44684
	.byte	16,3,35,144,4,12
	.byte	'EIFR',0
	.word	40265
	.byte	4,3,35,160,4,12
	.byte	'FMR',0
	.word	41382
	.byte	4,3,35,164,4,12
	.byte	'PDRR',0
	.word	42525
	.byte	4,3,35,168,4,12
	.byte	'IGCR',0
	.word	44693
	.byte	16,3,35,172,4,12
	.byte	'reserved_23C',0
	.word	3065
	.byte	4,3,35,188,4,12
	.byte	'DTSLIM',0
	.word	40074
	.byte	4,3,35,192,4,12
	.byte	'reserved_244',0
	.word	44702
	.byte	188,1,3,35,196,4,12
	.byte	'PMSWCR3',0
	.word	43247
	.byte	4,3,35,128,6,12
	.byte	'reserved_304',0
	.word	44713
	.byte	244,1,3,35,132,6,12
	.byte	'ACCEN1',0
	.word	39362
	.byte	4,3,35,248,7,12
	.byte	'ACCEN0',0
	.word	39298
	.byte	4,3,35,252,7,0,13
	.word	44724
	.byte	28
	.byte	'Ifx_SCU',0,6,244,14,3
	.word	46620
	.byte	9
	.byte	'_Ifx_CPU_A_Bits',0,22,45,16,4,10
	.byte	'ADDR',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_A_Bits',0,22,48,3
	.word	46642
	.byte	9
	.byte	'_Ifx_CPU_BIV_Bits',0,22,51,16,4,10
	.byte	'VSS',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'BIV',0,4
	.word	752
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BIV_Bits',0,22,55,3
	.word	46703
	.byte	9
	.byte	'_Ifx_CPU_BTV_Bits',0,22,58,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'BTV',0,4
	.word	752
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BTV_Bits',0,22,62,3
	.word	46782
	.byte	9
	.byte	'_Ifx_CPU_CCNT_Bits',0,22,65,16,4,10
	.byte	'CountValue',0,4
	.word	752
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	752
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT_Bits',0,22,69,3
	.word	46868
	.byte	9
	.byte	'_Ifx_CPU_CCTRL_Bits',0,22,72,16,4,10
	.byte	'CM',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'CE',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'M1',0,4
	.word	752
	.byte	3,27,2,35,0,10
	.byte	'M2',0,4
	.word	752
	.byte	3,24,2,35,0,10
	.byte	'M3',0,4
	.word	752
	.byte	3,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	752
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL_Bits',0,22,80,3
	.word	46957
	.byte	9
	.byte	'_Ifx_CPU_COMPAT_Bits',0,22,83,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'RM',0,4
	.word	752
	.byte	1,28,2,35,0,10
	.byte	'SP',0,4
	.word	752
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	752
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT_Bits',0,22,89,3
	.word	47103
	.byte	9
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,22,92,16,4,10
	.byte	'CORE_ID',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	752
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID_Bits',0,22,96,3
	.word	47230
	.byte	9
	.byte	'_Ifx_CPU_CPR_L_Bits',0,22,99,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	752
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L_Bits',0,22,103,3
	.word	47328
	.byte	9
	.byte	'_Ifx_CPU_CPR_U_Bits',0,22,106,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	752
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U_Bits',0,22,110,3
	.word	47421
	.byte	9
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,22,113,16,4,10
	.byte	'MODREV',0,4
	.word	752
	.byte	8,24,2,35,0,10
	.byte	'MOD_32B',0,4
	.word	752
	.byte	8,16,2,35,0,10
	.byte	'MOD',0,4
	.word	752
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID_Bits',0,22,118,3
	.word	47514
	.byte	9
	.byte	'_Ifx_CPU_CPXE_Bits',0,22,121,16,4,10
	.byte	'XE',0,4
	.word	752
	.byte	8,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	752
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE_Bits',0,22,125,3
	.word	47621
	.byte	9
	.byte	'_Ifx_CPU_CREVT_Bits',0,22,128,1,16,4,10
	.byte	'EVTA',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	752
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	752
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	752
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	752
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	752
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT_Bits',0,22,136,1,3
	.word	47708
	.byte	9
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,22,139,1,16,4,10
	.byte	'CID',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	752
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID_Bits',0,22,143,1,3
	.word	47862
	.byte	9
	.byte	'_Ifx_CPU_D_Bits',0,22,146,1,16,4,10
	.byte	'DATA',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_D_Bits',0,22,149,1,3
	.word	47956
	.byte	9
	.byte	'_Ifx_CPU_DATR_Bits',0,22,152,1,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'SBE',0,4
	.word	752
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	752
	.byte	5,23,2,35,0,10
	.byte	'CWE',0,4
	.word	752
	.byte	1,22,2,35,0,10
	.byte	'CFE',0,4
	.word	752
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	752
	.byte	3,18,2,35,0,10
	.byte	'SOE',0,4
	.word	752
	.byte	1,17,2,35,0,10
	.byte	'SME',0,4
	.word	752
	.byte	1,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	752
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DATR_Bits',0,22,163,1,3
	.word	48019
	.byte	9
	.byte	'_Ifx_CPU_DBGSR_Bits',0,22,166,1,16,4,10
	.byte	'DE',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'HALT',0,4
	.word	752
	.byte	2,29,2,35,0,10
	.byte	'SIH',0,4
	.word	752
	.byte	1,28,2,35,0,10
	.byte	'SUSP',0,4
	.word	752
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	752
	.byte	1,26,2,35,0,10
	.byte	'PREVSUSP',0,4
	.word	752
	.byte	1,25,2,35,0,10
	.byte	'PEVT',0,4
	.word	752
	.byte	1,24,2,35,0,10
	.byte	'EVTSRC',0,4
	.word	752
	.byte	5,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	752
	.byte	19,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR_Bits',0,22,177,1,3
	.word	48237
	.byte	9
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,22,180,1,16,4,10
	.byte	'DTA',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	752
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR_Bits',0,22,184,1,3
	.word	48452
	.byte	9
	.byte	'_Ifx_CPU_DCON0_Bits',0,22,187,1,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'DCBYP',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	752
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0_Bits',0,22,192,1,3
	.word	48546
	.byte	9
	.byte	'_Ifx_CPU_DCON2_Bits',0,22,195,1,16,4,10
	.byte	'DCACHE_SZE',0,4
	.word	752
	.byte	16,16,2,35,0,10
	.byte	'DSCRATCH_SZE',0,4
	.word	752
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2_Bits',0,22,199,1,3
	.word	48662
	.byte	9
	.byte	'_Ifx_CPU_DCX_Bits',0,22,202,1,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	6,26,2,35,0,10
	.byte	'DCXValue',0,4
	.word	752
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCX_Bits',0,22,206,1,3
	.word	48763
	.byte	9
	.byte	'_Ifx_CPU_DEADD_Bits',0,22,209,1,16,4,10
	.byte	'ERROR_ADDRESS',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD_Bits',0,22,212,1,3
	.word	48856
	.byte	9
	.byte	'_Ifx_CPU_DIEAR_Bits',0,22,215,1,16,4,10
	.byte	'TA',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR_Bits',0,22,218,1,3
	.word	48936
	.byte	9
	.byte	'_Ifx_CPU_DIETR_Bits',0,22,221,1,16,4,10
	.byte	'IED',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	752
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	752
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	752
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	752
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	752
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	752
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	752
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	752
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR_Bits',0,22,233,1,3
	.word	49005
	.byte	9
	.byte	'_Ifx_CPU_DMS_Bits',0,22,236,1,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'DMSValue',0,4
	.word	752
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DMS_Bits',0,22,240,1,3
	.word	49234
	.byte	9
	.byte	'_Ifx_CPU_DPR_L_Bits',0,22,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	752
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L_Bits',0,22,247,1,3
	.word	49327
	.byte	9
	.byte	'_Ifx_CPU_DPR_U_Bits',0,22,250,1,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	752
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U_Bits',0,22,254,1,3
	.word	49422
	.byte	9
	.byte	'_Ifx_CPU_DPRE_Bits',0,22,129,2,16,4,10
	.byte	'RE',0,4
	.word	752
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	752
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE_Bits',0,22,133,2,3
	.word	49517
	.byte	9
	.byte	'_Ifx_CPU_DPWE_Bits',0,22,136,2,16,4,10
	.byte	'WE',0,4
	.word	752
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	752
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE_Bits',0,22,140,2,3
	.word	49607
	.byte	9
	.byte	'_Ifx_CPU_DSTR_Bits',0,22,143,2,16,4,10
	.byte	'SRE',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'GAE',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'LBE',0,4
	.word	752
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	752
	.byte	3,26,2,35,0,10
	.byte	'CRE',0,4
	.word	752
	.byte	1,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	752
	.byte	7,18,2,35,0,10
	.byte	'DTME',0,4
	.word	752
	.byte	1,17,2,35,0,10
	.byte	'LOE',0,4
	.word	752
	.byte	1,16,2,35,0,10
	.byte	'SDE',0,4
	.word	752
	.byte	1,15,2,35,0,10
	.byte	'SCE',0,4
	.word	752
	.byte	1,14,2,35,0,10
	.byte	'CAC',0,4
	.word	752
	.byte	1,13,2,35,0,10
	.byte	'MPE',0,4
	.word	752
	.byte	1,12,2,35,0,10
	.byte	'CLE',0,4
	.word	752
	.byte	1,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	752
	.byte	3,8,2,35,0,10
	.byte	'ALN',0,4
	.word	752
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	752
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR_Bits',0,22,161,2,3
	.word	49697
	.byte	9
	.byte	'_Ifx_CPU_EXEVT_Bits',0,22,164,2,16,4,10
	.byte	'EVTA',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	752
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	752
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	752
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	752
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	752
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT_Bits',0,22,172,2,3
	.word	50021
	.byte	9
	.byte	'_Ifx_CPU_FCX_Bits',0,22,175,2,16,4,10
	.byte	'FCXO',0,4
	.word	752
	.byte	16,16,2,35,0,10
	.byte	'FCXS',0,4
	.word	752
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	752
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FCX_Bits',0,22,180,2,3
	.word	50175
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,22,183,2,16,4,10
	.byte	'TST',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'TCL',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	752
	.byte	6,24,2,35,0,10
	.byte	'RM',0,4
	.word	752
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	752
	.byte	8,14,2,35,0,10
	.byte	'FXE',0,4
	.word	752
	.byte	1,13,2,35,0,10
	.byte	'FUE',0,4
	.word	752
	.byte	1,12,2,35,0,10
	.byte	'FZE',0,4
	.word	752
	.byte	1,11,2,35,0,10
	.byte	'FVE',0,4
	.word	752
	.byte	1,10,2,35,0,10
	.byte	'FIE',0,4
	.word	752
	.byte	1,9,2,35,0,10
	.byte	'reserved_23',0,4
	.word	752
	.byte	3,6,2,35,0,10
	.byte	'FX',0,4
	.word	752
	.byte	1,5,2,35,0,10
	.byte	'FU',0,4
	.word	752
	.byte	1,4,2,35,0,10
	.byte	'FZ',0,4
	.word	752
	.byte	1,3,2,35,0,10
	.byte	'FV',0,4
	.word	752
	.byte	1,2,2,35,0,10
	.byte	'FI',0,4
	.word	752
	.byte	1,1,2,35,0,10
	.byte	'reserved_31',0,4
	.word	752
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,22,202,2,3
	.word	50281
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,205,2,16,4,10
	.byte	'OPC',0,4
	.word	752
	.byte	8,24,2,35,0,10
	.byte	'FMT',0,4
	.word	752
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	752
	.byte	7,16,2,35,0,10
	.byte	'DREG',0,4
	.word	752
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	752
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,212,2,3
	.word	50630
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,22,215,2,16,4,10
	.byte	'PC',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,22,218,2,3
	.word	50790
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,221,2,16,4,10
	.byte	'SRC1',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,224,2,3
	.word	50871
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,227,2,16,4,10
	.byte	'SRC2',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,230,2,3
	.word	50958
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,233,2,16,4,10
	.byte	'SRC3',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,236,2,3
	.word	51045
	.byte	9
	.byte	'_Ifx_CPU_ICNT_Bits',0,22,239,2,16,4,10
	.byte	'CountValue',0,4
	.word	752
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	752
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT_Bits',0,22,243,2,3
	.word	51132
	.byte	9
	.byte	'_Ifx_CPU_ICR_Bits',0,22,246,2,16,4,10
	.byte	'CCPN',0,4
	.word	752
	.byte	10,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	752
	.byte	5,17,2,35,0,10
	.byte	'IE',0,4
	.word	752
	.byte	1,16,2,35,0,10
	.byte	'PIPN',0,4
	.word	752
	.byte	10,6,2,35,0,10
	.byte	'reserved_26',0,4
	.word	752
	.byte	6,0,2,35,0,0,28
	.byte	'Ifx_CPU_ICR_Bits',0,22,253,2,3
	.word	51223
	.byte	9
	.byte	'_Ifx_CPU_ISP_Bits',0,22,128,3,16,4,10
	.byte	'ISP',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_ISP_Bits',0,22,131,3,3
	.word	51366
	.byte	9
	.byte	'_Ifx_CPU_LCX_Bits',0,22,134,3,16,4,10
	.byte	'LCXO',0,4
	.word	752
	.byte	16,16,2,35,0,10
	.byte	'LCXS',0,4
	.word	752
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	752
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_LCX_Bits',0,22,139,3,3
	.word	51432
	.byte	9
	.byte	'_Ifx_CPU_M1CNT_Bits',0,22,142,3,16,4,10
	.byte	'CountValue',0,4
	.word	752
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	752
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT_Bits',0,22,146,3,3
	.word	51538
	.byte	9
	.byte	'_Ifx_CPU_M2CNT_Bits',0,22,149,3,16,4,10
	.byte	'CountValue',0,4
	.word	752
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	752
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT_Bits',0,22,153,3,3
	.word	51631
	.byte	9
	.byte	'_Ifx_CPU_M3CNT_Bits',0,22,156,3,16,4,10
	.byte	'CountValue',0,4
	.word	752
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	752
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT_Bits',0,22,160,3,3
	.word	51724
	.byte	9
	.byte	'_Ifx_CPU_PC_Bits',0,22,163,3,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'PC',0,4
	.word	752
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_PC_Bits',0,22,167,3,3
	.word	51817
	.byte	9
	.byte	'_Ifx_CPU_PCON0_Bits',0,22,170,3,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'PCBYP',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	752
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0_Bits',0,22,175,3,3
	.word	51902
	.byte	9
	.byte	'_Ifx_CPU_PCON1_Bits',0,22,178,3,16,4,10
	.byte	'PCINV',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'PBINV',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	752
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1_Bits',0,22,183,3,3
	.word	52018
	.byte	9
	.byte	'_Ifx_CPU_PCON2_Bits',0,22,186,3,16,4,10
	.byte	'PCACHE_SZE',0,4
	.word	752
	.byte	16,16,2,35,0,10
	.byte	'PSCRATCH_SZE',0,4
	.word	752
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2_Bits',0,22,190,3,3
	.word	52129
	.byte	9
	.byte	'_Ifx_CPU_PCXI_Bits',0,22,193,3,16,4,10
	.byte	'PCXO',0,4
	.word	752
	.byte	16,16,2,35,0,10
	.byte	'PCXS',0,4
	.word	752
	.byte	4,12,2,35,0,10
	.byte	'UL',0,4
	.word	752
	.byte	1,11,2,35,0,10
	.byte	'PIE',0,4
	.word	752
	.byte	1,10,2,35,0,10
	.byte	'PCPN',0,4
	.word	752
	.byte	10,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI_Bits',0,22,200,3,3
	.word	52230
	.byte	9
	.byte	'_Ifx_CPU_PIEAR_Bits',0,22,203,3,16,4,10
	.byte	'TA',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR_Bits',0,22,206,3,3
	.word	52360
	.byte	9
	.byte	'_Ifx_CPU_PIETR_Bits',0,22,209,3,16,4,10
	.byte	'IED',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	752
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	752
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	752
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	752
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	752
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	752
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	752
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	752
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR_Bits',0,22,221,3,3
	.word	52429
	.byte	9
	.byte	'_Ifx_CPU_PMA0_Bits',0,22,224,3,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	13,19,2,35,0,10
	.byte	'DAC',0,4
	.word	752
	.byte	3,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	752
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0_Bits',0,22,229,3,3
	.word	52658
	.byte	9
	.byte	'_Ifx_CPU_PMA1_Bits',0,22,232,3,16,4,10
	.byte	'reserved_0',0,4
	.word	752
	.byte	14,18,2,35,0,10
	.byte	'CAC',0,4
	.word	752
	.byte	2,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	752
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1_Bits',0,22,237,3,3
	.word	52771
	.byte	9
	.byte	'_Ifx_CPU_PMA2_Bits',0,22,240,3,16,4,10
	.byte	'PSI',0,4
	.word	752
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	752
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2_Bits',0,22,244,3,3
	.word	52884
	.byte	9
	.byte	'_Ifx_CPU_PSTR_Bits',0,22,247,3,16,4,10
	.byte	'FRE',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'FBE',0,4
	.word	752
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	752
	.byte	9,20,2,35,0,10
	.byte	'FPE',0,4
	.word	752
	.byte	1,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	752
	.byte	1,18,2,35,0,10
	.byte	'FME',0,4
	.word	752
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	752
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR_Bits',0,22,129,4,3
	.word	52975
	.byte	9
	.byte	'_Ifx_CPU_PSW_Bits',0,22,132,4,16,4,10
	.byte	'CDC',0,4
	.word	752
	.byte	7,25,2,35,0,10
	.byte	'CDE',0,4
	.word	752
	.byte	1,24,2,35,0,10
	.byte	'GW',0,4
	.word	752
	.byte	1,23,2,35,0,10
	.byte	'IS',0,4
	.word	752
	.byte	1,22,2,35,0,10
	.byte	'IO',0,4
	.word	752
	.byte	2,20,2,35,0,10
	.byte	'PRS',0,4
	.word	752
	.byte	2,18,2,35,0,10
	.byte	'S',0,4
	.word	752
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	752
	.byte	12,5,2,35,0,10
	.byte	'SAV',0,4
	.word	752
	.byte	1,4,2,35,0,10
	.byte	'AV',0,4
	.word	752
	.byte	1,3,2,35,0,10
	.byte	'SV',0,4
	.word	752
	.byte	1,2,2,35,0,10
	.byte	'V',0,4
	.word	752
	.byte	1,1,2,35,0,10
	.byte	'C',0,4
	.word	752
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSW_Bits',0,22,147,4,3
	.word	53178
	.byte	9
	.byte	'_Ifx_CPU_SEGEN_Bits',0,22,150,4,16,4,10
	.byte	'ADFLIP',0,4
	.word	752
	.byte	8,24,2,35,0,10
	.byte	'ADTYPE',0,4
	.word	752
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	752
	.byte	21,1,2,35,0,10
	.byte	'AE',0,4
	.word	752
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN_Bits',0,22,156,4,3
	.word	53421
	.byte	9
	.byte	'_Ifx_CPU_SMACON_Bits',0,22,159,4,16,4,10
	.byte	'PC',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'PT',0,4
	.word	752
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	752
	.byte	5,24,2,35,0,10
	.byte	'DC',0,4
	.word	752
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	752
	.byte	1,22,2,35,0,10
	.byte	'DT',0,4
	.word	752
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	752
	.byte	13,8,2,35,0,10
	.byte	'IODT',0,4
	.word	752
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	752
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON_Bits',0,22,171,4,3
	.word	53549
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,22,174,4,16,4,10
	.byte	'EN',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,22,177,4,3
	.word	53790
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,22,180,4,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,22,183,4,3
	.word	53873
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,22,186,4,16,4,10
	.byte	'EN',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,22,189,4,3
	.word	53964
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,22,192,4,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,22,195,4,3
	.word	54055
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,22,198,4,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	330
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,22,202,4,3
	.word	54154
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,22,205,4,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	330
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,22,209,4,3
	.word	54261
	.byte	9
	.byte	'_Ifx_CPU_SWEVT_Bits',0,22,212,4,16,4,10
	.byte	'EVTA',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	752
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	752
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	752
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	752
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	752
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT_Bits',0,22,220,4,3
	.word	54368
	.byte	9
	.byte	'_Ifx_CPU_SYSCON_Bits',0,22,223,4,16,4,10
	.byte	'FCDSF',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'PROTEN',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'TPROTEN',0,4
	.word	752
	.byte	1,29,2,35,0,10
	.byte	'IS',0,4
	.word	752
	.byte	1,28,2,35,0,10
	.byte	'IT',0,4
	.word	752
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	752
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON_Bits',0,22,231,4,3
	.word	54522
	.byte	9
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,22,234,4,16,4,10
	.byte	'ASI',0,4
	.word	752
	.byte	5,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	752
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,22,238,4,3
	.word	54683
	.byte	9
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,22,241,4,16,4,10
	.byte	'TEXP0',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'TEXP1',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'TEXP2',0,4
	.word	752
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	752
	.byte	13,16,2,35,0,10
	.byte	'TTRAP',0,4
	.word	752
	.byte	1,15,2,35,0,10
	.byte	'reserved_17',0,4
	.word	752
	.byte	15,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON_Bits',0,22,249,4,3
	.word	54781
	.byte	9
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,22,252,4,16,4,10
	.byte	'Timer',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,22,255,4,3
	.word	54953
	.byte	9
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,22,130,5,16,4,10
	.byte	'ADDR',0,4
	.word	752
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR_Bits',0,22,133,5,3
	.word	55033
	.byte	9
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,22,136,5,16,4,10
	.byte	'EVTA',0,4
	.word	752
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	752
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	752
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	752
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	752
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	752
	.byte	4,20,2,35,0,10
	.byte	'TYP',0,4
	.word	752
	.byte	1,19,2,35,0,10
	.byte	'RNG',0,4
	.word	752
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	752
	.byte	1,17,2,35,0,10
	.byte	'ASI_EN',0,4
	.word	752
	.byte	1,16,2,35,0,10
	.byte	'ASI',0,4
	.word	752
	.byte	5,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	752
	.byte	6,5,2,35,0,10
	.byte	'AST',0,4
	.word	752
	.byte	1,4,2,35,0,10
	.byte	'ALD',0,4
	.word	752
	.byte	1,3,2,35,0,10
	.byte	'reserved_29',0,4
	.word	752
	.byte	3,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT_Bits',0,22,153,5,3
	.word	55106
	.byte	9
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,22,156,5,16,4,10
	.byte	'T0',0,4
	.word	752
	.byte	1,31,2,35,0,10
	.byte	'T1',0,4
	.word	752
	.byte	1,30,2,35,0,10
	.byte	'T2',0,4
	.word	752
	.byte	1,29,2,35,0,10
	.byte	'T3',0,4
	.word	752
	.byte	1,28,2,35,0,10
	.byte	'T4',0,4
	.word	752
	.byte	1,27,2,35,0,10
	.byte	'T5',0,4
	.word	752
	.byte	1,26,2,35,0,10
	.byte	'T6',0,4
	.word	752
	.byte	1,25,2,35,0,10
	.byte	'T7',0,4
	.word	752
	.byte	1,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	752
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,22,167,5,3
	.word	55424
	.byte	11,22,175,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46642
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_A',0,22,180,5,3
	.word	55619
	.byte	11,22,183,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46703
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BIV',0,22,188,5,3
	.word	55678
	.byte	11,22,191,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46782
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BTV',0,22,196,5,3
	.word	55739
	.byte	11,22,199,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46868
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT',0,22,204,5,3
	.word	55800
	.byte	11,22,207,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46957
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL',0,22,212,5,3
	.word	55862
	.byte	11,22,215,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47103
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT',0,22,220,5,3
	.word	55925
	.byte	11,22,223,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47230
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID',0,22,228,5,3
	.word	55989
	.byte	11,22,231,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47328
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L',0,22,236,5,3
	.word	56054
	.byte	11,22,239,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47421
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U',0,22,244,5,3
	.word	56117
	.byte	11,22,247,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47514
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID',0,22,252,5,3
	.word	56180
	.byte	11,22,255,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47621
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE',0,22,132,6,3
	.word	56244
	.byte	11,22,135,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47708
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT',0,22,140,6,3
	.word	56306
	.byte	11,22,143,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47862
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID',0,22,148,6,3
	.word	56369
	.byte	11,22,151,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47956
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_D',0,22,156,6,3
	.word	56433
	.byte	11,22,159,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48019
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DATR',0,22,164,6,3
	.word	56492
	.byte	11,22,167,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48237
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR',0,22,172,6,3
	.word	56554
	.byte	11,22,175,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48452
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR',0,22,180,6,3
	.word	56617
	.byte	11,22,183,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48546
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0',0,22,188,6,3
	.word	56681
	.byte	11,22,191,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48662
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2',0,22,196,6,3
	.word	56744
	.byte	11,22,199,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48763
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCX',0,22,204,6,3
	.word	56807
	.byte	11,22,207,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48856
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD',0,22,212,6,3
	.word	56868
	.byte	11,22,215,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48936
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR',0,22,220,6,3
	.word	56931
	.byte	11,22,223,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49005
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR',0,22,228,6,3
	.word	56994
	.byte	11,22,231,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49234
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DMS',0,22,236,6,3
	.word	57057
	.byte	11,22,239,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49327
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L',0,22,244,6,3
	.word	57118
	.byte	11,22,247,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49422
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U',0,22,252,6,3
	.word	57181
	.byte	11,22,255,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49517
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE',0,22,132,7,3
	.word	57244
	.byte	11,22,135,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49607
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE',0,22,140,7,3
	.word	57306
	.byte	11,22,143,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49697
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR',0,22,148,7,3
	.word	57368
	.byte	11,22,151,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50021
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT',0,22,156,7,3
	.word	57430
	.byte	11,22,159,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50175
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FCX',0,22,164,7,3
	.word	57493
	.byte	11,22,167,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50281
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,22,172,7,3
	.word	57554
	.byte	11,22,175,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50630
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,22,180,7,3
	.word	57624
	.byte	11,22,183,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50790
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,22,188,7,3
	.word	57694
	.byte	11,22,191,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50871
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,22,196,7,3
	.word	57763
	.byte	11,22,199,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50958
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,22,204,7,3
	.word	57834
	.byte	11,22,207,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51045
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,22,212,7,3
	.word	57905
	.byte	11,22,215,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51132
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT',0,22,220,7,3
	.word	57976
	.byte	11,22,223,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51223
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ICR',0,22,228,7,3
	.word	58038
	.byte	11,22,231,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51366
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ISP',0,22,236,7,3
	.word	58099
	.byte	11,22,239,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51432
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_LCX',0,22,244,7,3
	.word	58160
	.byte	11,22,247,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51538
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT',0,22,252,7,3
	.word	58221
	.byte	11,22,255,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51631
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT',0,22,132,8,3
	.word	58284
	.byte	11,22,135,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51724
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT',0,22,140,8,3
	.word	58347
	.byte	11,22,143,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51817
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PC',0,22,148,8,3
	.word	58410
	.byte	11,22,151,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51902
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0',0,22,156,8,3
	.word	58470
	.byte	11,22,159,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52018
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1',0,22,164,8,3
	.word	58533
	.byte	11,22,167,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52129
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2',0,22,172,8,3
	.word	58596
	.byte	11,22,175,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52230
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI',0,22,180,8,3
	.word	58659
	.byte	11,22,183,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52360
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR',0,22,188,8,3
	.word	58721
	.byte	11,22,191,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52429
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR',0,22,196,8,3
	.word	58784
	.byte	11,22,199,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52658
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0',0,22,204,8,3
	.word	58847
	.byte	11,22,207,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52771
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1',0,22,212,8,3
	.word	58909
	.byte	11,22,215,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52884
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2',0,22,220,8,3
	.word	58971
	.byte	11,22,223,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52975
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR',0,22,228,8,3
	.word	59033
	.byte	11,22,231,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53178
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSW',0,22,236,8,3
	.word	59095
	.byte	11,22,239,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53421
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN',0,22,244,8,3
	.word	59156
	.byte	11,22,247,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53549
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON',0,22,252,8,3
	.word	59219
	.byte	11,22,255,8,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53790
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA',0,22,132,9,3
	.word	59283
	.byte	11,22,135,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53873
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB',0,22,140,9,3
	.word	59353
	.byte	11,22,143,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53964
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,22,148,9,3
	.word	59423
	.byte	11,22,151,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54055
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,22,156,9,3
	.word	59497
	.byte	11,22,159,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54154
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,22,164,9,3
	.word	59571
	.byte	11,22,167,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54261
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,22,172,9,3
	.word	59641
	.byte	11,22,175,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54368
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT',0,22,180,9,3
	.word	59711
	.byte	11,22,183,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54522
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON',0,22,188,9,3
	.word	59774
	.byte	11,22,191,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54683
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI',0,22,196,9,3
	.word	59838
	.byte	11,22,199,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54781
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON',0,22,204,9,3
	.word	59904
	.byte	11,22,207,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54953
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER',0,22,212,9,3
	.word	59969
	.byte	11,22,215,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55033
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR',0,22,220,9,3
	.word	60036
	.byte	11,22,223,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55106
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT',0,22,228,9,3
	.word	60100
	.byte	11,22,231,9,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55424
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC',0,22,236,9,3
	.word	60164
	.byte	9
	.byte	'_Ifx_CPU_CPR',0,22,247,9,25,8,12
	.byte	'L',0
	.word	56054
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	56117
	.byte	4,2,35,4,0,13
	.word	60230
	.byte	28
	.byte	'Ifx_CPU_CPR',0,22,251,9,3
	.word	60272
	.byte	9
	.byte	'_Ifx_CPU_DPR',0,22,254,9,25,8,12
	.byte	'L',0
	.word	57118
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	57181
	.byte	4,2,35,4,0,13
	.word	60298
	.byte	28
	.byte	'Ifx_CPU_DPR',0,22,130,10,3
	.word	60340
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN',0,22,133,10,25,16,12
	.byte	'LA',0
	.word	59571
	.byte	4,2,35,0,12
	.byte	'UA',0
	.word	59641
	.byte	4,2,35,4,12
	.byte	'ACCENA',0
	.word	59423
	.byte	4,2,35,8,12
	.byte	'ACCENB',0
	.word	59497
	.byte	4,2,35,12,0,13
	.word	60366
	.byte	28
	.byte	'Ifx_CPU_SPROT_RGN',0,22,139,10,3
	.word	60448
	.byte	16,12
	.word	59969
	.byte	17,2,0,9
	.byte	'_Ifx_CPU_TPS',0,22,142,10,25,16,12
	.byte	'CON',0
	.word	59904
	.byte	4,2,35,0,12
	.byte	'TIMER',0
	.word	60480
	.byte	12,2,35,4,0,13
	.word	60489
	.byte	28
	.byte	'Ifx_CPU_TPS',0,22,146,10,3
	.word	60537
	.byte	9
	.byte	'_Ifx_CPU_TR',0,22,149,10,25,8,12
	.byte	'EVT',0
	.word	60100
	.byte	4,2,35,0,12
	.byte	'ADR',0
	.word	60036
	.byte	4,2,35,4,0,13
	.word	60563
	.byte	28
	.byte	'Ifx_CPU_TR',0,22,153,10,3
	.word	60608
	.byte	28
	.byte	'IfxCpu_ResourceCpu',0,8,87,3
	.word	1699
	.byte	14,7,118,9,1,15
	.byte	'IfxCpu_CounterMode_normal',0,0,15
	.byte	'IfxCpu_CounterMode_task',0,1,0,28
	.byte	'IfxCpu_CounterMode',0,7,122,3
	.word	60660
	.byte	27,7,132,1,9,6,12
	.byte	'counter',0
	.word	1830
	.byte	4,2,35,0,12
	.byte	'overlfow',0
	.word	353
	.byte	1,2,35,4,0,28
	.byte	'IfxCpu_Counter',0,7,136,1,3
	.word	60747
	.byte	27,7,144,1,9,32,12
	.byte	'instruction',0
	.word	60747
	.byte	6,2,35,0,12
	.byte	'clock',0
	.word	60747
	.byte	6,2,35,6,12
	.byte	'counter1',0
	.word	60747
	.byte	6,2,35,12,12
	.byte	'counter2',0
	.word	60747
	.byte	6,2,35,18,12
	.byte	'counter3',0
	.word	60747
	.byte	6,2,35,24,0,28
	.byte	'IfxCpu_Perf',0,7,151,1,3
	.word	60813
	.byte	9
	.byte	'_Ifx_STM_ACCEN0_Bits',0,23,45,16,4,10
	.byte	'EN0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_STM_ACCEN0_Bits',0,23,79,3
	.word	60931
	.byte	9
	.byte	'_Ifx_STM_ACCEN1_Bits',0,23,82,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_ACCEN1_Bits',0,23,85,3
	.word	61488
	.byte	9
	.byte	'_Ifx_STM_CAP_Bits',0,23,88,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_CAP_Bits',0,23,91,3
	.word	61565
	.byte	9
	.byte	'_Ifx_STM_CAPSV_Bits',0,23,94,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_CAPSV_Bits',0,23,97,3
	.word	61637
	.byte	9
	.byte	'_Ifx_STM_CLC_Bits',0,23,100,16,4,10
	.byte	'DISR',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	330
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_STM_CLC_Bits',0,23,107,3
	.word	61713
	.byte	9
	.byte	'_Ifx_STM_CMCON_Bits',0,23,110,16,4,10
	.byte	'MSIZE0',0,1
	.word	353
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	353
	.byte	3,0,2,35,0,10
	.byte	'MSTART0',0,1
	.word	353
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	353
	.byte	3,0,2,35,1,10
	.byte	'MSIZE1',0,1
	.word	353
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	353
	.byte	3,0,2,35,2,10
	.byte	'MSTART1',0,1
	.word	353
	.byte	5,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	353
	.byte	3,0,2,35,3,0,28
	.byte	'Ifx_STM_CMCON_Bits',0,23,120,3
	.word	61854
	.byte	9
	.byte	'_Ifx_STM_CMP_Bits',0,23,123,16,4,10
	.byte	'CMPVAL',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_CMP_Bits',0,23,126,3
	.word	62072
	.byte	9
	.byte	'_Ifx_STM_ICR_Bits',0,23,129,1,16,4,10
	.byte	'CMP0EN',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'CMP0IR',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'CMP0OS',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'CMP1EN',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'CMP1IR',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'CMP1OS',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	330
	.byte	25,0,2,35,0,0,28
	.byte	'Ifx_STM_ICR_Bits',0,23,139,1,3
	.word	62139
	.byte	9
	.byte	'_Ifx_STM_ID_Bits',0,23,142,1,16,4,10
	.byte	'MODREV',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_STM_ID_Bits',0,23,147,1,3
	.word	62342
	.byte	9
	.byte	'_Ifx_STM_ISCR_Bits',0,23,150,1,16,4,10
	.byte	'CMP0IRR',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'CMP0IRS',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'CMP1IRR',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'CMP1IRS',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	330
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_STM_ISCR_Bits',0,23,157,1,3
	.word	62449
	.byte	9
	.byte	'_Ifx_STM_KRST0_Bits',0,23,160,1,16,4,10
	.byte	'RST',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	330
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_STM_KRST0_Bits',0,23,165,1,3
	.word	62600
	.byte	9
	.byte	'_Ifx_STM_KRST1_Bits',0,23,168,1,16,4,10
	.byte	'RST',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	330
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_STM_KRST1_Bits',0,23,172,1,3
	.word	62711
	.byte	9
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,23,175,1,16,4,10
	.byte	'CLR',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	330
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_STM_KRSTCLR_Bits',0,23,179,1,3
	.word	62803
	.byte	9
	.byte	'_Ifx_STM_OCS_Bits',0,23,182,1,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	353
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	353
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_STM_OCS_Bits',0,23,189,1,3
	.word	62899
	.byte	9
	.byte	'_Ifx_STM_TIM0_Bits',0,23,192,1,16,4,10
	.byte	'STM31_0',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM0_Bits',0,23,195,1,3
	.word	63045
	.byte	9
	.byte	'_Ifx_STM_TIM0SV_Bits',0,23,198,1,16,4,10
	.byte	'STM31_0',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM0SV_Bits',0,23,201,1,3
	.word	63117
	.byte	9
	.byte	'_Ifx_STM_TIM1_Bits',0,23,204,1,16,4,10
	.byte	'STM35_4',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM1_Bits',0,23,207,1,3
	.word	63193
	.byte	9
	.byte	'_Ifx_STM_TIM2_Bits',0,23,210,1,16,4,10
	.byte	'STM39_8',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM2_Bits',0,23,213,1,3
	.word	63265
	.byte	9
	.byte	'_Ifx_STM_TIM3_Bits',0,23,216,1,16,4,10
	.byte	'STM43_12',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM3_Bits',0,23,219,1,3
	.word	63337
	.byte	9
	.byte	'_Ifx_STM_TIM4_Bits',0,23,222,1,16,4,10
	.byte	'STM47_16',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM4_Bits',0,23,225,1,3
	.word	63410
	.byte	9
	.byte	'_Ifx_STM_TIM5_Bits',0,23,228,1,16,4,10
	.byte	'STM51_20',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM5_Bits',0,23,231,1,3
	.word	63483
	.byte	9
	.byte	'_Ifx_STM_TIM6_Bits',0,23,234,1,16,4,10
	.byte	'STM63_32',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM6_Bits',0,23,237,1,3
	.word	63556
	.byte	11,23,245,1,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60931
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ACCEN0',0,23,250,1,3
	.word	63629
	.byte	11,23,253,1,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61488
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ACCEN1',0,23,130,2,3
	.word	63693
	.byte	11,23,133,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61565
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CAP',0,23,138,2,3
	.word	63757
	.byte	11,23,141,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61637
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CAPSV',0,23,146,2,3
	.word	63818
	.byte	11,23,149,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61713
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CLC',0,23,154,2,3
	.word	63881
	.byte	11,23,157,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61854
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CMCON',0,23,162,2,3
	.word	63942
	.byte	11,23,165,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62072
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CMP',0,23,170,2,3
	.word	64005
	.byte	11,23,173,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62139
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ICR',0,23,178,2,3
	.word	64066
	.byte	11,23,181,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62342
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ID',0,23,186,2,3
	.word	64127
	.byte	11,23,189,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62449
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ISCR',0,23,194,2,3
	.word	64187
	.byte	11,23,197,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62600
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_KRST0',0,23,202,2,3
	.word	64249
	.byte	11,23,205,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62711
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_KRST1',0,23,210,2,3
	.word	64312
	.byte	11,23,213,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62803
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_KRSTCLR',0,23,218,2,3
	.word	64375
	.byte	11,23,221,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62899
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_OCS',0,23,226,2,3
	.word	64440
	.byte	11,23,229,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63045
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM0',0,23,234,2,3
	.word	64501
	.byte	11,23,237,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63117
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM0SV',0,23,242,2,3
	.word	64563
	.byte	11,23,245,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63193
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM1',0,23,250,2,3
	.word	64627
	.byte	11,23,253,2,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63265
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM2',0,23,130,3,3
	.word	64689
	.byte	11,23,133,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63337
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM3',0,23,138,3,3
	.word	64751
	.byte	11,23,141,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63410
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM4',0,23,146,3,3
	.word	64813
	.byte	11,23,149,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63483
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM5',0,23,154,3,3
	.word	64875
	.byte	11,23,157,3,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63556
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM6',0,23,162,3,3
	.word	64937
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,24,45,16,4,10
	.byte	'EN0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,24,79,3
	.word	64999
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,24,82,16,4,10
	.byte	'reserved_0',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,24,85,3
	.word	65560
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,24,88,16,4,10
	.byte	'SEL',0,1
	.word	353
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	353
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	330
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,24,95,3
	.word	65641
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,24,98,16,4,10
	.byte	'VLD0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'VLD1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'VLD2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'VLD3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'VLD4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'VLD5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'VLD6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'VLD7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'VLD8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'VLD9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	330
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,24,111,3
	.word	65794
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,24,114,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	330
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	353
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,24,121,3
	.word	66042
	.byte	9
	.byte	'_Ifx_FLASH_COMM0_Bits',0,24,124,16,4,10
	.byte	'STATUS',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	330
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0_Bits',0,24,128,1,3
	.word	66188
	.byte	9
	.byte	'_Ifx_FLASH_COMM1_Bits',0,24,131,1,16,4,10
	.byte	'STATUS',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM1_Bits',0,24,136,1,3
	.word	66286
	.byte	9
	.byte	'_Ifx_FLASH_COMM2_Bits',0,24,139,1,16,4,10
	.byte	'STATUS',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM2_Bits',0,24,144,1,3
	.word	66402
	.byte	9
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,24,147,1,16,4,10
	.byte	'RCODE',0,4
	.word	330
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	904
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRD_Bits',0,24,153,1,3
	.word	66518
	.byte	9
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,24,156,1,16,4,10
	.byte	'RCODE',0,4
	.word	330
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	904
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRP_Bits',0,24,162,1,3
	.word	66658
	.byte	9
	.byte	'_Ifx_FLASH_ECCW_Bits',0,24,165,1,16,4,10
	.byte	'WCODE',0,4
	.word	330
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	904
	.byte	8,2,2,35,2,10
	.byte	'DECENCDIS',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'PECENCDIS',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCW_Bits',0,24,171,1,3
	.word	66798
	.byte	9
	.byte	'_Ifx_FLASH_FCON_Bits',0,24,174,1,16,4,10
	.byte	'WSPFLASH',0,1
	.word	353
	.byte	4,4,2,35,0,10
	.byte	'WSECPF',0,1
	.word	353
	.byte	2,2,2,35,0,10
	.byte	'WSDFLASH',0,2
	.word	904
	.byte	6,4,2,35,0,10
	.byte	'WSECDF',0,1
	.word	353
	.byte	3,1,2,35,1,10
	.byte	'IDLE',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'ESLDIS',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'SLEEP',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'NSAFECC',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'STALL',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'RES21',0,1
	.word	353
	.byte	2,2,2,35,2,10
	.byte	'RES23',0,1
	.word	353
	.byte	2,0,2,35,2,10
	.byte	'VOPERM',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'PROERM',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	353
	.byte	3,2,2,35,3,10
	.byte	'PR5V',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FCON_Bits',0,24,193,1,3
	.word	66937
	.byte	9
	.byte	'_Ifx_FLASH_FPRO_Bits',0,24,196,1,16,4,10
	.byte	'PROINP',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'PRODISP',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'PROIND',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'PRODISD',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'PROINHSMCOTP',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'PROINOTP',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'RES7',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'PROINDBG',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'PRODISDBG',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'PROINHSM',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	353
	.byte	5,0,2,35,1,10
	.byte	'DCFP',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'DDFP',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'DDFPX',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'DDFD',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'ENPE',0,1
	.word	353
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	353
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FPRO_Bits',0,24,218,1,3
	.word	67299
	.byte	9
	.byte	'_Ifx_FLASH_FSR_Bits',0,24,221,1,16,4,10
	.byte	'FABUSY',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'D0BUSY',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'RES1',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'P0BUSY',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'RES4',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'RES6',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'PROG',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'PFPAGE',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'PROER',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'PFSBER',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'PFDBER',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'PFMBER',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'RES17',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'DFSBER',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'DFDBER',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'DFTBER',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'DFMBER',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'SRIADDERR',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	904
	.byte	2,7,2,35,2,10
	.byte	'PVER',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'SLM',0,1
	.word	353
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	353
	.byte	1,2,2,35,3,10
	.byte	'ORIER',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FSR_Bits',0,24,254,1,3
	.word	67740
	.byte	9
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,24,129,2,16,4,10
	.byte	'LCKHSMUCB',0,1
	.word	353
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	330
	.byte	22,8,2,35,0,10
	.byte	'VOPERM',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	353
	.byte	5,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,24,137,2,3
	.word	68344
	.byte	9
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,24,140,2,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	2,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	353
	.byte	4,1,2,35,0,10
	.byte	'PROG',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	330
	.byte	12,7,2,35,0,10
	.byte	'PVER',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	353
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	353
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,24,156,2,3
	.word	68524
	.byte	9
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,24,159,2,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'SELD1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,4
	.word	330
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,24,167,2,3
	.word	68846
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,24,170,2,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	330
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,24,174,2,3
	.word	69027
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,24,177,2,16,4,10
	.byte	'STRT',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	353
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	353
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,24,188,2,3
	.word	69127
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,24,191,2,16,4,10
	.byte	'DATA',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,24,194,2,3
	.word	69343
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,24,197,2,16,4,10
	.byte	'DATA',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,24,200,2,3
	.word	69422
	.byte	9
	.byte	'_Ifx_FLASH_ID_Bits',0,24,203,2,16,4,10
	.byte	'MODREV',0,1
	.word	353
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	353
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_ID_Bits',0,24,208,2,3
	.word	69501
	.byte	9
	.byte	'_Ifx_FLASH_MARD_Bits',0,24,211,2,16,4,10
	.byte	'HMARGIN',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'SELD0',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	904
	.byte	10,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARD_Bits',0,24,221,2,3
	.word	69612
	.byte	9
	.byte	'_Ifx_FLASH_MARP_Bits',0,24,224,2,16,4,10
	.byte	'SELP0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'RES1',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'RES2',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'RES3',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	904
	.byte	11,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARP_Bits',0,24,233,2,3
	.word	69826
	.byte	9
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,24,236,2,16,4,10
	.byte	'L',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'NSAFECC',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'RAMIN',0,1
	.word	353
	.byte	2,4,2,35,0,10
	.byte	'RAMINSEL',0,1
	.word	353
	.byte	4,0,2,35,0,10
	.byte	'RES8',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'RES9',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'RES10',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'RES11',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'RES12',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'RES13',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'RES14',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'RES15',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'ESR0CNT',0,2
	.word	904
	.byte	12,4,2,35,2,10
	.byte	'RES29',0,1
	.word	353
	.byte	2,2,2,35,3,10
	.byte	'RES30',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCOND_Bits',0,24,254,2,3
	.word	70012
	.byte	9
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,24,129,3,16,4,10
	.byte	'OCDSDIS',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'EDM',0,1
	.word	353
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	330
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,24,135,3,3
	.word	70347
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,24,138,3,16,4,10
	.byte	'HSMDBGDIS',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'TSTIFLCK',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'HSMTSTDIS',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'RES15',0,2
	.word	904
	.byte	12,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,24,146,3,3
	.word	70490
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,24,149,3,16,4,10
	.byte	'HSMBOOTEN',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'SSWWAIT',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'HSMDX',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'HSM6X',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'HSM16X',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'HSM17X',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'HSMENPINS',0,2
	.word	904
	.byte	2,7,2,35,0,10
	.byte	'HSMENRES',0,1
	.word	353
	.byte	2,5,2,35,1,10
	.byte	'DESTDBG',0,1
	.word	353
	.byte	2,3,2,35,1,10
	.byte	'BLKFLAN',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'BOOTSEL',0,1
	.word	353
	.byte	2,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	904
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,24,166,3,3
	.word	70679
	.byte	9
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,24,169,3,16,4,10
	.byte	'S0ROM',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'S1ROM',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'S2ROM',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'S3ROM',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'S4ROM',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'S5ROM',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'S7ROM',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'S8ROM',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'S9ROM',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'S10ROM',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'S11ROM',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'S12ROM',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'S13ROM',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'S14ROM',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'S15ROM',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'S18ROM',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'S19ROM',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'S20ROM',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'S21ROM',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'S22ROM',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'S23ROM',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'S24ROM',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'S25ROM',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'S26ROM',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	353
	.byte	2,3,2,35,3,10
	.byte	'BML',0,1
	.word	353
	.byte	2,1,2,35,3,10
	.byte	'TP',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,24,201,3,3
	.word	71038
	.byte	9
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,24,204,3,16,4,10
	.byte	'S0L',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'S1L',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'S2L',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'S3L',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'S4L',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'S5L',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'S6L',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'S7L',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'S8L',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'S9L',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'S10L',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'S11L',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'S12L',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'S13L',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'S14L',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'S15L',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'S16L',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'S17L',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'S18L',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'S19L',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'S20L',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'S21L',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'S22L',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'S23L',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'S24L',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'S25L',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'S26L',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	353
	.byte	4,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONP_Bits',0,24,235,3,3
	.word	71633
	.byte	9
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,24,238,3,16,4,10
	.byte	'S0WOP',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'S1WOP',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'S2WOP',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'S3WOP',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'S4WOP',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'S5WOP',0,1
	.word	353
	.byte	1,2,2,35,0,10
	.byte	'S6WOP',0,1
	.word	353
	.byte	1,1,2,35,0,10
	.byte	'S7WOP',0,1
	.word	353
	.byte	1,0,2,35,0,10
	.byte	'S8WOP',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'S9WOP',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'S10WOP',0,1
	.word	353
	.byte	1,5,2,35,1,10
	.byte	'S11WOP',0,1
	.word	353
	.byte	1,4,2,35,1,10
	.byte	'S12WOP',0,1
	.word	353
	.byte	1,3,2,35,1,10
	.byte	'S13WOP',0,1
	.word	353
	.byte	1,2,2,35,1,10
	.byte	'S14WOP',0,1
	.word	353
	.byte	1,1,2,35,1,10
	.byte	'S15WOP',0,1
	.word	353
	.byte	1,0,2,35,1,10
	.byte	'S16WOP',0,1
	.word	353
	.byte	1,7,2,35,2,10
	.byte	'S17WOP',0,1
	.word	353
	.byte	1,6,2,35,2,10
	.byte	'S18WOP',0,1
	.word	353
	.byte	1,5,2,35,2,10
	.byte	'S19WOP',0,1
	.word	353
	.byte	1,4,2,35,2,10
	.byte	'S20WOP',0,1
	.word	353
	.byte	1,3,2,35,2,10
	.byte	'S21WOP',0,1
	.word	353
	.byte	1,2,2,35,2,10
	.byte	'S22WOP',0,1
	.word	353
	.byte	1,1,2,35,2,10
	.byte	'S23WOP',0,1
	.word	353
	.byte	1,0,2,35,2,10
	.byte	'S24WOP',0,1
	.word	353
	.byte	1,7,2,35,3,10
	.byte	'S25WOP',0,1
	.word	353
	.byte	1,6,2,35,3,10
	.byte	'S26WOP',0,1
	.word	353
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	353
	.byte	4,1,2,35,3,10
	.byte	'DATM',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,24,141,4,3
	.word	72157
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,24,144,4,16,4,10
	.byte	'TAG',0,1
	.word	353
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	330
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,24,148,4,3
	.word	72739
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,24,151,4,16,4,10
	.byte	'TAG',0,1
	.word	353
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	330
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,24,155,4,3
	.word	72841
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,24,158,4,16,4,10
	.byte	'TAG',0,1
	.word	353
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	330
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,24,162,4,3
	.word	72943
	.byte	9
	.byte	'_Ifx_FLASH_RRAD_Bits',0,24,165,4,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	330
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD_Bits',0,24,169,4,3
	.word	73045
	.byte	9
	.byte	'_Ifx_FLASH_RRCT_Bits',0,24,172,4,16,4,10
	.byte	'STRT',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	353
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	353
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	353
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	353
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	353
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	353
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	904
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_RRCT_Bits',0,24,183,4,3
	.word	73139
	.byte	9
	.byte	'_Ifx_FLASH_RRD0_Bits',0,24,186,4,16,4,10
	.byte	'DATA',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0_Bits',0,24,189,4,3
	.word	73349
	.byte	9
	.byte	'_Ifx_FLASH_RRD1_Bits',0,24,192,4,16,4,10
	.byte	'DATA',0,4
	.word	330
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1_Bits',0,24,195,4,3
	.word	73422
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,24,198,4,16,4,10
	.byte	'SEL',0,1
	.word	353
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	353
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	353
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	353
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	330
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,24,205,4,3
	.word	73495
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,24,208,4,16,4,10
	.byte	'VLD0',0,1
	.word	353
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	330
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,24,212,4,3
	.word	73650
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,24,215,4,16,4,10
	.byte	'reserved_0',0,1
	.word	353
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	330
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	353
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	353
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	353
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,24,222,4,3
	.word	73755
	.byte	11,24,230,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64999
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN0',0,24,235,4,3
	.word	73903
	.byte	11,24,238,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65560
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1',0,24,243,4,3
	.word	73969
	.byte	11,24,246,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65641
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG',0,24,251,4,3
	.word	74035
	.byte	11,24,254,4,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65794
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT',0,24,131,5,3
	.word	74103
	.byte	11,24,134,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66042
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_TOP',0,24,139,5,3
	.word	74172
	.byte	11,24,142,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66188
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0',0,24,147,5,3
	.word	74240
	.byte	11,24,150,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66286
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM1',0,24,155,5,3
	.word	74305
	.byte	11,24,158,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66402
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM2',0,24,163,5,3
	.word	74370
	.byte	11,24,166,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66518
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRD',0,24,171,5,3
	.word	74435
	.byte	11,24,174,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66658
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRP',0,24,179,5,3
	.word	74500
	.byte	11,24,182,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66798
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCW',0,24,187,5,3
	.word	74565
	.byte	11,24,190,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66937
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FCON',0,24,195,5,3
	.word	74629
	.byte	11,24,198,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67299
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FPRO',0,24,203,5,3
	.word	74693
	.byte	11,24,206,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67740
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FSR',0,24,211,5,3
	.word	74757
	.byte	11,24,214,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68344
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFCON',0,24,219,5,3
	.word	74820
	.byte	11,24,222,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68524
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFSR',0,24,227,5,3
	.word	74887
	.byte	11,24,230,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68846
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD',0,24,235,5,3
	.word	74953
	.byte	11,24,238,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69027
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD',0,24,243,5,3
	.word	75020
	.byte	11,24,246,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69127
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRCT',0,24,251,5,3
	.word	75087
	.byte	11,24,254,5,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69343
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0',0,24,131,6,3
	.word	75154
	.byte	11,24,134,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69422
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1',0,24,139,6,3
	.word	75221
	.byte	11,24,142,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69501
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ID',0,24,147,6,3
	.word	75288
	.byte	11,24,150,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69612
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARD',0,24,155,6,3
	.word	75350
	.byte	11,24,158,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69826
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARP',0,24,163,6,3
	.word	75414
	.byte	11,24,166,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70012
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCOND',0,24,171,6,3
	.word	75478
	.byte	11,24,174,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70347
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG',0,24,179,6,3
	.word	75545
	.byte	11,24,182,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70490
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSM',0,24,187,6,3
	.word	75614
	.byte	11,24,190,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70679
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,24,195,6,3
	.word	75683
	.byte	11,24,198,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71038
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONOTP',0,24,203,6,3
	.word	75756
	.byte	11,24,206,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71633
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONP',0,24,211,6,3
	.word	75825
	.byte	11,24,214,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72157
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONWOP',0,24,219,6,3
	.word	75892
	.byte	11,24,222,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72739
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0',0,24,227,6,3
	.word	75961
	.byte	11,24,230,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72841
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1',0,24,235,6,3
	.word	76029
	.byte	11,24,238,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72943
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2',0,24,243,6,3
	.word	76097
	.byte	11,24,246,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73045
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD',0,24,251,6,3
	.word	76165
	.byte	11,24,254,6,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73139
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRCT',0,24,131,7,3
	.word	76229
	.byte	11,24,134,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73349
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0',0,24,139,7,3
	.word	76293
	.byte	11,24,142,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73422
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1',0,24,147,7,3
	.word	76357
	.byte	11,24,150,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73495
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG',0,24,155,7,3
	.word	76421
	.byte	11,24,158,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73650
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT',0,24,163,7,3
	.word	76489
	.byte	11,24,166,7,9,4,12
	.byte	'U',0
	.word	330
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	346
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73755
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_TOP',0,24,171,7,3
	.word	76558
	.byte	16,36
	.word	353
	.byte	17,35,0,9
	.byte	'_Ifx_FLASH_CBAB',0,24,182,7,25,48,12
	.byte	'CFG',0
	.word	74035
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	74103
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	74172
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	76626
	.byte	36,2,35,12,0,13
	.word	76635
	.byte	28
	.byte	'Ifx_FLASH_CBAB',0,24,188,7,3
	.word	76718
	.byte	9
	.byte	'_Ifx_FLASH_RDB',0,24,191,7,25,48,12
	.byte	'CFG0',0
	.word	75961
	.byte	4,2,35,0,12
	.byte	'CFG1',0
	.word	76029
	.byte	4,2,35,4,12
	.byte	'CFG2',0
	.word	76097
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	76626
	.byte	36,2,35,12,0,13
	.word	76747
	.byte	28
	.byte	'Ifx_FLASH_RDB',0,24,197,7,3
	.word	76831
	.byte	16,80
	.word	353
	.byte	17,79,0,9
	.byte	'_Ifx_FLASH_UBAB',0,24,200,7,25,92,12
	.byte	'CFG',0
	.word	76421
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	76489
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	76558
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	76859
	.byte	80,2,35,12,0,13
	.word	76868
	.byte	28
	.byte	'Ifx_FLASH_UBAB',0,24,206,7,3
	.word	76951
	.byte	28
	.byte	'Ifx_P_ACCEN0_Bits',0,10,79,3
	.word	7930
	.byte	28
	.byte	'Ifx_P_ACCEN1_Bits',0,10,85,3
	.word	7843
	.byte	28
	.byte	'Ifx_P_ESR_Bits',0,10,107,3
	.word	4893
	.byte	28
	.byte	'Ifx_P_ID_Bits',0,10,115,3
	.word	2946
	.byte	28
	.byte	'Ifx_P_IN_Bits',0,10,137,1,3
	.word	3941
	.byte	28
	.byte	'Ifx_P_IOCR0_Bits',0,10,150,1,3
	.word	3074
	.byte	28
	.byte	'Ifx_P_IOCR12_Bits',0,10,163,1,3
	.word	3721
	.byte	28
	.byte	'Ifx_P_IOCR4_Bits',0,10,176,1,3
	.word	3289
	.byte	28
	.byte	'Ifx_P_IOCR8_Bits',0,10,189,1,3
	.word	3504
	.byte	28
	.byte	'Ifx_P_OMCR0_Bits',0,10,200,1,3
	.word	6473
	.byte	28
	.byte	'Ifx_P_OMCR12_Bits',0,10,210,1,3
	.word	6997
	.byte	28
	.byte	'Ifx_P_OMCR4_Bits',0,10,221,1,3
	.word	6647
	.byte	28
	.byte	'Ifx_P_OMCR8_Bits',0,10,232,1,3
	.word	6821
	.byte	28
	.byte	'Ifx_P_OMCR_Bits',0,10,254,1,3
	.word	7486
	.byte	28
	.byte	'Ifx_P_OMR_Bits',0,10,163,2,3
	.word	2375
	.byte	28
	.byte	'Ifx_P_OMSR0_Bits',0,10,173,2,3
	.word	5810
	.byte	28
	.byte	'Ifx_P_OMSR12_Bits',0,10,184,2,3
	.word	6298
	.byte	28
	.byte	'Ifx_P_OMSR4_Bits',0,10,195,2,3
	.word	5957
	.byte	28
	.byte	'Ifx_P_OMSR8_Bits',0,10,206,2,3
	.word	6126
	.byte	28
	.byte	'Ifx_P_OMSR_Bits',0,10,228,2,3
	.word	7153
	.byte	28
	.byte	'Ifx_P_OUT_Bits',0,10,250,2,3
	.word	2059
	.byte	28
	.byte	'Ifx_P_PCSR_Bits',0,10,135,3,3
	.word	5599
	.byte	28
	.byte	'Ifx_P_PDISC_Bits',0,10,157,3,3
	.word	5233
	.byte	28
	.byte	'Ifx_P_PDR0_Bits',0,10,178,3,3
	.word	4264
	.byte	28
	.byte	'Ifx_P_PDR1_Bits',0,10,199,3,3
	.word	4568
	.byte	28
	.byte	'Ifx_P_ACCEN0',0,10,212,3,3
	.word	8457
	.byte	28
	.byte	'Ifx_P_ACCEN1',0,10,220,3,3
	.word	7890
	.byte	28
	.byte	'Ifx_P_ESR',0,10,228,3,3
	.word	5184
	.byte	28
	.byte	'Ifx_P_ID',0,10,236,3,3
	.word	3025
	.byte	28
	.byte	'Ifx_P_IN',0,10,244,3,3
	.word	4215
	.byte	28
	.byte	'Ifx_P_IOCR0',0,10,252,3,3
	.word	3249
	.byte	28
	.byte	'Ifx_P_IOCR12',0,10,132,4,3
	.word	3901
	.byte	28
	.byte	'Ifx_P_IOCR4',0,10,140,4,3
	.word	3464
	.byte	28
	.byte	'Ifx_P_IOCR8',0,10,148,4,3
	.word	3681
	.byte	28
	.byte	'Ifx_P_OMCR',0,10,156,4,3
	.word	7794
	.byte	28
	.byte	'Ifx_P_OMCR0',0,10,164,4,3
	.word	6607
	.byte	28
	.byte	'Ifx_P_OMCR12',0,10,172,4,3
	.word	7113
	.byte	28
	.byte	'Ifx_P_OMCR4',0,10,180,4,3
	.word	6781
	.byte	28
	.byte	'Ifx_P_OMCR8',0,10,188,4,3
	.word	6957
	.byte	28
	.byte	'Ifx_P_OMR',0,10,196,4,3
	.word	2906
	.byte	28
	.byte	'Ifx_P_OMSR',0,10,204,4,3
	.word	7446
	.byte	28
	.byte	'Ifx_P_OMSR0',0,10,212,4,3
	.word	5917
	.byte	28
	.byte	'Ifx_P_OMSR12',0,10,220,4,3
	.word	6433
	.byte	28
	.byte	'Ifx_P_OMSR4',0,10,228,4,3
	.word	6086
	.byte	28
	.byte	'Ifx_P_OMSR8',0,10,236,4,3
	.word	6258
	.byte	28
	.byte	'Ifx_P_OUT',0,10,244,4,3
	.word	2335
	.byte	28
	.byte	'Ifx_P_PCSR',0,10,252,4,3
	.word	5770
	.byte	28
	.byte	'Ifx_P_PDISC',0,10,132,5,3
	.word	5559
	.byte	28
	.byte	'Ifx_P_PDR0',0,10,140,5,3
	.word	4528
	.byte	28
	.byte	'Ifx_P_PDR1',0,10,148,5,3
	.word	4844
	.byte	13
	.word	8497
	.byte	28
	.byte	'Ifx_P',0,10,193,5,3
	.word	78127
	.byte	28
	.byte	'IfxPort_InputMode',0,9,60,3
	.word	9040
	.byte	28
	.byte	'IfxPort_Mode',0,9,87,3
	.word	15751
	.byte	28
	.byte	'IfxPort_OutputIdx',0,9,101,3
	.word	9314
	.byte	28
	.byte	'IfxPort_OutputMode',0,9,109,3
	.word	9245
	.byte	14,9,115,9,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,15
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,15
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,15
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,15
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,28
	.byte	'IfxPort_PadDriver',0,9,125,3
	.word	78247
	.byte	28
	.byte	'IfxPort_State',0,9,137,1,3
	.word	9627
	.byte	28
	.byte	'IfxPort_Pin',0,9,153,1,3
	.word	16721
	.byte	31,1,1,6
	.word	78607
	.byte	28
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,14,129,1,16
	.word	78610
	.byte	27,14,197,5,9,8,12
	.byte	'value',0
	.word	1830
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1830
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_CcuconRegConfig',0,14,201,5,3
	.word	78655
	.byte	27,14,206,5,9,8,12
	.byte	'pDivider',0
	.word	353
	.byte	1,2,35,0,12
	.byte	'nDivider',0
	.word	353
	.byte	1,2,35,1,12
	.byte	'k2Initial',0
	.word	353
	.byte	1,2,35,2,12
	.byte	'waitTime',0
	.word	15255
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_InitialStepConfig',0,14,212,5,3
	.word	78726
	.byte	27,14,216,5,9,12,12
	.byte	'k2Step',0
	.word	353
	.byte	1,2,35,0,12
	.byte	'waitTime',0
	.word	15255
	.byte	4,2,35,2,12
	.byte	'hookFunction',0
	.word	78615
	.byte	4,2,35,8,0,28
	.byte	'IfxScuCcu_PllStepsConfig',0,14,221,5,3
	.word	78843
	.byte	6
	.word	78607
	.byte	27,14,229,5,9,40,12
	.byte	'ccucon0',0
	.word	78655
	.byte	8,2,35,0,12
	.byte	'ccucon1',0
	.word	78655
	.byte	8,2,35,8,12
	.byte	'ccucon2',0
	.word	78655
	.byte	8,2,35,16,12
	.byte	'ccucon5',0
	.word	78655
	.byte	8,2,35,24,12
	.byte	'ccucon6',0
	.word	78655
	.byte	8,2,35,32,0,28
	.byte	'IfxScuCcu_ClockDistributionConfig',0,14,236,5,3
	.word	78945
	.byte	27,14,240,5,9,8,12
	.byte	'value',0
	.word	1830
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1830
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,14,244,5,3
	.word	79080
	.byte	6
	.word	78843
	.byte	27,14,249,5,9,16,12
	.byte	'numOfPllDividerSteps',0
	.word	353
	.byte	1,2,35,0,12
	.byte	'pllDividerStep',0
	.word	79156
	.byte	4,2,35,4,12
	.byte	'pllInitialStep',0
	.word	78726
	.byte	8,2,35,8,0,28
	.byte	'IfxScuCcu_SysPllConfig',0,14,254,5,3
	.word	79161
	.byte	28
	.byte	'Ifx_GPT12_ACCEN0_Bits',0,12,79,3
	.word	13012
	.byte	28
	.byte	'Ifx_GPT12_ACCEN1_Bits',0,12,85,3
	.word	12921
	.byte	28
	.byte	'Ifx_GPT12_CAPREL_Bits',0,12,92,3
	.word	11786
	.byte	28
	.byte	'Ifx_GPT12_CLC_Bits',0,12,102,3
	.word	9808
	.byte	28
	.byte	'Ifx_GPT12_ID_Bits',0,12,110,3
	.word	10262
	.byte	28
	.byte	'Ifx_GPT12_KRST0_Bits',0,12,118,3
	.word	12797
	.byte	28
	.byte	'Ifx_GPT12_KRST1_Bits',0,12,125,3
	.word	12692
	.byte	28
	.byte	'Ifx_GPT12_KRSTCLR_Bits',0,12,132,1,3
	.word	12584
	.byte	28
	.byte	'Ifx_GPT12_OCS_Bits',0,12,142,1,3
	.word	12422
	.byte	28
	.byte	'Ifx_GPT12_PISEL_Bits',0,12,159,1,3
	.word	9966
	.byte	28
	.byte	'Ifx_GPT12_T2_Bits',0,12,166,1,3
	.word	11896
	.byte	28
	.byte	'Ifx_GPT12_T2CON_Bits',0,12,183,1,3
	.word	10385
	.byte	28
	.byte	'Ifx_GPT12_T3_Bits',0,12,190,1,3
	.word	11999
	.byte	28
	.byte	'Ifx_GPT12_T3CON_Bits',0,12,207,1,3
	.word	10668
	.byte	28
	.byte	'Ifx_GPT12_T4_Bits',0,12,214,1,3
	.word	12102
	.byte	28
	.byte	'Ifx_GPT12_T4CON_Bits',0,12,232,1,3
	.word	10942
	.byte	28
	.byte	'Ifx_GPT12_T5_Bits',0,12,239,1,3
	.word	12205
	.byte	28
	.byte	'Ifx_GPT12_T5CON_Bits',0,12,128,2,3
	.word	11240
	.byte	28
	.byte	'Ifx_GPT12_T6_Bits',0,12,135,2,3
	.word	12308
	.byte	28
	.byte	'Ifx_GPT12_T6CON_Bits',0,12,152,2,3
	.word	11511
	.byte	28
	.byte	'Ifx_GPT12_ACCEN0',0,12,165,2,3
	.word	13543
	.byte	28
	.byte	'Ifx_GPT12_ACCEN1',0,12,173,2,3
	.word	12972
	.byte	28
	.byte	'Ifx_GPT12_CAPREL',0,12,181,2,3
	.word	11856
	.byte	28
	.byte	'Ifx_GPT12_CLC',0,12,189,2,3
	.word	9926
	.byte	28
	.byte	'Ifx_GPT12_ID',0,12,197,2,3
	.word	10345
	.byte	28
	.byte	'Ifx_GPT12_KRST0',0,12,205,2,3
	.word	12881
	.byte	28
	.byte	'Ifx_GPT12_KRST1',0,12,213,2,3
	.word	12757
	.byte	28
	.byte	'Ifx_GPT12_KRSTCLR',0,12,221,2,3
	.word	12652
	.byte	28
	.byte	'Ifx_GPT12_OCS',0,12,229,2,3
	.word	12544
	.byte	28
	.byte	'Ifx_GPT12_PISEL',0,12,237,2,3
	.word	10222
	.byte	28
	.byte	'Ifx_GPT12_T2',0,12,245,2,3
	.word	11959
	.byte	28
	.byte	'Ifx_GPT12_T2CON',0,12,253,2,3
	.word	10628
	.byte	28
	.byte	'Ifx_GPT12_T3',0,12,133,3,3
	.word	12062
	.byte	28
	.byte	'Ifx_GPT12_T3CON',0,12,141,3,3
	.word	10902
	.byte	28
	.byte	'Ifx_GPT12_T4',0,12,149,3,3
	.word	12165
	.byte	28
	.byte	'Ifx_GPT12_T4CON',0,12,157,3,3
	.word	11200
	.byte	28
	.byte	'Ifx_GPT12_T5',0,12,165,3,3
	.word	12268
	.byte	28
	.byte	'Ifx_GPT12_T5CON',0,12,173,3,3
	.word	11471
	.byte	28
	.byte	'Ifx_GPT12_T6',0,12,181,3,3
	.word	12371
	.byte	28
	.byte	'Ifx_GPT12_T6CON',0,12,189,3,3
	.word	11746
	.byte	13
	.word	13583
	.byte	28
	.byte	'Ifx_GPT12',0,12,225,3,3
	.word	80337
	.byte	18
	.word	16878
	.byte	28
	.byte	'IfxGpt12_TxEud_In',0,15,53,3
	.word	80361
	.byte	18
	.word	16978
	.byte	28
	.byte	'IfxGpt12_TxIn_In',0,15,62,3
	.word	80392
	.byte	27,15,65,15,20,12
	.byte	'module',0
	.word	13959
	.byte	4,2,35,0,12
	.byte	'timer',0
	.word	353
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	16721
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	9314
	.byte	1,2,35,16,0,18
	.word	80422
	.byte	28
	.byte	'IfxGpt12_TxOut_Out',0,15,71,3
	.word	80488
	.byte	28
	.byte	'IfxGpt12_CaptureInput',0,11,65,3
	.word	14766
	.byte	14,11,69,9,1,15
	.byte	'IfxGpt12_CaptureInputMode_none',0,0,15
	.byte	'IfxGpt12_CaptureInputMode_risingEdgeTxIN',0,1,15
	.byte	'IfxGpt12_CaptureInputMode_fallingEdgeTxIN',0,2,15
	.byte	'IfxGpt12_CaptureInputMode_bothEdgesTxIN',0,3,0,28
	.byte	'IfxGpt12_CaptureInputMode',0,11,75,3
	.word	80550
	.byte	14,11,80,9,1,15
	.byte	'IfxGpt12_CaptureTrigger_capin',0,0,15
	.byte	'IfxGpt12_CaptureTrigger_t3inOrT3EUD',0,1,0,28
	.byte	'IfxGpt12_CaptureTrigger',0,11,84,3
	.word	80752
	.byte	14,11,89,9,1,15
	.byte	'IfxGpt12_CaptureTriggerMode_disabled',0,0,15
	.byte	'IfxGpt12_CaptureTriggerMode_risingEdge',0,1,15
	.byte	'IfxGpt12_CaptureTriggerMode_fallingEdge',0,2,15
	.byte	'IfxGpt12_CaptureTriggerMode_randomEdge',0,3,0,28
	.byte	'IfxGpt12_CaptureTriggerMode',0,11,95,3
	.word	80860
	.byte	14,11,100,9,1,15
	.byte	'IfxGpt12_CounterInputMode_counterDisabled',0,0,15
	.byte	'IfxGpt12_CounterInputMode_risingEdgeTxIN',0,1,15
	.byte	'IfxGpt12_CounterInputMode_fallingEdgeTxIN',0,2,15
	.byte	'IfxGpt12_CounterInputMode_bothEdgesTxIN',0,3,15
	.byte	'IfxGpt12_CounterInputMode_risingEdgeTxOTL',0,5,15
	.byte	'IfxGpt12_CounterInputMode_fallingEdgeTxOTL',0,6,15
	.byte	'IfxGpt12_CounterInputMode_bothEdgesTxOTL',0,7,0,28
	.byte	'IfxGpt12_CounterInputMode',0,11,109,3
	.word	81065
	.byte	28
	.byte	'IfxGpt12_EudInput',0,11,120,3
	.word	13964
	.byte	28
	.byte	'IfxGpt12_Gpt1BlockPrescaler',0,11,131,1,3
	.word	17378
	.byte	28
	.byte	'IfxGpt12_Gpt2BlockPrescaler',0,11,142,1,3
	.word	17514
	.byte	14,11,147,1,9,1,15
	.byte	'IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx',0,0,15
	.byte	'IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN',0,1,15
	.byte	'IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD',0,2,15
	.byte	'IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD',0,3,0,28
	.byte	'IfxGpt12_IncrementalInterfaceInputMode',0,11,153,1,3
	.word	81510
	.byte	28
	.byte	'IfxGpt12_Input',0,11,164,1,3
	.word	14122
	.byte	28
	.byte	'IfxGpt12_Mode',0,11,179,1,3
	.word	14941
	.byte	14,11,184,1,9,1,15
	.byte	'IfxGpt12_ReloadInputMode_counterDisabled',0,0,15
	.byte	'IfxGpt12_ReloadInputMode_risingEdgeTxIN',0,1,15
	.byte	'IfxGpt12_ReloadInputMode_fallingEdgeTxIN',0,2,15
	.byte	'IfxGpt12_ReloadInputMode_bothEdgesTxIN',0,3,15
	.byte	'IfxGpt12_ReloadInputMode_risingEdgeTxOTL',0,5,15
	.byte	'IfxGpt12_ReloadInputMode_fallingEdgeTxOTL',0,6,15
	.byte	'IfxGpt12_ReloadInputMode_bothEdgesTxOTL',0,7,0,28
	.byte	'IfxGpt12_ReloadInputMode',0,11,193,1,3
	.word	81840
	.byte	14,11,198,1,9,1,15
	.byte	'IfxGpt12_SleepMode_enable',0,0,15
	.byte	'IfxGpt12_SleepMode_disable',0,1,0,28
	.byte	'IfxGpt12_SleepMode',0,11,202,1,3
	.word	82179
	.byte	14,11,207,1,9,1,15
	.byte	'IfxGpt12_TimerDirection_up',0,0,15
	.byte	'IfxGpt12_TimerDirection_down',0,1,0,28
	.byte	'IfxGpt12_TimerDirection',0,11,211,1,3
	.word	82271
	.byte	14,11,216,1,9,1,15
	.byte	'IfxGpt12_TimerDirectionSource_internal',0,0,15
	.byte	'IfxGpt12_TimerDirectionSource_external',0,1,0,28
	.byte	'IfxGpt12_TimerDirectionSource',0,11,220,1,3
	.word	82371
	.byte	28
	.byte	'IfxGpt12_TimerInputPrescaler',0,11,235,1,3
	.word	17102
	.byte	14,11,240,1,9,1,15
	.byte	'IfxGpt12_TimerRemoteControl_off',0,0,15
	.byte	'IfxGpt12_TimerRemoteControl_on',0,1,0,28
	.byte	'IfxGpt12_TimerRemoteControl',0,11,244,1,3
	.word	82537
	.byte	14,11,249,1,9,1,15
	.byte	'IfxGpt12_TimerRun_stop',0,0,15
	.byte	'IfxGpt12_TimerRun_start',0,1,0,28
	.byte	'IfxGpt12_TimerRun',0,11,253,1,3
	.word	82648
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L131:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,59,0,3,8,0,0,6,15,0,73,19,0,0,7,46,1,3,8,32,13,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,19,1,3,8,58,15,59,15,57,15,11,15,0,0,10,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,11,23,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,13,53,0,73,19,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0
	.byte	0,17,33,0,47,15,0,0,18,38,0,73,19,0,0,19,55,0,73,19,0,0,20,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,21,5,0,58,15,59,15,57,15,73,19,0,0,22,24,0,58,15,59,15,57,15,0,0,23,46,1,49,19,0,0,24
	.byte	5,0,49,19,0,0,25,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,26,46,0,3,8,58,15,59,15,57,15
	.byte	73,19,54,15,39,12,63,12,60,12,0,0,27,19,1,58,15,59,15,57,15,11,15,0,0,28,22,0,3,8,58,15,59,15,57,15,73
	.byte	19,0,0,29,21,0,54,15,0,0,30,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,31,21,0,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L132:
	.word	.L455-.L454
.L454:
	.half	3
	.word	.L457-.L456
.L456:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Reg',0
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_common\\ifx_cfg\\include',0
	.byte	0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuWdt.h',0
	.byte	0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxCpu_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0
	.byte	'IfxGpt12_regdef.h',0,1,0,0
	.byte	'stdio.h',0,2,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuCcu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_PinMap\\IfxGpt12_PinMap.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxSrc_cfg.h',0
	.byte	0,0,0
	.byte	'Ifx_Cfg.h',0,3,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxScu_cfg.h',0
	.byte	0,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0,0
.L457:
.L455:
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_info'
.L133:
	.word	283
	.half	3
	.word	.L134
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L136,.L135
	.byte	2
	.word	.L129
	.byte	3
	.byte	'IfxGpt12_enableModule',0,1,240,1,6,1,1,1
	.word	.L108,.L233,.L107
	.byte	4
	.byte	'gpt12',0,1,240,1,39
	.word	.L234,.L235
	.byte	5
	.word	.L108,.L233
	.byte	6
	.byte	'psw',0,1,242,1,12
	.word	.L236,.L237
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_abbrev'
.L134:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_line'
.L135:
	.word	.L459-.L458
.L458:
	.half	3
	.word	.L461-.L460
.L460:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L461:
	.byte	5,6,7,0,5,2
	.word	.L108
	.byte	3,239,1,1,5,50,9
	.half	.L440-.L108
	.byte	3,2,1,5,16,9
	.half	.L439-.L440
	.byte	1,5,31,9
	.half	.L442-.L439
	.byte	3,1,1,5,29,9
	.half	.L441-.L442
	.byte	3,2,1,5,17,3,127,1,5,23,9
	.half	.L443-.L441
	.byte	1,5,29,9
	.half	.L462-.L443
	.byte	3,1,1,5,1,7,9
	.half	.L137-.L462
	.byte	3,1,0,1,1
.L459:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_ranges'
.L136:
	.word	-1,.L108,0,.L137-.L108,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_info'
.L138:
	.word	639
	.half	3
	.word	.L139
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L141,.L140
	.byte	2
	.word	.L129
	.byte	3
	.byte	'IfxGpt12_initTxEudInPin',0,1,249,1,6,1,1,1
	.word	.L110,.L238,.L109
	.byte	4
	.byte	'txEudIn',0,1,249,1,55
	.word	.L239,.L240
	.byte	4
	.byte	'inputMode',0,1,249,1,82
	.word	.L241,.L242
	.byte	5
	.word	.L243
	.byte	6
	.word	.L244,.L245,.L246
	.byte	7
	.word	.L247,.L248
	.byte	7
	.word	.L249,.L250
	.byte	7
	.word	.L251,.L252
	.byte	8
	.word	.L253,.L245,.L246
	.byte	0,6
	.word	.L254,.L255,.L256
	.byte	7
	.word	.L257,.L258
	.byte	7
	.word	.L259,.L260
	.byte	9
	.word	.L261,.L262
	.byte	10
	.byte	'__func__',0,2,241,7,5
	.word	.L263
	.byte	5,3
	.word	.9.IfxGpt12_T2_setEudInput.__func__
	.byte	0,0,6
	.word	.L264,.L265,.L266
	.byte	7
	.word	.L267,.L268
	.byte	7
	.word	.L269,.L270
	.byte	8
	.word	.L271,.L265,.L266
	.byte	0,6
	.word	.L272,.L273,.L274
	.byte	7
	.word	.L275,.L276
	.byte	7
	.word	.L277,.L278
	.byte	8
	.word	.L279,.L273,.L274
	.byte	0,6
	.word	.L280,.L281,.L66
	.byte	7
	.word	.L282,.L283
	.byte	7
	.word	.L284,.L285
	.byte	11
	.word	.L286,.L281,.L66
	.byte	10
	.byte	'__func__',0,2,179,10,5
	.word	.L287
	.byte	5,3
	.word	.10.IfxGpt12_T5_setEudInput.__func__
	.byte	0,0,6
	.word	.L288,.L289,.L290
	.byte	7
	.word	.L291,.L292
	.byte	7
	.word	.L293,.L294
	.byte	11
	.word	.L295,.L289,.L290
	.byte	10
	.byte	'__func__',0,2,139,11,5
	.word	.L296
	.byte	5,3
	.word	.11.IfxGpt12_T6_setEudInput.__func__
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_abbrev'
.L139:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,9,11,1,49,16,85,6,0,0,10,52,0,3,8,58,15,59
	.byte	15,57,15,73,16,2,9,0,0,11,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_line'
.L140:
	.word	.L464-.L463
.L463:
	.half	3
	.word	.L466-.L465
.L465:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0,0
.L466:
	.byte	5,6,7,0,5,2
	.word	.L110
	.byte	3,248,1,1,4,3,5,40,9
	.half	.L245-.L110
	.byte	3,140,2,1,4,1,5,20,9
	.half	.L246-.L245
	.byte	3,248,125,1,5,10,9
	.half	.L467-.L246
	.byte	3,2,1,7,9
	.half	.L468-.L467
	.byte	3,3,1,7,9
	.half	.L469-.L468
	.byte	3,3,1,7,9
	.half	.L470-.L469
	.byte	3,3,1,7,9
	.half	.L471-.L470
	.byte	3,3,1,5,1,7,9
	.half	.L472-.L471
	.byte	3,6,1,5,40,7,9
	.half	.L62-.L472
	.byte	3,111,1,4,2,5,5,9
	.half	.L255-.L62
	.byte	3,241,5,1,7,9
	.half	.L473-.L255
	.byte	1,5,19,9
	.half	.L68-.L473
	.byte	3,1,1,5,28,9
	.half	.L474-.L68
	.byte	1,4,1,5,1,9
	.half	.L256-.L474
	.byte	3,159,122,1,5,40,7,9
	.half	.L63-.L256
	.byte	3,114,1,4,2,5,28,9
	.half	.L265-.L63
	.byte	3,215,6,1,4,1,5,1,9
	.half	.L266-.L265
	.byte	3,183,121,1,5,40,7,9
	.half	.L64-.L266
	.byte	3,117,1,5,76,9
	.half	.L475-.L64
	.byte	1,4,2,5,19,9
	.half	.L273-.L475
	.byte	3,181,7,1,5,28,9
	.half	.L476-.L273
	.byte	1,4,1,5,1,9
	.half	.L274-.L476
	.byte	3,214,120,1,5,40,7,9
	.half	.L65-.L274
	.byte	3,120,1,4,2,5,5,9
	.half	.L281-.L65
	.byte	3,170,8,1,7,9
	.half	.L477-.L281
	.byte	1,5,19,9
	.half	.L72-.L477
	.byte	3,1,1,5,28,9
	.half	.L478-.L72
	.byte	1,4,1,5,9,3,214,119,1,5,40,9
	.half	.L66-.L478
	.byte	3,2,1,4,2,5,5,9
	.half	.L289-.L66
	.byte	3,255,8,1,7,9
	.half	.L479-.L289
	.byte	1,5,19,9
	.half	.L74-.L479
	.byte	3,1,1,5,28,9
	.half	.L480-.L74
	.byte	1,4,1,5,1,9
	.half	.L290-.L480
	.byte	3,133,119,1,7,9
	.half	.L142-.L290
	.byte	0,1,1
.L464:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_ranges'
.L141:
	.word	-1,.L110,0,.L142-.L110,0,0
.L243:
	.word	-1,.L110,0,.L238-.L110,-1,.L112,0,.L232-.L112,-1,.L114,0,.L227-.L114,-1,.L116,0,.L222-.L116,0,0
.L262:
	.word	-1,.L110,.L255-.L110,.L256-.L110,-1,.L118,0,.L212-.L118,-1,.L120,0,.L207-.L120,-1,.L122,0,.L202-.L122
	.word	-1,.L124,0,.L197-.L124,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_info'
.L143:
	.word	641
	.half	3
	.word	.L144
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L146,.L145
	.byte	2
	.word	.L129
	.byte	3
	.byte	'IfxGpt12_initTxInPin',0,1,148,2,6,1,1,1
	.word	.L126,.L297,.L125
	.byte	4
	.byte	'txIn',0,1,148,2,51
	.word	.L298,.L299
	.byte	4
	.byte	'inputMode',0,1,148,2,75
	.word	.L241,.L300
	.byte	5
	.word	.L126,.L297
	.byte	6
	.word	.L244,.L301,.L302
	.byte	7
	.word	.L247,.L303
	.byte	7
	.word	.L249,.L304
	.byte	7
	.word	.L251,.L305
	.byte	8
	.word	.L253,.L301,.L302
	.byte	0,6
	.word	.L306,.L307,.L308
	.byte	7
	.word	.L309,.L310
	.byte	7
	.word	.L311,.L312
	.byte	9
	.word	.L313,.L307,.L308
	.byte	10
	.byte	'__func__',0,2,254,7,5
	.word	.L314
	.byte	5,3
	.word	.12.IfxGpt12_T2_setInput.__func__
	.byte	0,0,6
	.word	.L315,.L316,.L77
	.byte	7
	.word	.L317,.L318
	.byte	7
	.word	.L319,.L320
	.byte	8
	.word	.L321,.L316,.L77
	.byte	0,6
	.word	.L322,.L323,.L324
	.byte	7
	.word	.L325,.L326
	.byte	7
	.word	.L327,.L328
	.byte	8
	.word	.L329,.L323,.L324
	.byte	0,6
	.word	.L330,.L331,.L79
	.byte	7
	.word	.L332,.L333
	.byte	7
	.word	.L334,.L335
	.byte	9
	.word	.L336,.L331,.L79
	.byte	10
	.byte	'__func__',0,2,186,10,5
	.word	.L337
	.byte	5,3
	.word	.13.IfxGpt12_T5_setInput.__func__
	.byte	0,0,6
	.word	.L338,.L339,.L340
	.byte	7
	.word	.L341,.L342
	.byte	7
	.word	.L343,.L344
	.byte	9
	.word	.L345,.L339,.L340
	.byte	10
	.byte	'__func__',0,2,146,11,5
	.word	.L346
	.byte	5,3
	.word	.14.IfxGpt12_T6_setInput.__func__
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_abbrev'
.L144:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,9,11,1,49,16,17,1,18,1,0,0,10,52,0,3,8
	.byte	58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_line'
.L145:
	.word	.L482-.L481
.L481:
	.half	3
	.word	.L484-.L483
.L483:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0,0
.L484:
	.byte	5,6,7,0,5,2
	.word	.L126
	.byte	3,147,2,1,4,3,5,40,9
	.half	.L301-.L126
	.byte	3,241,1,1,4,1,5,17,9
	.half	.L302-.L301
	.byte	3,147,126,1,5,10,9
	.half	.L485-.L302
	.byte	3,2,1,7,9
	.half	.L486-.L485
	.byte	3,3,1,7,9
	.half	.L487-.L486
	.byte	3,3,1,7,9
	.half	.L488-.L487
	.byte	3,3,1,7,9
	.half	.L489-.L488
	.byte	3,3,1,5,1,7,9
	.half	.L490-.L489
	.byte	3,6,1,5,34,7,9
	.half	.L75-.L490
	.byte	3,111,1,4,2,5,5,9
	.half	.L307-.L75
	.byte	3,227,5,1,7,9
	.half	.L491-.L307
	.byte	1,5,19,9
	.half	.L81-.L491
	.byte	3,1,1,5,27,9
	.half	.L492-.L81
	.byte	1,4,1,5,1,9
	.half	.L308-.L492
	.byte	3,173,122,1,5,34,7,9
	.half	.L76-.L308
	.byte	3,114,1,4,2,5,27,9
	.half	.L316-.L76
	.byte	3,200,6,1,4,1,5,9,3,185,121,1,5,34,9
	.half	.L77-.L316
	.byte	3,2,1,4,2,5,27,9
	.half	.L323-.L77
	.byte	3,166,7,1,4,1,5,1,9
	.half	.L324-.L323
	.byte	3,229,120,1,5,34,7,9
	.half	.L78-.L324
	.byte	3,120,1,4,2,5,5,9
	.half	.L331-.L78
	.byte	3,150,8,1,7,9
	.half	.L493-.L331
	.byte	1,5,19,9
	.half	.L85-.L493
	.byte	3,1,1,5,27,9
	.half	.L494-.L85
	.byte	1,4,1,5,9,3,234,119,1,5,34,9
	.half	.L79-.L494
	.byte	3,2,1,4,2,5,5,9
	.half	.L339-.L79
	.byte	3,235,8,1,7,9
	.half	.L495-.L339
	.byte	1,5,19,9
	.half	.L87-.L495
	.byte	3,1,1,5,27,9
	.half	.L496-.L87
	.byte	1,4,1,5,1,9
	.half	.L340-.L496
	.byte	3,153,119,1,7,9
	.half	.L147-.L340
	.byte	0,1,1
.L482:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_ranges'
.L146:
	.word	-1,.L126,0,.L147-.L126,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_info'
.L148:
	.word	395
	.half	3
	.word	.L149
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L151,.L150
	.byte	2
	.word	.L129
	.byte	3
	.byte	'IfxGpt12_T2_getFrequency',0,1,35,9
	.word	.L347
	.byte	1,1,1
	.word	.L90,.L348,.L89
	.byte	4
	.byte	'gpt12',0,1,35,45
	.word	.L234,.L349
	.byte	5
	.word	.L350
	.byte	6
	.byte	'freq',0,1,37,34
	.word	.L347,.L351
	.byte	6
	.byte	'prescaler',0,1,40,34
	.word	.L352,.L353
	.byte	6
	.byte	'bps1',0,1,42,34
	.word	.L354,.L355
	.byte	7
	.word	.L356,.L357,.L358
	.byte	8
	.word	.L359,.L360
	.byte	9
	.word	.L361,.L357,.L358
	.byte	0,7
	.word	.L362,.L363,.L364
	.byte	8
	.word	.L365,.L366
	.byte	9
	.word	.L367,.L363,.L364
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_abbrev'
.L149:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_line'
.L150:
	.word	.L498-.L497
.L497:
	.half	3
	.word	.L500-.L499
.L499:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L500:
	.byte	5,9,7,0,5,2
	.word	.L90
	.byte	3,34,1,4,2,5,37,9
	.half	.L357-.L90
	.byte	3,149,11,1,4,1,5,55,9
	.half	.L358-.L357
	.byte	3,242,116,1,4,2,5,41,9
	.half	.L363-.L358
	.byte	3,157,7,1,4,1,5,61,9
	.half	.L411-.L363
	.byte	3,246,120,1,5,9,9
	.half	.L413-.L411
	.byte	3,2,1,5,48,7,9
	.half	.L501-.L413
	.byte	1,5,90,7,9
	.half	.L502-.L501
	.byte	1,5,24,7,9
	.half	.L9-.L502
	.byte	3,2,1,5,1,9
	.half	.L412-.L9
	.byte	3,8,1,5,23,7,9
	.half	.L11-.L412
	.byte	3,124,1,5,1,9
	.half	.L503-.L11
	.byte	3,4,1,7,9
	.half	.L152-.L503
	.byte	0,1,1
.L498:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_ranges'
.L151:
	.word	-1,.L90,0,.L152-.L90,0,0
.L350:
	.word	-1,.L90,0,.L348-.L90,-1,.L92,0,.L217-.L92,-1,.L94,0,.L192-.L94,-1,.L96,0,.L182-.L96,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_info'
.L153:
	.word	380
	.half	3
	.word	.L154
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L156,.L155
	.byte	2
	.word	.L129
	.byte	3
	.byte	'IfxGpt12_T3_getFrequency',0,1,76,9
	.word	.L347
	.byte	1,1,1
	.word	.L98,.L368,.L97
	.byte	4
	.byte	'gpt12',0,1,76,45
	.word	.L234,.L369
	.byte	5
	.word	.L98,.L368
	.byte	6
	.byte	'freq',0,1,78,34
	.word	.L347,.L370
	.byte	6
	.byte	'mode',0,1,80,34
	.word	.L371,.L372
	.byte	6
	.byte	'prescaler',0,1,81,34
	.word	.L352,.L373
	.byte	6
	.byte	'bps1',0,1,83,34
	.word	.L354,.L374
	.byte	7
	.word	.L356,.L375,.L376
	.byte	8
	.word	.L359,.L377
	.byte	9
	.word	.L361,.L375,.L376
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_abbrev'
.L154:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_line'
.L155:
	.word	.L505-.L504
.L504:
	.half	3
	.word	.L507-.L506
.L506:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L507:
	.byte	5,9,7,0,5,2
	.word	.L98
	.byte	3,203,0,1,4,2,5,37,9
	.half	.L375-.L98
	.byte	3,236,10,1,4,1,5,55,9
	.half	.L376-.L375
	.byte	3,155,117,1,5,46,9
	.half	.L414-.L376
	.byte	3,18,1,5,61,9
	.half	.L508-.L414
	.byte	3,1,1,5,9,9
	.half	.L421-.L508
	.byte	3,2,1,5,48,7,9
	.half	.L509-.L421
	.byte	1,5,90,7,9
	.half	.L510-.L509
	.byte	1,5,24,7,9
	.half	.L21-.L510
	.byte	3,2,1,5,1,9
	.half	.L415-.L21
	.byte	3,8,1,5,23,7,9
	.half	.L23-.L415
	.byte	3,124,1,5,1,9
	.half	.L419-.L23
	.byte	3,4,1,7,9
	.half	.L157-.L419
	.byte	0,1,1
.L505:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_ranges'
.L156:
	.word	-1,.L98,0,.L157-.L98,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_info'
.L158:
	.word	380
	.half	3
	.word	.L159
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L161,.L160
	.byte	2
	.word	.L129
	.byte	3
	.byte	'IfxGpt12_T4_getFrequency',0,1,117,9
	.word	.L347
	.byte	1,1,1
	.word	.L100,.L378,.L99
	.byte	4
	.byte	'gpt12',0,1,117,45
	.word	.L234,.L379
	.byte	5
	.word	.L100,.L378
	.byte	6
	.byte	'freq',0,1,119,34
	.word	.L347,.L380
	.byte	6
	.byte	'mode',0,1,121,34
	.word	.L371,.L381
	.byte	6
	.byte	'prescaler',0,1,122,34
	.word	.L352,.L382
	.byte	6
	.byte	'bps1',0,1,124,34
	.word	.L354,.L383
	.byte	7
	.word	.L356,.L384,.L385
	.byte	8
	.word	.L359,.L386
	.byte	9
	.word	.L361,.L384,.L385
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_abbrev'
.L159:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_line'
.L160:
	.word	.L512-.L511
.L511:
	.half	3
	.word	.L514-.L513
.L513:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L514:
	.byte	5,9,7,0,5,2
	.word	.L100
	.byte	3,244,0,1,4,2,5,37,9
	.half	.L384-.L100
	.byte	3,195,10,1,4,1,5,55,9
	.half	.L385-.L384
	.byte	3,196,117,1,5,46,9
	.half	.L422-.L385
	.byte	3,18,1,5,61,9
	.half	.L515-.L422
	.byte	3,1,1,5,9,9
	.half	.L426-.L515
	.byte	3,2,1,5,48,7,9
	.half	.L516-.L426
	.byte	1,5,90,7,9
	.half	.L517-.L516
	.byte	1,5,24,7,9
	.half	.L33-.L517
	.byte	3,2,1,5,1,9
	.half	.L423-.L33
	.byte	3,8,1,5,23,7,9
	.half	.L35-.L423
	.byte	3,124,1,5,1,9
	.half	.L425-.L35
	.byte	3,4,1,7,9
	.half	.L162-.L425
	.byte	0,1,1
.L512:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_ranges'
.L161:
	.word	-1,.L100,0,.L162-.L100,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_info'
.L163:
	.word	382
	.half	3
	.word	.L164
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L166,.L165
	.byte	2
	.word	.L129
	.byte	3
	.byte	'IfxGpt12_T5_getFrequency',0,1,158,1,9
	.word	.L347
	.byte	1,1,1
	.word	.L102,.L387,.L101
	.byte	4
	.byte	'gpt12',0,1,158,1,45
	.word	.L234,.L388
	.byte	5
	.word	.L389
	.byte	6
	.byte	'freq',0,1,160,1,34
	.word	.L347,.L390
	.byte	6
	.byte	'mode',0,1,162,1,34
	.word	.L371,.L391
	.byte	6
	.byte	'prescaler',0,1,163,1,34
	.word	.L352,.L392
	.byte	6
	.byte	'bps2',0,1,165,1,34
	.word	.L393,.L394
	.byte	7
	.word	.L356,.L395,.L396
	.byte	8
	.word	.L359,.L397
	.byte	9
	.word	.L361,.L395,.L396
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_abbrev'
.L164:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_line'
.L165:
	.word	.L519-.L518
.L518:
	.half	3
	.word	.L521-.L520
.L520:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L521:
	.byte	5,9,7,0,5,2
	.word	.L102
	.byte	3,157,1,1,4,2,5,37,9
	.half	.L395-.L102
	.byte	3,154,10,1,4,1,5,55,9
	.half	.L396-.L395
	.byte	3,237,117,1,5,46,9
	.half	.L427-.L396
	.byte	3,18,1,5,61,9
	.half	.L429-.L427
	.byte	3,1,1,5,9,9
	.half	.L433-.L429
	.byte	3,2,1,5,48,7,9
	.half	.L522-.L433
	.byte	1,5,90,7,9
	.half	.L523-.L522
	.byte	1,5,24,7,9
	.half	.L45-.L523
	.byte	3,2,1,5,1,9
	.half	.L430-.L45
	.byte	3,8,1,5,23,7,9
	.half	.L47-.L430
	.byte	3,124,1,5,1,9
	.half	.L432-.L47
	.byte	3,4,1,7,9
	.half	.L167-.L432
	.byte	0,1,1
.L519:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_ranges'
.L166:
	.word	-1,.L102,0,.L167-.L102,0,0
.L389:
	.word	-1,.L102,0,.L387-.L102,-1,.L104,0,.L187-.L104,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_info'
.L168:
	.word	386
	.half	3
	.word	.L169
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L171,.L170
	.byte	2
	.word	.L129
	.byte	3
	.byte	'IfxGpt12_T6_getFrequency',0,1,199,1,9
	.word	.L347
	.byte	1,1,1
	.word	.L106,.L398,.L105
	.byte	4
	.byte	'gpt12',0,1,199,1,45
	.word	.L234,.L399
	.byte	5
	.word	.L106,.L398
	.byte	6
	.byte	'freq',0,1,201,1,34
	.word	.L347,.L400
	.byte	6
	.byte	'mode',0,1,203,1,34
	.word	.L371,.L401
	.byte	6
	.byte	'prescaler',0,1,204,1,34
	.word	.L352,.L402
	.byte	6
	.byte	'bps2',0,1,206,1,34
	.word	.L393,.L403
	.byte	7
	.word	.L356,.L404,.L405
	.byte	8
	.word	.L359,.L406
	.byte	9
	.word	.L361,.L404,.L405
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_abbrev'
.L169:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_line'
.L170:
	.word	.L525-.L524
.L524:
	.half	3
	.word	.L527-.L526
.L526:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L527:
	.byte	5,9,7,0,5,2
	.word	.L106
	.byte	3,198,1,1,4,2,5,37,9
	.half	.L404-.L106
	.byte	3,241,9,1,4,1,5,55,9
	.half	.L405-.L404
	.byte	3,150,118,1,5,46,9
	.half	.L434-.L405
	.byte	3,18,1,5,61,9
	.half	.L528-.L434
	.byte	3,1,1,5,9,9
	.half	.L438-.L528
	.byte	3,2,1,5,48,7,9
	.half	.L529-.L438
	.byte	1,5,90,7,9
	.half	.L530-.L529
	.byte	1,5,24,7,9
	.half	.L57-.L530
	.byte	3,2,1,5,1,9
	.half	.L435-.L57
	.byte	3,8,1,5,23,7,9
	.half	.L59-.L435
	.byte	3,124,1,5,1,9
	.half	.L437-.L59
	.byte	3,4,1,7,9
	.half	.L172-.L437
	.byte	0,1,1
.L525:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_ranges'
.L171:
	.word	-1,.L106,0,.L172-.L106,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_info'
.L173:
	.word	285
	.half	3
	.word	.L174
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L176,.L175
	.byte	2
	.word	.L129
	.byte	3
	.byte	'IfxGpt12_resetModule',0,1,175,2,6,1,1,1
	.word	.L128,.L407,.L127
	.byte	4
	.byte	'gpt12',0,1,175,2,38
	.word	.L234,.L408
	.byte	5
	.word	.L128,.L407
	.byte	6
	.byte	'passwd',0,1,177,2,12
	.word	.L236,.L409
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_abbrev'
.L174:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_line'
.L175:
	.word	.L532-.L531
.L531:
	.half	3
	.word	.L534-.L533
.L533:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L534:
	.byte	5,6,7,0,5,2
	.word	.L128
	.byte	3,174,2,1,5,53,9
	.half	.L449-.L128
	.byte	3,2,1,5,19,9
	.half	.L448-.L449
	.byte	1,5,31,9
	.half	.L451-.L448
	.byte	3,2,1,5,19,9
	.half	.L450-.L451
	.byte	3,1,1,5,29,9
	.half	.L535-.L450
	.byte	3,2,1,5,24,9
	.half	.L452-.L535
	.byte	3,126,1,5,19,9
	.half	.L536-.L452
	.byte	3,1,1,5,24,9
	.half	.L537-.L536
	.byte	1,5,29,9
	.half	.L538-.L537
	.byte	3,1,1,5,31,9
	.half	.L88-.L538
	.byte	3,2,1,5,39,9
	.half	.L539-.L88
	.byte	1,5,31,7,9
	.half	.L540-.L539
	.byte	3,4,1,5,29,9
	.half	.L541-.L540
	.byte	3,2,1,5,21,3,127,1,5,26,9
	.half	.L453-.L541
	.byte	1,5,29,9
	.half	.L542-.L453
	.byte	3,1,1,5,1,7,9
	.half	.L177-.L542
	.byte	3,1,0,1,1
.L532:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_ranges'
.L176:
	.word	-1,.L128,0,.L177-.L128,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_15')
	.sect	'.debug_info'
.L178:
	.word	223
	.half	3
	.word	.L179
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L181,.L180
	.byte	2
	.word	.L129
	.byte	3
	.byte	'.cocofun_15',0,1,35,9,1
	.word	.L96,.L182,.L95
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_15')
	.sect	'.debug_abbrev'
.L179:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_15')
	.sect	'.debug_line'
.L180:
	.word	.L544-.L543
.L543:
	.half	3
	.word	.L546-.L545
.L545:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L546:
	.byte	5,55,7,0,5,2
	.word	.L96
	.byte	3,41,1,5,10,9
	.half	.L410-.L96
	.byte	3,7,1,7,9
	.half	.L547-.L410
	.byte	3,125,1,7,9
	.half	.L548-.L547
	.byte	3,6,1,7,9
	.half	.L549-.L548
	.byte	1,5,23,9
	.half	.L3-.L549
	.byte	3,123,1,5,9,3,1,1,5,23,9
	.half	.L2-.L3
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L4-.L2
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L5-.L4
	.byte	3,2,1,5,16,9
	.half	.L8-.L5
	.byte	1,9
	.half	.L182-.L8
	.byte	0,1,1,5,55,0,5,2
	.word	.L96
	.byte	3,210,0,1,5,10,9
	.half	.L410-.L96
	.byte	3,7,1,7,9
	.half	.L547-.L410
	.byte	3,125,1,7,9
	.half	.L548-.L547
	.byte	3,6,1,7,9
	.half	.L549-.L548
	.byte	1,5,23,9
	.half	.L3-.L549
	.byte	3,123,1,5,9,3,1,1,5,23,9
	.half	.L2-.L3
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L4-.L2
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L5-.L4
	.byte	3,2,1,5,16,9
	.half	.L8-.L5
	.byte	1,3,87,1,7,9
	.half	.L182-.L8
	.byte	0,1,1,5,55,0,5,2
	.word	.L96
	.byte	3,251,0,1,5,10,9
	.half	.L410-.L96
	.byte	3,7,1,7,9
	.half	.L547-.L410
	.byte	3,125,1,7,9
	.half	.L548-.L547
	.byte	3,6,1,7,9
	.half	.L549-.L548
	.byte	1,5,23,9
	.half	.L3-.L549
	.byte	3,123,1,5,9,3,1,1,5,23,9
	.half	.L2-.L3
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L4-.L2
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L5-.L4
	.byte	3,2,1,5,16,9
	.half	.L8-.L5
	.byte	1,3,174,127,1,7,9
	.half	.L182-.L8
	.byte	0,1,1
.L544:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_15')
	.sect	'.debug_ranges'
.L181:
	.word	-1,.L96,0,.L182-.L96,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_16')
	.sect	'.debug_info'
.L183:
	.word	224
	.half	3
	.word	.L184
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L186,.L185
	.byte	2
	.word	.L129
	.byte	3
	.byte	'.cocofun_16',0,1,158,1,9,1
	.word	.L104,.L187,.L103
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_16')
	.sect	'.debug_abbrev'
.L184:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_16')
	.sect	'.debug_line'
.L185:
	.word	.L551-.L550
.L550:
	.half	3
	.word	.L553-.L552
.L552:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L553:
	.byte	5,55,7,0,5,2
	.word	.L104
	.byte	3,164,1,1,5,10,9
	.half	.L428-.L104
	.byte	3,7,1,7,9
	.half	.L554-.L428
	.byte	3,125,1,7,9
	.half	.L555-.L554
	.byte	3,6,1,7,9
	.half	.L556-.L555
	.byte	1,5,23,9
	.half	.L39-.L556
	.byte	3,123,1,5,9,3,1,1,5,23,9
	.half	.L38-.L39
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L40-.L38
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L41-.L40
	.byte	3,2,1,5,16,9
	.half	.L44-.L41
	.byte	1,9
	.half	.L187-.L44
	.byte	0,1,1,5,55,0,5,2
	.word	.L104
	.byte	3,205,1,1,5,10,9
	.half	.L428-.L104
	.byte	3,7,1,7,9
	.half	.L554-.L428
	.byte	3,125,1,7,9
	.half	.L555-.L554
	.byte	3,6,1,7,9
	.half	.L556-.L555
	.byte	1,5,23,9
	.half	.L39-.L556
	.byte	3,123,1,5,9,3,1,1,5,23,9
	.half	.L38-.L39
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L40-.L38
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L41-.L40
	.byte	3,2,1,5,16,9
	.half	.L44-.L41
	.byte	1,3,87,1,7,9
	.half	.L187-.L44
	.byte	0,1,1
.L551:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_16')
	.sect	'.debug_ranges'
.L186:
	.word	-1,.L104,0,.L187-.L104,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_17')
	.sect	'.debug_info'
.L188:
	.word	223
	.half	3
	.word	.L189
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L191,.L190
	.byte	2
	.word	.L129
	.byte	3
	.byte	'.cocofun_17',0,1,35,9,1
	.word	.L94,.L192,.L93
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_17')
	.sect	'.debug_abbrev'
.L189:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_17')
	.sect	'.debug_line'
.L190:
	.word	.L558-.L557
.L557:
	.half	3
	.word	.L560-.L559
.L559:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L560:
	.byte	5,24,7,0,5,2
	.word	.L94
	.byte	3,192,0,1,5,26,9
	.half	.L417-.L94
	.byte	1,5,21,9
	.half	.L418-.L417
	.byte	1,9
	.half	.L192-.L418
	.byte	0,1,1,5,24,0,5,2
	.word	.L94
	.byte	3,233,0,1,5,26,9
	.half	.L417-.L94
	.byte	1,5,21,9
	.half	.L418-.L417
	.byte	1,3,87,1,7,9
	.half	.L192-.L418
	.byte	0,1,1,5,24,0,5,2
	.word	.L94
	.byte	3,146,1,1,5,26,9
	.half	.L417-.L94
	.byte	1,5,21,9
	.half	.L418-.L417
	.byte	1,3,174,127,1,7,9
	.half	.L192-.L418
	.byte	0,1,1,5,24,0,5,2
	.word	.L94
	.byte	3,187,1,1,5,26,9
	.half	.L417-.L94
	.byte	1,5,21,9
	.half	.L418-.L417
	.byte	1,3,133,127,1,7,9
	.half	.L192-.L418
	.byte	0,1,1,5,24,0,5,2
	.word	.L94
	.byte	3,228,1,1,5,26,9
	.half	.L417-.L94
	.byte	1,5,21,9
	.half	.L418-.L417
	.byte	1,3,220,126,1,7,9
	.half	.L192-.L418
	.byte	0,1,1
.L558:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_17')
	.sect	'.debug_ranges'
.L191:
	.word	-1,.L94,0,.L192-.L94,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_18')
	.sect	'.debug_info'
.L193:
	.word	224
	.half	3
	.word	.L194
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L196,.L195
	.byte	2
	.word	.L129
	.byte	3
	.byte	'.cocofun_18',0,1,249,1,6,1
	.word	.L124,.L197,.L123
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_18')
	.sect	'.debug_abbrev'
.L194:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_18')
	.sect	'.debug_line'
.L195:
	.word	.L562-.L561
.L561:
	.half	3
	.word	.L564-.L563
.L563:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L564:
	.byte	4,2,5,5,7,0,5,2
	.word	.L124
	.byte	3,240,7,1,9
	.half	.L197-.L124
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L124
	.byte	3,178,10,1,9
	.half	.L565-.L124
	.byte	3,190,125,1,7,9
	.half	.L197-.L565
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L124
	.byte	3,138,11,1,9
	.half	.L565-.L124
	.byte	3,230,124,1,7,9
	.half	.L197-.L565
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L124
	.byte	3,253,7,1,9
	.half	.L565-.L124
	.byte	3,115,1,7,9
	.half	.L197-.L565
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L124
	.byte	3,185,10,1,9
	.half	.L565-.L124
	.byte	3,183,125,1,7,9
	.half	.L197-.L565
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L124
	.byte	3,145,11,1,9
	.half	.L565-.L124
	.byte	3,223,124,1,7,9
	.half	.L197-.L565
	.byte	0,1,1
.L562:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_18')
	.sect	'.debug_ranges'
.L196:
	.word	-1,.L124,0,.L197-.L124,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_19')
	.sect	'.debug_info'
.L198:
	.word	224
	.half	3
	.word	.L199
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L201,.L200
	.byte	2
	.word	.L129
	.byte	3
	.byte	'.cocofun_19',0,1,249,1,6,1
	.word	.L122,.L202,.L121
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_19')
	.sect	'.debug_abbrev'
.L199:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_19')
	.sect	'.debug_line'
.L200:
	.word	.L567-.L566
.L566:
	.half	3
	.word	.L569-.L568
.L568:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L569:
	.byte	4,2,5,5,7,0,5,2
	.word	.L122
	.byte	3,240,7,1,9
	.half	.L202-.L122
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L122
	.byte	3,178,10,1,9
	.half	.L570-.L122
	.byte	3,190,125,1,7,9
	.half	.L202-.L570
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L122
	.byte	3,138,11,1,9
	.half	.L570-.L122
	.byte	3,230,124,1,7,9
	.half	.L202-.L570
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L122
	.byte	3,253,7,1,9
	.half	.L570-.L122
	.byte	3,115,1,7,9
	.half	.L202-.L570
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L122
	.byte	3,185,10,1,9
	.half	.L570-.L122
	.byte	3,183,125,1,7,9
	.half	.L202-.L570
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L122
	.byte	3,145,11,1,9
	.half	.L570-.L122
	.byte	3,223,124,1,7,9
	.half	.L202-.L570
	.byte	0,1,1
.L567:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_19')
	.sect	'.debug_ranges'
.L201:
	.word	-1,.L122,0,.L202-.L122,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_20')
	.sect	'.debug_info'
.L203:
	.word	224
	.half	3
	.word	.L204
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L206,.L205
	.byte	2
	.word	.L129
	.byte	3
	.byte	'.cocofun_20',0,1,249,1,6,1
	.word	.L120,.L207,.L119
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_20')
	.sect	'.debug_abbrev'
.L204:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_20')
	.sect	'.debug_line'
.L205:
	.word	.L572-.L571
.L571:
	.half	3
	.word	.L574-.L573
.L573:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L574:
	.byte	4,2,5,5,7,0,5,2
	.word	.L120
	.byte	3,240,7,1,9
	.half	.L207-.L120
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L120
	.byte	3,178,10,1,9
	.half	.L575-.L120
	.byte	3,190,125,1,7,9
	.half	.L207-.L575
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L120
	.byte	3,138,11,1,9
	.half	.L575-.L120
	.byte	3,230,124,1,7,9
	.half	.L207-.L575
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L120
	.byte	3,253,7,1,9
	.half	.L575-.L120
	.byte	3,115,1,7,9
	.half	.L207-.L575
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L120
	.byte	3,185,10,1,9
	.half	.L575-.L120
	.byte	3,183,125,1,7,9
	.half	.L207-.L575
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L120
	.byte	3,145,11,1,9
	.half	.L575-.L120
	.byte	3,223,124,1,7,9
	.half	.L207-.L575
	.byte	0,1,1
.L572:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_20')
	.sect	'.debug_ranges'
.L206:
	.word	-1,.L120,0,.L207-.L120,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_21')
	.sect	'.debug_info'
.L208:
	.word	224
	.half	3
	.word	.L209
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L211,.L210
	.byte	2
	.word	.L129
	.byte	3
	.byte	'.cocofun_21',0,1,249,1,6,1
	.word	.L118,.L212,.L117
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_21')
	.sect	'.debug_abbrev'
.L209:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_21')
	.sect	'.debug_line'
.L210:
	.word	.L577-.L576
.L576:
	.half	3
	.word	.L579-.L578
.L578:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L579:
	.byte	4,2,5,5,7,0,5,2
	.word	.L118
	.byte	3,240,7,1,9
	.half	.L212-.L118
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L118
	.byte	3,178,10,1,9
	.half	.L580-.L118
	.byte	3,190,125,1,7,9
	.half	.L212-.L580
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L118
	.byte	3,138,11,1,9
	.half	.L580-.L118
	.byte	3,230,124,1,7,9
	.half	.L212-.L580
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L118
	.byte	3,253,7,1,9
	.half	.L580-.L118
	.byte	3,115,1,7,9
	.half	.L212-.L580
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L118
	.byte	3,185,10,1,9
	.half	.L580-.L118
	.byte	3,183,125,1,7,9
	.half	.L212-.L580
	.byte	0,1,1,4,2,5,5,0,5,2
	.word	.L118
	.byte	3,145,11,1,9
	.half	.L580-.L118
	.byte	3,223,124,1,7,9
	.half	.L212-.L580
	.byte	0,1,1
.L577:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_21')
	.sect	'.debug_ranges'
.L211:
	.word	-1,.L118,0,.L212-.L118,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_22')
	.sect	'.debug_info'
.L213:
	.word	223
	.half	3
	.word	.L214
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L216,.L215
	.byte	2
	.word	.L129
	.byte	3
	.byte	'.cocofun_22',0,1,35,9,1
	.word	.L92,.L217,.L91
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_22')
	.sect	'.debug_abbrev'
.L214:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_22')
	.sect	'.debug_line'
.L215:
	.word	.L582-.L581
.L581:
	.half	3
	.word	.L584-.L583
.L583:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L584:
	.byte	5,23,7,0,5,2
	.word	.L92
	.byte	3,196,0,1,5,16,9
	.half	.L420-.L92
	.byte	1,9
	.half	.L217-.L420
	.byte	0,1,1,5,23,0,5,2
	.word	.L92
	.byte	3,237,0,1,5,16,9
	.half	.L420-.L92
	.byte	1,3,87,1,7,9
	.half	.L217-.L420
	.byte	0,1,1,5,23,0,5,2
	.word	.L92
	.byte	3,150,1,1,5,16,9
	.half	.L420-.L92
	.byte	1,3,174,127,1,7,9
	.half	.L217-.L420
	.byte	0,1,1,5,23,0,5,2
	.word	.L92
	.byte	3,191,1,1,5,16,9
	.half	.L420-.L92
	.byte	1,3,133,127,1,7,9
	.half	.L217-.L420
	.byte	0,1,1,5,23,0,5,2
	.word	.L92
	.byte	3,232,1,1,5,16,9
	.half	.L420-.L92
	.byte	1,3,220,126,1,7,9
	.half	.L217-.L420
	.byte	0,1,1
.L582:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_22')
	.sect	'.debug_ranges'
.L216:
	.word	-1,.L92,0,.L217-.L92,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_23')
	.sect	'.debug_info'
.L218:
	.word	224
	.half	3
	.word	.L219
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L221,.L220
	.byte	2
	.word	.L129
	.byte	3
	.byte	'.cocofun_23',0,1,249,1,6,1
	.word	.L116,.L222,.L115
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_23')
	.sect	'.debug_abbrev'
.L219:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_23')
	.sect	'.debug_line'
.L220:
	.word	.L586-.L585
.L585:
	.half	3
	.word	.L588-.L587
.L587:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0,0
.L588:
	.byte	5,6,7,0,5,2
	.word	.L116
	.byte	3,248,1,1,5,60,9
	.half	.L446-.L116
	.byte	3,2,1,4,2,5,40,9
	.half	.L589-.L446
	.byte	3,138,2,1,4,1,5,41,3,246,125,1,4,2,5,40,9
	.half	.L445-.L589
	.byte	3,138,2,1,9
	.half	.L222-.L445
	.byte	0,1,1,5,6,0,5,2
	.word	.L116
	.byte	3,147,2,1,5,54,9
	.half	.L446-.L116
	.byte	3,2,1,4,2,5,40,9
	.half	.L589-.L446
	.byte	3,239,1,1,4,1,5,38,3,145,126,1,4,2,5,40,9
	.half	.L445-.L589
	.byte	3,239,1,1,9
	.half	.L222-.L445
	.byte	0,1,1
.L586:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_23')
	.sect	'.debug_ranges'
.L221:
	.word	-1,.L116,0,.L222-.L116,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_24')
	.sect	'.debug_info'
.L223:
	.word	224
	.half	3
	.word	.L224
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L226,.L225
	.byte	2
	.word	.L129
	.byte	3
	.byte	'.cocofun_24',0,1,249,1,6,1
	.word	.L114,.L227,.L113
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_24')
	.sect	'.debug_abbrev'
.L224:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_24')
	.sect	'.debug_line'
.L225:
	.word	.L591-.L590
.L590:
	.half	3
	.word	.L593-.L592
.L592:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L593:
	.byte	5,40,7,0,5,2
	.word	.L114
	.byte	3,255,1,1,5,76,9
	.half	.L594-.L114
	.byte	1,9
	.half	.L227-.L594
	.byte	0,1,1,5,40,0,5,2
	.word	.L114
	.byte	3,136,2,1,5,76,9
	.half	.L594-.L114
	.byte	1,9
	.half	.L595-.L594
	.byte	3,119,1,7,9
	.half	.L227-.L595
	.byte	0,1,1,5,40,0,5,2
	.word	.L114
	.byte	3,139,2,1,5,76,9
	.half	.L594-.L114
	.byte	1,9
	.half	.L595-.L594
	.byte	3,116,1,7,9
	.half	.L227-.L595
	.byte	0,1,1,5,34,0,5,2
	.word	.L114
	.byte	3,154,2,1,5,64,9
	.half	.L594-.L114
	.byte	1,5,76,9
	.half	.L595-.L594
	.byte	3,101,1,7,9
	.half	.L227-.L595
	.byte	0,1,1,5,34,0,5,2
	.word	.L114
	.byte	3,163,2,1,5,64,9
	.half	.L594-.L114
	.byte	1,5,76,9
	.half	.L595-.L594
	.byte	3,92,1,7,9
	.half	.L227-.L595
	.byte	0,1,1,5,34,0,5,2
	.word	.L114
	.byte	3,166,2,1,5,64,9
	.half	.L594-.L114
	.byte	1,5,76,9
	.half	.L595-.L594
	.byte	3,89,1,7,9
	.half	.L227-.L595
	.byte	0,1,1
.L591:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_24')
	.sect	'.debug_ranges'
.L226:
	.word	-1,.L114,0,.L227-.L114,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_25')
	.sect	'.debug_info'
.L228:
	.word	224
	.half	3
	.word	.L229
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L231,.L230
	.byte	2
	.word	.L129
	.byte	3
	.byte	'.cocofun_25',0,1,249,1,6,1
	.word	.L112,.L232,.L111
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_25')
	.sect	'.debug_abbrev'
.L229:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_25')
	.sect	'.debug_line'
.L230:
	.word	.L597-.L596
.L596:
	.half	3
	.word	.L599-.L598
.L598:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L599:
	.byte	5,40,7,0,5,2
	.word	.L112
	.byte	3,130,2,1,5,76,9
	.half	.L600-.L112
	.byte	1,4,2,5,19,9
	.half	.L601-.L600
	.byte	3,215,6,1,9
	.half	.L232-.L601
	.byte	0,1,1,5,34,0,5,2
	.word	.L112
	.byte	3,157,2,1,5,64,9
	.half	.L600-.L112
	.byte	1,4,2,5,19,9
	.half	.L601-.L600
	.byte	3,200,6,1,9
	.half	.L602-.L601
	.byte	3,116,1,7,9
	.half	.L232-.L602
	.byte	0,1,1,5,34,0,5,2
	.word	.L112
	.byte	3,160,2,1,5,64,9
	.half	.L600-.L112
	.byte	1,4,2,5,19,9
	.half	.L601-.L600
	.byte	3,166,7,1,9
	.half	.L602-.L601
	.byte	3,147,127,1,7,9
	.half	.L232-.L602
	.byte	0,1,1
.L597:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_25')
	.sect	'.debug_ranges'
.L231:
	.word	-1,.L112,0,.L232-.L112,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_15')
	.sect	'.debug_loc'
.L95:
	.word	-1,.L96,0,.L182-.L96
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_16')
	.sect	'.debug_loc'
.L103:
	.word	-1,.L104,0,.L187-.L104
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_17')
	.sect	'.debug_loc'
.L93:
	.word	-1,.L94,0,.L192-.L94
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_18')
	.sect	'.debug_loc'
.L123:
	.word	-1,.L124,0,.L197-.L124
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_19')
	.sect	'.debug_loc'
.L121:
	.word	-1,.L122,0,.L202-.L122
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_20')
	.sect	'.debug_loc'
.L119:
	.word	-1,.L120,0,.L207-.L120
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_21')
	.sect	'.debug_loc'
.L117:
	.word	-1,.L118,0,.L212-.L118
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_22')
	.sect	'.debug_loc'
.L91:
	.word	-1,.L92,0,.L217-.L92
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_23')
	.sect	'.debug_loc'
.L115:
	.word	-1,.L116,0,.L222-.L116
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_24')
	.sect	'.debug_loc'
.L113:
	.word	-1,.L114,0,.L227-.L114
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_25')
	.sect	'.debug_loc'
.L111:
	.word	-1,.L112,0,.L232-.L112
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_loc'
.L89:
	.word	-1,.L90,0,.L348-.L90
	.half	2
	.byte	138,0
	.word	0,0
.L355:
	.word	-1,.L90,.L410-.L90,.L8-.L90
	.half	1
	.byte	95
	.word	0,0
.L351:
	.word	-1,.L90,.L8-.L90,.L182-.L90
	.half	5
	.byte	144,32,157,32,0
	.word	.L411-.L90,.L412-.L90
	.half	5
	.byte	144,32,157,32,0
	.word	.L94-.L90,.L192-.L90
	.half	5
	.byte	144,32,157,32,0
	.word	.L92-.L90,.L217-.L90
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L349:
	.word	-1,.L90,0,.L363-.L90
	.half	1
	.byte	100
	.word	.L357-.L90,.L363-.L90
	.half	1
	.byte	111
	.word	.L96-.L90,.L182-.L90
	.half	1
	.byte	111
	.word	.L411-.L90,.L412-.L90
	.half	1
	.byte	111
	.word	.L94-.L90,.L192-.L90
	.half	1
	.byte	111
	.word	.L92-.L90,.L217-.L90
	.half	1
	.byte	111
	.word	0,0
.L366:
	.word	0,0
.L360:
	.word	0,0
.L353:
	.word	-1,.L90,.L413-.L90,.L412-.L90
	.half	1
	.byte	81
	.word	.L94-.L90,.L192-.L90
	.half	1
	.byte	81
	.word	.L92-.L90,.L217-.L90
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_loc'
.L97:
	.word	-1,.L98,0,.L368-.L98
	.half	2
	.byte	138,0
	.word	0,0
.L374:
	.word	-1,.L98,.L410-.L98,.L3-.L98
	.half	1
	.byte	95
	.word	.L2-.L98,.L2-.L98
	.half	1
	.byte	95
	.word	.L4-.L98,.L4-.L98
	.half	1
	.byte	95
	.word	.L5-.L98,.L8-.L98
	.half	1
	.byte	95
	.word	0,0
.L370:
	.word	-1,.L98,.L8-.L98,.L182-.L98
	.half	5
	.byte	144,32,157,32,0
	.word	.L414-.L98,.L415-.L98
	.half	5
	.byte	144,32,157,32,0
	.word	.L94-.L98,.L192-.L98
	.half	5
	.byte	144,32,157,32,0
	.word	.L418-.L98,.L192-.L98
	.half	1
	.byte	82
	.word	.L23-.L98,.L419-.L98
	.half	5
	.byte	144,32,157,32,0
	.word	.L92-.L98,.L217-.L98
	.half	5
	.byte	144,32,157,32,0
	.word	.L420-.L98,.L217-.L98
	.half	1
	.byte	82
	.word	.L415-.L98,.L368-.L98
	.half	1
	.byte	82
	.word	0,0
.L369:
	.word	-1,.L98,0,.L414-.L98
	.half	1
	.byte	100
	.word	.L96-.L98,.L182-.L98
	.half	1
	.byte	111
	.word	.L94-.L98,.L192-.L98
	.half	1
	.byte	111
	.word	.L92-.L98,.L217-.L98
	.half	1
	.byte	111
	.word	.L375-.L98,.L368-.L98
	.half	1
	.byte	111
	.word	0,0
.L377:
	.word	0,0
.L372:
	.word	-1,.L98,.L416-.L98,.L415-.L98
	.half	1
	.byte	95
	.word	.L94-.L98,.L417-.L98
	.half	1
	.byte	95
	.word	.L23-.L98,.L419-.L98
	.half	1
	.byte	95
	.word	.L92-.L98,.L420-.L98
	.half	1
	.byte	95
	.word	0,0
.L373:
	.word	-1,.L98,.L94-.L98,.L192-.L98
	.half	1
	.byte	81
	.word	.L92-.L98,.L217-.L98
	.half	1
	.byte	81
	.word	.L421-.L98,.L368-.L98
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_loc'
.L99:
	.word	-1,.L100,0,.L378-.L100
	.half	2
	.byte	138,0
	.word	0,0
.L383:
	.word	-1,.L100,.L410-.L100,.L3-.L100
	.half	1
	.byte	95
	.word	.L2-.L100,.L2-.L100
	.half	1
	.byte	95
	.word	.L4-.L100,.L4-.L100
	.half	1
	.byte	95
	.word	.L5-.L100,.L8-.L100
	.half	1
	.byte	95
	.word	0,0
.L380:
	.word	-1,.L100,.L8-.L100,.L182-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	.L422-.L100,.L423-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	.L94-.L100,.L192-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	.L418-.L100,.L192-.L100
	.half	1
	.byte	82
	.word	.L35-.L100,.L425-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	.L92-.L100,.L217-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	.L420-.L100,.L217-.L100
	.half	1
	.byte	82
	.word	.L423-.L100,.L378-.L100
	.half	1
	.byte	82
	.word	0,0
.L379:
	.word	-1,.L100,0,.L422-.L100
	.half	1
	.byte	100
	.word	.L96-.L100,.L182-.L100
	.half	1
	.byte	111
	.word	.L94-.L100,.L192-.L100
	.half	1
	.byte	111
	.word	.L92-.L100,.L217-.L100
	.half	1
	.byte	111
	.word	.L384-.L100,.L378-.L100
	.half	1
	.byte	111
	.word	0,0
.L386:
	.word	0,0
.L381:
	.word	-1,.L100,.L424-.L100,.L423-.L100
	.half	1
	.byte	95
	.word	.L94-.L100,.L417-.L100
	.half	1
	.byte	95
	.word	.L35-.L100,.L425-.L100
	.half	1
	.byte	95
	.word	.L92-.L100,.L420-.L100
	.half	1
	.byte	95
	.word	0,0
.L382:
	.word	-1,.L100,.L94-.L100,.L192-.L100
	.half	1
	.byte	81
	.word	.L92-.L100,.L217-.L100
	.half	1
	.byte	81
	.word	.L426-.L100,.L378-.L100
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_loc'
.L101:
	.word	-1,.L102,0,.L387-.L102
	.half	2
	.byte	138,0
	.word	0,0
.L394:
	.word	-1,.L102,.L428-.L102,.L44-.L102
	.half	1
	.byte	95
	.word	0,0
.L390:
	.word	-1,.L102,.L44-.L102,.L187-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L429-.L102,.L430-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L94-.L102,.L192-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L418-.L102,.L192-.L102
	.half	1
	.byte	82
	.word	.L47-.L102,.L432-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L92-.L102,.L217-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L420-.L102,.L217-.L102
	.half	1
	.byte	82
	.word	.L430-.L102,.L387-.L102
	.half	1
	.byte	82
	.word	0,0
.L388:
	.word	-1,.L102,0,.L427-.L102
	.half	1
	.byte	100
	.word	.L395-.L102,.L427-.L102
	.half	1
	.byte	111
	.word	.L104-.L102,.L187-.L102
	.half	1
	.byte	111
	.word	.L94-.L102,.L192-.L102
	.half	1
	.byte	111
	.word	.L92-.L102,.L217-.L102
	.half	1
	.byte	111
	.word	.L429-.L102,.L387-.L102
	.half	1
	.byte	111
	.word	0,0
.L397:
	.word	0,0
.L391:
	.word	-1,.L102,.L431-.L102,.L430-.L102
	.half	1
	.byte	95
	.word	.L94-.L102,.L417-.L102
	.half	1
	.byte	95
	.word	.L47-.L102,.L432-.L102
	.half	1
	.byte	95
	.word	.L92-.L102,.L420-.L102
	.half	1
	.byte	95
	.word	0,0
.L392:
	.word	-1,.L102,.L94-.L102,.L192-.L102
	.half	1
	.byte	81
	.word	.L92-.L102,.L217-.L102
	.half	1
	.byte	81
	.word	.L433-.L102,.L387-.L102
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_loc'
.L105:
	.word	-1,.L106,0,.L398-.L106
	.half	2
	.byte	138,0
	.word	0,0
.L403:
	.word	-1,.L106,.L428-.L106,.L39-.L106
	.half	1
	.byte	95
	.word	.L38-.L106,.L38-.L106
	.half	1
	.byte	95
	.word	.L40-.L106,.L40-.L106
	.half	1
	.byte	95
	.word	.L41-.L106,.L44-.L106
	.half	1
	.byte	95
	.word	0,0
.L400:
	.word	-1,.L106,.L44-.L106,.L187-.L106
	.half	5
	.byte	144,32,157,32,0
	.word	.L434-.L106,.L435-.L106
	.half	5
	.byte	144,32,157,32,0
	.word	.L94-.L106,.L192-.L106
	.half	5
	.byte	144,32,157,32,0
	.word	.L418-.L106,.L192-.L106
	.half	1
	.byte	82
	.word	.L59-.L106,.L437-.L106
	.half	5
	.byte	144,32,157,32,0
	.word	.L92-.L106,.L217-.L106
	.half	5
	.byte	144,32,157,32,0
	.word	.L420-.L106,.L217-.L106
	.half	1
	.byte	82
	.word	.L435-.L106,.L398-.L106
	.half	1
	.byte	82
	.word	0,0
.L399:
	.word	-1,.L106,0,.L434-.L106
	.half	1
	.byte	100
	.word	.L104-.L106,.L187-.L106
	.half	1
	.byte	111
	.word	.L94-.L106,.L192-.L106
	.half	1
	.byte	111
	.word	.L92-.L106,.L217-.L106
	.half	1
	.byte	111
	.word	.L404-.L106,.L398-.L106
	.half	1
	.byte	111
	.word	0,0
.L406:
	.word	0,0
.L401:
	.word	-1,.L106,.L436-.L106,.L435-.L106
	.half	1
	.byte	95
	.word	.L94-.L106,.L417-.L106
	.half	1
	.byte	95
	.word	.L59-.L106,.L437-.L106
	.half	1
	.byte	95
	.word	.L92-.L106,.L420-.L106
	.half	1
	.byte	95
	.word	0,0
.L402:
	.word	-1,.L106,.L94-.L106,.L192-.L106
	.half	1
	.byte	81
	.word	.L92-.L106,.L217-.L106
	.half	1
	.byte	81
	.word	.L438-.L106,.L398-.L106
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_loc'
.L107:
	.word	-1,.L108,0,.L233-.L108
	.half	2
	.byte	138,0
	.word	0,0
.L235:
	.word	-1,.L108,0,.L439-.L108
	.half	1
	.byte	100
	.word	.L440-.L108,.L233-.L108
	.half	1
	.byte	111
	.word	0,0
.L237:
	.word	-1,.L108,.L439-.L108,.L441-.L108
	.half	1
	.byte	82
	.word	.L442-.L108,.L233-.L108
	.half	1
	.byte	95
	.word	.L443-.L108,.L233-.L108
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_loc'
.L109:
	.word	-1,.L110,0,.L444-.L110
	.half	2
	.byte	138,0
	.word	.L444-.L110,.L62-.L110
	.half	2
	.byte	138,24
	.word	.L62-.L110,.L62-.L110
	.half	2
	.byte	138,0
	.word	.L62-.L110,.L63-.L110
	.half	2
	.byte	138,24
	.word	.L63-.L110,.L63-.L110
	.half	2
	.byte	138,0
	.word	.L63-.L110,.L64-.L110
	.half	2
	.byte	138,24
	.word	.L64-.L110,.L64-.L110
	.half	2
	.byte	138,0
	.word	.L64-.L110,.L65-.L110
	.half	2
	.byte	138,24
	.word	.L65-.L110,.L65-.L110
	.half	2
	.byte	138,0
	.word	.L65-.L110,.L238-.L110
	.half	2
	.byte	138,24
	.word	.L238-.L110,.L238-.L110
	.half	2
	.byte	138,0
	.word	0,0
.L258:
	.word	0,0
.L268:
	.word	0,0
.L276:
	.word	0,0
.L283:
	.word	0,0
.L292:
	.word	0,0
.L260:
	.word	0,0
.L270:
	.word	0,0
.L278:
	.word	0,0
.L285:
	.word	0,0
.L294:
	.word	0,0
.L242:
	.word	-1,.L110,0,.L245-.L110
	.half	1
	.byte	84
	.word	.L116-.L110,.L222-.L110
	.half	1
	.byte	84
	.word	0,0
.L252:
	.word	0,0
.L250:
	.word	0,0
.L248:
	.word	0,0
.L240:
	.word	-1,.L110,0,.L245-.L110
	.half	1
	.byte	100
	.word	.L116-.L110,.L445-.L110
	.half	1
	.byte	100
	.word	.L446-.L110,.L222-.L110
	.half	1
	.byte	109
	.word	.L114-.L110,.L227-.L110
	.half	1
	.byte	109
	.word	.L124-.L110,.L197-.L110
	.half	1
	.byte	109
	.word	.L122-.L110,.L202-.L110
	.half	1
	.byte	109
	.word	.L120-.L110,.L207-.L110
	.half	1
	.byte	109
	.word	.L118-.L110,.L212-.L110
	.half	1
	.byte	109
	.word	.L112-.L110,.L232-.L110
	.half	1
	.byte	109
	.word	.L246-.L110,.L66-.L110
	.half	1
	.byte	109
	.word	.L289-.L110,.L238-.L110
	.half	1
	.byte	109
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_loc'
.L125:
	.word	-1,.L126,0,.L447-.L126
	.half	2
	.byte	138,0
	.word	.L447-.L126,.L75-.L126
	.half	2
	.byte	138,24
	.word	.L75-.L126,.L75-.L126
	.half	2
	.byte	138,0
	.word	.L75-.L126,.L76-.L126
	.half	2
	.byte	138,24
	.word	.L76-.L126,.L76-.L126
	.half	2
	.byte	138,0
	.word	.L76-.L126,.L78-.L126
	.half	2
	.byte	138,24
	.word	.L78-.L126,.L78-.L126
	.half	2
	.byte	138,0
	.word	.L78-.L126,.L297-.L126
	.half	2
	.byte	138,24
	.word	.L297-.L126,.L297-.L126
	.half	2
	.byte	138,0
	.word	0,0
.L310:
	.word	0,0
.L318:
	.word	0,0
.L326:
	.word	0,0
.L333:
	.word	0,0
.L342:
	.word	0,0
.L312:
	.word	0,0
.L320:
	.word	0,0
.L328:
	.word	0,0
.L335:
	.word	0,0
.L344:
	.word	0,0
.L300:
	.word	-1,.L126,0,.L301-.L126
	.half	1
	.byte	84
	.word	.L116-.L126,.L222-.L126
	.half	1
	.byte	84
	.word	0,0
.L305:
	.word	0,0
.L304:
	.word	0,0
.L303:
	.word	0,0
.L299:
	.word	-1,.L126,0,.L301-.L126
	.half	1
	.byte	100
	.word	.L116-.L126,.L445-.L126
	.half	1
	.byte	100
	.word	.L446-.L126,.L222-.L126
	.half	1
	.byte	109
	.word	.L114-.L126,.L227-.L126
	.half	1
	.byte	109
	.word	.L124-.L126,.L197-.L126
	.half	1
	.byte	109
	.word	.L122-.L126,.L202-.L126
	.half	1
	.byte	109
	.word	.L120-.L126,.L207-.L126
	.half	1
	.byte	109
	.word	.L118-.L126,.L212-.L126
	.half	1
	.byte	109
	.word	.L112-.L126,.L232-.L126
	.half	1
	.byte	109
	.word	.L301-.L126,.L77-.L126
	.half	1
	.byte	109
	.word	.L323-.L126,.L79-.L126
	.half	1
	.byte	109
	.word	.L339-.L126,.L297-.L126
	.half	1
	.byte	109
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_loc'
.L127:
	.word	-1,.L128,0,.L407-.L128
	.half	2
	.byte	138,0
	.word	0,0
.L408:
	.word	-1,.L128,0,.L448-.L128
	.half	1
	.byte	100
	.word	.L449-.L128,.L407-.L128
	.half	1
	.byte	111
	.word	0,0
.L409:
	.word	-1,.L128,.L448-.L128,.L450-.L128
	.half	1
	.byte	82
	.word	.L451-.L128,.L407-.L128
	.half	1
	.byte	88
	.word	.L452-.L128,.L88-.L128
	.half	1
	.byte	84
	.word	.L453-.L128,.L407-.L128
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L603:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L603,.L90,.L348-.L90
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L603,.L98,.L368-.L98
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L603,.L100,.L378-.L100
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L603,.L102,.L387-.L102
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L603,.L106,.L398-.L106
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L603,.L108,.L233-.L108
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_frame'
	.word	104
	.word	.L603,.L110,.L238-.L110
	.byte	4
	.word	(.L444-.L110)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L62-.L444)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L63-.L62)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L64-.L63)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L65-.L64)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L238-.L65)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_frame'
	.word	88
	.word	.L603,.L126,.L297-.L126
	.byte	4
	.word	(.L447-.L126)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L75-.L447)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L76-.L75)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L78-.L76)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L297-.L78)/2
	.byte	19,0,8,26,0,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L603,.L128,.L407-.L128
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L604:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_22')
	.sect	'.debug_frame'
	.word	24
	.word	.L604,.L92,.L217-.L92
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_17')
	.sect	'.debug_frame'
	.word	24
	.word	.L604,.L94,.L192-.L94
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_15')
	.sect	'.debug_frame'
	.word	24
	.word	.L604,.L96,.L182-.L96
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_16')
	.sect	'.debug_frame'
	.word	24
	.word	.L604,.L104,.L187-.L104
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_25')
	.sect	'.debug_frame'
	.word	24
	.word	.L604,.L112,.L232-.L112
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_24')
	.sect	'.debug_frame'
	.word	24
	.word	.L604,.L114,.L227-.L114
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_23')
	.sect	'.debug_frame'
	.word	24
	.word	.L604,.L116,.L222-.L116
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_21')
	.sect	'.debug_frame'
	.word	24
	.word	.L604,.L118,.L212-.L118
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_20')
	.sect	'.debug_frame'
	.word	24
	.word	.L604,.L120,.L207-.L120
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_19')
	.sect	'.debug_frame'
	.word	24
	.word	.L604,.L122,.L202-.L122
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_18')
	.sect	'.debug_frame'
	.word	24
	.word	.L604,.L124,.L197-.L124
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gpt12\Std\IfxGpt12.c	   319  }

	; Module end
