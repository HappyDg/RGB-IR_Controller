	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc22116a --dep-file=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\.IfxGtm_Tom_PwmHl.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -DNDEBUG -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --no-warnings=542 --make-target=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.src ..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c"
	.compiler_name		"ctc"
	;source	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c'

	
$TC16X
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getDeadtime',code,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getDeadtime'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_getDeadtime

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     2   * \file IfxGtm_Tom_PwmHl.c
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     3   * \brief GTM PWMHL details
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     4   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     5   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     7   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     9   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    10   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    15   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    16   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    22   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    23   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    24  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    25  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    26  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    27  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    28  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    29  #include "IfxGtm_Tom_PwmHl.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    30  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    31  #include "stddef.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    32  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    33  /** \addtogroup IfxLld_Gtm_Tom_PwmHl_PwmHl_StdIf_Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    34   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    35  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    36  /*------------------------Inline Function Prototypes--------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    37  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    38  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    39  /** \brief Inverts the active state
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    40   * \param activeState Active state
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    41   * \return State
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    42   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    43  IFX_INLINE Ifx_ActiveState IfxGtm_Tom_PwmHl_invertActiveState(Ifx_ActiveState activeState);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    44  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    45  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    46  /*-----------------------Private Function Prototypes--------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    47  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    48  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    49  /** \brief Updates the x output duty cycle in center aligned and center aligned inverted modes
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    50   * \param driver GTM TOM PWM driver
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    51   * \param tOn T on
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    52   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    53   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    54  static void IfxGtm_Tom_PwmHl_updateCenterAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    55  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    56  /** \brief Updates the x output duty cycle in edge aligned modes (left and right aligned)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    57   * \param driver GTM TOM PWM driver
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    58   * \param tOn T on
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    59   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    60   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    61  static void IfxGtm_Tom_PwmHl_updateEdgeAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    62  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    63  /** \brief Set the outputs to inactive
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    64   * \param driver GTM TOM PWM driver
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    65   * \param tOn T on
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    66   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    67   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    68  static void IfxGtm_Tom_PwmHl_updateOff(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    69  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    70  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    72  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    73  /*------------------------Private Variables/Constants-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    74  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    75  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    76  static const IfxGtm_Tom_PwmHl_Mode IfxGtm_Tom_PwmHl_modes[5] = {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    77      {FALSE, IfxGtm_Tom_PwmHl_updateCenterAligned},   // Ifx_Pwm_Mode_centerAligned
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    78      {TRUE,  IfxGtm_Tom_PwmHl_updateCenterAligned},   // Ifx_Pwm_Mode_centerAlignedInverted
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    79      {FALSE, IfxGtm_Tom_PwmHl_updateEdgeAligned  },   // Ifx_Pwm_Mode_leftAligned
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    80      {TRUE,  IfxGtm_Tom_PwmHl_updateEdgeAligned  },   // Ifx_Pwm_Mode_rightAligned
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    81      {FALSE, IfxGtm_Tom_PwmHl_updateOff          } // Ifx_Pwm_Mode_off
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    82  };
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    83  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    84  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    85  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    86  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    87  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    88  IFX_INLINE Ifx_ActiveState IfxGtm_Tom_PwmHl_invertActiveState(Ifx_ActiveState activeState)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    89  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    90      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    91  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    92  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    93  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    94  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    95  /*-------------------------Function Implementations---------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    96  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    97  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    98  float32 IfxGtm_Tom_PwmHl_getDeadtime(IfxGtm_Tom_PwmHl *driver)
; Function IfxGtm_Tom_PwmHl_getDeadtime
.L65:
IfxGtm_Tom_PwmHl_getDeadtime:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    99  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   100      return IfxStdIf_Timer_tickToS(driver->timer->base.clockFreq, driver->base.deadtime);
	ld.w	d15,[a4]
.L532:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    25   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    28   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    29   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    31   * The figure below shows the standard timer interface.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    33   * \image html "Timer.png" "Standard timer interface"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    34   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    35   * This interface defines the following features:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    36   * - Timer with configurable frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    37   * - Configurable counting direction
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    38   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    39   * - Optional trigger signal with:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    40   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    41   *   - Configurable trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    42   *   - Configurable trigger edge
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    43   *   - trigger signal can be internal only or forwarded to a port pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    46  #ifndef IFXSTDIF_TIMER_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    47  #define IFXSTDIF_TIMER_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    49  #include "Cpu/Std/Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    50  #include "Src/Std/IfxSrc.h"     /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    51  #include "Port/Std/IfxPort.h"   /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */ /*FIXME introduce generic IF for ports. ex: IfxPort_OutputMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    52  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    53  /** \brief Output event enable / disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    56      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    57      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    58                                                    *          the output is set to active between time 0 to the trigger point,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    59                                                    *          and is set to inactive between the trigger point and the period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    60                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    61                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    62                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    63                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    64                                                    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    65  } IfxStdIf_Timer_OutputEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    66  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    67  /** \brief Timer increment direction */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    70      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    71      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    72      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    73  } IfxStdIf_Timer_CountDir;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    74  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    75  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    76  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    78  /** \brief Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    80   * \return Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    81   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    82  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    85   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    86   * \return Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    88  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    90  /** \brief Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    92   * \return Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    93   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    94  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    95  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    96  /** \brief Return the timer trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    98   * \return Return the timer timer point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    99   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   100  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   102  /** \brief Set the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   104   * \param frequency Requested timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   105   * \retval TRUE The requested frequency could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   106   * \retval FALSE The requested frequency is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   107   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   108  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver driver, float32 frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   110  /** \brief Indicates the driver that the imput frequency has changed and that it should be taken in account
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   111   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   114  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   116  /** \brief Apply requested updates.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   118   * Such requested update are calls to:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   119   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   120   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   121   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   122   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   123   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   124   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   125   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   126   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   127   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   128   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   129   * one timer period!!!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   130   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   132   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   135  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   137  /** \brief Disable updates
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   139   * The following API action will not be taken in account before applyUpdate is called:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   143   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   147   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   155   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   156   * \return Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   158  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   160  /** \brief Immediately start the timer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   161   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   162   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   163   * global (input) clock to the timer block is inactive.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   164   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   165   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   167  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   169  /** \brief Set the timer period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   170   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   171   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \param period Period value in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   174   * \retval TRUE The requested period could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   175   * \retval FALSE The requested period is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   176   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   177  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   179  /** \brief Stop timer at the end of the period
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   181   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   183   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   184   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   186  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver driver, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   188  /** \brief Set trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   189   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \see Timer_OutputEvent for the definition of the output level.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   191   * Active state is defined by Timer_Config::outputActiveState.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   193   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   194   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   195   * \param triggerPoint Trigger point in ticks from the period start.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   196   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   198  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   200  /** \brief Immediately stops the timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   202   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   203   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   204  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   206  /** \brief Return the timer interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   208   * \return Return the timer interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   210  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   212  /** \brief Return the trigger interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   214   * \return Return the trigger interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   216  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   218  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   219   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   220  struct IfxStdIf_Timer_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   222      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   223      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   224      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   225      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   226      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   227      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   228      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   229      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   230      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   231      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   232      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   233      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   234      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   235      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   236      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   237      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   238      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   239  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   241  /** \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   242  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   244      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   245      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   246      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxPort_OutputMode outputMode;          /**< \brief Output mode *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   250      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   251      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   252  } IfxStdIf_Timer_TrigConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   254  /** \brief Timer configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   255  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   256  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   257      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   258      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   259      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   260      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   261      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   262      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   263      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   264  } IfxStdIf_Timer_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   266  /** \addtogroup library_srvsw_stdif_timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   267   *  \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   269  /** \copydoc IfxStdIf_Timer_GetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   270  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   272      return stdIf->getFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   273  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   276  /** \copydoc IfxStdIf_Timer_GetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   277  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   279      return stdIf->getPeriod(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   280  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \copydoc IfxStdIf_Timer_GetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   284  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   285  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   286      return stdIf->getTrigger(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   287  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   288  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   290  /** \copydoc IfxStdIf_Timer_GetResolution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   291  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   292  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   293      return stdIf->getResolution(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   294  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   297  /** \copydoc IfxStdIf_Timer_SetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   305  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   306  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   307      stdIf->updateInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   308  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   310  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   311  /** \copydoc IfxStdIf_Timer_ApplyUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   312  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   314      stdIf->applyUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   315  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   316  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   318  /** \copydoc IfxStdIf_Timer_DisableUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   320  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   321      stdIf->disableUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   322  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   324  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_GetInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   326  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   327  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   328      return stdIf->getInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   329  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   332  /** \copydoc IfxStdIf_Timer_Run */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   333  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   334  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   335      stdIf->run(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   336  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   337  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   339  /** \copydoc IfxStdIf_Timer_SetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   340  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   341  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   342      return stdIf->setPeriod(stdIf->driver, period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   343  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   346  /** \copydoc IfxStdIf_Timer_SetSingleMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   347  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   348  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   349      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   350  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   353  /** \copydoc IfxStdIf_Timer_SetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   354  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   355  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   356      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   357  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   360  /** \copydoc IfxStdIf_Timer_Stop */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   363      stdIf->stop(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_AckTimerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   368  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   369  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   370      return stdIf->ackTimerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   371  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   372  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   374  /** \copydoc IfxStdIf_Timer_AckTriggerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   375  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   376  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   377      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   378  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   381  /** \brief Convert timer ticks to seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   382   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   383   * \param  ticks time value in ticks to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   384   * \return Return the converted time in s
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   385   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   386  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   387  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   388      return ticks / clockFreq;
	fcall	.cocofun_11
.L345:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   101  }
	ret
.L279:
	
__IfxGtm_Tom_PwmHl_getDeadtime_function_end:
	.size	IfxGtm_Tom_PwmHl_getDeadtime,__IfxGtm_Tom_PwmHl_getDeadtime_function_end-IfxGtm_Tom_PwmHl_getDeadtime
.L130:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_11',code,cluster('.cocofun_11')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_11'
	.align	2
; Function .cocofun_11
.L67:
.cocofun_11:	.type	func
; Function body .cocofun_11, coco_iter:0
	ld.a	a15,[a4]20
.L714:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    25   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    28   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    29   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    31   * The figure below shows the standard timer interface.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    33   * \image html "Timer.png" "Standard timer interface"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    34   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    35   * This interface defines the following features:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    36   * - Timer with configurable frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    37   * - Configurable counting direction
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    38   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    39   * - Optional trigger signal with:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    40   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    41   *   - Configurable trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    42   *   - Configurable trigger edge
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    43   *   - trigger signal can be internal only or forwarded to a port pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    46  #ifndef IFXSTDIF_TIMER_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    47  #define IFXSTDIF_TIMER_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    49  #include "Cpu/Std/Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    50  #include "Src/Std/IfxSrc.h"     /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    51  #include "Port/Std/IfxPort.h"   /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */ /*FIXME introduce generic IF for ports. ex: IfxPort_OutputMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    52  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    53  /** \brief Output event enable / disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    56      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    57      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    58                                                    *          the output is set to active between time 0 to the trigger point,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    59                                                    *          and is set to inactive between the trigger point and the period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    60                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    61                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    62                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    63                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    64                                                    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    65  } IfxStdIf_Timer_OutputEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    66  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    67  /** \brief Timer increment direction */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    70      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    71      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    72      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    73  } IfxStdIf_Timer_CountDir;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    74  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    75  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    76  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    78  /** \brief Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    80   * \return Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    81   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    82  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    85   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    86   * \return Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    88  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    90  /** \brief Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    92   * \return Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    93   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    94  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    95  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    96  /** \brief Return the timer trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    98   * \return Return the timer timer point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    99   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   100  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   102  /** \brief Set the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   104   * \param frequency Requested timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   105   * \retval TRUE The requested frequency could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   106   * \retval FALSE The requested frequency is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   107   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   108  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver driver, float32 frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   110  /** \brief Indicates the driver that the imput frequency has changed and that it should be taken in account
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   111   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   114  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   116  /** \brief Apply requested updates.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   118   * Such requested update are calls to:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   119   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   120   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   121   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   122   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   123   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   124   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   125   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   126   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   127   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   128   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   129   * one timer period!!!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   130   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   132   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   135  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   137  /** \brief Disable updates
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   139   * The following API action will not be taken in account before applyUpdate is called:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   143   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   147   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   155   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   156   * \return Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   158  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   160  /** \brief Immediately start the timer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   161   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   162   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   163   * global (input) clock to the timer block is inactive.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   164   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   165   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   167  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   169  /** \brief Set the timer period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   170   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   171   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \param period Period value in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   174   * \retval TRUE The requested period could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   175   * \retval FALSE The requested period is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   176   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   177  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   179  /** \brief Stop timer at the end of the period
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   181   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   183   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   184   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   186  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver driver, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   188  /** \brief Set trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   189   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \see Timer_OutputEvent for the definition of the output level.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   191   * Active state is defined by Timer_Config::outputActiveState.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   193   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   194   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   195   * \param triggerPoint Trigger point in ticks from the period start.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   196   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   198  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   200  /** \brief Immediately stops the timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   202   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   203   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   204  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   206  /** \brief Return the timer interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   208   * \return Return the timer interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   210  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   212  /** \brief Return the trigger interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   214   * \return Return the trigger interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   216  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   218  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   219   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   220  struct IfxStdIf_Timer_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   222      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   223      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   224      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   225      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   226      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   227      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   228      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   229      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   230      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   231      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   232      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   233      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   234      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   235      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   236      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   237      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   238      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   239  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   241  /** \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   242  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   244      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   245      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   246      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxPort_OutputMode outputMode;          /**< \brief Output mode *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   250      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   251      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   252  } IfxStdIf_Timer_TrigConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   254  /** \brief Timer configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   255  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   256  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   257      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   258      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   259      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   260      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   261      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   262      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   263      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   264  } IfxStdIf_Timer_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   266  /** \addtogroup library_srvsw_stdif_timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   267   *  \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   269  /** \copydoc IfxStdIf_Timer_GetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   270  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   272      return stdIf->getFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   273  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   276  /** \copydoc IfxStdIf_Timer_GetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   277  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   279      return stdIf->getPeriod(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   280  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \copydoc IfxStdIf_Timer_GetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   284  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   285  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   286      return stdIf->getTrigger(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   287  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   288  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   290  /** \copydoc IfxStdIf_Timer_GetResolution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   291  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   292  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   293      return stdIf->getResolution(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   294  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   297  /** \copydoc IfxStdIf_Timer_SetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   305  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   306  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   307      stdIf->updateInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   308  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   310  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   311  /** \copydoc IfxStdIf_Timer_ApplyUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   312  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   314      stdIf->applyUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   315  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   316  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   318  /** \copydoc IfxStdIf_Timer_DisableUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   320  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   321      stdIf->disableUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   322  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   324  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_GetInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   326  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   327  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   328      return stdIf->getInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   329  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   332  /** \copydoc IfxStdIf_Timer_Run */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   333  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   334  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   335      stdIf->run(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   336  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   337  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   339  /** \copydoc IfxStdIf_Timer_SetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   340  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   341  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   342      return stdIf->setPeriod(stdIf->driver, period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   343  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   346  /** \copydoc IfxStdIf_Timer_SetSingleMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   347  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   348  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   349      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   350  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   353  /** \copydoc IfxStdIf_Timer_SetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   354  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   355  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   356      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   357  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   360  /** \copydoc IfxStdIf_Timer_Stop */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   363      stdIf->stop(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_AckTimerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   368  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   369  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   370      return stdIf->ackTimerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   371  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   372  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   374  /** \copydoc IfxStdIf_Timer_AckTriggerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   375  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   376  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   377      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   378  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   381  /** \brief Convert timer ticks to seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   382   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   383   * \param  ticks time value in ticks to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   384   * \return Return the converted time in s
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   385   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   386  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   387  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   388      return ticks / clockFreq;
	utof	d15,d15
.L715:
	ld.w	d0,[a15]6
.L716:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    25   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    28   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    29   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    31   * The figure below shows the standard timer interface.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    33   * \image html "Timer.png" "Standard timer interface"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    34   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    35   * This interface defines the following features:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    36   * - Timer with configurable frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    37   * - Configurable counting direction
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    38   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    39   * - Optional trigger signal with:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    40   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    41   *   - Configurable trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    42   *   - Configurable trigger edge
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    43   *   - trigger signal can be internal only or forwarded to a port pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    46  #ifndef IFXSTDIF_TIMER_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    47  #define IFXSTDIF_TIMER_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    49  #include "Cpu/Std/Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    50  #include "Src/Std/IfxSrc.h"     /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    51  #include "Port/Std/IfxPort.h"   /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */ /*FIXME introduce generic IF for ports. ex: IfxPort_OutputMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    52  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    53  /** \brief Output event enable / disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    56      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    57      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    58                                                    *          the output is set to active between time 0 to the trigger point,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    59                                                    *          and is set to inactive between the trigger point and the period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    60                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    61                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    62                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    63                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    64                                                    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    65  } IfxStdIf_Timer_OutputEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    66  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    67  /** \brief Timer increment direction */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    70      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    71      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    72      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    73  } IfxStdIf_Timer_CountDir;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    74  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    75  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    76  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    78  /** \brief Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    80   * \return Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    81   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    82  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    85   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    86   * \return Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    88  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    90  /** \brief Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    92   * \return Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    93   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    94  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    95  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    96  /** \brief Return the timer trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    98   * \return Return the timer timer point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    99   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   100  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   102  /** \brief Set the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   104   * \param frequency Requested timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   105   * \retval TRUE The requested frequency could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   106   * \retval FALSE The requested frequency is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   107   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   108  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver driver, float32 frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   110  /** \brief Indicates the driver that the imput frequency has changed and that it should be taken in account
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   111   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   114  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   116  /** \brief Apply requested updates.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   118   * Such requested update are calls to:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   119   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   120   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   121   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   122   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   123   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   124   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   125   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   126   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   127   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   128   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   129   * one timer period!!!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   130   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   132   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   135  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   137  /** \brief Disable updates
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   139   * The following API action will not be taken in account before applyUpdate is called:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   143   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   147   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   155   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   156   * \return Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   158  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   160  /** \brief Immediately start the timer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   161   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   162   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   163   * global (input) clock to the timer block is inactive.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   164   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   165   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   167  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   169  /** \brief Set the timer period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   170   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   171   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \param period Period value in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   174   * \retval TRUE The requested period could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   175   * \retval FALSE The requested period is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   176   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   177  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   179  /** \brief Stop timer at the end of the period
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   181   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   183   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   184   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   186  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver driver, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   188  /** \brief Set trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   189   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \see Timer_OutputEvent for the definition of the output level.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   191   * Active state is defined by Timer_Config::outputActiveState.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   193   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   194   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   195   * \param triggerPoint Trigger point in ticks from the period start.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   196   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   198  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   200  /** \brief Immediately stops the timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   202   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   203   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   204  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   206  /** \brief Return the timer interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   208   * \return Return the timer interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   210  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   212  /** \brief Return the trigger interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   214   * \return Return the trigger interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   216  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   218  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   219   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   220  struct IfxStdIf_Timer_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   222      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   223      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   224      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   225      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   226      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   227      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   228      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   229      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   230      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   231      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   232      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   233      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   234      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   235      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   236      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   237      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   238      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   239  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   241  /** \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   242  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   244      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   245      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   246      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxPort_OutputMode outputMode;          /**< \brief Output mode *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   250      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   251      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   252  } IfxStdIf_Timer_TrigConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   254  /** \brief Timer configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   255  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   256  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   257      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   258      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   259      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   260      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   261      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   262      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   263      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   264  } IfxStdIf_Timer_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   266  /** \addtogroup library_srvsw_stdif_timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   267   *  \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   269  /** \copydoc IfxStdIf_Timer_GetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   270  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   272      return stdIf->getFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   273  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   276  /** \copydoc IfxStdIf_Timer_GetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   277  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   279      return stdIf->getPeriod(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   280  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \copydoc IfxStdIf_Timer_GetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   284  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   285  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   286      return stdIf->getTrigger(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   287  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   288  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   290  /** \copydoc IfxStdIf_Timer_GetResolution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   291  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   292  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   293      return stdIf->getResolution(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   294  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   297  /** \copydoc IfxStdIf_Timer_SetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   305  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   306  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   307      stdIf->updateInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   308  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   310  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   311  /** \copydoc IfxStdIf_Timer_ApplyUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   312  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   314      stdIf->applyUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   315  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   316  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   318  /** \copydoc IfxStdIf_Timer_DisableUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   320  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   321      stdIf->disableUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   322  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   324  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_GetInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   326  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   327  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   328      return stdIf->getInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   329  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   332  /** \copydoc IfxStdIf_Timer_Run */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   333  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   334  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   335      stdIf->run(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   336  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   337  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   339  /** \copydoc IfxStdIf_Timer_SetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   340  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   341  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   342      return stdIf->setPeriod(stdIf->driver, period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   343  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   346  /** \copydoc IfxStdIf_Timer_SetSingleMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   347  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   348  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   349      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   350  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   353  /** \copydoc IfxStdIf_Timer_SetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   354  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   355  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   356      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   357  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   360  /** \copydoc IfxStdIf_Timer_Stop */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   363      stdIf->stop(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_AckTimerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   368  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   369  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   370      return stdIf->ackTimerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   371  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   372  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   374  /** \copydoc IfxStdIf_Timer_AckTriggerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   375  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   376  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   377      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   378  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   381  /** \brief Convert timer ticks to seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   382   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   383   * \param  ticks time value in ticks to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   384   * \return Return the converted time in s
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   385   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   386  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   387  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   388      return ticks / clockFreq;
	div.f	d2,d15,d0
	fret
.L210:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMinPulse',code,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMinPulse'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_getMinPulse

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   102  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   104  float32 IfxGtm_Tom_PwmHl_getMinPulse(IfxGtm_Tom_PwmHl *driver)
; Function IfxGtm_Tom_PwmHl_getMinPulse
.L69:
IfxGtm_Tom_PwmHl_getMinPulse:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   105  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   106      return IfxStdIf_Timer_tickToS(driver->timer->base.clockFreq, driver->base.minPulse - driver->base.deadtime);
	ld.w	d15,[a4]4
.L537:
	ld.w	d0,[a4]
.L538:
	sub	d15,d0
.L539:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    25   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    28   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    29   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    31   * The figure below shows the standard timer interface.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    33   * \image html "Timer.png" "Standard timer interface"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    34   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    35   * This interface defines the following features:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    36   * - Timer with configurable frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    37   * - Configurable counting direction
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    38   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    39   * - Optional trigger signal with:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    40   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    41   *   - Configurable trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    42   *   - Configurable trigger edge
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    43   *   - trigger signal can be internal only or forwarded to a port pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    46  #ifndef IFXSTDIF_TIMER_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    47  #define IFXSTDIF_TIMER_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    49  #include "Cpu/Std/Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    50  #include "Src/Std/IfxSrc.h"     /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    51  #include "Port/Std/IfxPort.h"   /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */ /*FIXME introduce generic IF for ports. ex: IfxPort_OutputMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    52  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    53  /** \brief Output event enable / disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    56      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    57      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    58                                                    *          the output is set to active between time 0 to the trigger point,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    59                                                    *          and is set to inactive between the trigger point and the period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    60                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    61                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    62                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    63                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    64                                                    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    65  } IfxStdIf_Timer_OutputEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    66  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    67  /** \brief Timer increment direction */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    70      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    71      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    72      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    73  } IfxStdIf_Timer_CountDir;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    74  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    75  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    76  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    78  /** \brief Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    80   * \return Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    81   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    82  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    85   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    86   * \return Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    88  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    90  /** \brief Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    92   * \return Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    93   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    94  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    95  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    96  /** \brief Return the timer trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    98   * \return Return the timer timer point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    99   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   100  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   102  /** \brief Set the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   104   * \param frequency Requested timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   105   * \retval TRUE The requested frequency could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   106   * \retval FALSE The requested frequency is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   107   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   108  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver driver, float32 frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   110  /** \brief Indicates the driver that the imput frequency has changed and that it should be taken in account
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   111   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   114  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   116  /** \brief Apply requested updates.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   118   * Such requested update are calls to:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   119   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   120   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   121   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   122   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   123   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   124   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   125   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   126   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   127   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   128   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   129   * one timer period!!!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   130   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   132   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   135  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   137  /** \brief Disable updates
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   139   * The following API action will not be taken in account before applyUpdate is called:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   143   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   147   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   155   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   156   * \return Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   158  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   160  /** \brief Immediately start the timer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   161   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   162   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   163   * global (input) clock to the timer block is inactive.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   164   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   165   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   167  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   169  /** \brief Set the timer period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   170   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   171   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \param period Period value in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   174   * \retval TRUE The requested period could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   175   * \retval FALSE The requested period is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   176   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   177  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   179  /** \brief Stop timer at the end of the period
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   181   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   183   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   184   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   186  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver driver, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   188  /** \brief Set trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   189   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \see Timer_OutputEvent for the definition of the output level.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   191   * Active state is defined by Timer_Config::outputActiveState.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   193   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   194   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   195   * \param triggerPoint Trigger point in ticks from the period start.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   196   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   198  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   200  /** \brief Immediately stops the timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   202   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   203   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   204  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   206  /** \brief Return the timer interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   208   * \return Return the timer interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   210  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   212  /** \brief Return the trigger interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   214   * \return Return the trigger interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   216  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   218  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   219   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   220  struct IfxStdIf_Timer_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   222      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   223      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   224      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   225      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   226      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   227      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   228      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   229      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   230      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   231      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   232      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   233      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   234      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   235      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   236      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   237      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   238      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   239  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   241  /** \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   242  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   244      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   245      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   246      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxPort_OutputMode outputMode;          /**< \brief Output mode *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   250      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   251      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   252  } IfxStdIf_Timer_TrigConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   254  /** \brief Timer configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   255  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   256  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   257      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   258      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   259      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   260      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   261      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   262      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   263      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   264  } IfxStdIf_Timer_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   266  /** \addtogroup library_srvsw_stdif_timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   267   *  \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   269  /** \copydoc IfxStdIf_Timer_GetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   270  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   272      return stdIf->getFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   273  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   276  /** \copydoc IfxStdIf_Timer_GetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   277  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   279      return stdIf->getPeriod(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   280  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \copydoc IfxStdIf_Timer_GetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   284  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   285  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   286      return stdIf->getTrigger(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   287  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   288  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   290  /** \copydoc IfxStdIf_Timer_GetResolution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   291  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   292  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   293      return stdIf->getResolution(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   294  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   297  /** \copydoc IfxStdIf_Timer_SetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   305  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   306  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   307      stdIf->updateInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   308  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   310  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   311  /** \copydoc IfxStdIf_Timer_ApplyUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   312  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   314      stdIf->applyUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   315  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   316  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   318  /** \copydoc IfxStdIf_Timer_DisableUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   320  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   321      stdIf->disableUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   322  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   324  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_GetInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   326  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   327  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   328      return stdIf->getInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   329  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   332  /** \copydoc IfxStdIf_Timer_Run */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   333  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   334  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   335      stdIf->run(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   336  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   337  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   339  /** \copydoc IfxStdIf_Timer_SetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   340  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   341  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   342      return stdIf->setPeriod(stdIf->driver, period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   343  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   346  /** \copydoc IfxStdIf_Timer_SetSingleMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   347  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   348  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   349      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   350  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   353  /** \copydoc IfxStdIf_Timer_SetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   354  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   355  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   356      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   357  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   360  /** \copydoc IfxStdIf_Timer_Stop */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   363      stdIf->stop(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_AckTimerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   368  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   369  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   370      return stdIf->ackTimerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   371  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   372  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   374  /** \copydoc IfxStdIf_Timer_AckTriggerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   375  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   376  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   377      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   378  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   381  /** \brief Convert timer ticks to seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   382   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   383   * \param  ticks time value in ticks to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   384   * \return Return the converted time in s
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   385   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   386  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   387  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   388      return ticks / clockFreq;
	fcall	.cocofun_11
.L540:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   107  }
	ret
.L282:
	
__IfxGtm_Tom_PwmHl_getMinPulse_function_end:
	.size	IfxGtm_Tom_PwmHl_getMinPulse,__IfxGtm_Tom_PwmHl_getMinPulse_function_end-IfxGtm_Tom_PwmHl_getMinPulse
.L135:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMode',code,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMode'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_getMode

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   108  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   109  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   110  Ifx_Pwm_Mode IfxGtm_Tom_PwmHl_getMode(IfxGtm_Tom_PwmHl *driver)
; Function IfxGtm_Tom_PwmHl_getMode
.L71:
IfxGtm_Tom_PwmHl_getMode:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   111  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   112      return driver->base.mode;
	ld.bu	d2,[a4]12
.L545:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   113  }
	ret
.L285:
	
__IfxGtm_Tom_PwmHl_getMode_function_end:
	.size	IfxGtm_Tom_PwmHl_getMode,__IfxGtm_Tom_PwmHl_getMode_function_end-IfxGtm_Tom_PwmHl_getMode
.L140:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_init',code,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_init'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_init

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   114  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   115  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   116  boolean IfxGtm_Tom_PwmHl_init(IfxGtm_Tom_PwmHl *driver, const IfxGtm_Tom_PwmHl_Config *config)
; Function IfxGtm_Tom_PwmHl_init
.L73:
IfxGtm_Tom_PwmHl_init:	.type	func
	mov.aa	a12,a5
.L350:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   117  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   118      boolean           result       = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   119      uint16            channelMask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   120      uint16            channelsMask = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   121      uint32            channelIndex;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   122      uint16            maskShift    = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   123      IfxGtm_Tom_Timer *timer        = config->timer;
	ld.a	a13,[a12]16
.L351:
	mov	d9,#1
	sub.a	a10,#32
.L346:
	mov	d8,#0
	mov.aa	a15,a4
.L352:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   124  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   125      // check that period value is less than 16 bits
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   126      if (IfxGtm_Tom_Timer_getPeriod(timer) > (0xFFFF - 2))
	mov.aa	a4,a13
.L348:
	call	IfxGtm_Tom_Timer_getPeriod
.L347:
	mov.u	d15,#65533
.L441:
	jge.u	d15,d2,.L5
.L442:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   127      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   128          result = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   129          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, FALSE);
	mov	d9,#0
	movh.a	a2,#@his(verboseLevelStr+8)
	ld.a	a2,[a2]@los(verboseLevelStr+8)
	st.a	[a10],a2
	lea	a2,.2.str
	st.a	[a10]4,a2
	movh.a	a2,#@his(.3.str)
	lea	a2,[a2]@los(.3.str)
	st.a	[a10]8,a2
	mov	d15,#129
	st.w	[a10]12,d15
	movh.a	a2,#@his(_999001___func__)
	lea	a2,[a2]@los(_999001___func__)
	st.a	[a10]16,a2
	movh.a	a4,#@his(.1.str)
	lea	a4,[a4]@los(.1.str)
	call	printf
.L5:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   130      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   131  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   132      /* driver.base must be at offset 0 to be compatible with the standard interface PwmHl */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   133      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, offsetof(IfxGtm_Tom_PwmHl, base) == 0);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   134  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   135      driver->base.mode             = Ifx_Pwm_Mode_init;
	mov	d15,#5
	st.b	[a15]12,d15
.L443:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   136      driver->timer                 = timer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   137      driver->base.setMode          = 0;
	mov	d15,#0
	st.a	[a15]20,a13
.L444:
	st.b	[a15]13,d15
.L445:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   138      driver->base.inverted         = FALSE;
	st.b	[a15]16,d15
.L446:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   139      driver->base.ccxActiveState   = config->base.ccxActiveState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   140      driver->base.coutxActiveState = config->base.coutxActiveState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   141      driver->base.channelCount     = config->base.channelCount;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      IfxGtm_Tom_PwmHl_setDeadtime(driver, config->base.deadtime);
	mov.aa	a4,a15
.L353:
	ld.bu	d15,[a12]12
.L447:
	st.b	[a15]14,d15
.L448:
	ld.bu	d15,[a12]13
.L449:
	st.b	[a15]15,d15
.L450:
	ld.bu	d15,[a12]8
.L451:
	st.b	[a15]17,d15
.L452:
	ld.w	d4,[a12]
	call	IfxGtm_Tom_PwmHl_setDeadtime
.L354:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   144      IfxGtm_Tom_PwmHl_setMinPulse(driver, config->base.minPulse);
	ld.w	d4,[a12]4
	mov.aa	a4,a15
.L355:
	call	IfxGtm_Tom_PwmHl_setMinPulse
.L356:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   145  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   146      driver->tom = &(timer->gtm->TOM[config->tom]);
	ld.a	a2,[a13]12
.L453:
	ld.bu	d15,[a12]20
	sha	d15,d15,#11
.L454:
	addsc.a	a2,a2,d15,#0
	movh.a	a3,#1
	add.a	a3,a2
	lea	a4,[a3]-32768
.L455:
	st.a	[a15]28,a4
.L456:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   147  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   148      /* config->ccx[0] is used for the definition of the TGC */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   149      if (config->ccx[0]->channel <= 7)
	ld.a	a2,[a12]24
.L457:
	ld.a	a2,[a2]
.L458:
	ld.b	d15,[a2]1
.L459:
	mov	d0,#7
.L460:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   150      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   151          driver->tgc = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 0);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   152      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   153      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   154      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   155          driver->tgc = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 1);
	lt	d4,d0,d15
	call	IfxGtm_Tom_Ch_getTgcPointer
.L461:
	st.a	[a15]32,a2
.L462:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   156      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   158      maskShift = (config->ccx[0]->channel <= 7) ? 0 : 8;
	ld.a	a2,[a12]24
.L463:
	ld.a	a2,[a2]
.L464:
	ld.b	d15,[a2]1
.L465:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   160      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, config->base.channelCount <= IFXGTM_TOM_PWMHL_MAX_NUM_CHANNELS);
	ge	d10,d15,#8
	ld.bu	d15,[a12]8
.L357:
	sha	d10,#3
.L466:
	jlt.u	d15,#4,.L8
.L467:
	movh.a	a2,#@his(verboseLevelStr+8)
	ld.a	a2,[a2]@los(verboseLevelStr+8)
	st.a	[a10],a2
	movh.a	a2,#@his(.5.str)
	lea	a2,[a2]@los(.5.str)
	st.a	[a10]4,a2
	movh.a	a2,#@his(.3.str)
	lea	a2,[a2]@los(.3.str)
	st.a	[a10]8,a2
	mov	d15,#160
	st.w	[a10]12,d15
	movh.a	a2,#@his(_999001___func__)
	lea	a2,[a2]@los(_999001___func__)
	st.a	[a10]16,a2
	movh.a	a4,#@his(.1.str)
	lea	a4,[a4]@los(.1.str)
	call	printf
.L8:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   161  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   162      IfxGtm_Tom_Ch_ClkSrc clock = IfxGtm_Tom_Ch_getClockSource(timer->tom, timer->timerChannel);
	ld.a	a4,[a13]16
.L468:
	ld.b	d4,[a13]29
	call	IfxGtm_Tom_Ch_getClockSource
.L358:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   163  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   164      for (channelIndex = 0; channelIndex < config->base.channelCount; channelIndex++)
	mov	d11,d2
	mov.aa	a14,a15
.L359:
	mov	d12,#0
	j	.L9
.L10:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   165      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   166          IfxGtm_Tom_Ch channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   167          /* CCX */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   168          channel                   = config->ccx[channelIndex]->channel;
	ld.a	a2,[a12]24
.L469:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   169          driver->ccx[channelIndex] = channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   170          channelMask               = 1 << (channel - maskShift);
	mov	d0,#1
.L470:
	addsc.a	a2,a2,d12,#2
	ld.a	a2,[a2]
.L471:
	ld.b	d13,[a2]1
.L360:
	st.b	[a14]36,d13
.L472:
	sub	d1,d13,d10
.L362:
	sha	d0,d0,d1
	fcall	.cocofun_15
.L349:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   171          channelsMask             |= channelMask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   172  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   173          /* Initialize the timer part */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   174          /* FIXME add IfxGtm_Tom_Ch_configurePwmMode() and use it */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   175          IfxGtm_Tom_Ch_setClockSource(driver->tom, channel, clock);
	call	IfxGtm_Tom_Ch_setClockSource
.L363:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   176  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   177          /* Initialize the SOUR reset value and enable the channel */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   178          IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, !driver->base.inverted
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   179              ? config->base.ccxActiveState
	ld.bu	d5,[a12]12
.L473:
	fcall	.cocofun_9
.L364:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L474:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   180              : IfxGtm_Tom_PwmHl_invertActiveState(config->base.ccxActiveState));
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   181          IfxGtm_Tom_Tgc_enableChannels(driver->tgc, channelMask, 0, TRUE); /* Write the SOUR outout with !SL */
	fcall	.cocofun_10
.L475:
	call	IfxGtm_Tom_Tgc_enableChannels
.L476:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   182          IfxGtm_Tom_Tgc_enableChannelsOutput(driver->tgc, channelMask, 0, TRUE);
	fcall	.cocofun_10
.L366:
	call	IfxGtm_Tom_Tgc_enableChannelsOutput
.L367:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   184          /* Set the SL to the required level for run time */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   185          IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, driver->base.inverted
	ld.bu	d15,[a15]16
.L477:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   186              ? config->base.ccxActiveState
	ld.bu	d5,[a12]12
.L478:
	jne	d15,#0,.L14
.L479:
	eq	d5,d5,#0

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   187              : IfxGtm_Tom_PwmHl_invertActiveState(config->base.ccxActiveState));
.L14:
	ld.a	a4,[a15]28
.L480:
	mov	d4,d13
	call	IfxGtm_Tom_Ch_setSignalLevel
.L481:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   188          IfxGtm_Tom_Ch_setResetSource(driver->tom, channel, IfxGtm_Tom_Ch_ResetEvent_onTrigger);
	mov	d4,d13
	ld.a	a4,[a15]28
.L368:
	mov	d5,#1
	call	IfxGtm_Tom_Ch_setResetSource
.L369:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   189          IfxGtm_Tom_Ch_setTriggerOutput(driver->tom, channel, IfxGtm_Tom_Ch_OutputTrigger_forward);
	mov	d4,d13
	ld.a	a4,[a15]28
.L370:
	mov	d5,#0
	call	IfxGtm_Tom_Ch_setTriggerOutput
.L371:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   190          IfxGtm_Tom_Ch_setCounterValue(driver->tom, channel, IfxGtm_Tom_Timer_getOffset(driver->timer));
	ld.a	a4,[a15]20
	call	IfxGtm_Tom_Timer_getOffset
.L482:
	ld.a	a4,[a15]28
.L483:
	mov	e4,d2,d13
	call	IfxGtm_Tom_Ch_setCounterValue
.L484:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   191  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   192          /*Initialize the port */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   193          IfxGtm_PinMap_setTomTout(config->ccx[channelIndex],
	ld.a	a2,[a12]24
.L485:
	fcall	.cocofun_12
.L486:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   194              config->base.outputMode, config->base.outputDriver);
	call	IfxGtm_PinMap_setTomTout
.L487:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   195          IfxPort_setPinState(config->ccx[channelIndex]->pin.port, config->ccx[channelIndex]->pin.pinIndex, config->base.ccxActiveState ? IfxPort_State_low : IfxPort_State_high);
	ld.bu	d15,[a12]12
.L488:
	fcall	.cocofun_13
.L261:
	ld.a	a2,[a12]24
.L489:
	fcall	.cocofun_8
.L262:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   196  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   197          /* COUTX */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   198          channel                     = config->coutx[channelIndex]->channel;
	ld.a	a2,[a12]28
.L490:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   199          driver->coutx[channelIndex] = channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   200          channelMask                 = 1 << (channel - maskShift);
	mov	d0,#1
.L491:
	addsc.a	a2,a2,d12,#2
	ld.a	a2,[a2]
.L492:
	ld.b	d13,[a2]1
.L493:
	st.b	[a14]39,d13
.L494:
	sub	d15,d13,d10
	add.a	a14,#1
.L495:
	sha	d0,d0,d15
	fcall	.cocofun_15
.L496:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   201          channelsMask               |= channelMask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   203          /* Initialize the timer part */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   204          /* FIXME add IfxGtm_Tom_Ch_configurePwmMode() and use it */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   205          IfxGtm_Tom_Ch_setClockSource(driver->tom, channel, clock);
	call	IfxGtm_Tom_Ch_setClockSource
.L497:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   206  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   207          /* Initialize the SOUR reset value, SL and enable the channel */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   208          IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, driver->base.inverted
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   209              ? IfxGtm_Tom_PwmHl_invertActiveState(config->base.coutxActiveState)
	ld.bu	d5,[a12]13
.L498:
	fcall	.cocofun_9
.L374:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L499:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   210              : config->base.coutxActiveState);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   211          IfxGtm_Tom_Tgc_enableChannels(driver->tgc, channelMask, 0, TRUE);
	fcall	.cocofun_10
.L375:
	call	IfxGtm_Tom_Tgc_enableChannels
.L500:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   212          IfxGtm_Tom_Tgc_enableChannelsOutput(driver->tgc, channelMask, 0, TRUE);
	fcall	.cocofun_10
.L501:
	call	IfxGtm_Tom_Tgc_enableChannelsOutput
.L376:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   214          IfxGtm_Tom_Ch_setResetSource(driver->tom, channel, IfxGtm_Tom_Ch_ResetEvent_onTrigger);
	mov	d4,d13
	ld.a	a4,[a15]28
.L377:
	mov	d5,#1
	call	IfxGtm_Tom_Ch_setResetSource
.L378:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   215          IfxGtm_Tom_Ch_setTriggerOutput(driver->tom, channel, IfxGtm_Tom_Ch_OutputTrigger_forward);
	mov	d4,d13
	ld.a	a4,[a15]28
.L379:
	mov	d5,#0
	call	IfxGtm_Tom_Ch_setTriggerOutput
.L380:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   216          IfxGtm_Tom_Ch_setCounterValue(driver->tom, channel, IfxGtm_Tom_Timer_getOffset(driver->timer));
	ld.a	a4,[a15]20
	call	IfxGtm_Tom_Timer_getOffset
.L502:
	ld.a	a4,[a15]28
.L503:
	mov	e4,d2,d13
	call	IfxGtm_Tom_Ch_setCounterValue
.L504:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   217  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   218          /*Initialize the port */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   219          IfxGtm_PinMap_setTomTout(config->coutx[channelIndex],
	ld.a	a2,[a12]28
.L505:
	fcall	.cocofun_12
.L506:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   220              config->base.outputMode, config->base.outputDriver);
	call	IfxGtm_PinMap_setTomTout
.L507:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   221          IfxPort_setPinState(config->coutx[channelIndex]->pin.port, config->coutx[channelIndex]->pin.pinIndex, config->base.coutxActiveState ? IfxPort_State_low : IfxPort_State_high);
	ld.bu	d15,[a12]13
.L508:
	fcall	.cocofun_13
.L271:
	ld.a	a2,[a12]28
.L509:
	fcall	.cocofun_8
.L257:
	add	d12,#1
.L9:
	ld.bu	d15,[a12]8
.L510:
	jlt.u	d12,d15,.L10
.L511:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   222      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   223  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   224      IfxGtm_Tom_PwmHl_setMode(driver, Ifx_Pwm_Mode_off);
	mov	d4,#4
	mov.aa	a4,a15
.L382:
	call	IfxGtm_Tom_PwmHl_setMode
.L272:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   226      Ifx_TimerValue tOn[IFXGTM_TOM_PWMHL_MAX_NUM_CHANNELS] = {0};
	movh.a	a2,#@his(.6.ini)
	lea	a2,[a2]@los(.6.ini)
.L512:
	lea	a4,[a10]20
	mov.a	a5,#2
.L21:
	ld.w	d15,[a2+]
	st.w	[a4+],d15
	loop	a5,.L21
.L513:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   227      IfxGtm_Tom_PwmHl_updateOff(driver, tOn);     /* tOn do not need defined values */
	lea	a5,[a10]20
	mov.aa	a4,a15
.L383:
	call	IfxGtm_Tom_PwmHl_updateOff
.L384:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   228  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   229      /* Transfer the shadow registers */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   230      IfxGtm_Tom_Tgc_setChannelsForceUpdate(driver->tgc, channelsMask, 0, 0, 0);
	mov	d5,#0
	ld.a	a4,[a15]32
.L514:
	mov	d4,d8
.L385:
	mov	e6,d5,d5
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L386:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   231      IfxGtm_Tom_Tgc_trigger(driver->tgc); /* FIXME this seems to have no effect, to be checked */
	ld.a	a4,[a15]32
	call	IfxGtm_Tom_Tgc_trigger
.L515:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   232      IfxGtm_Tom_Tgc_setChannelsForceUpdate(driver->tgc, 0, channelsMask, 0, 0);
	mov	d4,#0
	ld.a	a4,[a15]32
.L516:
	mov	d5,d8
.L387:
	mov	e6,d4,d4
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L388:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   233  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   234      /* Enable timer to update the channels */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   235      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	mov	d15,#0
	mov.aa	a12,a15
.L381:
	j	.L22
.L23:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   236      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   237          IfxGtm_Tom_Timer_addToChannelMask(timer, driver->ccx[channelIndex]);
	ld.b	d4,[a12]36
	mov.aa	a4,a13
.L389:
	call	IfxGtm_Tom_Timer_addToChannelMask
.L390:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   238          IfxGtm_Tom_Timer_addToChannelMask(timer, driver->coutx[channelIndex]);
	ld.b	d4,[a12]39
	mov.aa	a4,a13
.L391:
	call	IfxGtm_Tom_Timer_addToChannelMask
.L392:
	add	d15,#1
	add.a	a12,#1
.L22:
	ld.bu	d0,[a15]17
.L517:
	jlt.u	d15,d0,.L23
.L518:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   239      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   240  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   241      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   242  }
	mov	d2,d9
	ret
.L239:
	
__IfxGtm_Tom_PwmHl_init_function_end:
	.size	IfxGtm_Tom_PwmHl_init,__IfxGtm_Tom_PwmHl_init_function_end-IfxGtm_Tom_PwmHl_init
.L120:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_15',code,cluster('.cocofun_15')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_15'
	.align	2
; Function .cocofun_15
.L75:
.cocofun_15:	.type	func
; Function body .cocofun_15, coco_iter:0
	extr.u	d14,d0,#0,#16
	ld.a	a4,[a15]28
.L361:
	mov	e4,d11,d13
.L740:
	or	d8,d14
	fret
.L230:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_13',code,cluster('.cocofun_13')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_13'
	.align	2
; Function .cocofun_13
.L77:
.cocofun_13:	.type	func
; Function body .cocofun_13, coco_iter:0
	jeq	d15,#0,.L15
.L729:
	movh	d0,#1
	j	.L16
.L15:
	mov	d0,#1
.L16:
	fret
.L220:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_12',code,cluster('.cocofun_12')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_12'
	.align	2
; Function .cocofun_12
.L79:
.cocofun_12:	.type	func
; Function body .cocofun_12, coco_iter:0
	addsc.a	a2,a2,d12,#2
.L721:
	ld.bu	d4,[a12]10
.L722:
	ld.a	a4,[a2]
.L723:
	ld.bu	d5,[a12]11
.L724:
	fret
.L215:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_10',code,cluster('.cocofun_10')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_10'
	.align	2
; Function .cocofun_10
.L81:
.cocofun_10:	.type	func
; Function body .cocofun_10, coco_iter:0
	mov	d4,d14
	ld.a	a4,[a15]32
.L365:
	mov	d5,#0
.L709:
	mov	d6,#1
	fret
.L205:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_9',code,cluster('.cocofun_9')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_9'
	.align	2
; Function .cocofun_9
.L83:
.cocofun_9:	.type	func
; Function body .cocofun_9, coco_iter:0
	ld.bu	d15,[a15]16
.L703:
	jeq	d15,#0,.L12
.L704:
	eq	d5,d5,#0
.L12:
	ld.a	a4,[a15]28
.L373:
	mov	d4,d13
	fret
.L200:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_8',code,cluster('.cocofun_8')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_8'
	.align	2
; Function .cocofun_8
.L85:
.cocofun_8:	.type	func
; Function body .cocofun_8, coco_iter:0
	addsc.a	a2,a2,d12,#2
	ld.a	a2,[a2]
.L696:
	ld.a	a4,[a2]8
.L697:
	ld.bu	d15,[a2]12
.L698:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   518  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   520  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   521  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   522  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   523      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   524  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   525  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   527  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   528  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   529      port->OMR.U = action << pinIndex;
	sha	d0,d0,d15
	st.w	[a4]4,d0
.L372:
	fret
.L195:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_initConfig',code,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_initConfig'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_initConfig

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   245  void IfxGtm_Tom_PwmHl_initConfig(IfxGtm_Tom_PwmHl_Config *config)
; Function IfxGtm_Tom_PwmHl_initConfig
.L87:
IfxGtm_Tom_PwmHl_initConfig:	.type	func
	mov.aa	a12,a4
.L394:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   246  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   247      IfxStdIf_PwmHl_initConfig(&config->base);
	call	IfxStdIf_PwmHl_initConfig
.L393:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   248      config->timer = NULL_PTR;
	mov.a	a15,#0
.L523:
	st.a	[a12]16,a15
.L524:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   249      config->tom   = IfxGtm_Tom_0;
	mov	d15,#0
	st.b	[a12]20,d15
.L525:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   250      config->ccx   = NULL_PTR;
	st.a	[a12]24,a15
.L526:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   251      config->coutx = NULL_PTR;
	st.a	[a12]28,a15
.L527:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   252  }
	ret
.L275:
	
__IfxGtm_Tom_PwmHl_initConfig_function_end:
	.size	IfxGtm_Tom_PwmHl_initConfig,__IfxGtm_Tom_PwmHl_initConfig_function_end-IfxGtm_Tom_PwmHl_initConfig
.L125:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setDeadtime',code,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setDeadtime'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setDeadtime

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   253  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   254  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   255  boolean IfxGtm_Tom_PwmHl_setDeadtime(IfxGtm_Tom_PwmHl *driver, float32 deadtime)
; Function IfxGtm_Tom_PwmHl_setDeadtime
.L89:
IfxGtm_Tom_PwmHl_setDeadtime:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   256  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   257      Ifx_TimerValue value = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, deadtime);
	fcall	.cocofun_14
.L550:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   258  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   259      /* FIXME warn if dead time in out of range: > 1/2 period, ... */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   260      driver->base.deadtime = value;
	st.w	[a4],d15
.L395:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   261  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   262      return TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   263  }
	mov	d2,#1
	ret
.L287:
	
__IfxGtm_Tom_PwmHl_setDeadtime_function_end:
	.size	IfxGtm_Tom_PwmHl_setDeadtime,__IfxGtm_Tom_PwmHl_setDeadtime_function_end-IfxGtm_Tom_PwmHl_setDeadtime
.L145:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_14',code,cluster('.cocofun_14')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_14'
	.align	2
; Function .cocofun_14
.L91:
.cocofun_14:	.type	func
; Function body .cocofun_14, coco_iter:0
	ld.a	a15,[a4]20
.L734:
	ld.w	d15,[a15]6
.L735:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    25   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    28   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    29   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    31   * The figure below shows the standard timer interface.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    33   * \image html "Timer.png" "Standard timer interface"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    34   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    35   * This interface defines the following features:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    36   * - Timer with configurable frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    37   * - Configurable counting direction
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    38   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    39   * - Optional trigger signal with:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    40   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    41   *   - Configurable trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    42   *   - Configurable trigger edge
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    43   *   - trigger signal can be internal only or forwarded to a port pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    46  #ifndef IFXSTDIF_TIMER_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    47  #define IFXSTDIF_TIMER_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    49  #include "Cpu/Std/Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    50  #include "Src/Std/IfxSrc.h"     /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    51  #include "Port/Std/IfxPort.h"   /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */ /*FIXME introduce generic IF for ports. ex: IfxPort_OutputMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    52  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    53  /** \brief Output event enable / disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    56      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    57      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    58                                                    *          the output is set to active between time 0 to the trigger point,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    59                                                    *          and is set to inactive between the trigger point and the period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    60                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    61                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    62                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    63                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    64                                                    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    65  } IfxStdIf_Timer_OutputEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    66  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    67  /** \brief Timer increment direction */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    70      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    71      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    72      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    73  } IfxStdIf_Timer_CountDir;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    74  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    75  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    76  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    78  /** \brief Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    80   * \return Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    81   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    82  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    85   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    86   * \return Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    88  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    90  /** \brief Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    92   * \return Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    93   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    94  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    95  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    96  /** \brief Return the timer trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    98   * \return Return the timer timer point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    99   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   100  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   102  /** \brief Set the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   104   * \param frequency Requested timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   105   * \retval TRUE The requested frequency could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   106   * \retval FALSE The requested frequency is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   107   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   108  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver driver, float32 frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   110  /** \brief Indicates the driver that the imput frequency has changed and that it should be taken in account
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   111   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   114  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   116  /** \brief Apply requested updates.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   118   * Such requested update are calls to:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   119   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   120   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   121   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   122   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   123   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   124   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   125   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   126   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   127   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   128   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   129   * one timer period!!!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   130   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   132   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   135  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   137  /** \brief Disable updates
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   139   * The following API action will not be taken in account before applyUpdate is called:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   143   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   147   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   155   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   156   * \return Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   158  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   160  /** \brief Immediately start the timer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   161   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   162   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   163   * global (input) clock to the timer block is inactive.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   164   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   165   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   167  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   169  /** \brief Set the timer period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   170   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   171   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \param period Period value in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   174   * \retval TRUE The requested period could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   175   * \retval FALSE The requested period is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   176   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   177  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   179  /** \brief Stop timer at the end of the period
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   181   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   183   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   184   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   186  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver driver, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   188  /** \brief Set trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   189   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \see Timer_OutputEvent for the definition of the output level.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   191   * Active state is defined by Timer_Config::outputActiveState.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   193   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   194   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   195   * \param triggerPoint Trigger point in ticks from the period start.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   196   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   198  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   200  /** \brief Immediately stops the timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   202   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   203   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   204  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   206  /** \brief Return the timer interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   208   * \return Return the timer interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   210  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   212  /** \brief Return the trigger interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   214   * \return Return the trigger interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   216  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   218  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   219   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   220  struct IfxStdIf_Timer_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   222      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   223      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   224      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   225      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   226      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   227      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   228      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   229      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   230      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   231      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   232      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   233      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   234      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   235      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   236      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   237      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   238      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   239  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   241  /** \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   242  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   244      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   245      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   246      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxPort_OutputMode outputMode;          /**< \brief Output mode *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   250      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   251      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   252  } IfxStdIf_Timer_TrigConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   254  /** \brief Timer configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   255  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   256  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   257      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   258      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   259      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   260      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   261      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   262      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   263      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   264  } IfxStdIf_Timer_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   266  /** \addtogroup library_srvsw_stdif_timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   267   *  \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   269  /** \copydoc IfxStdIf_Timer_GetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   270  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   272      return stdIf->getFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   273  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   276  /** \copydoc IfxStdIf_Timer_GetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   277  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   279      return stdIf->getPeriod(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   280  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \copydoc IfxStdIf_Timer_GetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   284  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   285  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   286      return stdIf->getTrigger(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   287  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   288  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   290  /** \copydoc IfxStdIf_Timer_GetResolution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   291  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   292  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   293      return stdIf->getResolution(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   294  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   297  /** \copydoc IfxStdIf_Timer_SetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   305  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   306  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   307      stdIf->updateInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   308  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   310  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   311  /** \copydoc IfxStdIf_Timer_ApplyUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   312  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   314      stdIf->applyUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   315  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   316  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   318  /** \copydoc IfxStdIf_Timer_DisableUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   320  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   321      stdIf->disableUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   322  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   324  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_GetInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   326  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   327  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   328      return stdIf->getInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   329  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   332  /** \copydoc IfxStdIf_Timer_Run */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   333  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   334  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   335      stdIf->run(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   336  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   337  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   339  /** \copydoc IfxStdIf_Timer_SetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   340  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   341  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   342      return stdIf->setPeriod(stdIf->driver, period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   343  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   346  /** \copydoc IfxStdIf_Timer_SetSingleMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   347  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   348  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   349      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   350  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   353  /** \copydoc IfxStdIf_Timer_SetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   354  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   355  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   356      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   357  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   360  /** \copydoc IfxStdIf_Timer_Stop */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   363      stdIf->stop(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_AckTimerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   368  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   369  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   370      return stdIf->ackTimerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   371  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   372  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   374  /** \copydoc IfxStdIf_Timer_AckTriggerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   375  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   376  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   377      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   378  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   381  /** \brief Convert timer ticks to seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   382   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   383   * \param  ticks time value in ticks to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   384   * \return Return the converted time in s
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   385   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   386  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   387  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   388      return ticks / clockFreq;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   389  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   392  /** \brief Convert seconds to timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   393   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   394   * \param  seconds time value in seconds to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   395   * \return Return the converted time in timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   397  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   398  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   399      return seconds * clockFreq;
	mul.f	d15,d4,d15
	ftouz	d15,d15
	fret
.L225:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMinPulse',code,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMinPulse'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setMinPulse

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   264  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   265  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   266  boolean IfxGtm_Tom_PwmHl_setMinPulse(IfxGtm_Tom_PwmHl *driver, float32 minPulse)
; Function IfxGtm_Tom_PwmHl_setMinPulse
.L93:
IfxGtm_Tom_PwmHl_setMinPulse:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   267  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   268      Ifx_TimerValue value = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, minPulse);
	fcall	.cocofun_14
.L396:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   270      driver->base.minPulse = value + driver->base.deadtime;
	ld.w	d0,[a4]
.L555:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   271      driver->base.maxPulse = driver->timer->base.period - driver->base.minPulse;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   272  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   273      return TRUE;
	mov	d2,#1
.L556:
	add	d15,d0
	st.w	[a4]4,d15
.L557:
	ld.w	d0,[a15]
.L558:
	sub	d0,d15
	st.w	[a4]8,d0
.L559:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   274  }
	ret
.L291:
	
__IfxGtm_Tom_PwmHl_setMinPulse_function_end:
	.size	IfxGtm_Tom_PwmHl_setMinPulse,__IfxGtm_Tom_PwmHl_setMinPulse_function_end-IfxGtm_Tom_PwmHl_setMinPulse
.L150:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMode',code,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMode'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setMode

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   276  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   277  boolean IfxGtm_Tom_PwmHl_setMode(IfxGtm_Tom_PwmHl *driver, Ifx_Pwm_Mode mode)
; Function IfxGtm_Tom_PwmHl_setMode
.L95:
IfxGtm_Tom_PwmHl_setMode:	.type	func
	mov.aa	a15,a4
.L398:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   278  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   279      boolean                result = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   280      IfxGtm_Tom_PwmHl_Base *base   = &driver->base;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   281  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   282      if (base->mode != mode)
	ld.bu	d15,[a15]12
.L564:
	mov	d9,#1
.L399:
	jeq	d15,d4,.L27
.L565:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   283      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   284          if (mode > Ifx_Pwm_Mode_off)
	jlt.u	d4,#5,.L28
.L566:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   285          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   286              mode   = Ifx_Pwm_Mode_off;
	mov	d4,#4
.L567:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   287              result = FALSE;
	mov	d9,#0
.L28:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   288          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   289  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   290          base->mode     = mode;
	st.b	[a15]12,d4
.L568:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   291          driver->update = IfxGtm_Tom_PwmHl_modes[mode].update;
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_modes)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_modes)
.L569:
	addsc.a	a2,a2,d4,#3
.L570:
	ld.a	a4,[a2]4
.L397:
	st.a	[a15]24,a4
.L571:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   293          if (base->mode != Ifx_Pwm_Mode_off)
	jeq	d4,#4,.L29
.L572:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   294          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   295              base->inverted = IfxGtm_Tom_PwmHl_modes[mode].inverted;
	ld.bu	d15,[a2]
.L573:
	st.b	[a15]16,d15
.L29:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   296          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   297          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   298          {                       /* Keep previous inverted for off mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   299          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   300  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   301          if (base->inverted)
	ld.bu	d15,[a15]16
.L574:
	jeq	d15,#0,.L30
.L575:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   302          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   303              driver->ccxTemp   = driver->coutx;
	lea	a2,[a15]39
.L576:
	st.a	[a15]44,a2
.L577:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   304              driver->coutxTemp = driver->ccx;
	lea	a2,[a15]36
.L578:
	j	.L31
.L30:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   305          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   306          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   307          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   308              driver->ccxTemp   = driver->ccx;
	lea	a2,[a15]36
.L579:
	st.a	[a15]44,a2
.L580:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   309              driver->coutxTemp = driver->coutx;
	lea	a2,[a15]39
.L31:
	st.a	[a15]48,a2
.L300:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   310          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   311  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   312          {   /* Workaround to enable the signal inversion required for center aligned inverted
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   313               * and right aligned modes */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   314              /** \note that changing signal level may produce short circuit at the power stage,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   315               * in which case the inverter must be disable during this action. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   317              /* Ifx_Pwm_Mode_centerAligned and Ifx_Pwm_Mode_LeftAligned use inverted=FALSE */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   318              /* Ifx_Pwm_Mode_centerAlignedInverted and Ifx_Pwm_Mode_RightAligned use inverted=TRUE */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   319              uint32 channelIndex;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   321              for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	mov	d8,#0
	mov.aa	a12,a15
.L400:
	j	.L32
.L33:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   322              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   323                  IfxGtm_Tom_Ch channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   324  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   325                  channel = driver->ccx[channelIndex];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   326                  IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, base->inverted
	ld.bu	d15,[a15]16
.L581:
	ld.b	d4,[a12]36
.L401:
	jeq	d15,#0,.L34
.L582:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   327                      ? base->ccxActiveState
	ld.bu	d5,[a15]14
.L583:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   328                      : IfxGtm_Tom_PwmHl_invertActiveState(driver->base.ccxActiveState));
	j	.L35
.L34:
	ld.bu	d15,[a15]14
.L584:
	eq	d5,d15,#0
.L35:
	ld.a	a4,[a15]28
.L585:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L402:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   329  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   330                  channel = driver->coutx[channelIndex];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   331                  IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, base->inverted
	ld.bu	d15,[a15]16
.L586:
	ld.b	d4,[a12]39
.L403:
	add.a	a12,#1
.L587:
	jeq	d15,#0,.L36
.L588:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   332                      ? IfxGtm_Tom_PwmHl_invertActiveState(driver->base.coutxActiveState)
	ld.bu	d15,[a15]15
.L589:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   333                      : base->coutxActiveState);
	eq	d5,d15,#0
	j	.L37
.L36:
	ld.bu	d5,[a15]15
.L37:
	ld.a	a4,[a15]28
.L590:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L302:
	add	d8,#1
.L32:
	ld.bu	d15,[a15]17
.L591:
	jlt.u	d8,d15,.L33
.L27:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   334              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   335          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   336      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   337  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   338      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   339  }
	mov	d2,d9
	ret
.L294:
	
__IfxGtm_Tom_PwmHl_setMode_function_end:
	.size	IfxGtm_Tom_PwmHl_setMode,__IfxGtm_Tom_PwmHl_setMode_function_end-IfxGtm_Tom_PwmHl_setMode
.L155:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setOnTime',code,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setOnTime'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setOnTime

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   340  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   341  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   342  void IfxGtm_Tom_PwmHl_setOnTime(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
; Function IfxGtm_Tom_PwmHl_setOnTime
.L97:
IfxGtm_Tom_PwmHl_setOnTime:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   343  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   344      driver->update(driver, tOn);
	ld.a	a15,[a4]24
.L596:
	ji	a15
.L304:
	
__IfxGtm_Tom_PwmHl_setOnTime_function_end:
	.size	IfxGtm_Tom_PwmHl_setOnTime,__IfxGtm_Tom_PwmHl_setOnTime_function_end-IfxGtm_Tom_PwmHl_setOnTime
.L160:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setupChannels',code,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setupChannels'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setupChannels

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   345  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   346  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   347  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   348  void IfxGtm_Tom_PwmHl_setupChannels(IfxGtm_Tom_PwmHl *driver, boolean *activeCh, boolean *stuckSt)
; Function IfxGtm_Tom_PwmHl_setupChannels
.L99:
IfxGtm_Tom_PwmHl_setupChannels:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   349  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   350      /* FIXME TODO */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   351  }
	ret
.L308:
	
__IfxGtm_Tom_PwmHl_setupChannels_function_end:
	.size	IfxGtm_Tom_PwmHl_setupChannels,__IfxGtm_Tom_PwmHl_setupChannels_function_end-IfxGtm_Tom_PwmHl_setupChannels
.L165:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_stdIfPwmHlInit',code,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_stdIfPwmHlInit'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_stdIfPwmHlInit

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   352  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   353  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   354  boolean IfxGtm_Tom_PwmHl_stdIfPwmHlInit(IfxStdIf_PwmHl *stdif, IfxGtm_Tom_PwmHl *driver)
; Function IfxGtm_Tom_PwmHl_stdIfPwmHlInit
.L101:
IfxGtm_Tom_PwmHl_stdIfPwmHlInit:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   355  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   356      /* *INDENT-OFF* Note: this file was indented manually by the author. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   357      /* Set the API link */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   358      stdif->driver               = driver;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   359      stdif->setDeadtime          = (IfxStdIf_PwmHl_SetDeadtime  )&IfxGtm_Tom_PwmHl_setDeadtime;
	movh.a	a15,#@his(IfxGtm_Tom_PwmHl_setDeadtime)
	lea	a15,[a15]@los(IfxGtm_Tom_PwmHl_setDeadtime)
.L605:
	st.a	[a4]4,a15
.L606:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   360      stdif->getDeadtime          = (IfxStdIf_PwmHl_GetDeadtime  )&IfxGtm_Tom_PwmHl_getDeadtime;
	movh.a	a15,#@his(IfxGtm_Tom_PwmHl_getDeadtime)
	lea	a15,[a15]@los(IfxGtm_Tom_PwmHl_getDeadtime)
.L607:
	st.a	[a4]8,a15
.L608:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   361      stdif->setMinPulse          = (IfxStdIf_PwmHl_SetMinPulse  )&IfxGtm_Tom_PwmHl_setMinPulse;
	movh.a	a15,#@his(IfxGtm_Tom_PwmHl_setMinPulse)
	lea	a15,[a15]@los(IfxGtm_Tom_PwmHl_setMinPulse)
.L609:
	st.a	[a4]12,a15
.L610:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   362      stdif->getMinPulse          = (IfxStdIf_PwmHl_GetMinPulse  )&IfxGtm_Tom_PwmHl_getMinPulse;
	movh.a	a15,#@his(IfxGtm_Tom_PwmHl_getMinPulse)
	lea	a15,[a15]@los(IfxGtm_Tom_PwmHl_getMinPulse)
.L611:
	st.a	[a4]16,a15
.L612:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   363      stdif->getMode              = (IfxStdIf_PwmHl_GetMode      )&IfxGtm_Tom_PwmHl_getMode;
	movh.a	a15,#@his(IfxGtm_Tom_PwmHl_getMode)
	lea	a15,[a15]@los(IfxGtm_Tom_PwmHl_getMode)
.L613:
	st.a	[a4]20,a15
.L614:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   364      stdif->setMode              = (IfxStdIf_PwmHl_SetMode      )&IfxGtm_Tom_PwmHl_setMode;
	movh.a	a15,#@his(IfxGtm_Tom_PwmHl_setMode)
	lea	a15,[a15]@los(IfxGtm_Tom_PwmHl_setMode)
.L615:
	st.a	[a4]24,a15
.L616:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   365      stdif->setOnTime            = (IfxStdIf_PwmHl_SetOnTime    )&IfxGtm_Tom_PwmHl_setOnTime;
	movh.a	a15,#@his(IfxGtm_Tom_PwmHl_setOnTime)
	lea	a15,[a15]@los(IfxGtm_Tom_PwmHl_setOnTime)
.L617:
	st.a	[a4]28,a15
.L618:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   366      stdif->setupChannels        = (IfxStdIf_PwmHl_SetupChannels)&IfxGtm_Tom_PwmHl_setupChannels;
	movh.a	a15,#@his(IfxGtm_Tom_PwmHl_setupChannels)
	lea	a15,[a15]@los(IfxGtm_Tom_PwmHl_setupChannels)
.L619:
	st.a	[a4]32,a15
.L620:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   367      IfxGtm_Tom_Timer_stdIfTimerInit(&stdif->timer, driver->timer);
	st.a	[a4+]36,a5
.L621:
	ld.a	a5,[a5]20
.L404:
	call	IfxGtm_Tom_Timer_stdIfTimerInit
.L405:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   368      /* *INDENT-ON* */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   369  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   370      return TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   371  }
	mov	d2,#1
	ret
.L313:
	
__IfxGtm_Tom_PwmHl_stdIfPwmHlInit_function_end:
	.size	IfxGtm_Tom_PwmHl_stdIfPwmHlInit,__IfxGtm_Tom_PwmHl_stdIfPwmHlInit_function_end-IfxGtm_Tom_PwmHl_stdIfPwmHlInit
.L170:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateCenterAligned',code,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateCenterAligned'
	.align	2
	

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   372  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   373  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   374  static void IfxGtm_Tom_PwmHl_updateCenterAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
; Function IfxGtm_Tom_PwmHl_updateCenterAligned
.L103:
IfxGtm_Tom_PwmHl_updateCenterAligned:	.type	func
	fcall	.cocofun_16
.L409:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   375  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   376      uint8          channelIndex;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   377      Ifx_TimerValue period;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   378      Ifx_TimerValue deadtime = driver->base.deadtime;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   379  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   380      period = driver->timer->base.period;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   381  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   382      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	j	.L40
.L41:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   383      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   384          Ifx_TimerValue x;             /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   385          Ifx_TimerValue cm0, cm1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   386          x = tOn[channelIndex];
	addsc.a	a2,a12,d10,#2
.L626:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   387  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   388          if (driver->base.inverted != FALSE)
	ld.bu	d15,[a15]16
.L627:
	ld.w	d0,[a2]
.L411:
	jeq	d15,#0,.L42
.L628:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   389          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   390              x = period - x;
	sub	d0,d9,d0
.L42:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   391          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   392          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   393          {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   394  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   395          if ((x < driver->base.minPulse) || (x <= deadtime))
	ld.w	d15,[a15]4
.L629:
	jlt.u	d0,d15,.L43
.L630:
	jlt.u	d8,d0,.L44
.L43:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   396          {                       /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   397              x = 0;
	mov	d0,#0
	j	.L45
.L44:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   398          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   399          else if (x > driver->base.maxPulse)
	ld.w	d15,[a15]8
.L631:
	ge.u	d15,d15,d0
.L632:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   400          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   401              x = period;
	cmovn	d0,d15,d9
.L45:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   402          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   403          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   404          {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   405  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   406          /* Special handling due to GTM issue */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   407          if (x == period)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   408          {                       /* 100% duty cycle */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   409              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
	ld.a	a2,[a15]44
.L633:
	fcall	.cocofun_7
.L634:
	jne	d0,d9,.L47
.L635:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   410                  period + 1 /* No compare event */,
	add	d5,d9,#1
.L636:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   411                  2 /* 1st compare event (issue: expected to be 1) */ + deadtime);
	add	d6,d8,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L412:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   412              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex],
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   413                  period + 2 /* No compare event, issues has been seen with +1 */,
	add	d5,d9,#2
.L637:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   414                  2 /* 1st compare event (issue: expected to be 1) */);
	mov	d6,#2
	j	.L48
.L47:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   415          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   416          else if (x == 0)
	jne	d0,#0,.L49
.L638:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   417          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   418              cm0 = 1;
	mov	d11,#1
.L414:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   419              cm1 = period + 2;
	add	d15,d9,#2
.L415:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   420              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
	mov	d6,d15
	j	.L50
.L49:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   421              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   422          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   423          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   424          {                           /* x% duty cycle */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   425              cm1 = (period - x) / 2; // CM1 /* FIXME issue if CM1 <= 1, should be limited for up to AB step at least */
	sub	d15,d9,d0
.L416:
	sh	d15,#-1
.L639:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   426              cm0 = (period + x) / 2; // CM0
	add	d0,d9
.L413:
	sh	d11,d0,#-1
.L417:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   427              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1 + deadtime);
	add	d6,d15,d8
.L50:
	mov	d5,d11
	call	IfxGtm_Tom_Ch_setCompareShadow
.L640:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   428              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
	add	d5,d11,d8
.L641:
	mov	d6,d15
.L48:
	ld.a	a2,[a15]48
.L642:
	fcall	.cocofun_7
.L420:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L325:
	add	d10,#1
.L418:
	extr.u	d10,d10,#0,#8
.L40:
	ld.bu	d15,[a15]17
.L643:
	jlt.u	d10,d15,.L41
.L644:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   429          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   430      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   431  }
	ret
.L317:
	
__IfxGtm_Tom_PwmHl_updateCenterAligned_function_end:
	.size	IfxGtm_Tom_PwmHl_updateCenterAligned,__IfxGtm_Tom_PwmHl_updateCenterAligned_function_end-IfxGtm_Tom_PwmHl_updateCenterAligned
.L175:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_16',code,cluster('.cocofun_16')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_16'
	.align	2
; Function .cocofun_16
.L105:
.cocofun_16:	.type	func
; Function body .cocofun_16, coco_iter:0
	mov.aa	a15,a4
.L406:
	ld.a	a2,[a15]20
.L421:
	mov	d10,#0
	mov.aa	a12,a5
.L407:
	ld.w	d8,[a15]
.L408:
	ld.w	d9,[a2]
.L410:
	fret
.L235:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_7'
	.align	2
; Function .cocofun_7
.L107:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	addsc.a	a2,a2,d10,#0
.L690:
	ld.a	a4,[a15]28
.L691:
	ld.b	d4,[a2]0
.L419:
	fret
.L190:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateEdgeAligned',code,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateEdgeAligned'
	.align	2
	

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   432  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   434  static void IfxGtm_Tom_PwmHl_updateEdgeAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
; Function IfxGtm_Tom_PwmHl_updateEdgeAligned
.L109:
IfxGtm_Tom_PwmHl_updateEdgeAligned:	.type	func
	fcall	.cocofun_16
.L422:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   435  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   436      uint8          channelIndex;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   437      Ifx_TimerValue period;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   438      Ifx_TimerValue deadtime = driver->base.deadtime;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   439  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   440      period = driver->timer->base.period;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   441  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   442      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	j	.L51
.L52:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   443      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   444          Ifx_TimerValue x;             /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   445          Ifx_TimerValue cm0, cm1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   446          x = tOn[channelIndex];
	addsc.a	a2,a12,d10,#2
.L649:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   447  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   448          if (driver->base.inverted != FALSE)
	ld.bu	d15,[a15]16
.L650:
	ld.w	d11,[a2]
.L427:
	jeq	d15,#0,.L53
.L651:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   449          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   450              x = period - x;
	sub	d11,d9,d11
.L53:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   451          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   452          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   453          {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   454  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   455          if ((x < driver->base.minPulse) || (x <= deadtime))
	ld.w	d15,[a15]4
.L652:
	jlt.u	d11,d15,.L54
.L653:
	jlt.u	d8,d11,.L55
.L54:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   456          {                       /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   457              x = 0;
	mov	d11,#0
	j	.L56
.L55:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   458          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   459          else if (x > driver->base.maxPulse)
	ld.w	d15,[a15]8
.L654:
	ge.u	d15,d15,d11
.L655:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   460          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   461              x = period;
	cmovn	d11,d15,d9
.L56:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   462          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   463          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   464          {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   465  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   466          /* Special handling due to GTM issue */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   467          if (x == period)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   468          {                       /* 100% duty cycle */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   469              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
	ld.a	a2,[a15]44
.L656:
	fcall	.cocofun_7
.L657:
	jne	d11,d9,.L58
.L658:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   470                  period + 1 /* No compare event */,
	add	d5,d9,#1
.L659:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   471                  2 /* 1st compare event (issue: expected to be 1) */ + deadtime);
	add	d6,d8,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L660:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   472              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex],
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   473                  period + 2 /* No compare event, issues has been seen with +1 */,
	add	d5,d9,#2
.L661:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   474                  2 /* 1st compare event (issue: expected to be 1) */);
	mov	d6,#2
	j	.L59
.L58:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   475          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   476          else if (x == 0)
	jne	d11,#0,.L60
.L662:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   477          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   478              cm0 = 1;
	mov	d11,#1
.L663:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   479              cm1 = period + 2;
	add	d15,d9,#2
.L423:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   480              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
	mov	d6,d15
	j	.L61
.L60:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   481              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   482          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   483          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   484          {                       /* x% duty cycle */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   485              cm1 = 2;            // CM1, set to 2 due to a GTM issue. should be 1 according to spec
	mov	d15,#2
.L424:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   486              cm0 = x;            // CM0, set to x+2 due to a GTM issue. should be x+1 according to spec
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   487              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1 + deadtime);
	add	d6,d8,#2
.L61:
	mov	d5,d11
	call	IfxGtm_Tom_Ch_setCompareShadow
.L664:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   488              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
	add	d5,d11,d8
.L665:
	mov	d6,d15
.L59:
	ld.a	a2,[a15]48
.L666:
	fcall	.cocofun_7
.L426:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L335:
	add	d10,#1
.L425:
	extr.u	d10,d10,#0,#8
.L51:
	ld.bu	d15,[a15]17
.L667:
	jlt.u	d10,d15,.L52
.L668:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   489          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   490      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   491  }
	ret
.L329:
	
__IfxGtm_Tom_PwmHl_updateEdgeAligned_function_end:
	.size	IfxGtm_Tom_PwmHl_updateEdgeAligned,__IfxGtm_Tom_PwmHl_updateEdgeAligned_function_end-IfxGtm_Tom_PwmHl_updateEdgeAligned
.L180:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateOff',code,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateOff'
	.align	2
	

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   492  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   493  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   494  static void IfxGtm_Tom_PwmHl_updateOff(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
; Function IfxGtm_Tom_PwmHl_updateOff
.L111:
IfxGtm_Tom_PwmHl_updateOff:	.type	func
	mov.aa	a15,a4
.L428:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   495  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   496      uint8          channelIndex;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   497      Ifx_TimerValue period;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   499      period = driver->timer->base.period;
	ld.a	a2,[a15]20
.L673:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   500  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   501      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	mov	d15,#0
.L429:
	ld.w	d8,[a2]
.L431:
	j	.L62
.L63:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   502      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   503          IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
	ld.a	a2,[a15]44
.L674:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   504              2 /* 1 will keep the previous level */, period + 2);
	mov	d5,#2
	ld.a	a4,[a15]28
.L675:
	add	d6,d8,#2
.L676:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L677:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L678:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   505          IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], period + 1, 2);
	ld.a	a2,[a15]48
.L679:
	add	d5,d8,#1
	ld.a	a4,[a15]28
.L680:
	mov	d6,#2
.L681:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L682:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L683:
	add	d15,#1
.L430:
	extr.u	d15,d15,#0,#8
.L62:
	ld.bu	d0,[a15]17
.L684:
	jlt.u	d15,d0,.L63
.L685:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   506      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   507  }
	ret
.L339:
	
__IfxGtm_Tom_PwmHl_updateOff_function_end:
	.size	IfxGtm_Tom_PwmHl_updateOff,__IfxGtm_Tom_PwmHl_updateOff_function_end-IfxGtm_Tom_PwmHl_updateOff
.L185:
	; End of function
	
	.sdecl	'.rodata.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_modes',data,rom,cluster('IfxGtm_Tom_PwmHl_modes')
	.sect	'.rodata.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_modes'
	.align	4
IfxGtm_Tom_PwmHl_modes:	.type	object
	.size	IfxGtm_Tom_PwmHl_modes,40
	.space	4
	.word	IfxGtm_Tom_PwmHl_updateCenterAligned
	.byte	1
	.space	3
	.word	IfxGtm_Tom_PwmHl_updateCenterAligned
	.space	4
	.word	IfxGtm_Tom_PwmHl_updateEdgeAligned
	.byte	1
	.space	3
	.word	IfxGtm_Tom_PwmHl_updateEdgeAligned
	.space	4
	.word	IfxGtm_Tom_PwmHl_updateOff
	.sdecl	'.rodata.IfxGtm_Tom_PwmHl..1.str',data,rom
	.sect	'.rodata.IfxGtm_Tom_PwmHl..1.str'
.1.str:	.type	object
	.size	.1.str,43
	.byte	91,65,83,83
	.byte	69,82,84,58
	.byte	37,115,93,32
	.byte	39,37,115,39
	.byte	32,105,110,32
	.byte	37,115,58,37
	.byte	100,32,40,102
	.byte	117,110,99,116
	.byte	105,111,110,32
	.byte	39,37,115,39
	.byte	41,10
	.space	1
	.sdecl	'.zrodata.IfxGtm_Tom_PwmHl..2.str',data,rom
	.sect	'.zrodata.IfxGtm_Tom_PwmHl..2.str'
.2.str:	.type	object
	.size	.2.str,6
	.byte	70,65,76,83
	.byte	69
	.space	1
	.sdecl	'.rodata.IfxGtm_Tom_PwmHl..3.str',data,rom
	.sect	'.rodata.IfxGtm_Tom_PwmHl..3.str'
.3.str:	.type	object
	.size	.3.str,78
	.byte	46,46,92,83
	.byte	111,102,116,119
	.byte	97,114,101,80
	.byte	108,97,116,102
	.byte	111,114,109,92
	.byte	105,108,108,100
	.byte	95,116,99,50
	.byte	51,120,92,115
	.byte	114,99,92,105
	.byte	102,120,92,84
	.byte	67,50,51,120
	.byte	92,71,116,109
	.byte	92,84,111,109
	.byte	92,80,119,109
	.byte	72,108,92,73
	.byte	102,120,71,116
	.byte	109,95,84,111
	.byte	109,95,80,119
	.byte	109,72,108,46
	.byte	99
	.space	1
	.sdecl	'.rodata.IfxGtm_Tom_PwmHl._999001___func__',data,rom,cluster('_999001___func__')
	.sect	'.rodata.IfxGtm_Tom_PwmHl._999001___func__'
_999001___func__:	.type	object
	.size	_999001___func__,22
	.byte	73,102,120,71
	.byte	116,109,95,84
	.byte	111,109,95,80
	.byte	119,109,72,108
	.byte	95,105,110,105
	.byte	116
	.space	1
	.sdecl	'.rodata.IfxGtm_Tom_PwmHl..5.str',data,rom
	.sect	'.rodata.IfxGtm_Tom_PwmHl..5.str'
.5.str:	.type	object
	.size	.5.str,63
	.byte	99,111,110,102
	.byte	105,103,45,62
	.byte	98,97,115,101
	.byte	46,99,104,97
	.byte	110,110,101,108
	.byte	67,111,117,110
	.byte	116,32,60,61
	.byte	32,73,70,88
	.byte	71,84,77,95
	.byte	84,79,77,95
	.byte	80,87,77,72
	.byte	76,95,77,65
	.byte	88,95,78,85
	.byte	77,95,67,72
	.byte	65,78,78,69
	.byte	76,83
	.space	1
	.sdecl	'.rodata.IfxGtm_Tom_PwmHl..6.ini',data,rom
	.sect	'.rodata.IfxGtm_Tom_PwmHl..6.ini'
	.align	2
.6.ini:	.type	object
	.size	.6.ini,12
	.space	12
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_getDeadtime'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_getMinPulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_getMode'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setDeadtime'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setMinPulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setMode'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setOnTime'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setupChannels'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateCenterAligned'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateEdgeAligned'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateOff'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Timer_getPeriod'
	.calls	'IfxGtm_Tom_PwmHl_init','printf'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_setDeadtime'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_setMinPulse'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_getTgcPointer'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_getClockSource'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setClockSource'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setSignalLevel'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_enableChannels'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_enableChannelsOutput'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setResetSource'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setTriggerOutput'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Timer_getOffset'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setCounterValue'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_PinMap_setTomTout'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_setMode'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_updateOff'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_setChannelsForceUpdate'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_trigger'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Timer_addToChannelMask'
	.calls	'IfxGtm_Tom_PwmHl_initConfig','IfxStdIf_PwmHl_initConfig'
	.calls	'IfxGtm_Tom_PwmHl_setMode','IfxGtm_Tom_Ch_setSignalLevel'
	.calls	'IfxGtm_Tom_PwmHl_setOnTime','__INDIRECT__'
	.calls	'IfxGtm_Tom_PwmHl_stdIfPwmHlInit','IfxGtm_Tom_Timer_stdIfTimerInit'
	.calls	'IfxGtm_Tom_PwmHl_updateCenterAligned','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_updateEdgeAligned','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_updateOff','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_getDeadtime','.cocofun_11'
	.calls	'IfxGtm_Tom_PwmHl_getMinPulse','.cocofun_11'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_15'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_9'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_10'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_12'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_13'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_8'
	.calls	'IfxGtm_Tom_PwmHl_setDeadtime','.cocofun_14'
	.calls	'IfxGtm_Tom_PwmHl_setMinPulse','.cocofun_14'
	.calls	'IfxGtm_Tom_PwmHl_updateCenterAligned','.cocofun_16'
	.calls	'IfxGtm_Tom_PwmHl_updateCenterAligned','.cocofun_7'
	.calls	'IfxGtm_Tom_PwmHl_updateEdgeAligned','.cocofun_16'
	.calls	'IfxGtm_Tom_PwmHl_updateEdgeAligned','.cocofun_7'
	.calls	'IfxGtm_Tom_PwmHl_getDeadtime','',0
	.calls	'.cocofun_11','',0
	.calls	'IfxGtm_Tom_PwmHl_getMinPulse','',0
	.calls	'IfxGtm_Tom_PwmHl_getMode','',0
	.calls	'IfxGtm_Tom_PwmHl_init','',32
	.calls	'.cocofun_15','',0
	.calls	'.cocofun_13','',0
	.calls	'.cocofun_12','',0
	.calls	'.cocofun_10','',0
	.calls	'.cocofun_9','',0
	.calls	'.cocofun_8','',0
	.calls	'IfxGtm_Tom_PwmHl_initConfig','',0
	.calls	'IfxGtm_Tom_PwmHl_setDeadtime','',0
	.calls	'.cocofun_14','',0
	.calls	'IfxGtm_Tom_PwmHl_setMinPulse','',0
	.calls	'IfxGtm_Tom_PwmHl_setMode','',0
	.calls	'IfxGtm_Tom_PwmHl_setOnTime','',0
	.calls	'IfxGtm_Tom_PwmHl_setupChannels','',0
	.calls	'IfxGtm_Tom_PwmHl_stdIfPwmHlInit','',0
	.calls	'IfxGtm_Tom_PwmHl_updateCenterAligned','',0
	.calls	'.cocofun_16','',0
	.calls	'.cocofun_7','',0
	.calls	'IfxGtm_Tom_PwmHl_updateEdgeAligned','',0
	.extern	printf
	.extern	verboseLevelStr
	.extern	IfxStdIf_PwmHl_initConfig
	.extern	IfxGtm_Tom_Ch_getClockSource
	.extern	IfxGtm_Tom_Ch_getTgcPointer
	.extern	IfxGtm_Tom_Ch_setClockSource
	.extern	IfxGtm_Tom_Ch_setCompareShadow
	.extern	IfxGtm_Tom_Ch_setCounterValue
	.extern	IfxGtm_Tom_Ch_setResetSource
	.extern	IfxGtm_Tom_Ch_setSignalLevel
	.extern	IfxGtm_Tom_Ch_setTriggerOutput
	.extern	IfxGtm_Tom_Tgc_enableChannels
	.extern	IfxGtm_Tom_Tgc_enableChannelsOutput
	.extern	IfxGtm_Tom_Tgc_setChannelsForceUpdate
	.extern	IfxGtm_Tom_Tgc_trigger
	.extern	IfxGtm_PinMap_setTomTout
	.extern	IfxGtm_Tom_Timer_getOffset
	.extern	IfxGtm_Tom_Timer_addToChannelMask
	.extern	IfxGtm_Tom_Timer_getPeriod
	.extern	IfxGtm_Tom_Timer_stdIfTimerInit
	.extern	__printf_int
	.extern	__INDIRECT__
	.calls	'IfxGtm_Tom_PwmHl_updateOff','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L113:
	.word	80100
	.half	3
	.word	.L114
	.byte	4
.L112:
	.byte	1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L115
	.byte	2
	.byte	'void',0,3
	.word	200
	.byte	4
	.word	206
	.byte	5
	.byte	'unsigned int',0,4,7,6
	.byte	'__ldmst_c',0,3,1,86,17,1,1,7
	.byte	'address',0,1,86,42
	.word	211
	.byte	7
	.byte	'mask',0,1,86,60
	.word	216
	.byte	7
	.byte	'value',0,1,86,75
	.word	216
	.byte	8,0,5
	.byte	'unsigned long long int',0,8,7,4
	.word	200
	.byte	9
	.byte	'__ld64',0,3,1,110,19
	.word	294
	.byte	1,1,7
	.byte	'addr',0,1,110,32
	.word	320
	.byte	8,0,6
	.byte	'__st64',0,3,1,118,17,1,1,7
	.byte	'addr',0,1,118,30
	.word	320
	.byte	7
	.byte	'value',0,1,118,43
	.word	294
	.byte	8,0,5
	.byte	'int',0,4,5
.L238:
	.byte	5
	.byte	'unsigned char',0,1,8,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,3,45,16,4,11
	.byte	'SRPN',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'ECC',0,1
	.word	408
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	408
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,3,70,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	425
	.byte	4,2,35,0,0,3
	.word	715
	.byte	4
	.word	754
	.byte	6
	.byte	'IfxSrc_clearRequest',0,3,2,230,1,17,1,1,7
	.byte	'src',0,2,230,1,60
	.word	759
	.byte	8,0
.L245:
	.byte	5
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_P_OUT_Bits',0,5,231,2,16,4,11
	.byte	'P0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,12,5,239,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	829
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,5,129,2,16,4,11
	.byte	'PS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,5,191,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1145
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,5,110,16,4,11
	.byte	'MODREV',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	807
	.byte	16,0,2,35,2,0,12,5,231,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1716
	.byte	4,2,35,0,0,14,4
	.word	408
	.byte	15,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,5,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	408
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	408
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	408
	.byte	5,0,2,35,3,0,12,5,247,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1844
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,5,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	408
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	408
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	408
	.byte	5,0,2,35,3,0,12,5,135,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2059
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,5,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	408
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	408
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	408
	.byte	5,0,2,35,3,0,12,5,143,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2274
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,5,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	408
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	408
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	408
	.byte	5,0,2,35,3,0,12,5,255,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2491
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,5,118,16,4,11
	.byte	'P0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,12,5,239,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2711
	.byte	4,2,35,0,0,14,24
	.word	408
	.byte	15,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,5,160,3,16,4,11
	.byte	'PD0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	408
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	408
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	408
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	408
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,5,135,5,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3034
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,5,181,3,16,4,11
	.byte	'PD8',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	408
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	408
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	408
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	408
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,5,143,5,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3338
	.byte	4,2,35,0,0,14,8
	.word	408
	.byte	15,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,5,88,16,4,11
	.byte	'EN0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,12,5,223,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3663
	.byte	4,2,35,0,0,14,12
	.word	408
	.byte	15,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,5,138,3,16,4,11
	.byte	'PDIS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,12,5,255,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4003
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,5,253,2,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	807
	.byte	6,7,2,35,0,11
	.byte	'SEL9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	216
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,5,247,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4369
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,5,166,2,16,4,11
	.byte	'PS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	28,0,2,35,0,0,12,5,207,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4580
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,5,187,2,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	216
	.byte	24,0,2,35,0,0,12,5,223,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4727
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,5,198,2,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	216
	.byte	20,0,2,35,0,0,12,5,231,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4896
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,5,176,2,16,4,11
	.byte	'reserved_0',0,2
	.word	807
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,12,5,215,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5068
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,5,192,1,16,4,11
	.byte	'reserved_0',0,2
	.word	807
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	807
	.byte	12,0,2,35,2,0,12,5,159,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5243
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,5,213,1,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	8,0,2,35,3,0,12,5,175,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5417
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,5,224,1,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	408
	.byte	4,0,2,35,3,0,12,5,183,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5591
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,5,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,5,167,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5767
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,5,209,2,16,4,11
	.byte	'PS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,12,5,199,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5923
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,5,235,1,16,4,11
	.byte	'reserved_0',0,2
	.word	807
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,5,151,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6256
	.byte	4,2,35,0,0,14,96
	.word	408
	.byte	15,95,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,5,82,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	32,0,2,35,0,0,12,5,215,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6613
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,5,45,16,4,11
	.byte	'EN0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,5,207,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6700
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,5,159,5,25,128,2,13
	.byte	'OUT',0
	.word	1105
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	1676
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	1795
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	1835
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2019
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	2234
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	2451
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	2671
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	1835
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	2985
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3025
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	3298
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	3614
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	3654
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	3954
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3994
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	4329
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	4540
	.byte	4,2,35,100,13
	.byte	'reserved_64',0
	.word	3654
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	4687
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	4856
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5028
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	5203
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	5377
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	5551
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	5727
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	5883
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	6216
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	6564
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	6604
	.byte	96,3,35,152,1,13
	.byte	'ACCEN1',0
	.word	6660
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	7227
	.byte	4,3,35,252,1,0,3
	.word	7267
	.byte	4
	.word	7800
	.byte	16,4,131,1,9,4,17
	.byte	'IfxPort_State_notChanged',0,0,17
	.byte	'IfxPort_State_high',0,1,17
	.byte	'IfxPort_State_low',0,128,128,4,17
	.byte	'IfxPort_State_toggled',0,129,128,4,0
.L260:
	.byte	6
	.byte	'IfxPort_setPinState',0,3,4,143,4,17,1,1
.L263:
	.byte	7
	.byte	'port',0,4,143,4,44
	.word	7805
.L265:
	.byte	7
	.byte	'pinIndex',0,4,143,4,56
	.word	408
.L267:
	.byte	7
	.byte	'action',0,4,143,4,80
	.word	7810
.L269:
	.byte	8,0
.L278:
	.byte	5
	.byte	'float',0,4,4,18
	.byte	'IfxStdIf_InterfaceDriver',0,7,97,15
	.word	320
	.byte	19
	.word	7991
	.byte	1,1,20
	.word	320
	.byte	0,4
	.word	8033
	.byte	18
	.byte	'IfxStdIf_Timer_GetFrequency',0,6,82,19
	.word	8046
.L248:
	.byte	5
	.byte	'unsigned long int',0,4,7,19
	.word	8087
	.byte	1,1,20
	.word	320
	.byte	0,4
	.word	8108
	.byte	18
	.byte	'IfxStdIf_Timer_GetPeriod',0,6,88,26
	.word	8121
	.byte	18
	.byte	'IfxStdIf_Timer_GetResolution',0,6,94,19
	.word	8046
	.byte	18
	.byte	'IfxStdIf_Timer_GetTrigger',0,6,100,26
	.word	8121
	.byte	19
	.word	408
	.byte	1,1,20
	.word	320
	.byte	20
	.word	7991
	.byte	0,4
	.word	8230
	.byte	18
	.byte	'IfxStdIf_Timer_SetFrequency',0,6,108,19
	.word	8248
	.byte	21,1,1,20
	.word	320
	.byte	0,4
	.word	8289
	.byte	18
	.byte	'IfxStdIf_Timer_UpdateInputFrequency',0,6,114,16
	.word	8298
	.byte	18
	.byte	'IfxStdIf_Timer_ApplyUpdate',0,6,135,1,16
	.word	8298
	.byte	18
	.byte	'IfxStdIf_Timer_DisableUpdate',0,6,152,1,16
	.word	8298
	.byte	18
	.byte	'IfxStdIf_Timer_GetInputFrequency',0,6,158,1,19
	.word	8046
	.byte	18
	.byte	'IfxStdIf_Timer_Run',0,6,167,1,16
	.word	8298
	.byte	19
	.word	408
	.byte	1,1,20
	.word	320
	.byte	20
	.word	8087
	.byte	0,4
	.word	8491
	.byte	18
	.byte	'IfxStdIf_Timer_SetPeriod',0,6,177,1,19
	.word	8509
	.byte	21,1,1,20
	.word	320
	.byte	20
	.word	408
	.byte	0,4
	.word	8548
	.byte	18
	.byte	'IfxStdIf_Timer_SetSingleMode',0,6,186,1,16
	.word	8562
	.byte	21,1,1,20
	.word	320
	.byte	20
	.word	8087
	.byte	0,4
	.word	8605
	.byte	18
	.byte	'IfxStdIf_Timer_SetTrigger',0,6,198,1,16
	.word	8619
	.byte	18
	.byte	'IfxStdIf_Timer_Stop',0,6,204,1,16
	.word	8298
	.byte	19
	.word	408
	.byte	1,1,20
	.word	320
	.byte	0,4
	.word	8688
	.byte	18
	.byte	'IfxStdIf_Timer_AckTimerIrq',0,6,210,1,19
	.word	8701
	.byte	18
	.byte	'IfxStdIf_Timer_AckTriggerIrq',0,6,216,1,19
	.word	8701
	.byte	10
	.byte	'IfxStdIf_Timer_',0,6,220,1,8,68,13
	.byte	'driver',0
	.word	8000
	.byte	4,2,35,0,13
	.byte	'getFrequency',0
	.word	8051
	.byte	4,2,35,4,13
	.byte	'getPeriod',0
	.word	8126
	.byte	4,2,35,8,13
	.byte	'getResolution',0
	.word	8159
	.byte	4,2,35,12,13
	.byte	'getTrigger',0
	.word	8196
	.byte	4,2,35,16,13
	.byte	'setFrequency',0
	.word	8253
	.byte	4,2,35,20,13
	.byte	'updateInputFrequency',0
	.word	8303
	.byte	4,2,35,24,13
	.byte	'applyUpdate',0
	.word	8347
	.byte	4,2,35,28,13
	.byte	'disableUpdate',0
	.word	8383
	.byte	4,2,35,32,13
	.byte	'getInputFrequency',0
	.word	8421
	.byte	4,2,35,36,13
	.byte	'run',0
	.word	8463
	.byte	4,2,35,40,13
	.byte	'setPeriod',0
	.word	8514
	.byte	4,2,35,44,13
	.byte	'setSingleMode',0
	.word	8567
	.byte	4,2,35,48,13
	.byte	'setTrigger',0
	.word	8624
	.byte	4,2,35,52,13
	.byte	'stop',0
	.word	8659
	.byte	4,2,35,56,13
	.byte	'ackTimerIrq',0
	.word	8706
	.byte	4,2,35,60,13
	.byte	'ackTriggerIrq',0
	.word	8742
	.byte	4,2,35,64,0,4
	.word	8780
	.byte	9
	.byte	'IfxStdIf_Timer_getInputFrequency',0,3,6,198,2,20
	.word	7991
	.byte	1,1,7
	.byte	'stdIf',0,6,198,2,69
	.word	9159
	.byte	8,0,4
	.word	200
	.byte	4
	.word	8033
	.byte	4
	.word	8108
	.byte	4
	.word	8033
	.byte	4
	.word	8108
	.byte	4
	.word	8230
	.byte	4
	.word	8289
	.byte	4
	.word	8289
	.byte	4
	.word	8289
	.byte	4
	.word	8033
	.byte	4
	.word	8289
	.byte	4
	.word	8491
	.byte	4
	.word	8548
	.byte	4
	.word	8605
	.byte	4
	.word	8289
	.byte	4
	.word	8688
	.byte	4
	.word	8688
	.byte	9
	.byte	'IfxStdIf_Timer_tickToS',0,3,6,130,3,20
	.word	7991
	.byte	1,1,7
	.byte	'clockFreq',0,6,130,3,51
	.word	7991
	.byte	7
	.byte	'ticks',0,6,130,3,77
	.word	8087
	.byte	8,0,9
	.byte	'IfxStdIf_Timer_sToTick',0,3,6,141,3,27
	.word	8087
	.byte	1,1,7
	.byte	'clockFreq',0,6,141,3,58
	.word	7991
	.byte	7
	.byte	'seconds',0,6,141,3,77
	.word	7991
	.byte	8,0,16,9,80,9,1,17
	.byte	'Ifx_ActiveState_low',0,0,17
	.byte	'Ifx_ActiveState_high',0,1,0,9
	.byte	'IfxGtm_Tom_PwmHl_invertActiveState',0,3,8,88,28
	.word	9455
	.byte	1,1,7
	.byte	'activeState',0,8,88,79
	.word	9455
	.byte	8,0,5
	.byte	'char',0,1,6,22
	.word	9574
	.byte	4
	.word	9582
	.byte	23
	.word	9587
	.byte	24
	.byte	'printf',0,10,143,1,16
	.word	401
	.byte	1,1,1,1,25,10,143,1,38
	.word	9592
	.byte	26,10,143,1,50,0,27
	.word	232
	.byte	28
	.word	249
	.byte	28
	.word	265
	.byte	28
	.word	278
	.byte	8,0,27
	.word	325
	.byte	28
	.word	343
	.byte	8,0,27
	.word	358
	.byte	28
	.word	372
	.byte	28
	.word	385
	.byte	8,0,27
	.word	764
	.byte	28
	.word	792
	.byte	8,0,27
	.word	7913
	.byte	28
	.word	7941
	.byte	28
	.word	7955
	.byte	28
	.word	7973
	.byte	8,0,27
	.word	9164
	.byte	28
	.word	9209
	.byte	8,0,27
	.word	9311
	.byte	28
	.word	9346
	.byte	28
	.word	9365
	.byte	8,0,27
	.word	9382
	.byte	28
	.word	9417
	.byte	28
	.word	9436
	.byte	8,0,16,4,105,9,1,17
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,17
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,16,4,115,9,1,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,17
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,17
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,17
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,17
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,29,11,157,1,9,16,13
	.byte	'deadtime',0
	.word	7991
	.byte	4,2,35,0,13
	.byte	'minPulse',0
	.word	7991
	.byte	4,2,35,4,13
	.byte	'channelCount',0
	.word	408
	.byte	1,2,35,8,13
	.byte	'emergencyEnabled',0
	.word	408
	.byte	1,2,35,9,13
	.byte	'outputMode',0
	.word	9763
	.byte	1,2,35,10,13
	.byte	'outputDriver',0
	.word	9832
	.byte	1,2,35,11,13
	.byte	'ccxActiveState',0
	.word	9455
	.byte	1,2,35,12,13
	.byte	'coutxActiveState',0
	.word	9455
	.byte	1,2,35,13,0,4
	.word	10122
	.byte	30
	.byte	'IfxStdIf_PwmHl_initConfig',0,11,245,1,17,1,1,1,1,7
	.byte	'config',0,11,245,1,66
	.word	10305
	.byte	0
.L254:
	.byte	16,12,56,9,1,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0',0,0,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1',0,1,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2',0,2,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3',0,3,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4',0,4,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_noClock',0,5,0,5
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_GTM_TOM_CH_CTRL_Bits',0,13,203,7,16,4,11
	.byte	'reserved_0',0,4
	.word	10564
	.byte	11,21,2,35,0,11
	.byte	'SL',0,4
	.word	10564
	.byte	1,20,2,35,0,11
	.byte	'CLK_SRC_SR',0,4
	.word	10564
	.byte	3,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	10564
	.byte	5,12,2,35,0,11
	.byte	'RST_CCU0',0,4
	.word	10564
	.byte	1,11,2,35,0,11
	.byte	'OSM_TRIG',0,4
	.word	10564
	.byte	1,10,2,35,0,11
	.byte	'EXT_TRIG',0,4
	.word	10564
	.byte	1,9,2,35,0,11
	.byte	'EXTTRIGOUT',0,4
	.word	10564
	.byte	1,8,2,35,0,11
	.byte	'TRIGOUT',0,4
	.word	10564
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	10564
	.byte	1,6,2,35,0,11
	.byte	'OSM',0,4
	.word	10564
	.byte	1,5,2,35,0,11
	.byte	'BITREV',0,4
	.word	10564
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	10564
	.byte	4,0,2,35,0,0,12,13,148,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10580
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_SR0_Bits',0,13,252,7,16,4,11
	.byte	'SR0',0,4
	.word	10564
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,188,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10914
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_SR1_Bits',0,13,131,8,16,4,11
	.byte	'SR1',0,4
	.word	10564
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,196,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11024
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_CM0_Bits',0,13,182,7,16,4,11
	.byte	'CM0',0,4
	.word	10564
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,252,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11134
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_CM1_Bits',0,13,189,7,16,4,11
	.byte	'CM1',0,4
	.word	10564
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,132,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11244
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_CN0_Bits',0,13,196,7,16,4,11
	.byte	'CN0',0,4
	.word	10564
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,140,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11354
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_STAT_Bits',0,13,138,8,16,4,11
	.byte	'OL',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	10564
	.byte	31,0,2,35,0,0,12,13,204,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11464
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,13,244,7,16,4,11
	.byte	'CCU0TC',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'CCU1TC',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	30,0,2,35,0,0,12,13,180,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11573
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,13,221,7,16,4,11
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	30,0,2,35,0,0,12,13,156,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11710
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,13,229,7,16,4,11
	.byte	'TRG_CCU0TC0',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'TRG_CCU1TC0',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	30,0,2,35,0,0,12,13,164,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11857
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,13,237,7,16,4,11
	.byte	'IRQ_MODE',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	30,0,2,35,0,0,12,13,172,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12005
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH',0,13,164,17,25,48,13
	.byte	'CTRL',0
	.word	10874
	.byte	4,2,35,0,13
	.byte	'SR0',0
	.word	10984
	.byte	4,2,35,4,13
	.byte	'SR1',0
	.word	11094
	.byte	4,2,35,8,13
	.byte	'CM0',0
	.word	11204
	.byte	4,2,35,12,13
	.byte	'CM1',0
	.word	11314
	.byte	4,2,35,16,13
	.byte	'CN0',0
	.word	11424
	.byte	4,2,35,20,13
	.byte	'STAT',0
	.word	11533
	.byte	4,2,35,24,13
	.byte	'IRQ_NOTIFY',0
	.word	11670
	.byte	4,2,35,28,13
	.byte	'IRQ_EN',0
	.word	11817
	.byte	4,2,35,32,13
	.byte	'IRQ_FORCINT',0
	.word	11965
	.byte	4,2,35,36,13
	.byte	'IRQ_MODE',0
	.word	12084
	.byte	4,2,35,40,13
	.byte	'reserved_2C',0
	.word	1835
	.byte	4,2,35,44,0,3
	.word	12124
	.byte	10
	.byte	'_Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,13,203,8,16,4,11
	.byte	'HOST_TRIG',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	10564
	.byte	7,24,2,35,0,11
	.byte	'RST_CH0',0,4
	.word	10564
	.byte	1,23,2,35,0,11
	.byte	'RST_CH1',0,4
	.word	10564
	.byte	1,22,2,35,0,11
	.byte	'RST_CH2',0,4
	.word	10564
	.byte	1,21,2,35,0,11
	.byte	'RST_CH3',0,4
	.word	10564
	.byte	1,20,2,35,0,11
	.byte	'RST_CH4',0,4
	.word	10564
	.byte	1,19,2,35,0,11
	.byte	'RST_CH5',0,4
	.word	10564
	.byte	1,18,2,35,0,11
	.byte	'RST_CH6',0,4
	.word	10564
	.byte	1,17,2,35,0,11
	.byte	'RST_CH7',0,4
	.word	10564
	.byte	1,16,2,35,0,11
	.byte	'UPEN_CTRL0',0,4
	.word	10564
	.byte	2,14,2,35,0,11
	.byte	'UPEN_CTRL1',0,4
	.word	10564
	.byte	2,12,2,35,0,11
	.byte	'UPEN_CTRL2',0,4
	.word	10564
	.byte	2,10,2,35,0,11
	.byte	'UPEN_CTRL3',0,4
	.word	10564
	.byte	2,8,2,35,0,11
	.byte	'UPEN_CTRL4',0,4
	.word	10564
	.byte	2,6,2,35,0,11
	.byte	'UPEN_CTRL5',0,4
	.word	10564
	.byte	2,4,2,35,0,11
	.byte	'UPEN_CTRL6',0,4
	.word	10564
	.byte	2,2,2,35,0,11
	.byte	'UPEN_CTRL7',0,4
	.word	10564
	.byte	2,0,2,35,0,0,12,13,244,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12341
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,13,145,8,16,4,11
	.byte	'ACT_TB',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'TB_TRIG',0,4
	.word	10564
	.byte	1,7,2,35,0,11
	.byte	'TBU_SEL',0,4
	.word	10564
	.byte	2,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	10564
	.byte	5,0,2,35,0,0,12,13,212,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12791
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,13,182,8,16,4,11
	.byte	'FUPD_CTRL0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'FUPD_CTRL1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'FUPD_CTRL2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'FUPD_CTRL3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'FUPD_CTRL4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'FUPD_CTRL5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'FUPD_CTRL6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'FUPD_CTRL7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'RSTCN0_CH0',0,4
	.word	10564
	.byte	2,14,2,35,0,11
	.byte	'RSTCN0_CH1',0,4
	.word	10564
	.byte	2,12,2,35,0,11
	.byte	'RSTCN0_CH2',0,4
	.word	10564
	.byte	2,10,2,35,0,11
	.byte	'RSTCN0_CH3',0,4
	.word	10564
	.byte	2,8,2,35,0,11
	.byte	'RSTCN0_CH4',0,4
	.word	10564
	.byte	2,6,2,35,0,11
	.byte	'RSTCN0_CH5',0,4
	.word	10564
	.byte	2,4,2,35,0,11
	.byte	'RSTCN0_CH6',0,4
	.word	10564
	.byte	2,2,2,35,0,11
	.byte	'RSTCN0_CH7',0,4
	.word	10564
	.byte	2,0,2,35,0,0,12,13,236,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12947
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,13,226,8,16,4,11
	.byte	'INT_TRIG0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'INT_TRIG1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'INT_TRIG2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'INT_TRIG3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'INT_TRIG4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'INT_TRIG5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'INT_TRIG6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'INT_TRIG7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,252,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13379
	.byte	4,2,35,0,0,3
	.word	12124
	.byte	10
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,13,154,8,16,4,11
	.byte	'ENDIS_CTRL0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'ENDIS_CTRL1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'ENDIS_CTRL2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'ENDIS_CTRL3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'ENDIS_CTRL4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'ENDIS_CTRL5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'ENDIS_CTRL6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'ENDIS_CTRL7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,220,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13654
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,13,168,8,16,4,11
	.byte	'ENDIS_STAT0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'ENDIS_STAT1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'ENDIS_STAT2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'ENDIS_STAT3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'ENDIS_STAT4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'ENDIS_STAT5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'ENDIS_STAT6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'ENDIS_STAT7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,228,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13942
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,13,240,8,16,4,11
	.byte	'OUTEN_CTRL0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'OUTEN_CTRL1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'OUTEN_CTRL2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'OUTEN_CTRL3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'OUTEN_CTRL4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'OUTEN_CTRL5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'OUTEN_CTRL6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'OUTEN_CTRL7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,132,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14230
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,13,254,8,16,4,11
	.byte	'OUTEN_STAT0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'OUTEN_STAT1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'OUTEN_STAT2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'OUTEN_STAT3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'OUTEN_STAT4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'OUTEN_STAT5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'OUTEN_STAT6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'OUTEN_STAT7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,140,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14518
	.byte	4,2,35,0,0,3
	.word	12124
	.byte	14,16
	.word	408
	.byte	15,15,0,3
	.word	12124
	.byte	3
	.word	12124
	.byte	3
	.word	12124
	.byte	3
	.word	12124
	.byte	3
	.word	12124
	.byte	3
	.word	12124
	.byte	10
	.byte	'_Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,13,198,9,16,4,11
	.byte	'HOST_TRIG',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	10564
	.byte	7,24,2,35,0,11
	.byte	'RST_CH0',0,4
	.word	10564
	.byte	1,23,2,35,0,11
	.byte	'RST_CH1',0,4
	.word	10564
	.byte	1,22,2,35,0,11
	.byte	'RST_CH2',0,4
	.word	10564
	.byte	1,21,2,35,0,11
	.byte	'RST_CH3',0,4
	.word	10564
	.byte	1,20,2,35,0,11
	.byte	'RST_CH4',0,4
	.word	10564
	.byte	1,19,2,35,0,11
	.byte	'RST_CH5',0,4
	.word	10564
	.byte	1,18,2,35,0,11
	.byte	'RST_CH6',0,4
	.word	10564
	.byte	1,17,2,35,0,11
	.byte	'RST_CH7',0,4
	.word	10564
	.byte	1,16,2,35,0,11
	.byte	'UPEN_CTRL0',0,4
	.word	10564
	.byte	2,14,2,35,0,11
	.byte	'UPEN_CTRL1',0,4
	.word	10564
	.byte	2,12,2,35,0,11
	.byte	'UPEN_CTRL2',0,4
	.word	10564
	.byte	2,10,2,35,0,11
	.byte	'UPEN_CTRL3',0,4
	.word	10564
	.byte	2,8,2,35,0,11
	.byte	'UPEN_CTRL4',0,4
	.word	10564
	.byte	2,6,2,35,0,11
	.byte	'UPEN_CTRL5',0,4
	.word	10564
	.byte	2,4,2,35,0,11
	.byte	'UPEN_CTRL6',0,4
	.word	10564
	.byte	2,2,2,35,0,11
	.byte	'UPEN_CTRL7',0,4
	.word	10564
	.byte	2,0,2,35,0,0,12,13,180,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14850
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,13,140,9,16,4,11
	.byte	'ACT_TB',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'TB_TRIG',0,4
	.word	10564
	.byte	1,7,2,35,0,11
	.byte	'TBU_SEL',0,4
	.word	10564
	.byte	2,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	10564
	.byte	5,0,2,35,0,0,12,13,148,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15300
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,13,177,9,16,4,11
	.byte	'FUPD_CTRL0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'FUPD_CTRL1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'FUPD_CTRL2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'FUPD_CTRL3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'FUPD_CTRL4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'FUPD_CTRL5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'FUPD_CTRL6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'FUPD_CTRL7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'RSTCN0_CH0',0,4
	.word	10564
	.byte	2,14,2,35,0,11
	.byte	'RSTCN0_CH1',0,4
	.word	10564
	.byte	2,12,2,35,0,11
	.byte	'RSTCN0_CH2',0,4
	.word	10564
	.byte	2,10,2,35,0,11
	.byte	'RSTCN0_CH3',0,4
	.word	10564
	.byte	2,8,2,35,0,11
	.byte	'RSTCN0_CH4',0,4
	.word	10564
	.byte	2,6,2,35,0,11
	.byte	'RSTCN0_CH5',0,4
	.word	10564
	.byte	2,4,2,35,0,11
	.byte	'RSTCN0_CH6',0,4
	.word	10564
	.byte	2,2,2,35,0,11
	.byte	'RSTCN0_CH7',0,4
	.word	10564
	.byte	2,0,2,35,0,0,12,13,172,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15456
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,13,221,9,16,4,11
	.byte	'INT_TRIG0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'INT_TRIG1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'INT_TRIG2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'INT_TRIG3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'INT_TRIG4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'INT_TRIG5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'INT_TRIG6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'INT_TRIG7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,188,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15888
	.byte	4,2,35,0,0,3
	.word	12124
	.byte	10
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,13,149,9,16,4,11
	.byte	'ENDIS_CTRL0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'ENDIS_CTRL1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'ENDIS_CTRL2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'ENDIS_CTRL3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'ENDIS_CTRL4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'ENDIS_CTRL5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'ENDIS_CTRL6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'ENDIS_CTRL7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,156,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16163
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,13,163,9,16,4,11
	.byte	'ENDIS_STAT0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'ENDIS_STAT1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'ENDIS_STAT2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'ENDIS_STAT3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'ENDIS_STAT4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'ENDIS_STAT5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'ENDIS_STAT6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'ENDIS_STAT7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,164,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16451
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,13,235,9,16,4,11
	.byte	'OUTEN_CTRL0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'OUTEN_CTRL1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'OUTEN_CTRL2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'OUTEN_CTRL3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'OUTEN_CTRL4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'OUTEN_CTRL5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'OUTEN_CTRL6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'OUTEN_CTRL7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,196,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16739
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,13,249,9,16,4,11
	.byte	'OUTEN_STAT0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'OUTEN_STAT1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'OUTEN_STAT2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'OUTEN_STAT3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'OUTEN_STAT4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'OUTEN_STAT5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'OUTEN_STAT6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'OUTEN_STAT7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,204,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17027
	.byte	4,2,35,0,0,3
	.word	12124
	.byte	3
	.word	12124
	.byte	3
	.word	12124
	.byte	3
	.word	12124
	.byte	3
	.word	12124
	.byte	3
	.word	12124
	.byte	14,144,8
	.word	408
	.byte	15,143,8,0,10
	.byte	'_Ifx_GTM_TOM',0,13,153,18,25,128,16,13
	.byte	'CH0',0
	.word	12336
	.byte	48,2,35,0,13
	.byte	'TGC0_GLB_CTRL',0
	.word	12751
	.byte	4,2,35,48,13
	.byte	'TGC0_ACT_TB',0
	.word	12907
	.byte	4,2,35,52,13
	.byte	'TGC0_FUPD_CTRL',0
	.word	13339
	.byte	4,2,35,56,13
	.byte	'TGC0_INT_TRIG',0
	.word	13609
	.byte	4,2,35,60,13
	.byte	'CH1',0
	.word	13649
	.byte	48,2,35,64,13
	.byte	'TGC0_ENDIS_CTRL',0
	.word	13902
	.byte	4,2,35,112,13
	.byte	'TGC0_ENDIS_STAT',0
	.word	14190
	.byte	4,2,35,116,13
	.byte	'TGC0_OUTEN_CTRL',0
	.word	14478
	.byte	4,2,35,120,13
	.byte	'TGC0_OUTEN_STAT',0
	.word	14766
	.byte	4,2,35,124,13
	.byte	'CH2',0
	.word	14806
	.byte	48,3,35,128,1,13
	.byte	'reserved_B0',0
	.word	14811
	.byte	16,3,35,176,1,13
	.byte	'CH3',0
	.word	14820
	.byte	48,3,35,192,1,13
	.byte	'reserved_F0',0
	.word	14811
	.byte	16,3,35,240,1,13
	.byte	'CH4',0
	.word	14825
	.byte	48,3,35,128,2,13
	.byte	'reserved_130',0
	.word	14811
	.byte	16,3,35,176,2,13
	.byte	'CH5',0
	.word	14830
	.byte	48,3,35,192,2,13
	.byte	'reserved_170',0
	.word	14811
	.byte	16,3,35,240,2,13
	.byte	'CH6',0
	.word	14835
	.byte	48,3,35,128,3,13
	.byte	'reserved_1B0',0
	.word	14811
	.byte	16,3,35,176,3,13
	.byte	'CH7',0
	.word	14840
	.byte	48,3,35,192,3,13
	.byte	'reserved_1F0',0
	.word	14811
	.byte	16,3,35,240,3,13
	.byte	'CH8',0
	.word	14845
	.byte	48,3,35,128,4,13
	.byte	'TGC1_GLB_CTRL',0
	.word	15260
	.byte	4,3,35,176,4,13
	.byte	'TGC1_ACT_TB',0
	.word	15416
	.byte	4,3,35,180,4,13
	.byte	'TGC1_FUPD_CTRL',0
	.word	15848
	.byte	4,3,35,184,4,13
	.byte	'TGC1_INT_TRIG',0
	.word	16118
	.byte	4,3,35,188,4,13
	.byte	'CH9',0
	.word	16158
	.byte	48,3,35,192,4,13
	.byte	'TGC1_ENDIS_CTRL',0
	.word	16411
	.byte	4,3,35,240,4,13
	.byte	'TGC1_ENDIS_STAT',0
	.word	16699
	.byte	4,3,35,244,4,13
	.byte	'TGC1_OUTEN_CTRL',0
	.word	16987
	.byte	4,3,35,248,4,13
	.byte	'TGC1_OUTEN_STAT',0
	.word	17275
	.byte	4,3,35,252,4,13
	.byte	'CH10',0
	.word	17315
	.byte	48,3,35,128,5,13
	.byte	'reserved_2B0',0
	.word	14811
	.byte	16,3,35,176,5,13
	.byte	'CH11',0
	.word	17320
	.byte	48,3,35,192,5,13
	.byte	'reserved_2F0',0
	.word	14811
	.byte	16,3,35,240,5,13
	.byte	'CH12',0
	.word	17325
	.byte	48,3,35,128,6,13
	.byte	'reserved_330',0
	.word	14811
	.byte	16,3,35,176,6,13
	.byte	'CH13',0
	.word	17330
	.byte	48,3,35,192,6,13
	.byte	'reserved_370',0
	.word	14811
	.byte	16,3,35,240,6,13
	.byte	'CH14',0
	.word	17335
	.byte	48,3,35,128,7,13
	.byte	'reserved_3B0',0
	.word	14811
	.byte	16,3,35,176,7,13
	.byte	'CH15',0
	.word	17340
	.byte	48,3,35,192,7,13
	.byte	'reserved_3F0',0
	.word	17345
	.byte	144,8,3,35,240,7,0,3
	.word	17356
	.byte	4
	.word	18270
.L258:
	.byte	16,14,223,1,9,1,17
	.byte	'IfxGtm_Tom_Ch_none',0,127,17
	.byte	'IfxGtm_Tom_Ch_0',0,0,17
	.byte	'IfxGtm_Tom_Ch_1',0,1,17
	.byte	'IfxGtm_Tom_Ch_2',0,2,17
	.byte	'IfxGtm_Tom_Ch_3',0,3,17
	.byte	'IfxGtm_Tom_Ch_4',0,4,17
	.byte	'IfxGtm_Tom_Ch_5',0,5,17
	.byte	'IfxGtm_Tom_Ch_6',0,6,17
	.byte	'IfxGtm_Tom_Ch_7',0,7,17
	.byte	'IfxGtm_Tom_Ch_8',0,8,17
	.byte	'IfxGtm_Tom_Ch_9',0,9,17
	.byte	'IfxGtm_Tom_Ch_10',0,10,17
	.byte	'IfxGtm_Tom_Ch_11',0,11,17
	.byte	'IfxGtm_Tom_Ch_12',0,12,17
	.byte	'IfxGtm_Tom_Ch_13',0,13,17
	.byte	'IfxGtm_Tom_Ch_14',0,14,17
	.byte	'IfxGtm_Tom_Ch_15',0,15,0,24
	.byte	'IfxGtm_Tom_Ch_getClockSource',0,12,129,1,33
	.word	10362
	.byte	1,1,1,1,7
	.byte	'tom',0,12,129,1,75
	.word	18275
	.byte	7
	.byte	'channel',0,12,129,1,94
	.word	18280
	.byte	0,3
	.word	12124
	.byte	10
	.byte	'IfxGtm_Tom_TGC',0,14,134,2,8,80,13
	.byte	'GLB_CTRL',0
	.word	12751
	.byte	4,2,35,0,13
	.byte	'ACT_TB',0
	.word	12907
	.byte	4,2,35,4,13
	.byte	'FUPD_CTRL',0
	.word	13339
	.byte	4,2,35,8,13
	.byte	'INT_TRIG',0
	.word	13609
	.byte	4,2,35,12,13
	.byte	'xxxCH1',0
	.word	18675
	.byte	48,2,35,16,13
	.byte	'ENDIS_CTRL',0
	.word	13902
	.byte	4,2,35,64,13
	.byte	'ENDIS_STAT',0
	.word	14190
	.byte	4,2,35,68,13
	.byte	'OUTEN_CTRL',0
	.word	14478
	.byte	4,2,35,72,13
	.byte	'OUTEN_STAT',0
	.word	14766
	.byte	4,2,35,76,0,3
	.word	18680
	.byte	4
	.word	18869
	.byte	24
	.byte	'IfxGtm_Tom_Ch_getTgcPointer',0,12,179,1,29
	.word	18874
	.byte	1,1,1,1,7
	.byte	'tom',0,12,179,1,70
	.word	18275
	.byte	7
	.byte	'tgcIndex',0,12,179,1,82
	.word	8087
	.byte	0,30
	.byte	'IfxGtm_Tom_Ch_setClockSource',0,12,222,1,17,1,1,1,1,7
	.byte	'tom',0,12,222,1,59
	.word	18275
	.byte	7
	.byte	'channel',0,12,222,1,78
	.word	18280
	.byte	7
	.byte	'clock',0,12,222,1,108
	.word	10362
	.byte	0,30
	.byte	'IfxGtm_Tom_Ch_setCompareShadow',0,12,128,2,17,1,1,1,1,7
	.byte	'tom',0,12,128,2,61
	.word	18275
	.byte	7
	.byte	'channel',0,12,128,2,80
	.word	18280
	.byte	7
	.byte	'shadowZero',0,12,128,2,96
	.word	8087
	.byte	7
	.byte	'shadowOne',0,12,128,2,115
	.word	8087
	.byte	0,30
	.byte	'IfxGtm_Tom_Ch_setCounterValue',0,12,152,2,17,1,1,1,1,7
	.byte	'tom',0,12,152,2,60
	.word	18275
	.byte	7
	.byte	'channel',0,12,152,2,79
	.word	18280
	.byte	7
	.byte	'value',0,12,152,2,95
	.word	8087
	.byte	0,16,12,76,9,1,17
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onCm0',0,0,17
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onTrigger',0,1,0,30
	.byte	'IfxGtm_Tom_Ch_setResetSource',0,12,186,2,17,1,1,1,1,7
	.byte	'tom',0,12,186,2,59
	.word	18275
	.byte	7
	.byte	'channel',0,12,186,2,78
	.word	18280
	.byte	7
	.byte	'event',0,12,186,2,112
	.word	19231
	.byte	0,30
	.byte	'IfxGtm_Tom_Ch_setSignalLevel',0,12,194,2,17,1,1,1,1,7
	.byte	'tom',0,12,194,2,59
	.word	18275
	.byte	7
	.byte	'channel',0,12,194,2,78
	.word	18280
	.byte	7
	.byte	'activeState',0,12,194,2,103
	.word	9455
	.byte	0,16,12,68,9,1,17
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_forward',0,0,17
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_generate',0,1,0,30
	.byte	'IfxGtm_Tom_Ch_setTriggerOutput',0,12,202,2,17,1,1,1,1,7
	.byte	'tom',0,12,202,2,61
	.word	18275
	.byte	7
	.byte	'channel',0,12,202,2,80
	.word	18280
	.byte	7
	.byte	'trigger',0,12,202,2,117
	.word	19481
	.byte	0,30
	.byte	'IfxGtm_Tom_Tgc_enableChannels',0,12,145,3,17,1,1,1,1,7
	.byte	'tgc',0,12,145,3,64
	.word	18874
	.byte	7
	.byte	'enableMask',0,12,145,3,76
	.word	807
	.byte	7
	.byte	'disableMask',0,12,145,3,95
	.word	807
	.byte	7
	.byte	'immediate',0,12,145,3,116
	.word	408
	.byte	0,30
	.byte	'IfxGtm_Tom_Tgc_enableChannelsOutput',0,12,154,3,17,1,1,1,1,7
	.byte	'tgc',0,12,154,3,70
	.word	18874
	.byte	7
	.byte	'enableMask',0,12,154,3,82
	.word	807
	.byte	7
	.byte	'disableMask',0,12,154,3,101
	.word	807
	.byte	7
	.byte	'immediate',0,12,154,3,122
	.word	408
	.byte	0,30
	.byte	'IfxGtm_Tom_Tgc_setChannelsForceUpdate',0,12,203,3,17,1,1,1,1,7
	.byte	'tgc',0,12,203,3,72
	.word	18874
	.byte	7
	.byte	'enableMask',0,12,203,3,84
	.word	807
	.byte	7
	.byte	'disableMask',0,12,203,3,103
	.word	807
	.byte	7
	.byte	'resetEnableMask',0,12,203,3,123
	.word	807
	.byte	7
	.byte	'resetDisableMask',0,12,203,3,147,1
	.word	807
	.byte	0,30
	.byte	'IfxGtm_Tom_Tgc_trigger',0,12,217,3,17,1,1,1,1,7
	.byte	'tgc',0,12,217,3,57
	.word	18874
	.byte	0,16,14,215,1,9,1,17
	.byte	'IfxGtm_Tom_0',0,0,17
	.byte	'IfxGtm_Tom_1',0,1,0,16,15,65,9,1,17
	.byte	'IfxGtm_ToutSel_a',0,0,17
	.byte	'IfxGtm_ToutSel_b',0,1,17
	.byte	'IfxGtm_ToutSel_c',0,2,17
	.byte	'IfxGtm_ToutSel_d',0,3,17
	.byte	'IfxGtm_ToutSel_e',0,4,0,29,4,149,1,9,8,13
	.byte	'port',0
	.word	7805
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	408
	.byte	1,2,35,4,0,16,4,91,9,1,17
	.byte	'IfxPort_OutputIdx_general',0,128,1,17
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,17
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,17
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,17
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,17
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,17
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,17
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,29,15,84,15,20,13
	.byte	'tom',0
	.word	20084
	.byte	1,2,35,0,13
	.byte	'channel',0
	.word	18280
	.byte	1,2,35,1,13
	.byte	'toutSel',0
	.word	20121
	.byte	1,2,35,2,13
	.byte	'toutn',0
	.word	8087
	.byte	4,2,35,4,13
	.byte	'pin',0
	.word	20222
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	20261
	.byte	1,2,35,16,0,22
	.word	20478
	.byte	4
	.word	20575
	.byte	30
	.byte	'IfxGtm_PinMap_setTomTout',0,15,106,17,1,1,1,1,7
	.byte	'config',0,15,106,62
	.word	20580
	.byte	7
	.byte	'outputMode',0,15,106,89
	.word	9763
	.byte	7
	.byte	'padDriver',0,15,106,119
	.word	9832
	.byte	0,16,6,68,9,1,17
	.byte	'IfxStdIf_Timer_CountDir_up',0,0,17
	.byte	'IfxStdIf_Timer_CountDir_upAndDown',0,1,17
	.byte	'IfxStdIf_Timer_CountDir_down',0,2,0,29,16,129,1,9,12,13
	.byte	'period',0
	.word	8087
	.byte	4,2,35,0,13
	.byte	'triggerEnabled',0
	.word	408
	.byte	1,2,35,4,13
	.byte	'clockFreq',0
	.word	7991
	.byte	4,2,35,6,13
	.byte	'countDir',0
	.word	20671
	.byte	1,2,35,10,0,10
	.byte	'_Ifx_GTM_REV_Bits',0,13,151,5,16,4,11
	.byte	'STEP',0,4
	.word	10564
	.byte	8,24,2,35,0,11
	.byte	'NO',0,4
	.word	10564
	.byte	4,20,2,35,0,11
	.byte	'MINOR',0,4
	.word	10564
	.byte	4,16,2,35,0,11
	.byte	'MAJOR',0,4
	.word	10564
	.byte	4,12,2,35,0,11
	.byte	'DEV_CODE0',0,4
	.word	10564
	.byte	4,8,2,35,0,11
	.byte	'DEV_CODE1',0,4
	.word	10564
	.byte	4,4,2,35,0,11
	.byte	'DEV_CODE2',0,4
	.word	10564
	.byte	4,0,2,35,0,0,12,13,148,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20857
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_RST_Bits',0,13,163,5,16,4,11
	.byte	'RST',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	10564
	.byte	31,0,2,35,0,0,12,13,156,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21049
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CTRL_Bits',0,13,236,1,16,4,11
	.byte	'RF_PROT',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'TO_MODE',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'TO_VAL',0,4
	.word	10564
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	10564
	.byte	23,0,2,35,0,0,12,13,156,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21151
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_AEI_ADDR_XPT_Bits',0,13,108,16,4,11
	.byte	'TO_ADDR',0,4
	.word	10564
	.byte	20,12,2,35,0,11
	.byte	'TO_W1R0',0,4
	.word	10564
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	10564
	.byte	11,0,2,35,0,0,12,13,172,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21317
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_IRQ_NOTIFY_Bits',0,13,174,4,16,4,11
	.byte	'AEI_TO_XPT',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'AEI_USP_ADDR',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'AEI_IM_ADDR',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'AEI_USP_BE',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	10564
	.byte	28,0,2,35,0,0,12,13,188,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21451
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_IRQ_EN_Bits',0,13,147,4,16,4,11
	.byte	'AEI_TO_XPT_IRQ_EN',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'AEI_USP_ADDR_IRQ_EN',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'AEI_IM_ADDR_IRQ_EN',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'AEI_USP_BE_IRQ_EN',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	10564
	.byte	28,0,2,35,0,0,12,13,164,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21636
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_IRQ_FORCINT_Bits',0,13,157,4,16,4,11
	.byte	'TRG_AEI_TO_XPT',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'TRG_AEI_USP_ADDR',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'TRG_AEI_IM_ADDR',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'TRG_AEI_USP_BE',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	10564
	.byte	28,0,2,35,0,0,12,13,172,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21845
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_IRQ_MODE_Bits',0,13,167,4,16,4,11
	.byte	'IRQ_MODE',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	30,0,2,35,0,0,12,13,180,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22047
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_EIRQ_EN_Bits',0,13,250,2,16,4,11
	.byte	'AEI_TO_XPT_EIRQ_EN',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'AEI_USP_ADDR_EIRQ_EN',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'AEI_IM_ADDR_EIRQ_EN',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'AEI_USP_BE_EIRQ_EN',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	10564
	.byte	28,0,2,35,0,0,12,13,212,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22159
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_HW_CONF_Bits',0,13,132,3,16,4,11
	.byte	'GRSTEN',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'BRIDGE_MODE_RST',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'AEI_IN',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	10564
	.byte	5,24,2,35,0,11
	.byte	'TOM_OUT_RST',0,4
	.word	10564
	.byte	1,23,2,35,0,11
	.byte	'TOM_TRIG_CHAIN',0,4
	.word	10564
	.byte	3,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	10564
	.byte	4,16,2,35,0,11
	.byte	'IRQ_MODE_LEVEL',0,4
	.word	10564
	.byte	1,15,2,35,0,11
	.byte	'IRQ_MODE_PULSE',0,4
	.word	10564
	.byte	1,14,2,35,0,11
	.byte	'IRQ_MODE_PULSE_NOTIFY',0,4
	.word	10564
	.byte	1,13,2,35,0,11
	.byte	'IRQ_MODE_SINGLE_PULSE',0,4
	.word	10564
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	10564
	.byte	12,0,2,35,0,0,12,13,220,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22373
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_BRIDGE_MODE_Bits',0,13,116,16,4,11
	.byte	'BRG_MODE',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'MSK_WR_RSP',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	6,24,2,35,0,11
	.byte	'MODE_UP_PGR',0,4
	.word	10564
	.byte	1,23,2,35,0,11
	.byte	'BUFF_OVL',0,4
	.word	10564
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'SYNC_INPUT_REG',0,4
	.word	10564
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	10564
	.byte	3,16,2,35,0,11
	.byte	'BRG_RST',0,4
	.word	10564
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	10564
	.byte	7,8,2,35,0,11
	.byte	'BUFF_DPT',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,180,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22740
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_BRIDGE_PTR1_Bits',0,13,132,1,16,4,11
	.byte	'NEW_TRAN_PTR',0,4
	.word	10564
	.byte	5,27,2,35,0,11
	.byte	'FIRST_RSP_PTR',0,4
	.word	10564
	.byte	5,22,2,35,0,11
	.byte	'TRAN_IN_PGR',0,4
	.word	10564
	.byte	5,17,2,35,0,11
	.byte	'ABT_TRAN_PGR',0,4
	.word	10564
	.byte	5,12,2,35,0,11
	.byte	'FBC',0,4
	.word	10564
	.byte	6,6,2,35,0,11
	.byte	'RSP_TRAN_RDY',0,4
	.word	10564
	.byte	6,0,2,35,0,0,12,13,188,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23053
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_BRIDGE_PTR2_Bits',0,13,143,1,16,4,11
	.byte	'TRAN_IN_PGR2',0,4
	.word	10564
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	10564
	.byte	27,0,2,35,0,0,12,13,196,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23261
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_BRIDGE',0,13,191,17,25,12,13
	.byte	'MODE',0
	.word	23013
	.byte	4,2,35,0,13
	.byte	'PTR1',0
	.word	23221
	.byte	4,2,35,4,13
	.byte	'PTR2',0
	.word	23340
	.byte	4,2,35,8,0,3
	.word	23380
	.byte	10
	.byte	'_Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,13,224,5,16,4,11
	.byte	'SRC_CH0',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'SRC_CH1',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'SRC_CH2',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'SRC_CH3',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'SRC_CH4',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'SRC_CH5',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'SRC_CH6',0,4
	.word	10564
	.byte	1,25,2,35,0,11
	.byte	'SRC_CH7',0,4
	.word	10564
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	10564
	.byte	24,0,2,35,0,0,12,13,220,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23450
	.byte	4,2,35,0,0,14,4
	.word	23660
	.byte	15,0,0,14,188,1
	.word	408
	.byte	15,187,1,0,10
	.byte	'_Ifx_GTM_TBU_CHEN_Bits',0,13,215,5,16,4,11
	.byte	'ENDIS_CH0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'ENDIS_CH1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'ENDIS_CH2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	10564
	.byte	26,0,2,35,0,0,12,13,212,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23720
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH0_CTRL_Bits',0,13,177,5,16,4,11
	.byte	'LOW_RES',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'CH_CLK_SRC',0,4
	.word	10564
	.byte	3,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	10564
	.byte	28,0,2,35,0,0,12,13,172,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23875
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH0_BASE_Bits',0,13,170,5,16,4,11
	.byte	'BASE',0,4
	.word	10564
	.byte	27,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	10564
	.byte	5,0,2,35,0,0,12,13,164,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24012
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH1_CTRL_Bits',0,13,192,5,16,4,11
	.byte	'CH_MODE',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'CH_CLK_SRC',0,4
	.word	10564
	.byte	3,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	10564
	.byte	28,0,2,35,0,0,12,13,188,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24125
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH1_BASE_Bits',0,13,185,5,16,4,11
	.byte	'BASE',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,180,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24262
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH2_CTRL_Bits',0,13,207,5,16,4,11
	.byte	'CH_MODE',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'CH_CLK_SRC',0,4
	.word	10564
	.byte	3,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	10564
	.byte	28,0,2,35,0,0,12,13,204,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24375
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH2_BASE_Bits',0,13,200,5,16,4,11
	.byte	'BASE',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,196,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24512
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU',0,13,246,17,25,28,13
	.byte	'CHEN',0
	.word	23835
	.byte	4,2,35,0,13
	.byte	'CH0_CTRL',0
	.word	23972
	.byte	4,2,35,4,13
	.byte	'CH0_BASE',0
	.word	24085
	.byte	4,2,35,8,13
	.byte	'CH1_CTRL',0
	.word	24222
	.byte	4,2,35,12,13
	.byte	'CH1_BASE',0
	.word	24335
	.byte	4,2,35,16,13
	.byte	'CH2_CTRL',0
	.word	24472
	.byte	4,2,35,20,13
	.byte	'CH2_BASE',0
	.word	24585
	.byte	4,2,35,24,0,3
	.word	24625
	.byte	14,228,3
	.word	408
	.byte	15,227,3,0,10
	.byte	'_Ifx_GTM_CMU_CLK_EN_Bits',0,13,183,1,16,4,11
	.byte	'EN_CLK0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'EN_CLK1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'EN_CLK2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'EN_CLK3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'EN_CLK4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'EN_CLK5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'EN_CLK6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'EN_CLK7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'EN_ECLK0',0,4
	.word	10564
	.byte	2,14,2,35,0,11
	.byte	'EN_ECLK1',0,4
	.word	10564
	.byte	2,12,2,35,0,11
	.byte	'EN_ECLK2',0,4
	.word	10564
	.byte	2,10,2,35,0,11
	.byte	'EN_FXCLK',0,4
	.word	10564
	.byte	2,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,236,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24783
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_GCLK_NUM_Bits',0,13,229,1,16,4,11
	.byte	'GCLK_NUM',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,148,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25110
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_GCLK_DEN_Bits',0,13,222,1,16,4,11
	.byte	'GCLK_DEN',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,140,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25227
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,13,160,1,16,4,11
	.byte	'CLK_CNT',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,212,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25344
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_CLK0_5',0,13,220,16,25,4,13
	.byte	'CTRL',0
	.word	25423
	.byte	4,2,35,0,0,14,24
	.word	25463
	.byte	15,5,0,3
	.word	25504
	.byte	10
	.byte	'_Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,13,167,1,16,4,11
	.byte	'CLK_CNT',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'CLK6_SEL',0,4
	.word	10564
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	10564
	.byte	7,0,2,35,0,0,12,13,220,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25518
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_CLK_6',0,13,226,16,25,4,13
	.byte	'CTRL',0
	.word	25616
	.byte	4,2,35,0,0,3
	.word	25656
	.byte	10
	.byte	'_Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,13,175,1,16,4,11
	.byte	'CLK_CNT',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'CLK7_SEL',0,4
	.word	10564
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	10564
	.byte	7,0,2,35,0,0,12,13,228,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25701
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_CLK_7',0,13,232,16,25,4,13
	.byte	'CTRL',0
	.word	25799
	.byte	4,2,35,0,0,3
	.word	25839
	.byte	10
	.byte	'_Ifx_GTM_CMU_ECLK_NUM_Bits',0,13,208,1,16,4,11
	.byte	'ECLK_NUM',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,252,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25884
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_ECLK_DEN_Bits',0,13,201,1,16,4,11
	.byte	'ECLK_DEN',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,244,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26001
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_ECLK',0,13,238,16,25,8,13
	.byte	'NUM',0
	.word	25961
	.byte	4,2,35,0,13
	.byte	'DEN',0
	.word	26078
	.byte	4,2,35,4,0,14,24
	.word	26118
	.byte	15,2,0,3
	.word	26169
	.byte	10
	.byte	'_Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,13,215,1,16,4,11
	.byte	'FXCLK_SEL',0,4
	.word	10564
	.byte	4,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	10564
	.byte	28,0,2,35,0,0,12,13,132,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26183
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_FXCLK',0,13,245,16,25,4,13
	.byte	'CTRL',0
	.word	26262
	.byte	4,2,35,0,0,3
	.word	26302
	.byte	10
	.byte	'_Ifx_GTM_CMU',0,13,199,17,25,72,13
	.byte	'CLK_EN',0
	.word	25070
	.byte	4,2,35,0,13
	.byte	'GCLK_NUM',0
	.word	25187
	.byte	4,2,35,4,13
	.byte	'GCLK_DEN',0
	.word	25304
	.byte	4,2,35,8,13
	.byte	'CLK0_5',0
	.word	25513
	.byte	24,2,35,12,13
	.byte	'CLK_6',0
	.word	25696
	.byte	4,2,35,36,13
	.byte	'CLK_7',0
	.word	25879
	.byte	4,2,35,40,13
	.byte	'ECLK',0
	.word	26178
	.byte	24,2,35,44,13
	.byte	'FXCLK',0
	.word	26342
	.byte	4,2,35,68,0,3
	.word	26347
	.byte	14,184,5
	.word	408
	.byte	15,183,5,0,10
	.byte	'_Ifx_GTM_ICM_IRQG_0_Bits',0,13,149,3,16,4,11
	.byte	'reserved_0',0,4
	.word	10564
	.byte	4,28,2,35,0,11
	.byte	'AEI_IRQ',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	10564
	.byte	27,0,2,35,0,0,12,13,228,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26510
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ICM_IRQG_2_Bits',0,13,157,3,16,4,11
	.byte	'TIM0_CH0_IRQ',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'TIM0_CH1_IRQ',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'TIM0_CH2_IRQ',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'TIM0_CH3_IRQ',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'TIM0_CH4_IRQ',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'TIM0_CH5_IRQ',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'TIM0_CH6_IRQ',0,4
	.word	10564
	.byte	1,25,2,35,0,11
	.byte	'TIM0_CH7_IRQ',0,4
	.word	10564
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	10564
	.byte	24,0,2,35,0,0,12,13,236,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26645
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ICM_IRQG_6_Bits',0,13,171,3,16,4,11
	.byte	'TOM0_CH0_IRQ',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'TOM0_CH1_IRQ',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'TOM0_CH2_IRQ',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'TOM0_CH3_IRQ',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'TOM0_CH4_IRQ',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'TOM0_CH5_IRQ',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'TOM0_CH6_IRQ',0,4
	.word	10564
	.byte	1,25,2,35,0,11
	.byte	'TOM0_CH7_IRQ',0,4
	.word	10564
	.byte	1,24,2,35,0,11
	.byte	'TOM0_CH8_IRQ',0,4
	.word	10564
	.byte	1,23,2,35,0,11
	.byte	'TOM0_CH9_IRQ',0,4
	.word	10564
	.byte	1,22,2,35,0,11
	.byte	'TOM0_CH10_IRQ',0,4
	.word	10564
	.byte	1,21,2,35,0,11
	.byte	'TOM0_CH11_IRQ',0,4
	.word	10564
	.byte	1,20,2,35,0,11
	.byte	'TOM0_CH12_IRQ',0,4
	.word	10564
	.byte	1,19,2,35,0,11
	.byte	'TOM0_CH13_IRQ',0,4
	.word	10564
	.byte	1,18,2,35,0,11
	.byte	'TOM0_CH14_IRQ',0,4
	.word	10564
	.byte	1,17,2,35,0,11
	.byte	'TOM0_CH15_IRQ',0,4
	.word	10564
	.byte	1,16,2,35,0,11
	.byte	'TOM1_CH0_IRQ',0,4
	.word	10564
	.byte	1,15,2,35,0,11
	.byte	'TOM1_CH1_IRQ',0,4
	.word	10564
	.byte	1,14,2,35,0,11
	.byte	'TOM1_CH2_IRQ',0,4
	.word	10564
	.byte	1,13,2,35,0,11
	.byte	'TOM1_CH3_IRQ',0,4
	.word	10564
	.byte	1,12,2,35,0,11
	.byte	'TOM1_CH4_IRQ',0,4
	.word	10564
	.byte	1,11,2,35,0,11
	.byte	'TOM1_CH5_IRQ',0,4
	.word	10564
	.byte	1,10,2,35,0,11
	.byte	'TOM1_CH6_IRQ',0,4
	.word	10564
	.byte	1,9,2,35,0,11
	.byte	'TOM1_CH7_IRQ',0,4
	.word	10564
	.byte	1,8,2,35,0,11
	.byte	'TOM1_CH8_IRQ',0,4
	.word	10564
	.byte	1,7,2,35,0,11
	.byte	'TOM1_CH9_IRQ',0,4
	.word	10564
	.byte	1,6,2,35,0,11
	.byte	'TOM1_CH10_IRQ',0,4
	.word	10564
	.byte	1,5,2,35,0,11
	.byte	'TOM1_CH11_IRQ',0,4
	.word	10564
	.byte	1,4,2,35,0,11
	.byte	'TOM1_CH12_IRQ',0,4
	.word	10564
	.byte	1,3,2,35,0,11
	.byte	'TOM1_CH13_IRQ',0,4
	.word	10564
	.byte	1,2,2,35,0,11
	.byte	'TOM1_CH14_IRQ',0,4
	.word	10564
	.byte	1,1,2,35,0,11
	.byte	'TOM1_CH15_IRQ',0,4
	.word	10564
	.byte	1,0,2,35,0,0,12,13,244,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26931
	.byte	4,2,35,0,0,14,20
	.word	408
	.byte	15,19,0,10
	.byte	'_Ifx_GTM_ICM_IRQG_MEI_Bits',0,13,222,3,16,4,11
	.byte	'GTM_EIRQ',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	10564
	.byte	3,28,2,35,0,11
	.byte	'TIM0_EIRQ',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	10564
	.byte	27,0,2,35,0,0,12,13,132,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27792
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ICM_IRQG_CEI1_Bits',0,13,208,3,16,4,11
	.byte	'TIM0_CH0_EIRQ',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'TIM0_CH1_EIRQ',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'TIM0_CH2_EIRQ',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'TIM0_CH3_EIRQ',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'TIM0_CH4_EIRQ',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'TIM0_CH5_EIRQ',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'TIM0_CH6_EIRQ',0,4
	.word	10564
	.byte	1,25,2,35,0,11
	.byte	'TIM0_CH7_EIRQ',0,4
	.word	10564
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	10564
	.byte	24,0,2,35,0,0,12,13,252,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27951
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ICM',0,13,223,17,25,60,13
	.byte	'IRQG_0',0
	.word	26605
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	1835
	.byte	4,2,35,4,13
	.byte	'IRQG_2',0
	.word	26891
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3994
	.byte	12,2,35,12,13
	.byte	'IRQG_6',0
	.word	27743
	.byte	4,2,35,24,13
	.byte	'reserved_1C',0
	.word	27783
	.byte	20,2,35,28,13
	.byte	'IRQG_MEI',0
	.word	27911
	.byte	4,2,35,48,13
	.byte	'reserved_34',0
	.word	1835
	.byte	4,2,35,52,13
	.byte	'IRQG_CEI1',0
	.word	28208
	.byte	4,2,35,56,0,3
	.word	28248
	.byte	14,196,19
	.word	408
	.byte	15,195,19,0,10
	.byte	'_Ifx_GTM_TIM_CH_GPR0_Bits',0,13,193,6,16,4,11
	.byte	'GPR0',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'ECNT',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,164,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28451
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_GPR1_Bits',0,13,200,6,16,4,11
	.byte	'GPR1',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'ECNT',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,172,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28556
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_CNT_Bits',0,13,238,5,16,4,11
	.byte	'CNT',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,228,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28661
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_ECNT_Bits',0,13,153,6,16,4,11
	.byte	'ECNT',0,4
	.word	10564
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,252,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28771
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_CNTS_Bits',0,13,245,5,16,4,11
	.byte	'CNTS',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'ECNT',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,236,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28883
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_TDUC_Bits',0,13,250,6,16,4,11
	.byte	'TO_CNT',0,4
	.word	10564
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	10564
	.byte	24,0,2,35,0,0,12,13,212,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28988
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_TDUV_Bits',0,13,129,7,16,4,11
	.byte	'TOV',0,4
	.word	10564
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	10564
	.byte	20,4,2,35,0,11
	.byte	'TCS',0,4
	.word	10564
	.byte	3,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	10564
	.byte	1,0,2,35,0,0,12,13,220,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29101
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_FLT_RE_Bits',0,13,186,6,16,4,11
	.byte	'FLT_RE',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,156,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29249
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_FLT_FE_Bits',0,13,179,6,16,4,11
	.byte	'FLT_FE',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,148,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29365
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_CTRL_Bits',0,13,252,5,16,4,11
	.byte	'TIM_EN',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'TIM_MODE',0,4
	.word	10564
	.byte	3,28,2,35,0,11
	.byte	'OSM',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'CICTRL',0,4
	.word	10564
	.byte	1,25,2,35,0,11
	.byte	'TBU0x_SEL',0,4
	.word	10564
	.byte	1,24,2,35,0,11
	.byte	'GPR0_SEL',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'GPR1_SEL',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'CNTS_SEL',0,4
	.word	10564
	.byte	1,19,2,35,0,11
	.byte	'DSL',0,4
	.word	10564
	.byte	1,18,2,35,0,11
	.byte	'ISL',0,4
	.word	10564
	.byte	1,17,2,35,0,11
	.byte	'ECNT_RESET',0,4
	.word	10564
	.byte	1,16,2,35,0,11
	.byte	'FLT_EN',0,4
	.word	10564
	.byte	1,15,2,35,0,11
	.byte	'FLT_CNT_FRQ',0,4
	.word	10564
	.byte	2,13,2,35,0,11
	.byte	'EXT_CAP_EN',0,4
	.word	10564
	.byte	1,12,2,35,0,11
	.byte	'FLT_MODE_RE',0,4
	.word	10564
	.byte	1,11,2,35,0,11
	.byte	'FLT_CTR_RE',0,4
	.word	10564
	.byte	1,10,2,35,0,11
	.byte	'FLT_MODE_FE',0,4
	.word	10564
	.byte	1,9,2,35,0,11
	.byte	'FLT_CTR_FE',0,4
	.word	10564
	.byte	1,8,2,35,0,11
	.byte	'CLK_SEL',0,4
	.word	10564
	.byte	3,5,2,35,0,11
	.byte	'FR_ECNT_OFL',0,4
	.word	10564
	.byte	1,4,2,35,0,11
	.byte	'EGPR0_SEL',0,4
	.word	10564
	.byte	1,3,2,35,0,11
	.byte	'EGPR1_SEL',0,4
	.word	10564
	.byte	1,2,2,35,0,11
	.byte	'TOCTRL',0,4
	.word	10564
	.byte	2,0,2,35,0,0,12,13,244,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29481
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_ECTRL_Bits',0,13,160,6,16,4,11
	.byte	'EXT_CAP_SRC',0,4
	.word	10564
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	10564
	.byte	29,0,2,35,0,0,12,13,132,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30035
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,13,238,6,16,4,11
	.byte	'NEWVAL',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'ECNTOFL',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'CNTOFL',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'GPRzOFL',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'TODET',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'GLITCHDET',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	10564
	.byte	26,0,2,35,0,0,12,13,204,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30154
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,13,207,6,16,4,11
	.byte	'NEWVAL_IRQ_EN',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'ECNTOFL_IRQ_EN',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'CNTOFL_IRQ_EN',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'GPRzOFL_IRQ_EN',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'TODET_IRQ_EN',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'GLITCHDET_IRQ_EN',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	10564
	.byte	26,0,2,35,0,0,12,13,180,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30367
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,13,219,6,16,4,11
	.byte	'TRG_NEWVAL',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'TRG_ECNTOFL',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'TRG_CNTOFL',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'TRG_GPRzOFL',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'TRG_TODET',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'TRG_GLITCHDET',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	10564
	.byte	26,0,2,35,0,0,12,13,188,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30618
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,13,231,6,16,4,11
	.byte	'IRQ_MODE',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	30,0,2,35,0,0,12,13,196,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30856
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,13,167,6,16,4,11
	.byte	'NEWVAL_EIRQ_EN',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'ECNTOFL_EIRQ_EN',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'CNTOFL_EIRQ_EN',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'GPRzOFL_EIRQ_EN',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'TODET_EIRQ_EN',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'GLITCHDET_EIRQ_EN',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	10564
	.byte	26,0,2,35,0,0,12,13,140,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30975
	.byte	4,2,35,0,0,14,52
	.word	408
	.byte	15,51,0,10
	.byte	'_Ifx_GTM_TIM_CH',0,13,142,17,25,116,13
	.byte	'GPR0',0
	.word	28516
	.byte	4,2,35,0,13
	.byte	'GPR1',0
	.word	28621
	.byte	4,2,35,4,13
	.byte	'CNT',0
	.word	28731
	.byte	4,2,35,8,13
	.byte	'ECNT',0
	.word	28843
	.byte	4,2,35,12,13
	.byte	'CNTS',0
	.word	28948
	.byte	4,2,35,16,13
	.byte	'TDUC',0
	.word	29061
	.byte	4,2,35,20,13
	.byte	'TDUV',0
	.word	29209
	.byte	4,2,35,24,13
	.byte	'FLT_RE',0
	.word	29325
	.byte	4,2,35,28,13
	.byte	'FLT_FE',0
	.word	29441
	.byte	4,2,35,32,13
	.byte	'CTRL',0
	.word	29995
	.byte	4,2,35,36,13
	.byte	'ECTRL',0
	.word	30114
	.byte	4,2,35,40,13
	.byte	'IRQ_NOTIFY',0
	.word	30327
	.byte	4,2,35,44,13
	.byte	'IRQ_EN',0
	.word	30578
	.byte	4,2,35,48,13
	.byte	'IRQ_FORCINT',0
	.word	30816
	.byte	4,2,35,52,13
	.byte	'IRQ_MODE',0
	.word	30935
	.byte	4,2,35,56,13
	.byte	'EIRQ_EN',0
	.word	31193
	.byte	4,2,35,60,13
	.byte	'reserved_40',0
	.word	31233
	.byte	52,2,35,64,0,3
	.word	31242
	.byte	10
	.byte	'_Ifx_GTM_TIM_INP_VAL_Bits',0,13,159,7,16,4,11
	.byte	'F_OUT',0,4
	.word	10564
	.byte	8,24,2,35,0,11
	.byte	'F_IN',0,4
	.word	10564
	.byte	8,16,2,35,0,11
	.byte	'TIM_IN',0,4
	.word	10564
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	8,0,2,35,0,0,12,13,236,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31541
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_IN_SRC_Bits',0,13,138,7,16,4,11
	.byte	'VAL_0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'MODE_0',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'VAL_1',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'MODE_1',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'VAL_2',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'MODE_2',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'VAL_3',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'MODE_3',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'VAL_4',0,4
	.word	10564
	.byte	2,14,2,35,0,11
	.byte	'MODE_4',0,4
	.word	10564
	.byte	2,12,2,35,0,11
	.byte	'VAL_5',0,4
	.word	10564
	.byte	2,10,2,35,0,11
	.byte	'MODE_5',0,4
	.word	10564
	.byte	2,8,2,35,0,11
	.byte	'VAL_6',0,4
	.word	10564
	.byte	2,6,2,35,0,11
	.byte	'MODE_6',0,4
	.word	10564
	.byte	2,4,2,35,0,11
	.byte	'VAL_7',0,4
	.word	10564
	.byte	2,2,2,35,0,11
	.byte	'MODE_7',0,4
	.word	10564
	.byte	2,0,2,35,0,0,12,13,228,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31688
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_RST_Bits',0,13,168,7,16,4,11
	.byte	'RST_CH0',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'RST_CH1',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'RST_CH2',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'RST_CH3',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'RST_CH4',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'RST_CH5',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'RST_CH6',0,4
	.word	10564
	.byte	1,25,2,35,0,11
	.byte	'RST_CH7',0,4
	.word	10564
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	10564
	.byte	24,0,2,35,0,0,12,13,244,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32040
	.byte	4,2,35,0,0,3
	.word	31242
	.byte	3
	.word	31242
	.byte	3
	.word	31242
	.byte	3
	.word	31242
	.byte	3
	.word	31242
	.byte	3
	.word	31242
	.byte	3
	.word	31242
	.byte	10
	.byte	'_Ifx_GTM_TIM',0,13,130,18,25,128,8,13
	.byte	'CH0',0
	.word	31536
	.byte	116,2,35,0,13
	.byte	'INP_VAL',0
	.word	31648
	.byte	4,2,35,116,13
	.byte	'IN_SRC',0
	.word	32000
	.byte	4,2,35,120,13
	.byte	'RST',0
	.word	32243
	.byte	4,2,35,124,13
	.byte	'CH1',0
	.word	32283
	.byte	116,3,35,128,1,13
	.byte	'reserved_F4',0
	.word	3994
	.byte	12,3,35,244,1,13
	.byte	'CH2',0
	.word	32288
	.byte	116,3,35,128,2,13
	.byte	'reserved_174',0
	.word	3994
	.byte	12,3,35,244,2,13
	.byte	'CH3',0
	.word	32293
	.byte	116,3,35,128,3,13
	.byte	'reserved_1F4',0
	.word	3994
	.byte	12,3,35,244,3,13
	.byte	'CH4',0
	.word	32298
	.byte	116,3,35,128,4,13
	.byte	'reserved_274',0
	.word	3994
	.byte	12,3,35,244,4,13
	.byte	'CH5',0
	.word	32303
	.byte	116,3,35,128,5,13
	.byte	'reserved_2F4',0
	.word	3994
	.byte	12,3,35,244,5,13
	.byte	'CH6',0
	.word	32308
	.byte	116,3,35,128,6,13
	.byte	'reserved_374',0
	.word	3994
	.byte	12,3,35,244,6,13
	.byte	'CH7',0
	.word	32313
	.byte	116,3,35,128,7,13
	.byte	'reserved_3F4',0
	.word	3994
	.byte	12,3,35,244,7,0,14,128,8
	.word	32318
	.byte	15,0,0,3
	.word	32656
	.byte	14,128,216,1
	.word	408
	.byte	15,255,215,1,0,14,128,32
	.word	17356
	.byte	15,1,0,3
	.word	32684
	.byte	14,192,192,2
	.word	408
	.byte	15,191,192,2,0,10
	.byte	'_Ifx_GTM_DTM_CTRL_Bits',0,13,220,2,16,4,11
	.byte	'CLK_SEL',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'UPD_MODE',0,4
	.word	10564
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	10564
	.byte	25,0,2,35,0,0,12,13,188,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32712
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_DTM_CH_CTRL1_Bits',0,13,246,1,16,4,11
	.byte	'O1SEL_0',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	10564
	.byte	2,29,2,35,0,11
	.byte	'SWAP_0',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'O1F_0',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'O1SEL_1',0,4
	.word	10564
	.byte	1,23,2,35,0,11
	.byte	'I1SEL_1',0,4
	.word	10564
	.byte	1,22,2,35,0,11
	.byte	'SH_EN_1',0,4
	.word	10564
	.byte	1,21,2,35,0,11
	.byte	'SWAP_1',0,4
	.word	10564
	.byte	1,20,2,35,0,11
	.byte	'O1F_1',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'O1SEL_2',0,4
	.word	10564
	.byte	1,15,2,35,0,11
	.byte	'I1SEL_2',0,4
	.word	10564
	.byte	1,14,2,35,0,11
	.byte	'SH_EN_2',0,4
	.word	10564
	.byte	1,13,2,35,0,11
	.byte	'SWAP_2',0,4
	.word	10564
	.byte	1,12,2,35,0,11
	.byte	'O1F_2',0,4
	.word	10564
	.byte	2,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	10564
	.byte	2,8,2,35,0,11
	.byte	'O1SEL_3',0,4
	.word	10564
	.byte	1,7,2,35,0,11
	.byte	'I1SEL_3',0,4
	.word	10564
	.byte	1,6,2,35,0,11
	.byte	'SH_EN_3',0,4
	.word	10564
	.byte	1,5,2,35,0,11
	.byte	'SWAP_3',0,4
	.word	10564
	.byte	1,4,2,35,0,11
	.byte	'O1F_3',0,4
	.word	10564
	.byte	2,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	10564
	.byte	2,0,2,35,0,0,12,13,164,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32865
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_DTM_CH_CTRL2_Bits',0,13,146,2,16,4,11
	.byte	'POL0_0',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'OC0_0',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'SL0_0',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'DT0_0',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'POL1_0',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'OC1_0',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'SL1_0',0,4
	.word	10564
	.byte	1,25,2,35,0,11
	.byte	'DT1_0',0,4
	.word	10564
	.byte	1,24,2,35,0,11
	.byte	'POL0_1',0,4
	.word	10564
	.byte	1,23,2,35,0,11
	.byte	'OC0_1',0,4
	.word	10564
	.byte	1,22,2,35,0,11
	.byte	'SL0_1',0,4
	.word	10564
	.byte	1,21,2,35,0,11
	.byte	'DT0_1',0,4
	.word	10564
	.byte	1,20,2,35,0,11
	.byte	'POL1_1',0,4
	.word	10564
	.byte	1,19,2,35,0,11
	.byte	'OC1_1',0,4
	.word	10564
	.byte	1,18,2,35,0,11
	.byte	'SL1_1',0,4
	.word	10564
	.byte	1,17,2,35,0,11
	.byte	'DT1_1',0,4
	.word	10564
	.byte	1,16,2,35,0,11
	.byte	'POL0_2',0,4
	.word	10564
	.byte	1,15,2,35,0,11
	.byte	'OC0_2',0,4
	.word	10564
	.byte	1,14,2,35,0,11
	.byte	'SL0_2',0,4
	.word	10564
	.byte	1,13,2,35,0,11
	.byte	'DT0_2',0,4
	.word	10564
	.byte	1,12,2,35,0,11
	.byte	'POL1_2',0,4
	.word	10564
	.byte	1,11,2,35,0,11
	.byte	'OC1_2',0,4
	.word	10564
	.byte	1,10,2,35,0,11
	.byte	'SL1_2',0,4
	.word	10564
	.byte	1,9,2,35,0,11
	.byte	'DT1_2',0,4
	.word	10564
	.byte	1,8,2,35,0,11
	.byte	'POL0_3',0,4
	.word	10564
	.byte	1,7,2,35,0,11
	.byte	'OC0_3',0,4
	.word	10564
	.byte	1,6,2,35,0,11
	.byte	'SL0_3',0,4
	.word	10564
	.byte	1,5,2,35,0,11
	.byte	'DT0_3',0,4
	.word	10564
	.byte	1,4,2,35,0,11
	.byte	'POL1_3',0,4
	.word	10564
	.byte	1,3,2,35,0,11
	.byte	'OC1_3',0,4
	.word	10564
	.byte	1,2,2,35,0,11
	.byte	'SL1_3',0,4
	.word	10564
	.byte	1,1,2,35,0,11
	.byte	'DT1_3',0,4
	.word	10564
	.byte	1,0,2,35,0,0,12,13,172,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33382
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_DTM_CH_CTRL2_SR_Bits',0,13,183,2,16,4,11
	.byte	'POL0_0_SR',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'OC0_0_SR',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'SL0_0_SR',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'DT0_0_SR',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'POL1_0_SR',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'OC1_0_SR',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'SL1_0_SR',0,4
	.word	10564
	.byte	1,25,2,35,0,11
	.byte	'DT1_0_SR',0,4
	.word	10564
	.byte	1,24,2,35,0,11
	.byte	'POL0_1_SR',0,4
	.word	10564
	.byte	1,23,2,35,0,11
	.byte	'OC0_1_SR',0,4
	.word	10564
	.byte	1,22,2,35,0,11
	.byte	'SL0_1_SR',0,4
	.word	10564
	.byte	1,21,2,35,0,11
	.byte	'DT0_1_SR',0,4
	.word	10564
	.byte	1,20,2,35,0,11
	.byte	'POL1_1_SR',0,4
	.word	10564
	.byte	1,19,2,35,0,11
	.byte	'OC1_1_SR',0,4
	.word	10564
	.byte	1,18,2,35,0,11
	.byte	'SL1_1_SR',0,4
	.word	10564
	.byte	1,17,2,35,0,11
	.byte	'DT1_1_SR',0,4
	.word	10564
	.byte	1,16,2,35,0,11
	.byte	'POL0_2_SR',0,4
	.word	10564
	.byte	1,15,2,35,0,11
	.byte	'OC0_2_SR',0,4
	.word	10564
	.byte	1,14,2,35,0,11
	.byte	'SL0_2_SR',0,4
	.word	10564
	.byte	1,13,2,35,0,11
	.byte	'DT0_2_SR',0,4
	.word	10564
	.byte	1,12,2,35,0,11
	.byte	'POL1_2_SR',0,4
	.word	10564
	.byte	1,11,2,35,0,11
	.byte	'OC1_2_SR',0,4
	.word	10564
	.byte	1,10,2,35,0,11
	.byte	'SL1_2_SR',0,4
	.word	10564
	.byte	1,9,2,35,0,11
	.byte	'DT1_2_SR',0,4
	.word	10564
	.byte	1,8,2,35,0,11
	.byte	'POL0_3_SR',0,4
	.word	10564
	.byte	1,7,2,35,0,11
	.byte	'OC0_3_SR',0,4
	.word	10564
	.byte	1,6,2,35,0,11
	.byte	'SL0_3_SR',0,4
	.word	10564
	.byte	1,5,2,35,0,11
	.byte	'DT0_3_SR',0,4
	.word	10564
	.byte	1,4,2,35,0,11
	.byte	'POL1_3_SR',0,4
	.word	10564
	.byte	1,3,2,35,0,11
	.byte	'OC1_3_SR',0,4
	.word	10564
	.byte	1,2,2,35,0,11
	.byte	'SL1_3_SR',0,4
	.word	10564
	.byte	1,1,2,35,0,11
	.byte	'DT1_3_SR',0,4
	.word	10564
	.byte	1,0,2,35,0,0,12,13,180,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34008
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_DTM_PS_CTRL_Bits',0,13,238,2,16,4,11
	.byte	'RELBLK',0,4
	.word	10564
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	10564
	.byte	6,16,2,35,0,11
	.byte	'PSU_IN_SEL',0,4
	.word	10564
	.byte	1,15,2,35,0,11
	.byte	'IN_POL',0,4
	.word	10564
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	10564
	.byte	2,12,2,35,0,11
	.byte	'SHIFT_SEL',0,4
	.word	10564
	.byte	2,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	10564
	.byte	10,0,2,35,0,0,12,13,204,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34733
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_DTM_DTV_CH_Bits',0,13,229,2,16,4,11
	.byte	'RELRISE',0,4
	.word	10564
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	10564
	.byte	6,16,2,35,0,11
	.byte	'RELFALL',0,4
	.word	10564
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	10564
	.byte	6,0,2,35,0,0,12,13,196,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34954
	.byte	4,2,35,0,0,14,16
	.word	35070
	.byte	15,3,0,10
	.byte	'_Ifx_GTM_DTM',0,13,212,17,25,36,13
	.byte	'CTRL',0
	.word	32825
	.byte	4,2,35,0,13
	.byte	'CH_CTRL1',0
	.word	33342
	.byte	4,2,35,4,13
	.byte	'CH_CTRL2',0
	.word	33968
	.byte	4,2,35,8,13
	.byte	'CH_CTRL2_SR',0
	.word	34693
	.byte	4,2,35,12,13
	.byte	'PS_CTRL',0
	.word	34914
	.byte	4,2,35,16,13
	.byte	'DTV_CH',0
	.word	35110
	.byte	16,2,35,20,0,3
	.word	35119
	.byte	14,220,1
	.word	408
	.byte	15,219,1,0,3
	.word	35119
	.byte	14,156,151,35
	.word	408
	.byte	15,155,151,35,0,10
	.byte	'_Ifx_GTM_CLC_Bits',0,13,150,1,16,4,11
	.byte	'DISR',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'DISS',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'EDIS',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	10564
	.byte	28,0,2,35,0,0,12,13,204,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35277
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,13,134,4,16,4,11
	.byte	'CH0SEL',0,4
	.word	10564
	.byte	4,28,2,35,0,11
	.byte	'CH1SEL',0,4
	.word	10564
	.byte	4,24,2,35,0,11
	.byte	'CH2SEL',0,4
	.word	10564
	.byte	4,20,2,35,0,11
	.byte	'CH3SEL',0,4
	.word	10564
	.byte	4,16,2,35,0,11
	.byte	'CH4SEL',0,4
	.word	10564
	.byte	4,12,2,35,0,11
	.byte	'CH5SEL',0,4
	.word	10564
	.byte	4,8,2,35,0,11
	.byte	'CH6SEL',0,4
	.word	10564
	.byte	4,4,2,35,0,11
	.byte	'CH7SEL',0,4
	.word	10564
	.byte	4,0,2,35,0,0,12,13,156,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35434
	.byte	4,2,35,0,0,14,28
	.word	408
	.byte	15,27,0,10
	.byte	'_Ifx_GTM_INOUTSEL_TIM',0,13,135,17,25,32,13
	.byte	'INSEL',0
	.word	35618
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	35658
	.byte	28,2,35,4,0,14,32
	.word	35667
	.byte	15,0,0,3
	.word	35731
	.byte	10
	.byte	'_Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,13,241,3,16,4,11
	.byte	'SEL0',0,4
	.word	10564
	.byte	2,30,2,35,0,11
	.byte	'SEL1',0,4
	.word	10564
	.byte	2,28,2,35,0,11
	.byte	'SEL2',0,4
	.word	10564
	.byte	2,26,2,35,0,11
	.byte	'SEL3',0,4
	.word	10564
	.byte	2,24,2,35,0,11
	.byte	'SEL4',0,4
	.word	10564
	.byte	2,22,2,35,0,11
	.byte	'SEL5',0,4
	.word	10564
	.byte	2,20,2,35,0,11
	.byte	'SEL6',0,4
	.word	10564
	.byte	2,18,2,35,0,11
	.byte	'SEL7',0,4
	.word	10564
	.byte	2,16,2,35,0,11
	.byte	'SEL8',0,4
	.word	10564
	.byte	2,14,2,35,0,11
	.byte	'SEL9',0,4
	.word	10564
	.byte	2,12,2,35,0,11
	.byte	'SEL10',0,4
	.word	10564
	.byte	2,10,2,35,0,11
	.byte	'SEL11',0,4
	.word	10564
	.byte	2,8,2,35,0,11
	.byte	'SEL12',0,4
	.word	10564
	.byte	2,6,2,35,0,11
	.byte	'SEL13',0,4
	.word	10564
	.byte	2,4,2,35,0,11
	.byte	'SEL14',0,4
	.word	10564
	.byte	2,2,2,35,0,11
	.byte	'SEL15',0,4
	.word	10564
	.byte	2,0,2,35,0,0,12,13,148,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35745
	.byte	4,2,35,0,0,14,32
	.word	36046
	.byte	15,7,0,10
	.byte	'_Ifx_GTM_INOUTSEL_T',0,13,129,17,25,32,13
	.byte	'OUTSEL',0
	.word	36086
	.byte	32,2,35,0,0,3
	.word	36095
	.byte	14,80
	.word	408
	.byte	15,79,0,10
	.byte	'_Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,13,231,3,16,4,11
	.byte	'SEL0',0,4
	.word	10564
	.byte	4,28,2,35,0,11
	.byte	'SEL1',0,4
	.word	10564
	.byte	4,24,2,35,0,11
	.byte	'SEL2',0,4
	.word	10564
	.byte	4,20,2,35,0,11
	.byte	'SEL3',0,4
	.word	10564
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,140,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36152
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_INOUTSEL_CAN',0,13,251,16,25,4,13
	.byte	'OUTSEL',0
	.word	36280
	.byte	4,2,35,0,0,3
	.word	36320
	.byte	10
	.byte	'_Ifx_GTM_INOUTSEL',0,13,237,17,25,148,1,13
	.byte	'TIM',0
	.word	35740
	.byte	32,2,35,0,13
	.byte	'T',0
	.word	36138
	.byte	32,2,35,32,13
	.byte	'reserved_40',0
	.word	36143
	.byte	80,2,35,64,13
	.byte	'CAN',0
	.word	36365
	.byte	4,3,35,144,1,0,3
	.word	36370
	.byte	10
	.byte	'_Ifx_GTM_ADCTRIG0OUT0_Bits',0,13,88,16,4,11
	.byte	'SEL0',0,4
	.word	10564
	.byte	4,28,2,35,0,11
	.byte	'SEL1',0,4
	.word	10564
	.byte	4,24,2,35,0,11
	.byte	'SEL2',0,4
	.word	10564
	.byte	4,20,2,35,0,11
	.byte	'SEL3',0,4
	.word	10564
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,156,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36460
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ADCTRIG1OUT0_Bits',0,13,98,16,4,11
	.byte	'SEL0',0,4
	.word	10564
	.byte	4,28,2,35,0,11
	.byte	'SEL1',0,4
	.word	10564
	.byte	4,24,2,35,0,11
	.byte	'SEL2',0,4
	.word	10564
	.byte	4,20,2,35,0,11
	.byte	'SEL3',0,4
	.word	10564
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	10564
	.byte	16,0,2,35,0,0,12,13,164,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36620
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OTBU0T_Bits',0,13,224,4,16,4,11
	.byte	'CV',0,4
	.word	10564
	.byte	27,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	10564
	.byte	1,4,2,35,0,11
	.byte	'CM',0,4
	.word	10564
	.byte	2,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	10564
	.byte	2,0,2,35,0,0,12,13,236,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36780
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OTBU1T_Bits',0,13,233,4,16,4,11
	.byte	'CV',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	4,4,2,35,0,11
	.byte	'EN',0,4
	.word	10564
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	10564
	.byte	3,0,2,35,0,0,12,13,244,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36922
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OTBU2T_Bits',0,13,242,4,16,4,11
	.byte	'CV',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	10564
	.byte	4,4,2,35,0,11
	.byte	'EN',0,4
	.word	10564
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	10564
	.byte	3,0,2,35,0,0,12,13,252,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37064
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OTSS_Bits',0,13,140,5,16,4,11
	.byte	'OTGB0',0,4
	.word	10564
	.byte	4,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	10564
	.byte	4,24,2,35,0,11
	.byte	'OTGB1',0,4
	.word	10564
	.byte	4,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	10564
	.byte	4,16,2,35,0,11
	.byte	'OTGB2',0,4
	.word	10564
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	10564
	.byte	12,0,2,35,0,0,12,13,140,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37206
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OTSC0_Bits',0,13,251,4,16,4,11
	.byte	'B0LMT',0,4
	.word	10564
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'B0LMI',0,4
	.word	10564
	.byte	4,24,2,35,0,11
	.byte	'B0HMT',0,4
	.word	10564
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	10564
	.byte	1,20,2,35,0,11
	.byte	'B0HMI',0,4
	.word	10564
	.byte	4,16,2,35,0,11
	.byte	'B1LMT',0,4
	.word	10564
	.byte	3,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	10564
	.byte	1,12,2,35,0,11
	.byte	'B1LMI',0,4
	.word	10564
	.byte	4,8,2,35,0,11
	.byte	'B1HMT',0,4
	.word	10564
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	10564
	.byte	1,4,2,35,0,11
	.byte	'B1HMI',0,4
	.word	10564
	.byte	4,0,2,35,0,0,12,13,132,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37391
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ODA_Bits',0,13,216,4,16,4,11
	.byte	'DDREN',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'DREN',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	30,0,2,35,0,0,12,13,228,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37685
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OCS_Bits',0,13,206,4,16,4,11
	.byte	'reserved_0',0,4
	.word	10564
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,4
	.word	10564
	.byte	4,4,2,35,0,11
	.byte	'SUS_P',0,4
	.word	10564
	.byte	1,3,2,35,0,11
	.byte	'SUSSTA',0,4
	.word	10564
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	10564
	.byte	2,0,2,35,0,0,12,13,220,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37805
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_KRSTCLR_Bits',0,13,199,4,16,4,11
	.byte	'CLR',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	10564
	.byte	31,0,2,35,0,0,12,13,212,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37965
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_KRST1_Bits',0,13,192,4,16,4,11
	.byte	'RST',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	10564
	.byte	31,0,2,35,0,0,12,13,204,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38071
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_KRST0_Bits',0,13,184,4,16,4,11
	.byte	'RST',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	10564
	.byte	30,0,2,35,0,0,12,13,196,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38175
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ACCEN1_Bits',0,13,82,16,4,11
	.byte	'reserved_0',0,4
	.word	10564
	.byte	32,0,2,35,0,0,12,13,148,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38298
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ACCEN0_Bits',0,13,45,16,4,11
	.byte	'EN0',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	10564
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	10564
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	10564
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	10564
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	10564
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	10564
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	10564
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	10564
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	10564
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	10564
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	10564
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	10564
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	10564
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	10564
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	10564
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	10564
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	10564
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	10564
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	10564
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	10564
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	10564
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	10564
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	10564
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	10564
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	10564
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	10564
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	10564
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	10564
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	10564
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	10564
	.byte	1,0,2,35,0,0,12,13,140,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38387
	.byte	4,2,35,0,0,14,128,4
	.word	408
	.byte	15,255,3,0,10
	.byte	'_Ifx_GTM',0,13,212,18,25,128,128,40,13
	.byte	'REV',0
	.word	21009
	.byte	4,2,35,0,13
	.byte	'RST',0
	.word	21111
	.byte	4,2,35,4,13
	.byte	'CTRL',0
	.word	21277
	.byte	4,2,35,8,13
	.byte	'AEI_ADDR_XPT',0
	.word	21411
	.byte	4,2,35,12,13
	.byte	'IRQ_NOTIFY',0
	.word	21596
	.byte	4,2,35,16,13
	.byte	'IRQ_EN',0
	.word	21805
	.byte	4,2,35,20,13
	.byte	'IRQ_FORCINT',0
	.word	22007
	.byte	4,2,35,24,13
	.byte	'IRQ_MODE',0
	.word	22119
	.byte	4,2,35,28,13
	.byte	'EIRQ_EN',0
	.word	22333
	.byte	4,2,35,32,13
	.byte	'HW_CONF',0
	.word	22700
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3654
	.byte	8,2,35,40,13
	.byte	'BRIDGE',0
	.word	23445
	.byte	12,2,35,48,13
	.byte	'reserved_3C',0
	.word	1835
	.byte	4,2,35,60,13
	.byte	'TIM_AUX_IN_SRC',0
	.word	23700
	.byte	4,2,35,64,13
	.byte	'reserved_44',0
	.word	23709
	.byte	188,1,2,35,68,13
	.byte	'TBU',0
	.word	24767
	.byte	28,3,35,128,2,13
	.byte	'reserved_11C',0
	.word	24772
	.byte	228,3,3,35,156,2,13
	.byte	'CMU',0
	.word	26494
	.byte	72,3,35,128,6,13
	.byte	'reserved_348',0
	.word	26499
	.byte	184,5,3,35,200,6,13
	.byte	'ICM',0
	.word	28435
	.byte	60,3,35,128,12,13
	.byte	'reserved_63C',0
	.word	28440
	.byte	196,19,3,35,188,12,13
	.byte	'TIM',0
	.word	32666
	.byte	128,8,3,35,128,32,13
	.byte	'reserved_1400',0
	.word	32671
	.byte	128,216,1,3,35,128,40,13
	.byte	'TOM',0
	.word	32694
	.byte	128,32,4,35,128,128,2,13
	.byte	'reserved_9000',0
	.word	32699
	.byte	192,192,2,4,35,128,160,2,13
	.byte	'DTM1',0
	.word	35243
	.byte	36,4,35,192,224,4,13
	.byte	'reserved_13064',0
	.word	35248
	.byte	220,1,4,35,228,224,4,13
	.byte	'DTM5',0
	.word	35259
	.byte	36,4,35,192,226,4,13
	.byte	'reserved_13164',0
	.word	35264
	.byte	156,151,35,4,35,228,226,4,13
	.byte	'CLC',0
	.word	35394
	.byte	4,4,35,128,250,39,13
	.byte	'reserved_9FD04',0
	.word	3994
	.byte	12,4,35,132,250,39,13
	.byte	'INOUTSEL',0
	.word	36455
	.byte	148,1,4,35,144,250,39,13
	.byte	'reserved_9FDA4',0
	.word	3994
	.byte	12,4,35,164,251,39,13
	.byte	'ADCTRIG0OUT0',0
	.word	36580
	.byte	4,4,35,176,251,39,13
	.byte	'reserved_9FDB4',0
	.word	1835
	.byte	4,4,35,180,251,39,13
	.byte	'ADCTRIG1OUT0',0
	.word	36740
	.byte	4,4,35,184,251,39,13
	.byte	'reserved_9FDBC',0
	.word	3654
	.byte	8,4,35,188,251,39,13
	.byte	'OTBU0T',0
	.word	36882
	.byte	4,4,35,196,251,39,13
	.byte	'OTBU1T',0
	.word	37024
	.byte	4,4,35,200,251,39,13
	.byte	'OTBU2T',0
	.word	37166
	.byte	4,4,35,204,251,39,13
	.byte	'OTSS',0
	.word	37351
	.byte	4,4,35,208,251,39,13
	.byte	'OTSC0',0
	.word	37645
	.byte	4,4,35,212,251,39,13
	.byte	'reserved_9FDD8',0
	.word	1835
	.byte	4,4,35,216,251,39,13
	.byte	'ODA',0
	.word	37765
	.byte	4,4,35,220,251,39,13
	.byte	'reserved_9FDE0',0
	.word	3654
	.byte	8,4,35,224,251,39,13
	.byte	'OCS',0
	.word	37925
	.byte	4,4,35,232,251,39,13
	.byte	'KRSTCLR',0
	.word	38031
	.byte	4,4,35,236,251,39,13
	.byte	'KRST1',0
	.word	38135
	.byte	4,4,35,240,251,39,13
	.byte	'KRST0',0
	.word	38258
	.byte	4,4,35,244,251,39,13
	.byte	'ACCEN1',0
	.word	38347
	.byte	4,4,35,248,251,39,13
	.byte	'ACCEN0',0
	.word	38916
	.byte	4,4,35,252,251,39,13
	.byte	'reserved_9FE00',0
	.word	38956
	.byte	128,4,4,35,128,252,39,0,3
	.word	38967
	.byte	4
	.word	40018
	.byte	14,8
	.word	18874
	.byte	15,1,0,14,4
	.word	807
	.byte	15,1,0,14,8
	.word	8087
	.byte	15,1,0,29,16,143,1,9,56,13
	.byte	'base',0
	.word	20773
	.byte	12,2,35,0,13
	.byte	'gtm',0
	.word	40023
	.byte	4,2,35,12,13
	.byte	'tom',0
	.word	18275
	.byte	4,2,35,16,13
	.byte	'tgc',0
	.word	40028
	.byte	8,2,35,20,13
	.byte	'tomIndex',0
	.word	20084
	.byte	1,2,35,28,13
	.byte	'timerChannel',0
	.word	18280
	.byte	1,2,35,29,13
	.byte	'triggerChannel',0
	.word	18280
	.byte	1,2,35,30,13
	.byte	'channelsMask',0
	.word	40037
	.byte	4,2,35,32,13
	.byte	'offset',0
	.word	8087
	.byte	4,2,35,36,13
	.byte	'tgcGlobalControlDisableUpdate',0
	.word	40046
	.byte	8,2,35,40,13
	.byte	'tgcGlobalControlApplyUpdate',0
	.word	40046
	.byte	8,2,35,48,0
.L251:
	.byte	4
	.word	40055
	.byte	24
	.byte	'IfxGtm_Tom_Timer_getOffset',0,16,185,1,27
	.word	8087
	.byte	1,1,1,1,7
	.byte	'driver',0,16,185,1,72
	.word	40293
	.byte	0,30
	.byte	'IfxGtm_Tom_Timer_addToChannelMask',0,16,243,1,17,1,1,1,1,7
	.byte	'driver',0,16,243,1,69
	.word	40293
	.byte	7
	.byte	'channel',0,16,243,1,91
	.word	18280
	.byte	0,24
	.byte	'IfxGtm_Tom_Timer_getPeriod',0,16,151,2,27
	.word	8087
	.byte	1,1,1,1,7
	.byte	'driver',0,16,151,2,72
	.word	40293
	.byte	0,24
	.byte	'IfxGtm_Tom_Timer_stdIfTimerInit',0,16,210,2,20
	.word	408
	.byte	1,1,1,1,7
	.byte	'stdif',0,16,210,2,68
	.word	9159
	.byte	7
	.byte	'driver',0,16,210,2,93
	.word	40293
	.byte	0
.L284:
	.byte	16,9,141,1,9,1,17
	.byte	'Ifx_Pwm_Mode_centerAligned',0,0,17
	.byte	'Ifx_Pwm_Mode_centerAlignedInverted',0,1,17
	.byte	'Ifx_Pwm_Mode_leftAligned',0,2,17
	.byte	'Ifx_Pwm_Mode_rightAligned',0,3,17
	.byte	'Ifx_Pwm_Mode_off',0,4,17
	.byte	'Ifx_Pwm_Mode_init',0,5,17
	.byte	'Ifx_Pwm_Mode_count',0,6,0,5
	.byte	'char',0,1,6,29,17,147,1,9,20,13
	.byte	'deadtime',0
	.word	8087
	.byte	4,2,35,0,13
	.byte	'minPulse',0
	.word	8087
	.byte	4,2,35,4,13
	.byte	'maxPulse',0
	.word	8087
	.byte	4,2,35,8,13
	.byte	'mode',0
	.word	40566
	.byte	1,2,35,12,13
	.byte	'setMode',0
	.word	40754
	.byte	1,2,35,13,13
	.byte	'ccxActiveState',0
	.word	9455
	.byte	1,2,35,14,13
	.byte	'coutxActiveState',0
	.word	9455
	.byte	1,2,35,15,13
	.byte	'inverted',0
	.word	408
	.byte	1,2,35,16,13
	.byte	'channelCount',0
	.word	408
	.byte	1,2,35,17,0,4
	.word	.L432-.L113
	.byte	4
	.word	8087
	.byte	21,1,1,20
	.word	40944
	.byte	20
	.word	40949
	.byte	0,4
	.word	40954
	.byte	18
	.byte	'IfxGtm_Tom_PwmHl_Update',0,17,137,1,35
	.word	40968
	.byte	14,3
	.word	18280
	.byte	15,2,0,4
	.word	18280
.L432:
	.byte	10
	.byte	'IfxGtm_Tom_PwmHl_s',0,17,185,1,8,52,13
	.byte	'base',0
	.word	40762
	.byte	20,2,35,0,13
	.byte	'timer',0
	.word	40293
	.byte	4,2,35,20,13
	.byte	'update',0
	.word	40973
	.byte	4,2,35,24,13
	.byte	'tom',0
	.word	18275
	.byte	4,2,35,28,13
	.byte	'tgc',0
	.word	18874
	.byte	4,2,35,32,13
	.byte	'ccx',0
	.word	41006
	.byte	3,2,35,36,13
	.byte	'coutx',0
	.word	41006
	.byte	3,2,35,39,13
	.byte	'ccxTemp',0
	.word	41015
	.byte	4,2,35,44,13
	.byte	'coutxTemp',0
	.word	41015
	.byte	4,2,35,48,0
.L240:
	.byte	4
	.word	41020
	.byte	4
	.word	40954
	.byte	18
	.byte	'IfxGtm_Tom_ToutMapP',0,15,103,29
	.word	20580
	.byte	22
	.word	41191
	.byte	4
	.word	41219
	.byte	29,17,166,1,9,32,13
	.byte	'base',0
	.word	10122
	.byte	16,2,35,0,13
	.byte	'timer',0
	.word	40293
	.byte	4,2,35,16,13
	.byte	'tom',0
	.word	20084
	.byte	1,2,35,20,13
	.byte	'ccx',0
	.word	41224
	.byte	4,2,35,24,13
	.byte	'coutx',0
	.word	41224
	.byte	4,2,35,28,0,22
	.word	41229
.L242:
	.byte	4
	.word	41306
	.byte	22
	.word	20478
	.byte	4
	.word	41316
	.byte	14,22
	.word	9574
	.byte	15,21,0
.L253:
	.byte	22
	.word	41326
.L273:
	.byte	14,12
	.word	8087
	.byte	15,2,0
.L276:
	.byte	4
	.word	41229
.L298:
	.byte	4
	.word	40762
.L306:
	.byte	4
	.word	8087
.L310:
	.byte	4
	.word	408
	.byte	18
	.byte	'IfxStdIf_PwmHl_SetDeadtime',0,11,69,19
	.word	8248
	.byte	18
	.byte	'IfxStdIf_PwmHl_GetDeadtime',0,11,77,19
	.word	8046
	.byte	18
	.byte	'IfxStdIf_PwmHl_SetMinPulse',0,11,85,19
	.word	8248
	.byte	18
	.byte	'IfxStdIf_PwmHl_GetMinPulse',0,11,93,19
	.word	8046
	.byte	19
	.word	40566
	.byte	1,1,20
	.word	320
	.byte	0,4
	.word	41509
	.byte	18
	.byte	'IfxStdIf_PwmHl_GetMode',0,11,101,24
	.word	41522
	.byte	19
	.word	408
	.byte	1,1,20
	.word	320
	.byte	20
	.word	40566
	.byte	0,4
	.word	41558
	.byte	18
	.byte	'IfxStdIf_PwmHl_SetMode',0,11,109,19
	.word	41576
	.byte	21,1,1,20
	.word	320
	.byte	20
	.word	40949
	.byte	0,4
	.word	41612
	.byte	18
	.byte	'IfxStdIf_PwmHl_SetOnTime',0,11,116,16
	.word	41626
	.byte	4
	.word	408
	.byte	21,1,1,20
	.word	320
	.byte	20
	.word	41664
	.byte	20
	.word	41664
	.byte	0,4
	.word	41669
	.byte	18
	.byte	'IfxStdIf_PwmHl_SetupChannels',0,11,135,1,16
	.word	41688
	.byte	10
	.byte	'IfxStdIf_PwmHl_',0,11,139,1,8,104,13
	.byte	'driver',0
	.word	8000
	.byte	4,2,35,0,13
	.byte	'setDeadtime',0
	.word	41369
	.byte	4,2,35,4,13
	.byte	'getDeadtime',0
	.word	41404
	.byte	4,2,35,8,13
	.byte	'setMinPulse',0
	.word	41439
	.byte	4,2,35,12,13
	.byte	'getMinPulse',0
	.word	41474
	.byte	4,2,35,16,13
	.byte	'getMode',0
	.word	41527
	.byte	4,2,35,20,13
	.byte	'setMode',0
	.word	41581
	.byte	4,2,35,24,13
	.byte	'setOnTime',0
	.word	41631
	.byte	4,2,35,28,13
	.byte	'setupChannels',0
	.word	41693
	.byte	4,2,35,32,13
	.byte	'timer',0
	.word	8780
	.byte	68,2,35,36,0
.L314:
	.byte	4
	.word	41731
	.byte	4
	.word	8230
	.byte	4
	.word	8033
	.byte	4
	.word	8230
	.byte	4
	.word	8033
	.byte	4
	.word	41509
	.byte	4
	.word	41558
	.byte	4
	.word	41612
	.byte	4
	.word	41669
	.byte	27
	.word	9506
	.byte	28
	.word	9552
	.byte	8,0,31
	.byte	'__INDIRECT__',0,8,1,1,1,1,1,5
	.byte	'short int',0,2,5,18
	.byte	'__wchar_t',0,8,1,1
	.word	42022
	.byte	18
	.byte	'__size_t',0,8,1,1
	.word	216
	.byte	18
	.byte	'__ptrdiff_t',0,8,1,1
	.word	401
	.byte	32,1,4
	.word	42090
	.byte	18
	.byte	'__codeptr',0,8,1,1
	.word	42092
	.byte	18
	.byte	'__intptr_t',0,8,1,1
	.word	401
	.byte	18
	.byte	'__uintptr_t',0,8,1,1
	.word	216
	.byte	18
	.byte	'_iob_flag_t',0,10,82,25
	.word	807
	.byte	14,24
	.word	9587
	.byte	15,5,0,33
	.byte	'verboseLevelStr',0,18,29,20
	.word	42174
	.byte	1,1,18
	.byte	'sint8',0,19,88,24
	.word	40754
	.byte	18
	.byte	'uint8',0,19,89,24
	.word	408
	.byte	18
	.byte	'sint16',0,19,90,24
	.word	42022
	.byte	18
	.byte	'uint16',0,19,91,24
	.word	807
	.byte	5
	.byte	'long int',0,4,5,18
	.byte	'sint32',0,19,92,24
	.word	42267
	.byte	18
	.byte	'uint32',0,19,93,24
	.word	8087
	.byte	18
	.byte	'float32',0,19,94,24
	.word	7991
	.byte	18
	.byte	'boolean',0,19,104,24
	.word	408
	.byte	5
	.byte	'long long int',0,8,5,18
	.byte	'sint64',0,9,36,28
	.word	42341
	.byte	18
	.byte	'uint64',0,9,37,28
	.word	294
	.byte	18
	.byte	'pvoid',0,9,40,28
	.word	320
	.byte	18
	.byte	'Ifx_TickTime',0,9,43,28
	.word	42341
	.byte	18
	.byte	'Ifx_Priority',0,9,67,16
	.word	807
	.byte	18
	.byte	'Ifx_TimerValue',0,9,68,16
	.word	8087
	.byte	18
	.byte	'Ifx_ActiveState',0,9,84,3
	.word	9455
	.byte	18
	.byte	'Ifx_Pwm_Mode',0,9,150,1,3
	.word	40566
	.byte	16,20,49,9,1,17
	.byte	'IfxSrc_Tos_cpu0',0,0,17
	.byte	'IfxSrc_Tos_dma',0,1,0,18
	.byte	'IfxSrc_Tos',0,20,53,3
	.word	42513
	.byte	18
	.byte	'Ifx_SRC_SRCR_Bits',0,3,62,3
	.word	425
	.byte	18
	.byte	'Ifx_SRC_SRCR',0,3,75,3
	.word	715
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,3,86,25,12,13
	.byte	'TX',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	715
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	715
	.byte	4,2,35,8,0,3
	.word	42620
	.byte	18
	.byte	'Ifx_SRC_ASCLIN',0,3,91,3
	.word	42679
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,3,94,25,4,13
	.byte	'SBSRC',0
	.word	715
	.byte	4,2,35,0,0,3
	.word	42707
	.byte	18
	.byte	'Ifx_SRC_BCUSPB',0,3,97,3
	.word	42744
	.byte	14,64
	.word	715
	.byte	15,15,0,10
	.byte	'_Ifx_SRC_CAN',0,3,100,25,64,13
	.byte	'INT',0
	.word	42772
	.byte	64,2,35,0,0,3
	.word	42781
	.byte	18
	.byte	'Ifx_SRC_CAN',0,3,103,3
	.word	42813
	.byte	14,32
	.word	715
	.byte	15,7,0,10
	.byte	'_Ifx_SRC_CAN1',0,3,106,25,32,13
	.byte	'INT',0
	.word	42838
	.byte	32,2,35,0,0,3
	.word	42847
	.byte	18
	.byte	'Ifx_SRC_CAN1',0,3,109,3
	.word	42880
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,3,112,25,16,13
	.byte	'SR0',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	715
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	715
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	715
	.byte	4,2,35,12,0,3
	.word	42906
	.byte	18
	.byte	'Ifx_SRC_CCU6',0,3,118,3
	.word	42978
	.byte	14,8
	.word	715
	.byte	15,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,3,121,25,8,13
	.byte	'SR',0
	.word	43004
	.byte	8,2,35,0,0,3
	.word	43013
	.byte	18
	.byte	'Ifx_SRC_CERBERUS',0,3,124,3
	.word	43049
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,3,127,25,32,13
	.byte	'SBSRC',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	35658
	.byte	28,2,35,4,0,3
	.word	43079
	.byte	18
	.byte	'Ifx_SRC_CPU',0,3,131,1,3
	.word	43133
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,3,134,1,25,80,13
	.byte	'ERR',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	3994
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	42772
	.byte	64,2,35,16,0,3
	.word	43159
	.byte	18
	.byte	'Ifx_SRC_DMA',0,3,139,1,3
	.word	43224
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,3,142,1,25,4,13
	.byte	'SR',0
	.word	715
	.byte	4,2,35,0,0,3
	.word	43250
	.byte	18
	.byte	'Ifx_SRC_EMEM',0,3,145,1,3
	.word	43283
	.byte	14,40
	.word	408
	.byte	15,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,3,148,1,25,80,13
	.byte	'INT',0
	.word	43004
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	43004
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	43004
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	43004
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	715
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	715
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	43310
	.byte	40,2,35,40,0,3
	.word	43319
	.byte	18
	.byte	'Ifx_SRC_ERAY',0,3,157,1,3
	.word	43446
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,3,160,1,25,4,13
	.byte	'SR',0
	.word	715
	.byte	4,2,35,0,0,3
	.word	43473
	.byte	18
	.byte	'Ifx_SRC_ETH',0,3,163,1,3
	.word	43505
	.byte	10
	.byte	'_Ifx_SRC_EVR',0,3,166,1,25,8,13
	.byte	'WUT',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'SCDC',0
	.word	715
	.byte	4,2,35,4,0,3
	.word	43531
	.byte	18
	.byte	'Ifx_SRC_EVR',0,3,170,1,3
	.word	43578
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,3,173,1,25,12,13
	.byte	'DONE',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	715
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	715
	.byte	4,2,35,8,0,3
	.word	43604
	.byte	18
	.byte	'Ifx_SRC_FFT',0,3,178,1,3
	.word	43664
	.byte	14,240,11
	.word	408
	.byte	15,239,11,0,10
	.byte	'_Ifx_SRC_GPSR',0,3,181,1,25,128,12,13
	.byte	'SR0',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	715
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	715
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	715
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	43690
	.byte	240,11,2,35,16,0,3
	.word	43701
	.byte	18
	.byte	'Ifx_SRC_GPSR',0,3,188,1,3
	.word	43797
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,3,191,1,25,48,13
	.byte	'CIRQ',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	715
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	715
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	715
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	715
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	715
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	3025
	.byte	24,2,35,24,0,3
	.word	43824
	.byte	18
	.byte	'Ifx_SRC_GPT12',0,3,200,1,3
	.word	43941
	.byte	14,236,2
	.word	408
	.byte	15,235,2,0,14,32
	.word	42838
	.byte	15,0,0,14,224,7
	.word	408
	.byte	15,223,7,0,14,64
	.word	42838
	.byte	15,1,0,10
	.byte	'_Ifx_SRC_GTM',0,3,203,1,25,192,11,13
	.byte	'AEIIRQ',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	43969
	.byte	236,2,2,35,4,13
	.byte	'ERR',0
	.word	715
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	3994
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	43980
	.byte	32,3,35,128,3,13
	.byte	'reserved_1A0',0
	.word	43989
	.byte	224,7,3,35,160,3,13
	.byte	'TOM',0
	.word	44000
	.byte	64,3,35,128,11,0,3
	.word	44009
	.byte	18
	.byte	'Ifx_SRC_GTM',0,3,212,1,3
	.word	44156
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,3,215,1,25,8,13
	.byte	'HSM',0
	.word	43004
	.byte	8,2,35,0,0,3
	.word	44182
	.byte	18
	.byte	'Ifx_SRC_HSM',0,3,218,1,3
	.word	44215
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,3,221,1,25,4,13
	.byte	'SR',0
	.word	715
	.byte	4,2,35,0,0,3
	.word	44241
	.byte	18
	.byte	'Ifx_SRC_LMU',0,3,224,1,3
	.word	44273
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,3,227,1,25,4,13
	.byte	'SR',0
	.word	715
	.byte	4,2,35,0,0,3
	.word	44299
	.byte	18
	.byte	'Ifx_SRC_PMU',0,3,230,1,3
	.word	44331
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,3,233,1,25,24,13
	.byte	'TX',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	715
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	715
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	715
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	715
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	715
	.byte	4,2,35,20,0,3
	.word	44357
	.byte	18
	.byte	'Ifx_SRC_QSPI',0,3,241,1,3
	.word	44450
	.byte	14,16
	.word	715
	.byte	15,3,0,10
	.byte	'_Ifx_SRC_SCU',0,3,244,1,25,20,13
	.byte	'DTS',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	44477
	.byte	16,2,35,4,0,3
	.word	44486
	.byte	18
	.byte	'Ifx_SRC_SCU',0,3,248,1,3
	.word	44532
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,3,251,1,25,16,13
	.byte	'SR',0
	.word	44477
	.byte	16,2,35,0,0,3
	.word	44558
	.byte	18
	.byte	'Ifx_SRC_SENT',0,3,254,1,3
	.word	44591
	.byte	14,12
	.word	715
	.byte	15,2,0,10
	.byte	'_Ifx_SRC_SMU',0,3,129,2,25,12,13
	.byte	'SR',0
	.word	44618
	.byte	12,2,35,0,0,3
	.word	44627
	.byte	18
	.byte	'Ifx_SRC_SMU',0,3,132,2,3
	.word	44659
	.byte	14,88
	.word	408
	.byte	15,87,0,10
	.byte	'_Ifx_SRC_STM',0,3,135,2,25,96,13
	.byte	'SR0',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	715
	.byte	4,2,35,4,13
	.byte	'reserved_8',0
	.word	44685
	.byte	88,2,35,8,0,3
	.word	44694
	.byte	18
	.byte	'Ifx_SRC_STM',0,3,140,2,3
	.word	44760
	.byte	14,176,2
	.word	408
	.byte	15,175,2,0,10
	.byte	'_Ifx_SRC_VADCCG',0,3,143,2,25,192,2,13
	.byte	'SR0',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	715
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	715
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	715
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	44786
	.byte	176,2,2,35,16,0,3
	.word	44797
	.byte	18
	.byte	'Ifx_SRC_VADCCG',0,3,150,2,3
	.word	44895
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,3,153,2,25,16,13
	.byte	'SR0',0
	.word	715
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	715
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	715
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	715
	.byte	4,2,35,12,0,3
	.word	44924
	.byte	18
	.byte	'Ifx_SRC_VADCG',0,3,159,2,3
	.word	44998
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,3,162,2,25,4,13
	.byte	'SRC',0
	.word	715
	.byte	4,2,35,0,0,3
	.word	45026
	.byte	18
	.byte	'Ifx_SRC_XBAR',0,3,165,2,3
	.word	45060
	.byte	14,24
	.word	42620
	.byte	15,1,0,3
	.word	45087
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,3,178,2,25,24,13
	.byte	'ASCLIN',0
	.word	45096
	.byte	24,2,35,0,0,3
	.word	45101
	.byte	18
	.byte	'Ifx_SRC_GASCLIN',0,3,181,2,3
	.word	45141
	.byte	3
	.word	42707
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,3,184,2,25,4,13
	.byte	'SPB',0
	.word	45171
	.byte	4,2,35,0,0,3
	.word	45176
	.byte	18
	.byte	'Ifx_SRC_GBCU',0,3,187,2,3
	.word	45210
	.byte	14,64
	.word	42781
	.byte	15,0,0,3
	.word	45237
	.byte	14,32
	.word	42847
	.byte	15,0,0,3
	.word	45251
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,3,190,2,25,96,13
	.byte	'CAN',0
	.word	45246
	.byte	64,2,35,0,13
	.byte	'CAN1',0
	.word	45260
	.byte	32,2,35,64,0,3
	.word	45265
	.byte	18
	.byte	'Ifx_SRC_GCAN',0,3,194,2,3
	.word	45313
	.byte	14,32
	.word	42906
	.byte	15,1,0,3
	.word	45340
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,3,197,2,25,32,13
	.byte	'CCU6',0
	.word	45349
	.byte	32,2,35,0,0,3
	.word	45354
	.byte	18
	.byte	'Ifx_SRC_GCCU6',0,3,200,2,3
	.word	45390
	.byte	3
	.word	43013
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,3,203,2,25,8,13
	.byte	'CERBERUS',0
	.word	45418
	.byte	8,2,35,0,0,3
	.word	45423
	.byte	18
	.byte	'Ifx_SRC_GCERBERUS',0,3,206,2,3
	.word	45467
	.byte	14,32
	.word	43079
	.byte	15,0,0,3
	.word	45499
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,3,209,2,25,32,13
	.byte	'CPU',0
	.word	45508
	.byte	32,2,35,0,0,3
	.word	45513
	.byte	18
	.byte	'Ifx_SRC_GCPU',0,3,212,2,3
	.word	45547
	.byte	14,80
	.word	43159
	.byte	15,0,0,3
	.word	45574
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,3,215,2,25,80,13
	.byte	'DMA',0
	.word	45583
	.byte	80,2,35,0,0,3
	.word	45588
	.byte	18
	.byte	'Ifx_SRC_GDMA',0,3,218,2,3
	.word	45622
	.byte	14,4
	.word	43250
	.byte	15,0,0,3
	.word	45649
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,3,221,2,25,4,13
	.byte	'EMEM',0
	.word	45658
	.byte	4,2,35,0,0,3
	.word	45663
	.byte	18
	.byte	'Ifx_SRC_GEMEM',0,3,224,2,3
	.word	45699
	.byte	14,80
	.word	43319
	.byte	15,0,0,3
	.word	45727
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,3,227,2,25,80,13
	.byte	'ERAY',0
	.word	45736
	.byte	80,2,35,0,0,3
	.word	45741
	.byte	18
	.byte	'Ifx_SRC_GERAY',0,3,230,2,3
	.word	45777
	.byte	14,4
	.word	43473
	.byte	15,0,0,3
	.word	45805
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,3,233,2,25,4,13
	.byte	'ETH',0
	.word	45814
	.byte	4,2,35,0,0,3
	.word	45819
	.byte	18
	.byte	'Ifx_SRC_GETH',0,3,236,2,3
	.word	45853
	.byte	14,8
	.word	43531
	.byte	15,0,0,3
	.word	45880
	.byte	10
	.byte	'_Ifx_SRC_GEVR',0,3,239,2,25,8,13
	.byte	'EVR',0
	.word	45889
	.byte	8,2,35,0,0,3
	.word	45894
	.byte	18
	.byte	'Ifx_SRC_GEVR',0,3,242,2,3
	.word	45928
	.byte	14,12
	.word	43604
	.byte	15,0,0,3
	.word	45955
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,3,245,2,25,12,13
	.byte	'FFT',0
	.word	45964
	.byte	12,2,35,0,0,3
	.word	45969
	.byte	18
	.byte	'Ifx_SRC_GFFT',0,3,248,2,3
	.word	46003
	.byte	14,128,12
	.word	43701
	.byte	15,0,0,3
	.word	46030
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,3,251,2,25,128,12,13
	.byte	'GPSR',0
	.word	46040
	.byte	128,12,2,35,0,0,3
	.word	46045
	.byte	18
	.byte	'Ifx_SRC_GGPSR',0,3,254,2,3
	.word	46083
	.byte	14,48
	.word	43824
	.byte	15,0,0,3
	.word	46111
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,3,129,3,25,48,13
	.byte	'GPT12',0
	.word	46120
	.byte	48,2,35,0,0,3
	.word	46125
	.byte	18
	.byte	'Ifx_SRC_GGPT12',0,3,132,3,3
	.word	46163
	.byte	14,192,11
	.word	44009
	.byte	15,0,0,3
	.word	46192
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,3,135,3,25,192,11,13
	.byte	'GTM',0
	.word	46202
	.byte	192,11,2,35,0,0,3
	.word	46207
	.byte	18
	.byte	'Ifx_SRC_GGTM',0,3,138,3,3
	.word	46243
	.byte	14,8
	.word	44182
	.byte	15,0,0,3
	.word	46270
	.byte	10
	.byte	'_Ifx_SRC_GHSM',0,3,141,3,25,8,13
	.byte	'HSM',0
	.word	46279
	.byte	8,2,35,0,0,3
	.word	46284
	.byte	18
	.byte	'Ifx_SRC_GHSM',0,3,144,3,3
	.word	46318
	.byte	14,4
	.word	44241
	.byte	15,0,0,3
	.word	46345
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,3,147,3,25,4,13
	.byte	'LMU',0
	.word	46354
	.byte	4,2,35,0,0,3
	.word	46359
	.byte	18
	.byte	'Ifx_SRC_GLMU',0,3,150,3,3
	.word	46393
	.byte	14,8
	.word	44299
	.byte	15,1,0,3
	.word	46420
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,3,153,3,25,8,13
	.byte	'PMU',0
	.word	46429
	.byte	8,2,35,0,0,3
	.word	46434
	.byte	18
	.byte	'Ifx_SRC_GPMU',0,3,156,3,3
	.word	46468
	.byte	14,96
	.word	44357
	.byte	15,3,0,3
	.word	46495
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,3,159,3,25,96,13
	.byte	'QSPI',0
	.word	46504
	.byte	96,2,35,0,0,3
	.word	46509
	.byte	18
	.byte	'Ifx_SRC_GQSPI',0,3,162,3,3
	.word	46545
	.byte	3
	.word	44486
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,3,165,3,25,20,13
	.byte	'SCU',0
	.word	46573
	.byte	20,2,35,0,0,3
	.word	46578
	.byte	18
	.byte	'Ifx_SRC_GSCU',0,3,168,3,3
	.word	46612
	.byte	14,16
	.word	44558
	.byte	15,0,0,3
	.word	46639
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,3,171,3,25,16,13
	.byte	'SENT',0
	.word	46648
	.byte	16,2,35,0,0,3
	.word	46653
	.byte	18
	.byte	'Ifx_SRC_GSENT',0,3,174,3,3
	.word	46689
	.byte	14,12
	.word	44627
	.byte	15,0,0,3
	.word	46717
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,3,177,3,25,12,13
	.byte	'SMU',0
	.word	46726
	.byte	12,2,35,0,0,3
	.word	46731
	.byte	18
	.byte	'Ifx_SRC_GSMU',0,3,180,3,3
	.word	46765
	.byte	14,96
	.word	44694
	.byte	15,0,0,3
	.word	46792
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,3,183,3,25,96,13
	.byte	'STM',0
	.word	46801
	.byte	96,2,35,0,0,3
	.word	46806
	.byte	18
	.byte	'Ifx_SRC_GSTM',0,3,186,3,3
	.word	46840
	.byte	14,64
	.word	44924
	.byte	15,3,0,3
	.word	46867
	.byte	14,224,1
	.word	408
	.byte	15,223,1,0,14,192,2
	.word	44797
	.byte	15,0,0,3
	.word	46892
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,3,189,3,25,224,4,13
	.byte	'G',0
	.word	46876
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	46881
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	46902
	.byte	192,2,3,35,160,2,0,3
	.word	46907
	.byte	18
	.byte	'Ifx_SRC_GVADC',0,3,194,3,3
	.word	46977
	.byte	3
	.word	45026
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,3,197,3,25,4,13
	.byte	'XBAR',0
	.word	47005
	.byte	4,2,35,0,0,3
	.word	47010
	.byte	18
	.byte	'Ifx_SRC_GXBAR',0,3,200,3,3
	.word	47046
	.byte	18
	.byte	'Ifx_P_ACCEN0_Bits',0,5,79,3
	.word	6700
	.byte	18
	.byte	'Ifx_P_ACCEN1_Bits',0,5,85,3
	.word	6613
	.byte	18
	.byte	'Ifx_P_ESR_Bits',0,5,107,3
	.word	3663
	.byte	18
	.byte	'Ifx_P_ID_Bits',0,5,115,3
	.word	1716
	.byte	18
	.byte	'Ifx_P_IN_Bits',0,5,137,1,3
	.word	2711
	.byte	18
	.byte	'Ifx_P_IOCR0_Bits',0,5,150,1,3
	.word	1844
	.byte	18
	.byte	'Ifx_P_IOCR12_Bits',0,5,163,1,3
	.word	2491
	.byte	18
	.byte	'Ifx_P_IOCR4_Bits',0,5,176,1,3
	.word	2059
	.byte	18
	.byte	'Ifx_P_IOCR8_Bits',0,5,189,1,3
	.word	2274
	.byte	18
	.byte	'Ifx_P_OMCR0_Bits',0,5,200,1,3
	.word	5243
	.byte	18
	.byte	'Ifx_P_OMCR12_Bits',0,5,210,1,3
	.word	5767
	.byte	18
	.byte	'Ifx_P_OMCR4_Bits',0,5,221,1,3
	.word	5417
	.byte	18
	.byte	'Ifx_P_OMCR8_Bits',0,5,232,1,3
	.word	5591
	.byte	18
	.byte	'Ifx_P_OMCR_Bits',0,5,254,1,3
	.word	6256
	.byte	18
	.byte	'Ifx_P_OMR_Bits',0,5,163,2,3
	.word	1145
	.byte	18
	.byte	'Ifx_P_OMSR0_Bits',0,5,173,2,3
	.word	4580
	.byte	18
	.byte	'Ifx_P_OMSR12_Bits',0,5,184,2,3
	.word	5068
	.byte	18
	.byte	'Ifx_P_OMSR4_Bits',0,5,195,2,3
	.word	4727
	.byte	18
	.byte	'Ifx_P_OMSR8_Bits',0,5,206,2,3
	.word	4896
	.byte	18
	.byte	'Ifx_P_OMSR_Bits',0,5,228,2,3
	.word	5923
	.byte	18
	.byte	'Ifx_P_OUT_Bits',0,5,250,2,3
	.word	829
	.byte	18
	.byte	'Ifx_P_PCSR_Bits',0,5,135,3,3
	.word	4369
	.byte	18
	.byte	'Ifx_P_PDISC_Bits',0,5,157,3,3
	.word	4003
	.byte	18
	.byte	'Ifx_P_PDR0_Bits',0,5,178,3,3
	.word	3034
	.byte	18
	.byte	'Ifx_P_PDR1_Bits',0,5,199,3,3
	.word	3338
	.byte	18
	.byte	'Ifx_P_ACCEN0',0,5,212,3,3
	.word	7227
	.byte	18
	.byte	'Ifx_P_ACCEN1',0,5,220,3,3
	.word	6660
	.byte	18
	.byte	'Ifx_P_ESR',0,5,228,3,3
	.word	3954
	.byte	18
	.byte	'Ifx_P_ID',0,5,236,3,3
	.word	1795
	.byte	18
	.byte	'Ifx_P_IN',0,5,244,3,3
	.word	2985
	.byte	18
	.byte	'Ifx_P_IOCR0',0,5,252,3,3
	.word	2019
	.byte	18
	.byte	'Ifx_P_IOCR12',0,5,132,4,3
	.word	2671
	.byte	18
	.byte	'Ifx_P_IOCR4',0,5,140,4,3
	.word	2234
	.byte	18
	.byte	'Ifx_P_IOCR8',0,5,148,4,3
	.word	2451
	.byte	18
	.byte	'Ifx_P_OMCR',0,5,156,4,3
	.word	6564
	.byte	18
	.byte	'Ifx_P_OMCR0',0,5,164,4,3
	.word	5377
	.byte	18
	.byte	'Ifx_P_OMCR12',0,5,172,4,3
	.word	5883
	.byte	18
	.byte	'Ifx_P_OMCR4',0,5,180,4,3
	.word	5551
	.byte	18
	.byte	'Ifx_P_OMCR8',0,5,188,4,3
	.word	5727
	.byte	18
	.byte	'Ifx_P_OMR',0,5,196,4,3
	.word	1676
	.byte	18
	.byte	'Ifx_P_OMSR',0,5,204,4,3
	.word	6216
	.byte	18
	.byte	'Ifx_P_OMSR0',0,5,212,4,3
	.word	4687
	.byte	18
	.byte	'Ifx_P_OMSR12',0,5,220,4,3
	.word	5203
	.byte	18
	.byte	'Ifx_P_OMSR4',0,5,228,4,3
	.word	4856
	.byte	18
	.byte	'Ifx_P_OMSR8',0,5,236,4,3
	.word	5028
	.byte	18
	.byte	'Ifx_P_OUT',0,5,244,4,3
	.word	1105
	.byte	18
	.byte	'Ifx_P_PCSR',0,5,252,4,3
	.word	4540
	.byte	18
	.byte	'Ifx_P_PDISC',0,5,132,5,3
	.word	4329
	.byte	18
	.byte	'Ifx_P_PDR0',0,5,140,5,3
	.word	3298
	.byte	18
	.byte	'Ifx_P_PDR1',0,5,148,5,3
	.word	3614
	.byte	3
	.word	7267
	.byte	18
	.byte	'Ifx_P',0,5,193,5,3
	.word	48221
	.byte	16,21,153,10,9,1,17
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,17
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,17
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,18
	.byte	'IfxScu_WDTCON1_IR',0,21,158,10,3
	.word	48241
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,22,45,16,4,11
	.byte	'EN0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_ACCEN0_Bits',0,22,79,3
	.word	48363
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,22,82,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	32,0,2,35,0,0,18
	.byte	'Ifx_SCU_ACCEN1_Bits',0,22,85,3
	.word	48920
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,22,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	216
	.byte	29,0,2,35,0,0,18
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,22,94,3
	.word	48997
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,22,97,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	408
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	408
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	408
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	408
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	408
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	408
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	408
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_CCUCON0_Bits',0,22,111,3
	.word	49133
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,22,114,16,4,11
	.byte	'CANDIV',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	408
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	408
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	408
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	408
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	408
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_CCUCON1_Bits',0,22,126,3
	.word	49415
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,22,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_CCUCON2_Bits',0,22,135,1,3
	.word	49653
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,22,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	408
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	408
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	408
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	408
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	408
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_CCUCON3_Bits',0,22,149,1,3
	.word	49781
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,22,152,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	408
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	408
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	408
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	408
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	408
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_CCUCON4_Bits',0,22,163,1,3
	.word	50008
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,22,166,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_CCUCON5_Bits',0,22,172,1,3
	.word	50227
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,22,175,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	408
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	216
	.byte	26,0,2,35,0,0,18
	.byte	'Ifx_SCU_CCUCON6_Bits',0,22,179,1,3
	.word	50355
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,22,182,1,16,4,11
	.byte	'CHREV',0,1
	.word	408
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	408
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	408
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	408
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_CHIPID_Bits',0,22,193,1,3
	.word	50455
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,22,196,1,16,4,11
	.byte	'PWD',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	216
	.byte	22,6,2,35,0,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	5,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_DTSCON_Bits',0,22,204,1,3
	.word	50663
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,22,207,1,16,4,11
	.byte	'LOWER',0,2
	.word	807
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	408
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	807
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_DTSLIM_Bits',0,22,216,1,3
	.word	50828
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,22,219,1,16,4,11
	.byte	'RESULT',0,2
	.word	807
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	408
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,22,226,1,3
	.word	51011
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,22,229,1,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	408
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	408
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	216
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	408
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	408
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_EICR_Bits',0,22,248,1,3
	.word	51165
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,22,251,1,16,4,11
	.byte	'INTF0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	216
	.byte	24,0,2,35,0,0,18
	.byte	'Ifx_SCU_EIFR_Bits',0,22,134,2,3
	.word	51529
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,22,137,2,16,4,11
	.byte	'POL',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	807
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	408
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	408
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	408
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	408
	.byte	4,0,2,35,3,0,18
	.byte	'Ifx_SCU_EMSR_Bits',0,22,150,2,3
	.word	51740
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,22,153,2,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	807
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	216
	.byte	23,0,2,35,0,0,18
	.byte	'Ifx_SCU_ESRCFG_Bits',0,22,158,2,3
	.word	51992
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,22,161,2,16,4,11
	.byte	'ARI',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,18
	.byte	'Ifx_SCU_ESROCFG_Bits',0,22,166,2,3
	.word	52110
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,22,169,2,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_EVR13CON_Bits',0,22,176,2,3
	.word	52221
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,22,179,2,16,4,11
	.byte	'ADC13V',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	408
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,22,186,2,3
	.word	52384
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,22,189,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	408
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	807
	.byte	10,0,2,35,0,11
	.byte	'SWDOVMOD',0,1
	.word	408
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	408
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	408
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	807
	.byte	8,2,2,35,2,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,22,201,2,3
	.word	52546
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,22,204,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	408
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_EVROVMON_Bits',0,22,212,2,3
	.word	52824
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,22,215,2,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	28,4,2,35,0,11
	.byte	'RSTSWDOFF',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,22,222,2,3
	.word	53003
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,22,225,2,16,4,11
	.byte	'SD33P',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	408
	.byte	4,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	408
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	216
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,22,232,2,3
	.word	53163
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,22,235,2,16,4,11
	.byte	'SDFREQSPRD',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	408
	.byte	4,0,2,35,0,11
	.byte	'TON',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'TOFF',0,1
	.word	408
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'SYNCDIV',0,1
	.word	408
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,22,244,2,3
	.word	53324
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,22,247,2,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'STBS',0,1
	.word	408
	.byte	2,6,2,35,1,11
	.byte	'STSP',0,1
	.word	408
	.byte	2,4,2,35,1,11
	.byte	'NS',0,1
	.word	408
	.byte	2,2,2,35,1,11
	.byte	'OL',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'PIAD',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'ADCMODE',0,1
	.word	408
	.byte	4,4,2,35,2,11
	.byte	'ADCLPF',0,1
	.word	408
	.byte	2,2,2,35,2,11
	.byte	'ADCLSB',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	408
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,22,134,3,3
	.word	53516
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,22,137,3,16,4,11
	.byte	'SDOLCON',0,1
	.word	408
	.byte	7,1,2,35,0,11
	.byte	'MODSEL',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'MODLOW',0,1
	.word	408
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	408
	.byte	6,2,2,35,2,11
	.byte	'MODMAN',0,1
	.word	408
	.byte	2,0,2,35,2,11
	.byte	'MODHIGH',0,1
	.word	408
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,22,147,3,3
	.word	53812
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,22,150,3,16,4,11
	.byte	'EVR13',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	2,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'SCMOD',0,1
	.word	408
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	216
	.byte	18,0,2,35,0,0,18
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,22,164,3,3
	.word	54027
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,22,167,3,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	408
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,22,175,3,3
	.word	54316
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,22,178,3,16,4,11
	.byte	'EN0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	408
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	807
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	408
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	408
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	408
	.byte	8,0,2,35,3,0,18
	.byte	'Ifx_SCU_EXTCON_Bits',0,22,189,3,3
	.word	54495
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,22,192,3,16,4,11
	.byte	'STEP',0,2
	.word	807
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	408
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	807
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_FDR_Bits',0,22,200,3,3
	.word	54713
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,22,203,3,16,4,11
	.byte	'FS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	8,0,2,35,3,0,18
	.byte	'Ifx_SCU_FMR_Bits',0,22,223,3,3
	.word	54876
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,22,226,3,16,4,11
	.byte	'MODREV',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_ID_Bits',0,22,231,3,3
	.word	55212
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,22,234,3,16,4,11
	.byte	'IPEN00',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	408
	.byte	2,0,2,35,3,0,18
	.byte	'Ifx_SCU_IGCR_Bits',0,22,130,4,3
	.word	55319
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,22,133,4,16,4,11
	.byte	'P0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,18
	.byte	'Ifx_SCU_IN_Bits',0,22,138,4,3
	.word	55771
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,22,141,4,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	408
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_IOCR_Bits',0,22,148,4,3
	.word	55870
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,22,151,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	807
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,22,157,4,3
	.word	56020
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,22,160,4,16,4,11
	.byte	'SEED',0,4
	.word	216
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	408
	.byte	4,0,2,35,3,0,18
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,22,167,4,3
	.word	56169
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,22,170,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	216
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,22,175,4,3
	.word	56330
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,22,178,4,16,4,11
	.byte	'reserved_0',0,2
	.word	807
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	807
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_LCLCON0_Bits',0,22,184,4,3
	.word	56460
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,22,187,4,16,4,11
	.byte	'LCLT0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,18
	.byte	'Ifx_SCU_LCLTEST_Bits',0,22,192,4,3
	.word	56594
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,22,195,4,16,4,11
	.byte	'DEPT',0,1
	.word	408
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	807
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_MANID_Bits',0,22,200,4,3
	.word	56709
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,22,203,4,16,4,11
	.byte	'PS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	807
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	807
	.byte	14,0,2,35,2,0,18
	.byte	'Ifx_SCU_OMR_Bits',0,22,211,4,3
	.word	56820
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,22,214,4,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	408
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	408
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	408
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	408
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	8,0,2,35,3,0,18
	.byte	'Ifx_SCU_OSCCON_Bits',0,22,231,4,3
	.word	56978
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,22,234,4,16,4,11
	.byte	'P0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,18
	.byte	'Ifx_SCU_OUT_Bits',0,22,239,4,3
	.word	57318
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,22,242,4,16,4,11
	.byte	'CSEL0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	807
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	6,0,2,35,3,0,18
	.byte	'Ifx_SCU_OVCCON_Bits',0,22,255,4,3
	.word	57419
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,22,130,5,16,4,11
	.byte	'OVEN0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	216
	.byte	29,0,2,35,0,0,18
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,22,136,5,3
	.word	57686
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,22,139,5,16,4,11
	.byte	'PDIS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,18
	.byte	'Ifx_SCU_PDISC_Bits',0,22,144,5,3
	.word	57822
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,22,147,5,16,4,11
	.byte	'PD0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	408
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	216
	.byte	24,0,2,35,0,0,18
	.byte	'Ifx_SCU_PDR_Bits',0,22,154,5,3
	.word	57933
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,22,157,5,16,4,11
	.byte	'PDR0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	216
	.byte	24,0,2,35,0,0,18
	.byte	'Ifx_SCU_PDRR_Bits',0,22,168,5,3
	.word	58066
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,22,171,5,16,4,11
	.byte	'VCOBYP',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	807
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	408
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	408
	.byte	4,0,2,35,3,0,18
	.byte	'Ifx_SCU_PLLCON0_Bits',0,22,188,5,3
	.word	58269
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,22,191,5,16,4,11
	.byte	'K2DIV',0,1
	.word	408
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	408
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	408
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	807
	.byte	9,0,2,35,2,0,18
	.byte	'Ifx_SCU_PLLCON1_Bits',0,22,199,5,3
	.word	58625
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,22,202,5,16,4,11
	.byte	'MODCFG',0,2
	.word	807
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_PLLCON2_Bits',0,22,206,5,3
	.word	58803
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,22,209,5,16,4,11
	.byte	'VCOBYP',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	807
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	408
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	408
	.byte	4,0,2,35,3,0,18
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,22,226,5,3
	.word	58903
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,22,229,5,16,4,11
	.byte	'K2DIV',0,1
	.word	408
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	408
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	408
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	807
	.byte	9,0,2,35,2,0,18
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,22,237,5,3
	.word	59273
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,22,240,5,16,4,11
	.byte	'VCOBYST',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	216
	.byte	26,0,2,35,0,0,18
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,22,249,5,3
	.word	59459
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,22,252,5,16,4,11
	.byte	'VCOBYST',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	216
	.byte	24,0,2,35,0,0,18
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,22,135,6,3
	.word	59657
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,22,138,6,16,4,11
	.byte	'REQSLP',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	408
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	216
	.byte	21,0,2,35,0,0,18
	.byte	'Ifx_SCU_PMCSR_Bits',0,22,145,6,3
	.word	59890
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,22,148,6,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	408
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	408
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	408
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	408
	.byte	2,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'WUTWKEN',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	408
	.byte	2,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,22,174,6,3
	.word	60042
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,22,177,6,16,4,11
	.byte	'reserved_0',0,2
	.word	807
	.byte	12,4,2,35,0,11
	.byte	'IRADIS',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	216
	.byte	14,5,2,35,0,11
	.byte	'STBYEVEN',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	408
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,22,185,6,3
	.word	60601
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR3_Bits',0,22,188,6,16,4,11
	.byte	'WUTREL',0,4
	.word	216
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'WUTDIV',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'WUTEN',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_PMSWCR3_Bits',0,22,196,6,3
	.word	60784
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,22,199,6,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	408
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	408
	.byte	2,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'WUTWKP',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'WUTOVRUN',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'WUTWKEN',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	807
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'WUTEN',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'WUTRUN',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,22,226,6,3
	.word	60953
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,22,229,6,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'WUTWKPCLR',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'WUTOVRUNCLR',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	807
	.byte	14,0,2,35,2,0,18
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,22,242,6,3
	.word	61520
	.byte	10
	.byte	'_Ifx_SCU_PMSWUTCNT_Bits',0,22,245,6,16,4,11
	.byte	'WUTCNT',0,4
	.word	216
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	408
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SCU_PMSWUTCNT_Bits',0,22,250,6,3
	.word	61836
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,22,253,6,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	807
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_RSTCON2_Bits',0,22,135,7,3
	.word	61955
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,22,138,7,16,4,11
	.byte	'ESR0',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	408
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	408
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	408
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	408
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	408
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_RSTCON_Bits',0,22,149,7,3
	.word	62164
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,22,152,7,16,4,11
	.byte	'ESR0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	408
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	408
	.byte	3,0,2,35,3,0,18
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,22,175,7,3
	.word	62375
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,22,178,7,16,4,11
	.byte	'HBT',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	216
	.byte	31,0,2,35,0,0,18
	.byte	'Ifx_SCU_SAFECON_Bits',0,22,182,7,3
	.word	62807
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,22,185,7,16,4,11
	.byte	'HWCFG',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	408
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	408
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	408
	.byte	7,0,2,35,3,0,18
	.byte	'Ifx_SCU_STSTAT_Bits',0,22,198,7,3
	.word	62903
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,22,201,7,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,18
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,22,206,7,3
	.word	63163
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,22,209,7,16,4,11
	.byte	'CCTRIG0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	408
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	216
	.byte	23,0,2,35,0,0,18
	.byte	'Ifx_SCU_SYSCON_Bits',0,22,218,7,3
	.word	63288
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,22,221,7,16,4,11
	.byte	'ESR0T',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	28,0,2,35,0,0,18
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,22,228,7,3
	.word	63485
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,22,231,7,16,4,11
	.byte	'ESR0T',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	28,0,2,35,0,0,18
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,22,238,7,3
	.word	63638
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,22,241,7,16,4,11
	.byte	'ESR0T',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	28,0,2,35,0,0,18
	.byte	'Ifx_SCU_TRAPSET_Bits',0,22,248,7,3
	.word	63791
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,22,251,7,16,4,11
	.byte	'ESR0T',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	28,0,2,35,0,0,18
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,22,130,8,3
	.word	63944
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,22,133,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	10564
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	10564
	.byte	16,0,2,35,0,0,18
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,22,139,8,3
	.word	64099
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,22,142,8,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	408
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,22,154,8,3
	.word	64229
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,22,157,8,16,4,11
	.byte	'AE',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	408
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,22,170,8,3
	.word	64467
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,22,173,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	10564
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	10564
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	10564
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	10564
	.byte	16,0,2,35,0,0,18
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,22,179,8,3
	.word	64690
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,22,182,8,16,4,11
	.byte	'CLRIRF',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	408
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,22,195,8,3
	.word	64816
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,22,198,8,16,4,11
	.byte	'AE',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	408
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	807
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,22,211,8,3
	.word	65068
	.byte	12,22,219,8,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48363
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_ACCEN0',0,22,224,8,3
	.word	65287
	.byte	12,22,227,8,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48920
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_ACCEN1',0,22,232,8,3
	.word	65351
	.byte	12,22,235,8,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48997
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_ARSTDIS',0,22,240,8,3
	.word	65415
	.byte	12,22,243,8,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49133
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_CCUCON0',0,22,248,8,3
	.word	65480
	.byte	12,22,251,8,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49415
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_CCUCON1',0,22,128,9,3
	.word	65545
	.byte	12,22,131,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49653
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_CCUCON2',0,22,136,9,3
	.word	65610
	.byte	12,22,139,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49781
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_CCUCON3',0,22,144,9,3
	.word	65675
	.byte	12,22,147,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50008
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_CCUCON4',0,22,152,9,3
	.word	65740
	.byte	12,22,155,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50227
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_CCUCON5',0,22,160,9,3
	.word	65805
	.byte	12,22,163,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50355
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_CCUCON6',0,22,168,9,3
	.word	65870
	.byte	12,22,171,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50455
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_CHIPID',0,22,176,9,3
	.word	65935
	.byte	12,22,179,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50663
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_DTSCON',0,22,184,9,3
	.word	65999
	.byte	12,22,187,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50828
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_DTSLIM',0,22,192,9,3
	.word	66063
	.byte	12,22,195,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51011
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_DTSSTAT',0,22,200,9,3
	.word	66127
	.byte	12,22,203,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51165
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EICR',0,22,208,9,3
	.word	66192
	.byte	12,22,211,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51529
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EIFR',0,22,216,9,3
	.word	66254
	.byte	12,22,219,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51740
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EMSR',0,22,224,9,3
	.word	66316
	.byte	12,22,227,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51992
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_ESRCFG',0,22,232,9,3
	.word	66378
	.byte	12,22,235,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52110
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_ESROCFG',0,22,240,9,3
	.word	66442
	.byte	12,22,243,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52221
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EVR13CON',0,22,248,9,3
	.word	66507
	.byte	12,22,251,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52384
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EVRADCSTAT',0,22,128,10,3
	.word	66573
	.byte	12,22,131,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52546
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EVRMONCTRL',0,22,136,10,3
	.word	66641
	.byte	12,22,139,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52824
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EVROVMON',0,22,144,10,3
	.word	66709
	.byte	12,22,147,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53003
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EVRRSTCON',0,22,152,10,3
	.word	66775
	.byte	12,22,155,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53163
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,22,160,10,3
	.word	66842
	.byte	12,22,163,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53324
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EVRSDCTRL1',0,22,168,10,3
	.word	66911
	.byte	12,22,171,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53516
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EVRSDCTRL2',0,22,176,10,3
	.word	66979
	.byte	12,22,179,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53812
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EVRSDCTRL3',0,22,184,10,3
	.word	67047
	.byte	12,22,187,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54027
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EVRSTAT',0,22,192,10,3
	.word	67115
	.byte	12,22,195,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54316
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EVRUVMON',0,22,200,10,3
	.word	67180
	.byte	12,22,203,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54495
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_EXTCON',0,22,208,10,3
	.word	67246
	.byte	12,22,211,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54713
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_FDR',0,22,216,10,3
	.word	67310
	.byte	12,22,219,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54876
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_FMR',0,22,224,10,3
	.word	67371
	.byte	12,22,227,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55212
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_ID',0,22,232,10,3
	.word	67432
	.byte	12,22,235,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55319
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_IGCR',0,22,240,10,3
	.word	67492
	.byte	12,22,243,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55771
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_IN',0,22,248,10,3
	.word	67554
	.byte	12,22,251,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55870
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_IOCR',0,22,128,11,3
	.word	67614
	.byte	12,22,131,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56020
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_LBISTCTRL0',0,22,136,11,3
	.word	67676
	.byte	12,22,139,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56169
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_LBISTCTRL1',0,22,144,11,3
	.word	67744
	.byte	12,22,147,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56330
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_LBISTCTRL2',0,22,152,11,3
	.word	67812
	.byte	12,22,155,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56460
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_LCLCON0',0,22,160,11,3
	.word	67880
	.byte	12,22,163,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56594
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_LCLTEST',0,22,168,11,3
	.word	67945
	.byte	12,22,171,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56709
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_MANID',0,22,176,11,3
	.word	68010
	.byte	12,22,179,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56820
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_OMR',0,22,184,11,3
	.word	68073
	.byte	12,22,187,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56978
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_OSCCON',0,22,192,11,3
	.word	68134
	.byte	12,22,195,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57318
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_OUT',0,22,200,11,3
	.word	68198
	.byte	12,22,203,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57419
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_OVCCON',0,22,208,11,3
	.word	68259
	.byte	12,22,211,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57686
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_OVCENABLE',0,22,216,11,3
	.word	68323
	.byte	12,22,219,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57822
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PDISC',0,22,224,11,3
	.word	68390
	.byte	12,22,227,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57933
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PDR',0,22,232,11,3
	.word	68453
	.byte	12,22,235,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58066
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PDRR',0,22,240,11,3
	.word	68514
	.byte	12,22,243,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58269
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PLLCON0',0,22,248,11,3
	.word	68576
	.byte	12,22,251,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58625
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PLLCON1',0,22,128,12,3
	.word	68641
	.byte	12,22,131,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58803
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PLLCON2',0,22,136,12,3
	.word	68706
	.byte	12,22,139,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58903
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PLLERAYCON0',0,22,144,12,3
	.word	68771
	.byte	12,22,147,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59273
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PLLERAYCON1',0,22,152,12,3
	.word	68840
	.byte	12,22,155,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59459
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PLLERAYSTAT',0,22,160,12,3
	.word	68909
	.byte	12,22,163,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59657
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PLLSTAT',0,22,168,12,3
	.word	68978
	.byte	12,22,171,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59890
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PMCSR',0,22,176,12,3
	.word	69043
	.byte	12,22,179,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60042
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PMSWCR0',0,22,184,12,3
	.word	69106
	.byte	12,22,187,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60601
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PMSWCR1',0,22,192,12,3
	.word	69171
	.byte	12,22,195,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60784
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PMSWCR3',0,22,200,12,3
	.word	69236
	.byte	12,22,203,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60953
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PMSWSTAT',0,22,208,12,3
	.word	69301
	.byte	12,22,211,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61520
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PMSWSTATCLR',0,22,216,12,3
	.word	69367
	.byte	12,22,219,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61836
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_PMSWUTCNT',0,22,224,12,3
	.word	69436
	.byte	12,22,227,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62164
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_RSTCON',0,22,232,12,3
	.word	69503
	.byte	12,22,235,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61955
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_RSTCON2',0,22,240,12,3
	.word	69567
	.byte	12,22,243,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62375
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_RSTSTAT',0,22,248,12,3
	.word	69632
	.byte	12,22,251,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62807
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_SAFECON',0,22,128,13,3
	.word	69697
	.byte	12,22,131,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62903
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_STSTAT',0,22,136,13,3
	.word	69762
	.byte	12,22,139,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63163
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_SWRSTCON',0,22,144,13,3
	.word	69826
	.byte	12,22,147,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63288
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_SYSCON',0,22,152,13,3
	.word	69892
	.byte	12,22,155,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63485
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_TRAPCLR',0,22,160,13,3
	.word	69956
	.byte	12,22,163,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63638
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_TRAPDIS',0,22,168,13,3
	.word	70021
	.byte	12,22,171,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63791
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_TRAPSET',0,22,176,13,3
	.word	70086
	.byte	12,22,179,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63944
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_TRAPSTAT',0,22,184,13,3
	.word	70151
	.byte	12,22,187,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64099
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_WDTCPU_CON0',0,22,192,13,3
	.word	70217
	.byte	12,22,195,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64229
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_WDTCPU_CON1',0,22,200,13,3
	.word	70286
	.byte	12,22,203,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64467
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_WDTCPU_SR',0,22,208,13,3
	.word	70355
	.byte	12,22,211,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64690
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_WDTS_CON0',0,22,216,13,3
	.word	70422
	.byte	12,22,219,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64816
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_WDTS_CON1',0,22,224,13,3
	.word	70489
	.byte	12,22,227,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65068
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SCU_WDTS_SR',0,22,232,13,3
	.word	70556
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU',0,22,243,13,25,12,13
	.byte	'CON0',0
	.word	70217
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	70286
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	70355
	.byte	4,2,35,8,0,3
	.word	70621
	.byte	18
	.byte	'Ifx_SCU_WDTCPU',0,22,248,13,3
	.word	70684
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,22,251,13,25,12,13
	.byte	'CON0',0
	.word	70422
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	70489
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	70556
	.byte	4,2,35,8,0,3
	.word	70713
	.byte	18
	.byte	'Ifx_SCU_WDTS',0,22,128,14,3
	.word	70774
	.byte	16,4,54,9,1,17
	.byte	'IfxPort_InputMode_undefined',0,127,17
	.byte	'IfxPort_InputMode_noPullDevice',0,0,17
	.byte	'IfxPort_InputMode_pullDown',0,8,17
	.byte	'IfxPort_InputMode_pullUp',0,16,0,18
	.byte	'IfxPort_InputMode',0,4,60,3
	.word	70801
	.byte	18
	.byte	'IfxPort_OutputIdx',0,4,101,3
	.word	20261
	.byte	18
	.byte	'IfxPort_OutputMode',0,4,109,3
	.word	9763
	.byte	18
	.byte	'IfxPort_PadDriver',0,4,125,3
	.word	9832
	.byte	18
	.byte	'IfxPort_State',0,4,137,1,3
	.word	7810
	.byte	18
	.byte	'IfxPort_Pin',0,4,153,1,3
	.word	20222
	.byte	18
	.byte	'IfxStdIf_Timer_CountDir',0,6,73,3
	.word	20671
	.byte	18
	.byte	'IfxStdIf_Timer',0,6,76,32
	.word	8780
	.byte	29,6,242,1,9,16,13
	.byte	'enabled',0
	.word	408
	.byte	1,2,35,0,13
	.byte	'triggerPoint',0
	.word	8087
	.byte	4,2,35,2,13
	.byte	'isrPriority',0
	.word	807
	.byte	2,2,35,6,13
	.byte	'isrProvider',0
	.word	42513
	.byte	1,2,35,8,13
	.byte	'outputMode',0
	.word	9763
	.byte	1,2,35,9,13
	.byte	'outputDriver',0
	.word	9832
	.byte	1,2,35,10,13
	.byte	'risingEdgeAtPeriod',0
	.word	408
	.byte	1,2,35,11,13
	.byte	'outputEnabled',0
	.word	408
	.byte	1,2,35,12,0,18
	.byte	'IfxStdIf_Timer_TrigConfig',0,6,252,1,3
	.word	71130
	.byte	29,6,255,1,9,36,13
	.byte	'frequency',0
	.word	7991
	.byte	4,2,35,0,13
	.byte	'isrPriority',0
	.word	807
	.byte	2,2,35,4,13
	.byte	'isrProvider',0
	.word	42513
	.byte	1,2,35,6,13
	.byte	'minResolution',0
	.word	7991
	.byte	4,2,35,8,13
	.byte	'trigger',0
	.word	71130
	.byte	16,2,35,12,13
	.byte	'countDir',0
	.word	20671
	.byte	1,2,35,28,13
	.byte	'startOffset',0
	.word	7991
	.byte	4,2,35,30,0,18
	.byte	'IfxStdIf_Timer_Config',0,6,136,2,3
	.word	71346
	.byte	18
	.byte	'IfxStdIf_PwmHl',0,11,61,32
	.word	41731
	.byte	18
	.byte	'IfxStdIf_PwmHl_Config',0,11,169,1,3
	.word	10122
	.byte	18
	.byte	'Ifx_GTM_ACCEN0_Bits',0,13,79,3
	.word	38387
	.byte	18
	.byte	'Ifx_GTM_ACCEN1_Bits',0,13,85,3
	.word	38298
	.byte	18
	.byte	'Ifx_GTM_ADCTRIG0OUT0_Bits',0,13,95,3
	.word	36460
	.byte	18
	.byte	'Ifx_GTM_ADCTRIG1OUT0_Bits',0,13,105,3
	.word	36620
	.byte	18
	.byte	'Ifx_GTM_AEI_ADDR_XPT_Bits',0,13,113,3
	.word	21317
	.byte	18
	.byte	'Ifx_GTM_BRIDGE_MODE_Bits',0,13,129,1,3
	.word	22740
	.byte	18
	.byte	'Ifx_GTM_BRIDGE_PTR1_Bits',0,13,140,1,3
	.word	23053
	.byte	18
	.byte	'Ifx_GTM_BRIDGE_PTR2_Bits',0,13,147,1,3
	.word	23261
	.byte	18
	.byte	'Ifx_GTM_CLC_Bits',0,13,157,1,3
	.word	35277
	.byte	18
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,13,164,1,3
	.word	25344
	.byte	18
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,13,172,1,3
	.word	25518
	.byte	18
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,13,180,1,3
	.word	25701
	.byte	18
	.byte	'Ifx_GTM_CMU_CLK_EN_Bits',0,13,198,1,3
	.word	24783
	.byte	18
	.byte	'Ifx_GTM_CMU_ECLK_DEN_Bits',0,13,205,1,3
	.word	26001
	.byte	18
	.byte	'Ifx_GTM_CMU_ECLK_NUM_Bits',0,13,212,1,3
	.word	25884
	.byte	18
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,13,219,1,3
	.word	26183
	.byte	18
	.byte	'Ifx_GTM_CMU_GCLK_DEN_Bits',0,13,226,1,3
	.word	25227
	.byte	18
	.byte	'Ifx_GTM_CMU_GCLK_NUM_Bits',0,13,233,1,3
	.word	25110
	.byte	18
	.byte	'Ifx_GTM_CTRL_Bits',0,13,243,1,3
	.word	21151
	.byte	18
	.byte	'Ifx_GTM_DTM_CH_CTRL1_Bits',0,13,143,2,3
	.word	32865
	.byte	18
	.byte	'Ifx_GTM_DTM_CH_CTRL2_Bits',0,13,180,2,3
	.word	33382
	.byte	18
	.byte	'Ifx_GTM_DTM_CH_CTRL2_SR_Bits',0,13,217,2,3
	.word	34008
	.byte	18
	.byte	'Ifx_GTM_DTM_CTRL_Bits',0,13,226,2,3
	.word	32712
	.byte	18
	.byte	'Ifx_GTM_DTM_DTV_CH_Bits',0,13,235,2,3
	.word	34954
	.byte	18
	.byte	'Ifx_GTM_DTM_PS_CTRL_Bits',0,13,247,2,3
	.word	34733
	.byte	18
	.byte	'Ifx_GTM_EIRQ_EN_Bits',0,13,129,3,3
	.word	22159
	.byte	18
	.byte	'Ifx_GTM_HW_CONF_Bits',0,13,146,3,3
	.word	22373
	.byte	18
	.byte	'Ifx_GTM_ICM_IRQG_0_Bits',0,13,154,3,3
	.word	26510
	.byte	18
	.byte	'Ifx_GTM_ICM_IRQG_2_Bits',0,13,168,3,3
	.word	26645
	.byte	18
	.byte	'Ifx_GTM_ICM_IRQG_6_Bits',0,13,205,3,3
	.word	26931
	.byte	18
	.byte	'Ifx_GTM_ICM_IRQG_CEI1_Bits',0,13,219,3,3
	.word	27951
	.byte	18
	.byte	'Ifx_GTM_ICM_IRQG_MEI_Bits',0,13,228,3,3
	.word	27792
	.byte	18
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,13,238,3,3
	.word	36152
	.byte	18
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,13,131,4,3
	.word	35745
	.byte	18
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,13,144,4,3
	.word	35434
	.byte	18
	.byte	'Ifx_GTM_IRQ_EN_Bits',0,13,154,4,3
	.word	21636
	.byte	18
	.byte	'Ifx_GTM_IRQ_FORCINT_Bits',0,13,164,4,3
	.word	21845
	.byte	18
	.byte	'Ifx_GTM_IRQ_MODE_Bits',0,13,171,4,3
	.word	22047
	.byte	18
	.byte	'Ifx_GTM_IRQ_NOTIFY_Bits',0,13,181,4,3
	.word	21451
	.byte	18
	.byte	'Ifx_GTM_KRST0_Bits',0,13,189,4,3
	.word	38175
	.byte	18
	.byte	'Ifx_GTM_KRST1_Bits',0,13,196,4,3
	.word	38071
	.byte	18
	.byte	'Ifx_GTM_KRSTCLR_Bits',0,13,203,4,3
	.word	37965
	.byte	18
	.byte	'Ifx_GTM_OCS_Bits',0,13,213,4,3
	.word	37805
	.byte	18
	.byte	'Ifx_GTM_ODA_Bits',0,13,221,4,3
	.word	37685
	.byte	18
	.byte	'Ifx_GTM_OTBU0T_Bits',0,13,230,4,3
	.word	36780
	.byte	18
	.byte	'Ifx_GTM_OTBU1T_Bits',0,13,239,4,3
	.word	36922
	.byte	18
	.byte	'Ifx_GTM_OTBU2T_Bits',0,13,248,4,3
	.word	37064
	.byte	18
	.byte	'Ifx_GTM_OTSC0_Bits',0,13,137,5,3
	.word	37391
	.byte	18
	.byte	'Ifx_GTM_OTSS_Bits',0,13,148,5,3
	.word	37206
	.byte	18
	.byte	'Ifx_GTM_REV_Bits',0,13,160,5,3
	.word	20857
	.byte	18
	.byte	'Ifx_GTM_RST_Bits',0,13,167,5,3
	.word	21049
	.byte	18
	.byte	'Ifx_GTM_TBU_CH0_BASE_Bits',0,13,174,5,3
	.word	24012
	.byte	18
	.byte	'Ifx_GTM_TBU_CH0_CTRL_Bits',0,13,182,5,3
	.word	23875
	.byte	18
	.byte	'Ifx_GTM_TBU_CH1_BASE_Bits',0,13,189,5,3
	.word	24262
	.byte	18
	.byte	'Ifx_GTM_TBU_CH1_CTRL_Bits',0,13,197,5,3
	.word	24125
	.byte	18
	.byte	'Ifx_GTM_TBU_CH2_BASE_Bits',0,13,204,5,3
	.word	24512
	.byte	18
	.byte	'Ifx_GTM_TBU_CH2_CTRL_Bits',0,13,212,5,3
	.word	24375
	.byte	18
	.byte	'Ifx_GTM_TBU_CHEN_Bits',0,13,221,5,3
	.word	23720
	.byte	18
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,13,235,5,3
	.word	23450
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_CNT_Bits',0,13,242,5,3
	.word	28661
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_CNTS_Bits',0,13,249,5,3
	.word	28883
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_CTRL_Bits',0,13,150,6,3
	.word	29481
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_ECNT_Bits',0,13,157,6,3
	.word	28771
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_ECTRL_Bits',0,13,164,6,3
	.word	30035
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,13,176,6,3
	.word	30975
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_FLT_FE_Bits',0,13,183,6,3
	.word	29365
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_FLT_RE_Bits',0,13,190,6,3
	.word	29249
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_GPR0_Bits',0,13,197,6,3
	.word	28451
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_GPR1_Bits',0,13,204,6,3
	.word	28556
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,13,216,6,3
	.word	30367
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,13,228,6,3
	.word	30618
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,13,235,6,3
	.word	30856
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,13,247,6,3
	.word	30154
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_TDUC_Bits',0,13,254,6,3
	.word	28988
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_TDUV_Bits',0,13,135,7,3
	.word	29101
	.byte	18
	.byte	'Ifx_GTM_TIM_IN_SRC_Bits',0,13,156,7,3
	.word	31688
	.byte	18
	.byte	'Ifx_GTM_TIM_INP_VAL_Bits',0,13,165,7,3
	.word	31541
	.byte	18
	.byte	'Ifx_GTM_TIM_RST_Bits',0,13,179,7,3
	.word	32040
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_CM0_Bits',0,13,186,7,3
	.word	11134
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_CM1_Bits',0,13,193,7,3
	.word	11244
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_CN0_Bits',0,13,200,7,3
	.word	11354
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_CTRL_Bits',0,13,218,7,3
	.word	10580
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,13,226,7,3
	.word	11710
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,13,234,7,3
	.word	11857
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,13,241,7,3
	.word	12005
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,13,249,7,3
	.word	11573
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_SR0_Bits',0,13,128,8,3
	.word	10914
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_SR1_Bits',0,13,135,8,3
	.word	11024
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_STAT_Bits',0,13,142,8,3
	.word	11464
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,13,151,8,3
	.word	12791
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,13,165,8,3
	.word	13654
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,13,179,8,3
	.word	13942
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,13,200,8,3
	.word	12947
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,13,223,8,3
	.word	12341
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,13,237,8,3
	.word	13379
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,13,251,8,3
	.word	14230
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,13,137,9,3
	.word	14518
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,13,146,9,3
	.word	15300
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,13,160,9,3
	.word	16163
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,13,174,9,3
	.word	16451
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,13,195,9,3
	.word	15456
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,13,218,9,3
	.word	14850
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,13,232,9,3
	.word	15888
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,13,246,9,3
	.word	16739
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,13,132,10,3
	.word	17027
	.byte	18
	.byte	'Ifx_GTM_ACCEN0',0,13,145,10,3
	.word	38916
	.byte	18
	.byte	'Ifx_GTM_ACCEN1',0,13,153,10,3
	.word	38347
	.byte	18
	.byte	'Ifx_GTM_ADCTRIG0OUT0',0,13,161,10,3
	.word	36580
	.byte	18
	.byte	'Ifx_GTM_ADCTRIG1OUT0',0,13,169,10,3
	.word	36740
	.byte	18
	.byte	'Ifx_GTM_AEI_ADDR_XPT',0,13,177,10,3
	.word	21411
	.byte	18
	.byte	'Ifx_GTM_BRIDGE_MODE',0,13,185,10,3
	.word	23013
	.byte	18
	.byte	'Ifx_GTM_BRIDGE_PTR1',0,13,193,10,3
	.word	23221
	.byte	18
	.byte	'Ifx_GTM_BRIDGE_PTR2',0,13,201,10,3
	.word	23340
	.byte	18
	.byte	'Ifx_GTM_CLC',0,13,209,10,3
	.word	35394
	.byte	18
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL',0,13,217,10,3
	.word	25423
	.byte	18
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL',0,13,225,10,3
	.word	25616
	.byte	18
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL',0,13,233,10,3
	.word	25799
	.byte	18
	.byte	'Ifx_GTM_CMU_CLK_EN',0,13,241,10,3
	.word	25070
	.byte	18
	.byte	'Ifx_GTM_CMU_ECLK_DEN',0,13,249,10,3
	.word	26078
	.byte	18
	.byte	'Ifx_GTM_CMU_ECLK_NUM',0,13,129,11,3
	.word	25961
	.byte	18
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL',0,13,137,11,3
	.word	26262
	.byte	18
	.byte	'Ifx_GTM_CMU_GCLK_DEN',0,13,145,11,3
	.word	25304
	.byte	18
	.byte	'Ifx_GTM_CMU_GCLK_NUM',0,13,153,11,3
	.word	25187
	.byte	18
	.byte	'Ifx_GTM_CTRL',0,13,161,11,3
	.word	21277
	.byte	18
	.byte	'Ifx_GTM_DTM_CH_CTRL1',0,13,169,11,3
	.word	33342
	.byte	18
	.byte	'Ifx_GTM_DTM_CH_CTRL2',0,13,177,11,3
	.word	33968
	.byte	18
	.byte	'Ifx_GTM_DTM_CH_CTRL2_SR',0,13,185,11,3
	.word	34693
	.byte	18
	.byte	'Ifx_GTM_DTM_CTRL',0,13,193,11,3
	.word	32825
	.byte	18
	.byte	'Ifx_GTM_DTM_DTV_CH',0,13,201,11,3
	.word	35070
	.byte	18
	.byte	'Ifx_GTM_DTM_PS_CTRL',0,13,209,11,3
	.word	34914
	.byte	18
	.byte	'Ifx_GTM_EIRQ_EN',0,13,217,11,3
	.word	22333
	.byte	18
	.byte	'Ifx_GTM_HW_CONF',0,13,225,11,3
	.word	22700
	.byte	18
	.byte	'Ifx_GTM_ICM_IRQG_0',0,13,233,11,3
	.word	26605
	.byte	18
	.byte	'Ifx_GTM_ICM_IRQG_2',0,13,241,11,3
	.word	26891
	.byte	18
	.byte	'Ifx_GTM_ICM_IRQG_6',0,13,249,11,3
	.word	27743
	.byte	18
	.byte	'Ifx_GTM_ICM_IRQG_CEI1',0,13,129,12,3
	.word	28208
	.byte	18
	.byte	'Ifx_GTM_ICM_IRQG_MEI',0,13,137,12,3
	.word	27911
	.byte	18
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL',0,13,145,12,3
	.word	36280
	.byte	18
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL',0,13,153,12,3
	.word	36046
	.byte	18
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL',0,13,161,12,3
	.word	35618
	.byte	18
	.byte	'Ifx_GTM_IRQ_EN',0,13,169,12,3
	.word	21805
	.byte	18
	.byte	'Ifx_GTM_IRQ_FORCINT',0,13,177,12,3
	.word	22007
	.byte	18
	.byte	'Ifx_GTM_IRQ_MODE',0,13,185,12,3
	.word	22119
	.byte	18
	.byte	'Ifx_GTM_IRQ_NOTIFY',0,13,193,12,3
	.word	21596
	.byte	18
	.byte	'Ifx_GTM_KRST0',0,13,201,12,3
	.word	38258
	.byte	18
	.byte	'Ifx_GTM_KRST1',0,13,209,12,3
	.word	38135
	.byte	18
	.byte	'Ifx_GTM_KRSTCLR',0,13,217,12,3
	.word	38031
	.byte	18
	.byte	'Ifx_GTM_OCS',0,13,225,12,3
	.word	37925
	.byte	18
	.byte	'Ifx_GTM_ODA',0,13,233,12,3
	.word	37765
	.byte	18
	.byte	'Ifx_GTM_OTBU0T',0,13,241,12,3
	.word	36882
	.byte	18
	.byte	'Ifx_GTM_OTBU1T',0,13,249,12,3
	.word	37024
	.byte	18
	.byte	'Ifx_GTM_OTBU2T',0,13,129,13,3
	.word	37166
	.byte	18
	.byte	'Ifx_GTM_OTSC0',0,13,137,13,3
	.word	37645
	.byte	18
	.byte	'Ifx_GTM_OTSS',0,13,145,13,3
	.word	37351
	.byte	18
	.byte	'Ifx_GTM_REV',0,13,153,13,3
	.word	21009
	.byte	18
	.byte	'Ifx_GTM_RST',0,13,161,13,3
	.word	21111
	.byte	18
	.byte	'Ifx_GTM_TBU_CH0_BASE',0,13,169,13,3
	.word	24085
	.byte	18
	.byte	'Ifx_GTM_TBU_CH0_CTRL',0,13,177,13,3
	.word	23972
	.byte	18
	.byte	'Ifx_GTM_TBU_CH1_BASE',0,13,185,13,3
	.word	24335
	.byte	18
	.byte	'Ifx_GTM_TBU_CH1_CTRL',0,13,193,13,3
	.word	24222
	.byte	18
	.byte	'Ifx_GTM_TBU_CH2_BASE',0,13,201,13,3
	.word	24585
	.byte	18
	.byte	'Ifx_GTM_TBU_CH2_CTRL',0,13,209,13,3
	.word	24472
	.byte	18
	.byte	'Ifx_GTM_TBU_CHEN',0,13,217,13,3
	.word	23835
	.byte	18
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC',0,13,225,13,3
	.word	23660
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_CNT',0,13,233,13,3
	.word	28731
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_CNTS',0,13,241,13,3
	.word	28948
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_CTRL',0,13,249,13,3
	.word	29995
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_ECNT',0,13,129,14,3
	.word	28843
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_ECTRL',0,13,137,14,3
	.word	30114
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN',0,13,145,14,3
	.word	31193
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_FLT_FE',0,13,153,14,3
	.word	29441
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_FLT_RE',0,13,161,14,3
	.word	29325
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_GPR0',0,13,169,14,3
	.word	28516
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_GPR1',0,13,177,14,3
	.word	28621
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN',0,13,185,14,3
	.word	30578
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT',0,13,193,14,3
	.word	30816
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE',0,13,201,14,3
	.word	30935
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY',0,13,209,14,3
	.word	30327
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_TDUC',0,13,217,14,3
	.word	29061
	.byte	18
	.byte	'Ifx_GTM_TIM_CH_TDUV',0,13,225,14,3
	.word	29209
	.byte	18
	.byte	'Ifx_GTM_TIM_IN_SRC',0,13,233,14,3
	.word	32000
	.byte	18
	.byte	'Ifx_GTM_TIM_INP_VAL',0,13,241,14,3
	.word	31648
	.byte	18
	.byte	'Ifx_GTM_TIM_RST',0,13,249,14,3
	.word	32243
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_CM0',0,13,129,15,3
	.word	11204
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_CM1',0,13,137,15,3
	.word	11314
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_CN0',0,13,145,15,3
	.word	11424
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_CTRL',0,13,153,15,3
	.word	10874
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN',0,13,161,15,3
	.word	11817
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT',0,13,169,15,3
	.word	11965
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE',0,13,177,15,3
	.word	12084
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY',0,13,185,15,3
	.word	11670
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_SR0',0,13,193,15,3
	.word	10984
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_SR1',0,13,201,15,3
	.word	11094
	.byte	18
	.byte	'Ifx_GTM_TOM_CH_STAT',0,13,209,15,3
	.word	11533
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB',0,13,217,15,3
	.word	12907
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL',0,13,225,15,3
	.word	13902
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT',0,13,233,15,3
	.word	14190
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL',0,13,241,15,3
	.word	13339
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL',0,13,249,15,3
	.word	12751
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG',0,13,129,16,3
	.word	13609
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL',0,13,137,16,3
	.word	14478
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT',0,13,145,16,3
	.word	14766
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB',0,13,153,16,3
	.word	15416
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL',0,13,161,16,3
	.word	16411
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT',0,13,169,16,3
	.word	16699
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL',0,13,177,16,3
	.word	15848
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL',0,13,185,16,3
	.word	15260
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG',0,13,193,16,3
	.word	16118
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL',0,13,201,16,3
	.word	16987
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT',0,13,209,16,3
	.word	17275
	.byte	3
	.word	25463
	.byte	18
	.byte	'Ifx_GTM_CMU_CLK0_5',0,13,223,16,3
	.word	78338
	.byte	3
	.word	25656
	.byte	18
	.byte	'Ifx_GTM_CMU_CLK_6',0,13,229,16,3
	.word	78371
	.byte	3
	.word	25839
	.byte	18
	.byte	'Ifx_GTM_CMU_CLK_7',0,13,235,16,3
	.word	78403
	.byte	3
	.word	26118
	.byte	18
	.byte	'Ifx_GTM_CMU_ECLK',0,13,242,16,3
	.word	78435
	.byte	3
	.word	26302
	.byte	18
	.byte	'Ifx_GTM_CMU_FXCLK',0,13,248,16,3
	.word	78466
	.byte	3
	.word	36320
	.byte	18
	.byte	'Ifx_GTM_INOUTSEL_CAN',0,13,254,16,3
	.word	78498
	.byte	3
	.word	36095
	.byte	18
	.byte	'Ifx_GTM_INOUTSEL_T',0,13,132,17,3
	.word	78533
	.byte	3
	.word	35667
	.byte	18
	.byte	'Ifx_GTM_INOUTSEL_TIM',0,13,139,17,3
	.word	78566
	.byte	3
	.word	31242
	.byte	18
	.byte	'Ifx_GTM_TIM_CH',0,13,161,17,3
	.word	78601
	.byte	3
	.word	12124
	.byte	18
	.byte	'Ifx_GTM_TOM_CH',0,13,178,17,3
	.word	78630
	.byte	3
	.word	23380
	.byte	18
	.byte	'Ifx_GTM_BRIDGE',0,13,196,17,3
	.word	78659
	.byte	3
	.word	26347
	.byte	18
	.byte	'Ifx_GTM_CMU',0,13,209,17,3
	.word	78688
	.byte	3
	.word	35119
	.byte	18
	.byte	'Ifx_GTM_DTM',0,13,220,17,3
	.word	78714
	.byte	3
	.word	28248
	.byte	18
	.byte	'Ifx_GTM_ICM',0,13,234,17,3
	.word	78740
	.byte	3
	.word	36370
	.byte	18
	.byte	'Ifx_GTM_INOUTSEL',0,13,243,17,3
	.word	78766
	.byte	3
	.word	24625
	.byte	18
	.byte	'Ifx_GTM_TBU',0,13,255,17,3
	.word	78797
	.byte	3
	.word	32318
	.byte	18
	.byte	'Ifx_GTM_TIM',0,13,150,18,3
	.word	78823
	.byte	3
	.word	17356
	.byte	18
	.byte	'Ifx_GTM_TOM',0,13,199,18,3
	.word	78849
	.byte	3
	.word	38967
	.byte	18
	.byte	'Ifx_GTM',0,13,138,19,3
	.word	78875
	.byte	3
	.word	18680
	.byte	18
	.byte	'Ifx_GTM_TOM_TGC',0,14,166,1,40
	.word	78897
	.byte	16,14,194,1,9,1,17
	.byte	'IfxGtm_Tim_0',0,0,0,18
	.byte	'IfxGtm_Tim',0,14,197,1,3
	.word	78927
	.byte	16,14,201,1,9,1,17
	.byte	'IfxGtm_Tim_Ch_0',0,0,17
	.byte	'IfxGtm_Tim_Ch_1',0,1,17
	.byte	'IfxGtm_Tim_Ch_2',0,2,17
	.byte	'IfxGtm_Tim_Ch_3',0,3,17
	.byte	'IfxGtm_Tim_Ch_4',0,4,17
	.byte	'IfxGtm_Tim_Ch_5',0,5,17
	.byte	'IfxGtm_Tim_Ch_6',0,6,17
	.byte	'IfxGtm_Tim_Ch_7',0,7,0,18
	.byte	'IfxGtm_Tim_Ch',0,14,211,1,3
	.word	78969
	.byte	18
	.byte	'IfxGtm_Tom',0,14,219,1,3
	.word	20084
	.byte	18
	.byte	'IfxGtm_Tom_Ch',0,14,242,1,3
	.word	18280
	.byte	16,23,47,9,1,17
	.byte	'IfxGtm_IrqMode_level',0,0,17
	.byte	'IfxGtm_IrqMode_pulse',0,1,17
	.byte	'IfxGtm_IrqMode_pulseNotify',0,2,17
	.byte	'IfxGtm_IrqMode_singlePulse',0,3,0,18
	.byte	'IfxGtm_IrqMode',0,23,53,3
	.word	79186
	.byte	16,24,49,9,1,17
	.byte	'IfxGtm_Tbu_Ts_0',0,0,17
	.byte	'IfxGtm_Tbu_Ts_1',0,1,17
	.byte	'IfxGtm_Tbu_Ts_2',0,2,0,18
	.byte	'IfxGtm_Tbu_Ts',0,24,54,3
	.word	79319
	.byte	18
	.byte	'IfxGtm_Tom_Ch_ClkSrc',0,12,64,3
	.word	10362
	.byte	18
	.byte	'IfxGtm_Tom_Ch_OutputTrigger',0,12,72,3
	.word	19481
	.byte	18
	.byte	'IfxGtm_Tom_Ch_ResetEvent',0,12,80,3
	.word	19231
	.byte	16,15,41,9,1,17
	.byte	'IfxGtm_ChXSel_a',0,0,17
	.byte	'IfxGtm_ChXSel_b',0,1,17
	.byte	'IfxGtm_ChXSel_c',0,2,17
	.byte	'IfxGtm_ChXSel_d',0,3,17
	.byte	'IfxGtm_ChXSel_e',0,4,17
	.byte	'IfxGtm_ChXSel_f',0,5,17
	.byte	'IfxGtm_ChXSel_g',0,6,17
	.byte	'IfxGtm_ChXSel_h',0,7,17
	.byte	'IfxGtm_ChXSel_i',0,8,17
	.byte	'IfxGtm_ChXSel_j',0,9,17
	.byte	'IfxGtm_ChXSel_k',0,10,17
	.byte	'IfxGtm_ChXSel_l',0,11,17
	.byte	'IfxGtm_ChXSel_m',0,12,17
	.byte	'IfxGtm_ChXSel_n',0,13,17
	.byte	'IfxGtm_ChXSel_o',0,14,17
	.byte	'IfxGtm_ChXSel_p',0,15,0,18
	.byte	'IfxGtm_ChXSel',0,15,62,3
	.word	79499
	.byte	18
	.byte	'IfxGtm_ToutSel',0,15,72,3
	.word	20121
	.byte	22
	.word	20478
	.byte	18
	.byte	'IfxGtm_Tom_ToutMap',0,15,92,3
	.word	79838
	.byte	18
	.byte	'IfxGtm_Tom_Timer_Base',0,16,135,1,3
	.word	20773
	.byte	18
	.byte	'IfxGtm_Tom_Timer',0,16,156,1,3
	.word	40055
	.byte	18
	.byte	'IfxGtm_Tom_PwmHl',0,17,135,1,35
	.word	41020
	.byte	18
	.byte	'IfxGtm_Tom_PwmHl_Base',0,17,158,1,3
	.word	40762
	.byte	18
	.byte	'IfxGtm_Tom_PwmHl_Config',0,17,173,1,3
	.word	41229
	.byte	29,17,177,1,9,8,13
	.byte	'inverted',0
	.word	408
	.byte	1,2,35,0,13
	.byte	'update',0
	.word	40973
	.byte	4,2,35,4,0,18
	.byte	'IfxGtm_Tom_PwmHl_Mode',0,17,181,1,3
	.word	80017
	.byte	14,40
	.word	80017
	.byte	15,4,0
.L344:
	.byte	22
	.word	80089
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L114:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,59,0,3,8,0,0,3,53,0,73,19,0,0,4,15,0,73,19,0,0,5,36,0
	.byte	3,8,11,15,62,15,0,0,6,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,7,5,0,3,8,58,15,59,15,57,15,73
	.byte	19,0,0,8,11,0,0,0,9,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,10,19,1,3,8,58,15,59,15,57
	.byte	15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13,0
	.byte	3,8,73,19,11,15,56,9,0,0,14,1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16,4,1,58,15,59,15,57,15,11,15,0,0,17
	.byte	40,0,3,8,28,13,0,0,18,22,0,3,8,58,15,59,15,57,15,73,19,0,0,19,21,1,73,19,54,15,39,12,0,0,20,5,0,73,19
	.byte	0,0,21,21,1,54,15,39,12,0,0,22,38,0,73,19,0,0,23,55,0,73,19,0,0,24,46,1,3,8,58,15,59,15,57,15,73,19,54
	.byte	15,39,12,63,12,60,12,0,0,25,5,0,58,15,59,15,57,15,73,19,0,0,26,24,0,58,15,59,15,57,15,0,0,27,46,1,49,19
	.byte	0,0,28,5,0,49,19,0,0,29,19,1,58,15,59,15,57,15,11,15,0,0,30,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63
	.byte	12,60,12,0,0,31,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,32,21,0,54,15,0,0,33,52,0,3,8,58,15,59
	.byte	15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L115:
	.word	.L434-.L433
.L433:
	.half	3
	.word	.L436-.L435
.L435:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Reg',0
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_common\\ifx_cfg\\include',0
	.byte	0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf.h',0
	.byte	0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'stdio.h',0,2,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_PwmHl.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Std\\IfxGtm_Tom.h',0
	.byte	0,0,0
	.byte	'IfxGtm_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxGtm_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_PinMap\\IfxGtm_PinMap.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.h',0
	.byte	0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.h',0,0,0,0
	.byte	'Ifx_Cfg.h',0,3,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxSrc_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxScu_cfg.h',0
	.byte	0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Std\\IfxGtm.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Std\\IfxGtm_Tbu.h',0
	.byte	0,0,0,0
.L436:
.L434:
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_info'
.L116:
	.word	644
	.half	3
	.word	.L117
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L119,.L118
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_init',0,1,116,9
	.word	.L238
	.byte	1,1,1
	.word	.L73,.L239,.L72
	.byte	4
	.byte	'driver',0,1,116,49
	.word	.L240,.L241
	.byte	4
	.byte	'config',0,1,116,88
	.word	.L242,.L243
	.byte	5
	.word	.L73,.L239
	.byte	6
	.byte	'result',0,1,118,23
	.word	.L238,.L244
	.byte	6
	.byte	'channelMask',0,1,119,23
	.word	.L245,.L246
	.byte	6
	.byte	'channelsMask',0,1,120,23
	.word	.L245,.L247
	.byte	6
	.byte	'channelIndex',0,1,121,23
	.word	.L248,.L249
	.byte	6
	.byte	'maskShift',0,1,122,23
	.word	.L245,.L250
	.byte	6
	.byte	'timer',0,1,123,23
	.word	.L251,.L252
	.byte	7
	.byte	'__func__',0,1,129,1,9
	.word	.L253
	.byte	5,3
	.word	_999001___func__
	.byte	5
	.word	.L8,.L239
	.byte	6
	.byte	'clock',0,1,162,1,26
	.word	.L254,.L255
	.byte	8
	.word	.L256
	.byte	6
	.byte	'channel',0,1,166,1,23
	.word	.L258,.L259
	.byte	9
	.word	.L260,.L261,.L262
	.byte	10
	.word	.L263,.L264
	.byte	10
	.word	.L265,.L266
	.byte	10
	.word	.L267,.L268
	.byte	11
	.word	.L269,.L270
	.byte	0,9
	.word	.L260,.L271,.L257
	.byte	10
	.word	.L263,.L264
	.byte	10
	.word	.L265,.L266
	.byte	10
	.word	.L267,.L268
	.byte	12
	.word	.L269,.L271,.L257
	.byte	0,0,5
	.word	.L272,.L239
	.byte	6
	.byte	'tOn',0,1,226,1,20
	.word	.L273,.L274
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_abbrev'
.L117:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,8,11,1,85,6,0,0,9
	.byte	29,1,49,16,17,1,18,1,0,0,10,5,0,49,16,2,6,0,0,11,11,0,49,16,85,6,0,0,12,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_line'
.L118:
	.word	.L438-.L437
.L437:
	.half	3
	.word	.L440-.L439
.L439:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L440:
	.byte	5,9,7,0,5,2
	.word	.L73
	.byte	3,243,0,1,5,44,9
	.half	.L350-.L73
	.byte	3,7,1,5,36,9
	.half	.L351-.L350
	.byte	3,123,1,5,9,3,126,1,5,36,9
	.half	.L346-.L351
	.byte	3,4,1,5,9,3,124,1,5,36,9
	.half	.L352-.L346
	.byte	3,10,1,5,53,9
	.half	.L347-.L352
	.byte	1,5,5,9
	.half	.L441-.L347
	.byte	1,5,16,7,9
	.half	.L442-.L441
	.byte	3,2,1,5,9,3,1,1,5,37,9
	.half	.L5-.L442
	.byte	3,6,1,5,35,1,5,37,9
	.half	.L443-.L5
	.byte	3,2,1,5,35,3,127,1,9
	.half	.L444-.L443
	.byte	3,1,1,9
	.half	.L445-.L444
	.byte	3,1,1,5,54,9
	.half	.L446-.L445
	.byte	3,5,1,5,49,9
	.half	.L353-.L446
	.byte	3,124,1,5,35,9
	.half	.L447-.L353
	.byte	1,5,49,9
	.half	.L448-.L447
	.byte	3,1,1,5,35,9
	.half	.L449-.L448
	.byte	1,5,49,9
	.half	.L450-.L449
	.byte	3,1,1,5,35,9
	.half	.L451-.L450
	.byte	1,5,54,9
	.half	.L452-.L451
	.byte	3,2,1,9
	.half	.L354-.L452
	.byte	3,1,1,5,26,9
	.half	.L356-.L354
	.byte	3,2,1,5,43,9
	.half	.L453-.L356
	.byte	1,5,36,9
	.half	.L454-.L453
	.byte	1,5,17,9
	.half	.L455-.L454
	.byte	1,5,15,9
	.half	.L456-.L455
	.byte	3,3,1,5,20,9
	.half	.L457-.L456
	.byte	1,5,23,9
	.half	.L458-.L457
	.byte	1,5,36,9
	.half	.L459-.L458
	.byte	1,5,5,9
	.half	.L460-.L459
	.byte	1,5,64,3,6,1,5,21,9
	.half	.L461-.L460
	.byte	1,5,24,9
	.half	.L462-.L461
	.byte	3,3,1,5,29,9
	.half	.L463-.L462
	.byte	1,5,32,9
	.half	.L464-.L463
	.byte	1,5,5,9
	.half	.L465-.L464
	.byte	3,2,1,5,42,9
	.half	.L357-.L465
	.byte	3,126,1,5,5,9
	.half	.L466-.L357
	.byte	3,2,1,7,9
	.half	.L467-.L466
	.byte	1,5,68,9
	.half	.L8-.L467
	.byte	3,2,1,5,80,9
	.half	.L468-.L8
	.byte	1,5,32,9
	.half	.L358-.L468
	.byte	1,5,84,3,2,1,5,23,9
	.half	.L359-.L358
	.byte	1,5,68,1,5,43,9
	.half	.L10-.L359
	.byte	3,4,1,5,37,9
	.half	.L469-.L10
	.byte	3,2,1,5,48,9
	.half	.L470-.L469
	.byte	3,126,1,5,62,9
	.half	.L471-.L470
	.byte	1,5,35,9
	.half	.L360-.L471
	.byte	3,1,1,5,51,9
	.half	.L472-.L360
	.byte	3,1,1,5,39,9
	.half	.L362-.L472
	.byte	1,5,60,9
	.half	.L349-.L362
	.byte	3,5,1,5,27,9
	.half	.L363-.L349
	.byte	3,4,1,5,73,9
	.half	.L473-.L363
	.byte	3,127,1,5,13,9
	.half	.L364-.L473
	.byte	3,1,1,5,45,9
	.half	.L474-.L364
	.byte	3,2,1,5,68,9
	.half	.L475-.L474
	.byte	1,5,51,9
	.half	.L476-.L475
	.byte	3,1,1,5,74,9
	.half	.L366-.L476
	.byte	1,5,72,9
	.half	.L367-.L366
	.byte	3,3,1,5,27,9
	.half	.L477-.L367
	.byte	3,1,1,5,60,9
	.half	.L478-.L477
	.byte	3,127,1,5,24,7,9
	.half	.L479-.L478
	.byte	3,161,127,1,5,44,9
	.half	.L14-.L479
	.byte	3,223,0,1,5,13,9
	.half	.L480-.L14
	.byte	3,1,1,5,60,9
	.half	.L481-.L480
	.byte	3,2,1,5,44,1,5,60,9
	.half	.L368-.L481
	.byte	1,5,62,9
	.half	.L369-.L368
	.byte	3,1,1,5,46,1,5,62,9
	.half	.L370-.L369
	.byte	1,5,94,9
	.half	.L371-.L370
	.byte	3,1,1,5,45,9
	.half	.L482-.L371
	.byte	1,5,87,9
	.half	.L483-.L482
	.byte	1,5,40,9
	.half	.L484-.L483
	.byte	3,3,1,5,45,9
	.half	.L485-.L484
	.byte	1,5,50,9
	.half	.L486-.L485
	.byte	3,1,1,5,119,9
	.half	.L487-.L486
	.byte	3,1,1,5,107,9
	.half	.L488-.L487
	.byte	1,5,72,9
	.half	.L261-.L488
	.byte	1,5,77,9
	.half	.L489-.L261
	.byte	1,5,45,9
	.half	.L262-.L489
	.byte	3,3,1,5,39,9
	.half	.L490-.L262
	.byte	3,2,1,5,52,9
	.half	.L491-.L490
	.byte	3,126,1,5,66,9
	.half	.L492-.L491
	.byte	1,5,37,9
	.half	.L493-.L492
	.byte	3,1,1,5,53,9
	.half	.L494-.L493
	.byte	3,1,1,5,82,3,92,1,5,41,9
	.half	.L495-.L494
	.byte	3,36,1,5,60,9
	.half	.L496-.L495
	.byte	3,5,1,5,62,9
	.half	.L497-.L496
	.byte	3,4,1,5,72,9
	.half	.L498-.L497
	.byte	3,127,1,5,13,9
	.half	.L374-.L498
	.byte	3,1,1,5,45,9
	.half	.L499-.L374
	.byte	3,2,1,5,68,9
	.half	.L375-.L499
	.byte	1,5,51,9
	.half	.L500-.L375
	.byte	3,1,1,5,74,9
	.half	.L501-.L500
	.byte	1,5,60,9
	.half	.L376-.L501
	.byte	3,2,1,5,44,1,5,60,9
	.half	.L377-.L376
	.byte	1,5,62,9
	.half	.L378-.L377
	.byte	3,1,1,5,46,1,5,62,9
	.half	.L379-.L378
	.byte	1,5,94,9
	.half	.L380-.L379
	.byte	3,1,1,5,45,9
	.half	.L502-.L380
	.byte	1,5,87,9
	.half	.L503-.L502
	.byte	1,5,40,9
	.half	.L504-.L503
	.byte	3,3,1,5,47,9
	.half	.L505-.L504
	.byte	1,5,50,9
	.half	.L506-.L505
	.byte	3,1,1,5,123,9
	.half	.L507-.L506
	.byte	3,1,1,5,111,9
	.half	.L508-.L507
	.byte	1,5,74,9
	.half	.L271-.L508
	.byte	1,5,81,9
	.half	.L509-.L271
	.byte	1,5,82,9
	.half	.L257-.L509
	.byte	3,71,1,5,55,9
	.half	.L9-.L257
	.byte	1,5,68,9
	.half	.L510-.L9
	.byte	1,5,38,7,9
	.half	.L511-.L510
	.byte	3,60,1,5,61,9
	.half	.L272-.L511
	.byte	3,2,1,5,59,9
	.half	.L512-.L272
	.byte	1,5,40,9
	.half	.L513-.L512
	.byte	3,1,1,5,70,9
	.half	.L384-.L513
	.byte	3,3,1,5,49,1,5,76,9
	.half	.L514-.L384
	.byte	1,5,73,9
	.half	.L385-.L514
	.byte	1,5,76,1,5,34,9
	.half	.L386-.L385
	.byte	3,1,1,5,56,9
	.half	.L515-.L386
	.byte	3,1,1,5,49,1,5,76,9
	.half	.L516-.L515
	.byte	1,5,73,9
	.half	.L387-.L516
	.byte	1,5,76,1,5,23,9
	.half	.L388-.L387
	.byte	3,3,1,5,84,1,5,68,9
	.half	.L381-.L388
	.byte	1,5,61,9
	.half	.L23-.L381
	.byte	3,2,1,5,63,9
	.half	.L390-.L23
	.byte	3,1,1,5,82,9
	.half	.L392-.L390
	.byte	3,125,1,5,55,9
	.half	.L22-.L392
	.byte	1,5,68,9
	.half	.L517-.L22
	.byte	1,5,5,7,9
	.half	.L518-.L517
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L120-.L518
	.byte	0,1,1
.L438:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_ranges'
.L119:
	.word	-1,.L73,0,.L120-.L73,0,0
.L256:
	.word	-1,.L73,.L10-.L73,.L257-.L73,-1,.L75,0,.L230-.L75,-1,.L77,0,.L220-.L77,-1,.L79,0,.L215-.L79,-1,.L81,0
	.word	.L205-.L81,-1,.L83,0,.L200-.L83,0,0
.L270:
	.word	-1,.L73,.L261-.L73,.L262-.L73,-1,.L85,0,.L195-.L85,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_info'
.L121:
	.word	284
	.half	3
	.word	.L122
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L124,.L123
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_initConfig',0,1,245,1,6,1,1,1
	.word	.L87,.L275,.L86
	.byte	4
	.byte	'config',0,1,245,1,59
	.word	.L276,.L277
	.byte	5
	.word	.L87,.L275
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_abbrev'
.L122:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_line'
.L123:
	.word	.L520-.L519
.L519:
	.half	3
	.word	.L522-.L521
.L521:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L522:
	.byte	5,6,7,0,5,2
	.word	.L87
	.byte	3,244,1,1,5,38,9
	.half	.L394-.L87
	.byte	3,2,1,5,21,9
	.half	.L393-.L394
	.byte	3,1,1,5,19,9
	.half	.L523-.L393
	.byte	1,5,21,9
	.half	.L524-.L523
	.byte	3,1,1,5,19,1,9
	.half	.L525-.L524
	.byte	3,1,1,9
	.half	.L526-.L525
	.byte	3,1,1,5,1,9
	.half	.L527-.L526
	.byte	3,1,1,7,9
	.half	.L125-.L527
	.byte	0,1,1
.L520:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_ranges'
.L124:
	.word	-1,.L87,0,.L125-.L87,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_info'
.L126:
	.word	283
	.half	3
	.word	.L127
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L129,.L128
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_getDeadtime',0,1,98,9
	.word	.L278
	.byte	1,1,1
	.word	.L65,.L279,.L64
	.byte	4
	.byte	'driver',0,1,98,56
	.word	.L240,.L280
	.byte	5
	.word	.L281
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_abbrev'
.L127:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_line'
.L128:
	.word	.L529-.L528
.L528:
	.half	3
	.word	.L531-.L530
.L530:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0,0
.L531:
	.byte	5,78,7,0,5,2
	.word	.L65
	.byte	3,227,0,1,4,2,5,12,9
	.half	.L532-.L65
	.byte	3,160,2,1,4,1,5,1,9
	.half	.L345-.L532
	.byte	3,225,125,1,7,9
	.half	.L130-.L345
	.byte	0,1,1
.L529:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_ranges'
.L129:
	.word	-1,.L65,0,.L130-.L65,0,0
.L281:
	.word	-1,.L65,0,.L279-.L65,-1,.L67,0,.L210-.L67,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_info'
.L131:
	.word	287
	.half	3
	.word	.L132
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L134,.L133
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_getMinPulse',0,1,104,9
	.word	.L278
	.byte	1,1,1
	.word	.L69,.L282,.L68
	.byte	4
	.byte	'driver',0,1,104,56
	.word	.L240,.L283
	.byte	5
	.word	.L69,.L282
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_abbrev'
.L132:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_line'
.L133:
	.word	.L534-.L533
.L533:
	.half	3
	.word	.L536-.L535
.L535:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0,0
.L536:
	.byte	5,78,7,0,5,2
	.word	.L69
	.byte	3,233,0,1,5,102,9
	.half	.L537-.L69
	.byte	1,5,88,9
	.half	.L538-.L537
	.byte	1,4,2,5,12,9
	.half	.L539-.L538
	.byte	3,154,2,1,4,1,5,1,9
	.half	.L540-.L539
	.byte	3,231,125,1,7,9
	.half	.L135-.L540
	.byte	0,1,1
.L534:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_ranges'
.L134:
	.word	-1,.L69,0,.L135-.L69,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_info'
.L136:
	.word	283
	.half	3
	.word	.L137
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L139,.L138
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_getMode',0,1,110,14
	.word	.L284
	.byte	1,1,1
	.word	.L71,.L285,.L70
	.byte	4
	.byte	'driver',0,1,110,57
	.word	.L240,.L286
	.byte	5
	.word	.L71,.L285
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_abbrev'
.L137:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_line'
.L138:
	.word	.L542-.L541
.L541:
	.half	3
	.word	.L544-.L543
.L543:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L544:
	.byte	5,24,7,0,5,2
	.word	.L71
	.byte	3,239,0,1,5,1,9
	.half	.L545-.L71
	.byte	3,1,1,7,9
	.half	.L140-.L545
	.byte	0,1,1
.L542:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_ranges'
.L139:
	.word	-1,.L71,0,.L140-.L71,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_info'
.L141:
	.word	307
	.half	3
	.word	.L142
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L144,.L143
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setDeadtime',0,1,255,1,9
	.word	.L238
	.byte	1,1,1
	.word	.L89,.L287,.L88
	.byte	4
	.byte	'driver',0,1,255,1,56
	.word	.L240,.L288
	.byte	4
	.byte	'deadtime',0,1,255,1,72
	.word	.L278,.L289
	.byte	5
	.word	.L290
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_abbrev'
.L142:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_line'
.L143:
	.word	.L547-.L546
.L546:
	.half	3
	.word	.L549-.L548
.L548:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L549:
	.byte	5,57,7,0,5,2
	.word	.L89
	.byte	3,128,2,1,5,27,9
	.half	.L550-.L89
	.byte	3,3,1,5,12,9
	.half	.L395-.L550
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L145-.L395
	.byte	0,1,1
.L547:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_ranges'
.L144:
	.word	-1,.L89,0,.L145-.L89,0,0
.L290:
	.word	-1,.L89,0,.L287-.L89,-1,.L91,0,.L225-.L91,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_info'
.L146:
	.word	311
	.half	3
	.word	.L147
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L149,.L148
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setMinPulse',0,1,138,2,9
	.word	.L238
	.byte	1,1,1
	.word	.L93,.L291,.L92
	.byte	4
	.byte	'driver',0,1,138,2,56
	.word	.L240,.L292
	.byte	4
	.byte	'minPulse',0,1,138,2,72
	.word	.L278,.L293
	.byte	5
	.word	.L93,.L291
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_abbrev'
.L147:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_line'
.L148:
	.word	.L552-.L551
.L551:
	.half	3
	.word	.L554-.L553
.L553:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L554:
	.byte	5,57,7,0,5,2
	.word	.L93
	.byte	3,139,2,1,5,49,9
	.half	.L396-.L93
	.byte	3,2,1,5,12,9
	.half	.L555-.L396
	.byte	3,3,1,5,35,9
	.half	.L556-.L555
	.byte	3,125,1,5,27,1,5,48,9
	.half	.L557-.L556
	.byte	3,1,1,5,56,9
	.half	.L558-.L557
	.byte	1,5,27,1,5,1,9
	.half	.L559-.L558
	.byte	3,3,1,7,9
	.half	.L150-.L559
	.byte	0,1,1
.L552:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_ranges'
.L149:
	.word	-1,.L93,0,.L150-.L93,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_info'
.L151:
	.word	409
	.half	3
	.word	.L152
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L154,.L153
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setMode',0,1,149,2,9
	.word	.L238
	.byte	1,1,1
	.word	.L95,.L294,.L94
	.byte	4
	.byte	'driver',0,1,149,2,52
	.word	.L240,.L295
	.byte	4
	.byte	'mode',0,1,149,2,73
	.word	.L284,.L296
	.byte	5
	.word	.L95,.L294
	.byte	6
	.byte	'result',0,1,151,2,28
	.word	.L238,.L297
	.byte	6
	.byte	'base',0,1,152,2,28
	.word	.L298,.L299
	.byte	5
	.word	.L300,.L27
	.byte	6
	.byte	'channelIndex',0,1,191,2,20
	.word	.L248,.L301
	.byte	5
	.word	.L33,.L302
	.byte	6
	.byte	'channel',0,1,195,2,31
	.word	.L258,.L303
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_abbrev'
.L152:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_line'
.L153:
	.word	.L561-.L560
.L560:
	.half	3
	.word	.L563-.L562
.L562:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L563:
	.byte	5,9,7,0,5,2
	.word	.L95
	.byte	3,148,2,1,5,13,9
	.half	.L398-.L95
	.byte	3,5,1,5,35,9
	.half	.L564-.L398
	.byte	3,125,1,5,5,9
	.half	.L399-.L564
	.byte	3,3,1,5,9,7,9
	.half	.L565-.L399
	.byte	3,2,1,5,20,7,9
	.half	.L566-.L565
	.byte	3,2,1,9
	.half	.L567-.L566
	.byte	3,1,1,5,24,9
	.half	.L28-.L567
	.byte	3,3,1,5,26,9
	.half	.L568-.L28
	.byte	3,1,1,5,48,9
	.half	.L569-.L568
	.byte	1,5,54,9
	.half	.L570-.L569
	.byte	1,5,24,9
	.half	.L397-.L570
	.byte	1,5,9,9
	.half	.L571-.L397
	.byte	3,2,1,5,58,7,9
	.half	.L572-.L571
	.byte	3,2,1,5,28,9
	.half	.L573-.L572
	.byte	1,5,17,9
	.half	.L29-.L573
	.byte	3,6,1,5,9,9
	.half	.L574-.L29
	.byte	1,5,39,7,9
	.half	.L575-.L574
	.byte	3,2,1,5,31,9
	.half	.L576-.L575
	.byte	1,5,39,9
	.half	.L577-.L576
	.byte	3,1,1,5,46,9
	.half	.L578-.L577
	.byte	3,127,1,5,39,9
	.half	.L30-.L578
	.byte	3,5,1,5,31,9
	.half	.L579-.L30
	.byte	1,5,39,9
	.half	.L580-.L579
	.byte	3,1,1,5,31,9
	.half	.L31-.L580
	.byte	1,9
	.half	.L300-.L31
	.byte	3,12,1,5,92,1,5,76,9
	.half	.L400-.L300
	.byte	1,5,72,9
	.half	.L33-.L400
	.byte	3,5,1,5,38,9
	.half	.L581-.L33
	.byte	3,127,1,5,68,9
	.half	.L401-.L581
	.byte	3,1,1,5,27,7,9
	.half	.L582-.L401
	.byte	3,1,1,5,21,9
	.half	.L583-.L582
	.byte	3,1,1,5,70,9
	.half	.L34-.L583
	.byte	1,5,24,9
	.half	.L584-.L34
	.byte	3,146,126,1,5,52,9
	.half	.L35-.L584
	.byte	3,236,1,1,5,21,9
	.half	.L585-.L35
	.byte	3,1,1,5,72,9
	.half	.L402-.L585
	.byte	3,4,1,5,40,9
	.half	.L586-.L402
	.byte	3,127,1,5,90,9
	.half	.L403-.L586
	.byte	3,119,1,5,68,9
	.half	.L587-.L403
	.byte	3,10,1,5,70,7,9
	.half	.L588-.L587
	.byte	3,1,1,5,24,9
	.half	.L589-.L588
	.byte	3,142,126,1,5,21,3,243,1,1,5,27,9
	.half	.L36-.L589
	.byte	1,5,52,9
	.half	.L37-.L36
	.byte	3,126,1,5,21,9
	.half	.L590-.L37
	.byte	3,1,1,5,90,9
	.half	.L302-.L590
	.byte	3,117,1,5,63,9
	.half	.L32-.L302
	.byte	1,5,76,9
	.half	.L591-.L32
	.byte	1,5,5,7,9
	.half	.L27-.L591
	.byte	3,17,1,5,1,3,1,1,7,9
	.half	.L155-.L27
	.byte	0,1,1
.L561:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_ranges'
.L154:
	.word	-1,.L95,0,.L155-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_info'
.L156:
	.word	300
	.half	3
	.word	.L157
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L159,.L158
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setOnTime',0,1,214,2,6,1,1,1
	.word	.L97,.L304,.L96
	.byte	4
	.byte	'driver',0,1,214,2,51
	.word	.L240,.L305
	.byte	4
	.byte	'tOn',0,1,214,2,75
	.word	.L306,.L307
	.byte	5
	.word	.L97,.L304
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_abbrev'
.L157:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_line'
.L158:
	.word	.L593-.L592
.L592:
	.half	3
	.word	.L595-.L594
.L594:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L595:
	.byte	5,11,7,0,5,2
	.word	.L97
	.byte	3,215,2,1,5,28,9
	.half	.L596-.L97
	.byte	1,5,1,7,9
	.half	.L160-.L596
	.byte	3,1,0,1,1
.L593:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_ranges'
.L159:
	.word	-1,.L97,0,.L160-.L97,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_info'
.L161:
	.word	330
	.half	3
	.word	.L162
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L164,.L163
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setupChannels',0,1,220,2,6,1,1,1
	.word	.L99,.L308,.L98
	.byte	4
	.byte	'driver',0,1,220,2,55
	.word	.L240,.L309
	.byte	4
	.byte	'activeCh',0,1,220,2,72
	.word	.L310,.L311
	.byte	4
	.byte	'stuckSt',0,1,220,2,91
	.word	.L310,.L312
	.byte	5
	.word	.L99,.L308
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_abbrev'
.L162:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_line'
.L163:
	.word	.L598-.L597
.L597:
	.half	3
	.word	.L600-.L599
.L599:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L600:
	.byte	5,1,7,0,5,2
	.word	.L99
	.byte	3,222,2,1,7,9
	.half	.L165-.L99
	.byte	0,1,1
.L598:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_ranges'
.L164:
	.word	-1,.L99,0,.L165-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_info'
.L166:
	.word	311
	.half	3
	.word	.L167
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L169,.L168
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_stdIfPwmHlInit',0,1,226,2,9
	.word	.L238
	.byte	1,1,1
	.word	.L101,.L313,.L100
	.byte	4
	.byte	'stdif',0,1,226,2,57
	.word	.L314,.L315
	.byte	4
	.byte	'driver',0,1,226,2,82
	.word	.L240,.L316
	.byte	5
	.word	.L101,.L313
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_abbrev'
.L167:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_line'
.L168:
	.word	.L602-.L601
.L601:
	.half	3
	.word	.L604-.L603
.L603:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L604:
	.byte	5,35,7,0,5,2
	.word	.L101
	.byte	3,230,2,1,5,33,9
	.half	.L605-.L101
	.byte	1,5,35,9
	.half	.L606-.L605
	.byte	3,1,1,5,33,9
	.half	.L607-.L606
	.byte	1,5,35,9
	.half	.L608-.L607
	.byte	3,1,1,5,33,9
	.half	.L609-.L608
	.byte	1,5,35,9
	.half	.L610-.L609
	.byte	3,1,1,5,33,9
	.half	.L611-.L610
	.byte	1,5,35,9
	.half	.L612-.L611
	.byte	3,1,1,5,33,9
	.half	.L613-.L612
	.byte	1,5,35,9
	.half	.L614-.L613
	.byte	3,1,1,5,33,9
	.half	.L615-.L614
	.byte	1,5,35,9
	.half	.L616-.L615
	.byte	3,1,1,5,33,9
	.half	.L617-.L616
	.byte	1,5,35,9
	.half	.L618-.L617
	.byte	3,1,1,5,33,9
	.half	.L619-.L618
	.byte	1,5,43,9
	.half	.L620-.L619
	.byte	3,1,1,5,58,9
	.half	.L621-.L620
	.byte	1,5,12,9
	.half	.L405-.L621
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L170-.L405
	.byte	0,1,1
.L602:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_ranges'
.L169:
	.word	-1,.L101,0,.L170-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_info'
.L171:
	.word	429
	.half	3
	.word	.L172
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L174,.L173
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateCenterAligned',0,1,246,2,13,1,1
	.word	.L103,.L317,.L102
	.byte	4
	.byte	'driver',0,1,246,2,68
	.word	.L240,.L318
	.byte	4
	.byte	'tOn',0,1,246,2,92
	.word	.L306,.L319
	.byte	5
	.word	.L320
	.byte	6
	.byte	'channelIndex',0,1,248,2,20
	.word	.L238,.L321
	.byte	6
	.byte	'period',0,1,249,2,20
	.word	.L248,.L322
	.byte	6
	.byte	'deadtime',0,1,250,2,20
	.word	.L248,.L323
	.byte	5
	.word	.L324
	.byte	6
	.byte	'x',0,1,128,3,24
	.word	.L248,.L326
	.byte	6
	.byte	'cm0',0,1,129,3,24
	.word	.L248,.L327
	.byte	6
	.byte	'cm1',0,1,129,3,29
	.word	.L248,.L328
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_abbrev'
.L172:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58,15,59
	.byte	15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_line'
.L173:
	.word	.L623-.L622
.L622:
	.half	3
	.word	.L625-.L624
.L624:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L625:
	.byte	5,13,7,0,5,2
	.word	.L103
	.byte	3,245,2,1,5,68,9
	.half	.L409-.L103
	.byte	3,8,1,5,16,9
	.half	.L41-.L409
	.byte	3,4,1,5,25,9
	.half	.L626-.L41
	.byte	3,2,1,5,16,9
	.half	.L627-.L626
	.byte	3,126,1,5,9,9
	.half	.L411-.L627
	.byte	3,2,1,5,24,7,9
	.half	.L628-.L411
	.byte	3,2,1,5,30,9
	.half	.L42-.L628
	.byte	3,5,1,5,13,9
	.half	.L629-.L42
	.byte	1,5,47,7,9
	.half	.L630-.L629
	.byte	1,5,15,7,9
	.half	.L43-.L630
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L44-.L43
	.byte	3,2,1,5,14,9
	.half	.L631-.L44
	.byte	1,5,15,9
	.half	.L632-.L631
	.byte	3,2,1,5,63,9
	.half	.L45-.L632
	.byte	3,8,1,5,72,9
	.half	.L633-.L45
	.byte	1,5,9,9
	.half	.L634-.L633
	.byte	3,126,1,5,24,7,9
	.half	.L635-.L634
	.byte	3,3,1,5,69,9
	.half	.L636-.L635
	.byte	3,1,1,5,24,9
	.half	.L412-.L636
	.byte	3,2,1,5,17,9
	.half	.L637-.L412
	.byte	3,1,1,5,80,3,125,1,5,14,9
	.half	.L47-.L637
	.byte	3,5,1,5,17,7,9
	.half	.L638-.L47
	.byte	3,2,1,5,26,9
	.half	.L414-.L638
	.byte	3,1,1,5,93,9
	.half	.L415-.L414
	.byte	3,1,1,5,20,3,126,1,5,27,9
	.half	.L49-.L415
	.byte	3,7,1,9
	.half	.L639-.L49
	.byte	3,1,1,5,97,9
	.half	.L417-.L639
	.byte	3,1,1,5,94,9
	.half	.L640-.L417
	.byte	3,1,1,5,106,9
	.half	.L641-.L640
	.byte	1,5,63,9
	.half	.L48-.L641
	.byte	1,5,74,9
	.half	.L642-.L48
	.byte	1,5,106,9
	.half	.L420-.L642
	.byte	1,5,82,9
	.half	.L325-.L420
	.byte	3,82,1,5,55,9
	.half	.L40-.L325
	.byte	1,5,68,9
	.half	.L643-.L40
	.byte	1,5,1,7,9
	.half	.L644-.L643
	.byte	3,49,1,7,9
	.half	.L175-.L644
	.byte	0,1,1
.L623:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_ranges'
.L174:
	.word	-1,.L103,0,.L175-.L103,0,0
.L320:
	.word	-1,.L103,0,.L317-.L103,-1,.L105,0,.L235-.L105,0,0
.L324:
	.word	-1,.L103,.L41-.L103,.L325-.L103,-1,.L107,0,.L190-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_info'
.L176:
	.word	435
	.half	3
	.word	.L177
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L179,.L178
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateEdgeAligned',0,1,178,3,13,1,1
	.word	.L109,.L329,.L108
	.byte	4
	.byte	'driver',0,1,178,3,66
	.word	.L240,.L330
	.byte	4
	.byte	'tOn',0,1,178,3,90
	.word	.L306,.L331
	.byte	5
	.word	.L109,.L329
	.byte	6
	.byte	'channelIndex',0,1,180,3,20
	.word	.L238,.L332
	.byte	6
	.byte	'period',0,1,181,3,20
	.word	.L248,.L333
	.byte	6
	.byte	'deadtime',0,1,182,3,20
	.word	.L248,.L334
	.byte	5
	.word	.L52,.L335
	.byte	6
	.byte	'x',0,1,188,3,24
	.word	.L248,.L336
	.byte	6
	.byte	'cm0',0,1,189,3,24
	.word	.L248,.L337
	.byte	6
	.byte	'cm1',0,1,189,3,29
	.word	.L248,.L338
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_abbrev'
.L177:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_line'
.L178:
	.word	.L646-.L645
.L645:
	.half	3
	.word	.L648-.L647
.L647:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L648:
	.byte	5,13,7,0,5,2
	.word	.L109
	.byte	3,177,3,1,5,68,9
	.half	.L422-.L109
	.byte	3,8,1,5,16,9
	.half	.L52-.L422
	.byte	3,4,1,5,25,9
	.half	.L649-.L52
	.byte	3,2,1,5,16,9
	.half	.L650-.L649
	.byte	3,126,1,5,9,9
	.half	.L427-.L650
	.byte	3,2,1,5,24,7,9
	.half	.L651-.L427
	.byte	3,2,1,5,30,9
	.half	.L53-.L651
	.byte	3,5,1,5,13,9
	.half	.L652-.L53
	.byte	1,5,47,7,9
	.half	.L653-.L652
	.byte	1,5,15,7,9
	.half	.L54-.L653
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L55-.L54
	.byte	3,2,1,5,14,9
	.half	.L654-.L55
	.byte	1,5,15,9
	.half	.L655-.L654
	.byte	3,2,1,5,63,9
	.half	.L56-.L655
	.byte	3,8,1,5,72,9
	.half	.L656-.L56
	.byte	1,5,9,9
	.half	.L657-.L656
	.byte	3,126,1,5,24,7,9
	.half	.L658-.L657
	.byte	3,3,1,5,69,9
	.half	.L659-.L658
	.byte	3,1,1,5,24,9
	.half	.L660-.L659
	.byte	3,2,1,5,17,9
	.half	.L661-.L660
	.byte	3,1,1,5,80,3,125,1,5,14,9
	.half	.L58-.L661
	.byte	3,5,1,5,17,7,9
	.half	.L662-.L58
	.byte	3,2,1,5,26,9
	.half	.L663-.L662
	.byte	3,1,1,5,93,9
	.half	.L423-.L663
	.byte	3,1,1,5,20,3,126,1,5,17,9
	.half	.L60-.L423
	.byte	3,7,1,5,97,9
	.half	.L424-.L60
	.byte	3,2,1,5,94,9
	.half	.L664-.L424
	.byte	3,1,1,5,106,9
	.half	.L665-.L664
	.byte	1,5,63,9
	.half	.L59-.L665
	.byte	1,5,74,9
	.half	.L666-.L59
	.byte	1,5,106,9
	.half	.L426-.L666
	.byte	1,5,82,9
	.half	.L335-.L426
	.byte	3,82,1,5,55,9
	.half	.L51-.L335
	.byte	1,5,68,9
	.half	.L667-.L51
	.byte	1,5,1,7,9
	.half	.L668-.L667
	.byte	3,49,1,7,9
	.half	.L180-.L668
	.byte	0,1,1
.L646:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_ranges'
.L179:
	.word	-1,.L109,0,.L180-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_info'
.L181:
	.word	346
	.half	3
	.word	.L182
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L184,.L183
	.byte	2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateOff',0,1,238,3,13,1,1
	.word	.L111,.L339,.L110
	.byte	4
	.byte	'driver',0,1,238,3,58
	.word	.L240,.L340
	.byte	4
	.byte	'tOn',0,1,238,3,82
	.word	.L306,.L341
	.byte	5
	.word	.L111,.L339
	.byte	6
	.byte	'channelIndex',0,1,240,3,20
	.word	.L238,.L342
	.byte	6
	.byte	'period',0,1,241,3,20
	.word	.L248,.L343
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_abbrev'
.L182:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_line'
.L183:
	.word	.L670-.L669
.L669:
	.half	3
	.word	.L672-.L671
.L671:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L672:
	.byte	5,13,7,0,5,2
	.word	.L111
	.byte	3,237,3,1,5,20,9
	.half	.L428-.L111
	.byte	3,5,1,5,23,9
	.half	.L673-.L428
	.byte	3,2,1,5,33,9
	.half	.L429-.L673
	.byte	3,126,1,5,68,9
	.half	.L431-.L429
	.byte	3,2,1,5,59,9
	.half	.L63-.L431
	.byte	3,2,1,5,13,9
	.half	.L674-.L63
	.byte	3,1,1,5,46,3,127,1,5,60,9
	.half	.L675-.L674
	.byte	3,1,1,5,68,9
	.half	.L676-.L675
	.byte	3,127,1,5,60,9
	.half	.L677-.L676
	.byte	3,1,1,5,59,9
	.half	.L678-.L677
	.byte	3,1,1,5,93,9
	.half	.L679-.L678
	.byte	1,5,46,1,5,98,9
	.half	.L680-.L679
	.byte	1,5,70,9
	.half	.L681-.L680
	.byte	1,5,98,9
	.half	.L682-.L681
	.byte	1,5,82,9
	.half	.L683-.L682
	.byte	3,124,1,5,55,9
	.half	.L62-.L683
	.byte	1,5,68,9
	.half	.L684-.L62
	.byte	1,5,1,7,9
	.half	.L685-.L684
	.byte	3,6,1,7,9
	.half	.L185-.L685
	.byte	0,1,1
.L670:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_ranges'
.L184:
	.word	-1,.L111,0,.L185-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L186:
	.word	235
	.half	3
	.word	.L187
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L189,.L188
	.byte	2
	.word	.L112
	.byte	3
	.byte	'.cocofun_7',0,1,246,2,13,1
	.word	.L107,.L190,.L106
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L187:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L188:
	.word	.L687-.L686
.L686:
	.half	3
	.word	.L689-.L688
.L688:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L689:
	.byte	5,72,7,0,5,2
	.word	.L107
	.byte	3,152,3,1,5,50,9
	.half	.L690-.L107
	.byte	1,5,72,9
	.half	.L691-.L690
	.byte	1,5,50,9
	.half	.L419-.L691
	.byte	1,7,9
	.half	.L190-.L419
	.byte	0,1,1,5,74,0,5,2
	.word	.L107
	.byte	3,171,3,1,5,50,9
	.half	.L690-.L107
	.byte	1,5,74,9
	.half	.L691-.L690
	.byte	1,5,50,9
	.half	.L419-.L691
	.byte	3,109,1,7,9
	.half	.L190-.L419
	.byte	0,1,1,5,72,0,5,2
	.word	.L107
	.byte	3,212,3,1,5,50,9
	.half	.L690-.L107
	.byte	1,5,72,9
	.half	.L691-.L690
	.byte	1,5,50,9
	.half	.L419-.L691
	.byte	3,68,1,7,9
	.half	.L190-.L419
	.byte	0,1,1,5,74,0,5,2
	.word	.L107
	.byte	3,231,3,1,5,50,9
	.half	.L690-.L107
	.byte	1,5,74,9
	.half	.L691-.L690
	.byte	1,5,50,9
	.half	.L419-.L691
	.byte	3,177,127,1,7,9
	.half	.L190-.L419
	.byte	0,1,1
.L687:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L189:
	.word	-1,.L107,0,.L190-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_8')
	.sect	'.debug_info'
.L191:
	.word	234
	.half	3
	.word	.L192
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L194,.L193
	.byte	2
	.word	.L112
	.byte	3
	.byte	'.cocofun_8',0,1,116,9,1
	.word	.L85,.L195,.L84
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_8')
	.sect	'.debug_abbrev'
.L192:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_8')
	.sect	'.debug_line'
.L193:
	.word	.L693-.L692
.L692:
	.half	3
	.word	.L695-.L694
.L694:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0,0
.L695:
	.byte	5,77,7,0,5,2
	.word	.L85
	.byte	3,194,1,1,5,59,9
	.half	.L696-.L85
	.byte	1,5,96,9
	.half	.L697-.L696
	.byte	1,4,2,5,26,9
	.half	.L698-.L697
	.byte	3,206,2,1,5,17,1,9
	.half	.L195-.L698
	.byte	0,1,1,5,81,0,5,2
	.word	.L85
	.byte	3,220,1,1,5,61,9
	.half	.L696-.L85
	.byte	1,5,100,9
	.half	.L697-.L696
	.byte	1,4,2,5,26,9
	.half	.L698-.L697
	.byte	3,180,2,1,5,17,1,9
	.half	.L195-.L698
	.byte	0,1,1
.L693:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_8')
	.sect	'.debug_ranges'
.L194:
	.word	-1,.L85,0,.L195-.L85,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_9')
	.sect	'.debug_info'
.L196:
	.word	234
	.half	3
	.word	.L197
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L199,.L198
	.byte	2
	.word	.L112
	.byte	3
	.byte	'.cocofun_9',0,1,116,9,1
	.word	.L83,.L200,.L82
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_9')
	.sect	'.debug_abbrev'
.L197:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_9')
	.sect	'.debug_line'
.L198:
	.word	.L700-.L699
.L699:
	.half	3
	.word	.L702-.L701
.L701:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L702:
	.byte	5,73,7,0,5,2
	.word	.L83
	.byte	3,177,1,1,5,61,9
	.half	.L703-.L83
	.byte	1,5,24,7,9
	.half	.L704-.L703
	.byte	3,168,127,1,5,44,9
	.half	.L12-.L704
	.byte	3,216,0,1,5,13,9
	.half	.L373-.L12
	.byte	3,1,1,9
	.half	.L200-.L373
	.byte	0,1,1,5,72,0,5,2
	.word	.L83
	.byte	3,207,1,1,5,60,9
	.half	.L703-.L83
	.byte	1,5,24,7,9
	.half	.L704-.L703
	.byte	3,138,127,1,5,44,9
	.half	.L12-.L704
	.byte	3,246,0,1,5,13,9
	.half	.L373-.L12
	.byte	3,1,1,3,98,1,7,9
	.half	.L200-.L373
	.byte	0,1,1
.L700:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_9')
	.sect	'.debug_ranges'
.L199:
	.word	-1,.L83,0,.L200-.L83,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_10')
	.sect	'.debug_info'
.L201:
	.word	235
	.half	3
	.word	.L202
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L204,.L203
	.byte	2
	.word	.L112
	.byte	3
	.byte	'.cocofun_10',0,1,116,9,1
	.word	.L81,.L205,.L80
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_10')
	.sect	'.debug_abbrev'
.L202:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_10')
	.sect	'.debug_line'
.L203:
	.word	.L706-.L705
.L705:
	.half	3
	.word	.L708-.L707
.L707:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L708:
	.byte	5,68,7,0,5,2
	.word	.L81
	.byte	3,180,1,1,5,45,1,5,65,9
	.half	.L365-.L81
	.byte	1,5,68,9
	.half	.L709-.L365
	.byte	1,9
	.half	.L205-.L709
	.byte	0,1,1,5,74,0,5,2
	.word	.L81
	.byte	3,181,1,1,5,51,1,5,71,9
	.half	.L365-.L81
	.byte	1,5,74,9
	.half	.L709-.L365
	.byte	1,5,68,3,127,1,7,9
	.half	.L205-.L709
	.byte	0,1,1,5,68,0,5,2
	.word	.L81
	.byte	3,210,1,1,5,45,1,5,65,9
	.half	.L365-.L81
	.byte	1,5,68,9
	.half	.L709-.L365
	.byte	1,3,98,1,7,9
	.half	.L205-.L709
	.byte	0,1,1,5,74,0,5,2
	.word	.L81
	.byte	3,211,1,1,5,51,1,5,71,9
	.half	.L365-.L81
	.byte	1,5,74,9
	.half	.L709-.L365
	.byte	1,5,68,3,97,1,7,9
	.half	.L205-.L709
	.byte	0,1,1
.L706:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_10')
	.sect	'.debug_ranges'
.L204:
	.word	-1,.L81,0,.L205-.L81,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_11')
	.sect	'.debug_info'
.L206:
	.word	235
	.half	3
	.word	.L207
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L209,.L208
	.byte	2
	.word	.L112
	.byte	3
	.byte	'.cocofun_11',0,1,98,9,1
	.word	.L67,.L210,.L66
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_11')
	.sect	'.debug_abbrev'
.L207:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_11')
	.sect	'.debug_line'
.L208:
	.word	.L711-.L710
.L710:
	.half	3
	.word	.L713-.L712
.L712:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0,0
.L713:
	.byte	5,41,7,0,5,2
	.word	.L67
	.byte	3,227,0,1,4,2,5,12,9
	.half	.L714-.L67
	.byte	3,160,2,1,4,1,5,54,9
	.half	.L715-.L714
	.byte	3,224,125,1,4,2,5,18,9
	.half	.L716-.L715
	.byte	3,160,2,1,9
	.half	.L210-.L716
	.byte	0,1,1,5,41,0,5,2
	.word	.L67
	.byte	3,233,0,1,4,2,5,12,9
	.half	.L714-.L67
	.byte	3,154,2,1,4,1,5,54,9
	.half	.L715-.L714
	.byte	3,230,125,1,4,2,5,18,9
	.half	.L716-.L715
	.byte	3,154,2,1,9
	.half	.L210-.L716
	.byte	0,1,1
.L711:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_11')
	.sect	'.debug_ranges'
.L209:
	.word	-1,.L67,0,.L210-.L67,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_12')
	.sect	'.debug_info'
.L211:
	.word	235
	.half	3
	.word	.L212
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L214,.L213
	.byte	2
	.word	.L112
	.byte	3
	.byte	'.cocofun_12',0,1,116,9,1
	.word	.L79,.L215,.L78
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_12')
	.sect	'.debug_abbrev'
.L212:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_12')
	.sect	'.debug_line'
.L213:
	.word	.L718-.L717
.L717:
	.half	3
	.word	.L720-.L719
.L719:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L720:
	.byte	5,45,7,0,5,2
	.word	.L79
	.byte	3,192,1,1,5,25,9
	.half	.L721-.L79
	.byte	3,1,1,5,45,9
	.half	.L722-.L721
	.byte	3,127,1,5,50,9
	.half	.L723-.L722
	.byte	3,1,1,9
	.half	.L215-.L723
	.byte	0,1,1,5,47,0,5,2
	.word	.L79
	.byte	3,218,1,1,5,25,9
	.half	.L721-.L79
	.byte	3,1,1,5,47,9
	.half	.L722-.L721
	.byte	3,127,1,5,50,9
	.half	.L723-.L722
	.byte	3,1,1,9
	.half	.L724-.L723
	.byte	3,102,1,7,9
	.half	.L215-.L724
	.byte	0,1,1
.L718:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_12')
	.sect	'.debug_ranges'
.L214:
	.word	-1,.L79,0,.L215-.L79,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_13')
	.sect	'.debug_info'
.L216:
	.word	235
	.half	3
	.word	.L217
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L219,.L218
	.byte	2
	.word	.L112
	.byte	3
	.byte	'.cocofun_13',0,1,116,9,1
	.word	.L77,.L220,.L76
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_13')
	.sect	'.debug_abbrev'
.L217:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_13')
	.sect	'.debug_line'
.L218:
	.word	.L726-.L725
.L725:
	.half	3
	.word	.L728-.L727
.L727:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L728:
	.byte	5,107,7,0,5,2
	.word	.L77
	.byte	3,194,1,1,5,137,1,7,9
	.half	.L729-.L77
	.byte	1,5,155,1,1,5,135,1,9
	.half	.L15-.L729
	.byte	1,5,155,1,9
	.half	.L16-.L15
	.byte	1,7,9
	.half	.L220-.L16
	.byte	0,1,1,5,111,0,5,2
	.word	.L77
	.byte	3,220,1,1,5,143,1,7,9
	.half	.L729-.L77
	.byte	1,5,161,1,1,5,141,1,9
	.half	.L15-.L729
	.byte	1,5,155,1,9
	.half	.L16-.L15
	.byte	3,102,1,7,9
	.half	.L220-.L16
	.byte	0,1,1
.L726:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_13')
	.sect	'.debug_ranges'
.L219:
	.word	-1,.L77,0,.L220-.L77,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_14')
	.sect	'.debug_info'
.L221:
	.word	236
	.half	3
	.word	.L222
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L224,.L223
	.byte	2
	.word	.L112
	.byte	3
	.byte	'.cocofun_14',0,1,255,1,9,1
	.word	.L91,.L225,.L90
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_14')
	.sect	'.debug_abbrev'
.L222:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_14')
	.sect	'.debug_line'
.L223:
	.word	.L731-.L730
.L730:
	.half	3
	.word	.L733-.L732
.L732:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0,0
.L733:
	.byte	5,57,7,0,5,2
	.word	.L91
	.byte	3,128,2,1,5,70,9
	.half	.L734-.L91
	.byte	1,4,2,5,20,9
	.half	.L735-.L734
	.byte	3,142,1,1,9
	.half	.L225-.L735
	.byte	0,1,1,5,57,0,5,2
	.word	.L91
	.byte	3,139,2,1,5,70,9
	.half	.L734-.L91
	.byte	1,4,2,5,20,9
	.half	.L735-.L734
	.byte	3,131,1,1,9
	.half	.L225-.L735
	.byte	0,1,1
.L731:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_14')
	.sect	'.debug_ranges'
.L224:
	.word	-1,.L91,0,.L225-.L91,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_15')
	.sect	'.debug_info'
.L226:
	.word	235
	.half	3
	.word	.L227
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L229,.L228
	.byte	2
	.word	.L112
	.byte	3
	.byte	'.cocofun_15',0,1,116,9,1
	.word	.L75,.L230,.L74
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_15')
	.sect	'.debug_abbrev'
.L227:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_15')
	.sect	'.debug_line'
.L228:
	.word	.L737-.L736
.L736:
	.half	3
	.word	.L739-.L738
.L738:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L739:
	.byte	5,39,7,0,5,2
	.word	.L75
	.byte	3,169,1,1,5,44,3,5,1,5,60,9
	.half	.L361-.L75
	.byte	1,5,34,9
	.half	.L740-.L361
	.byte	3,124,1,5,60,3,4,1,7,9
	.half	.L230-.L740
	.byte	0,1,1,5,41,0,5,2
	.word	.L75
	.byte	3,199,1,1,5,44,3,5,1,5,60,9
	.half	.L361-.L75
	.byte	1,5,36,9
	.half	.L740-.L361
	.byte	3,124,1,5,60,3,102,1,7,9
	.half	.L230-.L740
	.byte	0,1,1
.L737:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_15')
	.sect	'.debug_ranges'
.L229:
	.word	-1,.L75,0,.L230-.L75,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_16')
	.sect	'.debug_info'
.L231:
	.word	236
	.half	3
	.word	.L232
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L234,.L233
	.byte	2
	.word	.L112
	.byte	3
	.byte	'.cocofun_16',0,1,246,2,13,1
	.word	.L105,.L235,.L104
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_16')
	.sect	'.debug_abbrev'
.L232:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_16')
	.sect	'.debug_line'
.L233:
	.word	.L742-.L741
.L741:
	.half	3
	.word	.L744-.L743
.L743:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L744:
	.byte	5,13,7,0,5,2
	.word	.L105
	.byte	3,245,2,1,5,20,9
	.half	.L406-.L105
	.byte	3,6,1,5,23,9
	.half	.L421-.L406
	.byte	3,2,1,5,13,3,120,1,5,43,9
	.half	.L407-.L421
	.byte	3,4,1,5,33,9
	.half	.L408-.L407
	.byte	3,2,1,5,23,9
	.half	.L410-.L408
	.byte	3,2,1,7,9
	.half	.L235-.L410
	.byte	0,1,1,5,13,0,5,2
	.word	.L105
	.byte	3,177,3,1,5,20,9
	.half	.L406-.L105
	.byte	3,6,1,5,23,9
	.half	.L421-.L406
	.byte	3,2,1,5,13,3,120,1,5,43,9
	.half	.L407-.L421
	.byte	3,4,1,5,33,9
	.half	.L408-.L407
	.byte	3,2,1,5,23,9
	.half	.L410-.L408
	.byte	3,70,1,7,9
	.half	.L235-.L410
	.byte	0,1,1
.L742:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_16')
	.sect	'.debug_ranges'
.L234:
	.word	-1,.L105,0,.L235-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_modes')
	.sect	'.debug_info'
.L236:
	.word	235
	.half	3
	.word	.L237
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L112
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_modes',0,8,76,36
	.word	.L344
	.byte	5,3
	.word	IfxGtm_Tom_PwmHl_modes
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_modes')
	.sect	'.debug_abbrev'
.L237:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_10')
	.sect	'.debug_loc'
.L80:
	.word	-1,.L81,0,.L205-.L81
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_11')
	.sect	'.debug_loc'
.L66:
	.word	-1,.L67,0,.L210-.L67
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_12')
	.sect	'.debug_loc'
.L78:
	.word	-1,.L79,0,.L215-.L79
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_13')
	.sect	'.debug_loc'
.L76:
	.word	-1,.L77,0,.L220-.L77
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_14')
	.sect	'.debug_loc'
.L90:
	.word	-1,.L91,0,.L225-.L91
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_15')
	.sect	'.debug_loc'
.L74:
	.word	-1,.L75,0,.L230-.L75
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_16')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L235-.L105
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L190-.L107
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_8')
	.sect	'.debug_loc'
.L84:
	.word	-1,.L85,0,.L195-.L85
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_9')
	.sect	'.debug_loc'
.L82:
	.word	-1,.L83,0,.L200-.L83
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_loc'
.L64:
	.word	-1,.L65,0,.L279-.L65
	.half	2
	.byte	138,0
	.word	0,0
.L280:
	.word	-1,.L65,0,.L345-.L65
	.half	1
	.byte	100
	.word	.L67-.L65,.L210-.L65
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_loc'
.L68:
	.word	-1,.L69,0,.L282-.L69
	.half	2
	.byte	138,0
	.word	0,0
.L283:
	.word	-1,.L69,.L67-.L69,.L210-.L69
	.half	1
	.byte	100
	.word	0,.L282-.L69
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_loc'
.L70:
	.word	-1,.L71,0,.L285-.L71
	.half	2
	.byte	138,0
	.word	0,0
.L286:
	.word	-1,.L71,0,.L285-.L71
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_loc'
.L72:
	.word	-1,.L73,0,.L346-.L73
	.half	2
	.byte	138,0
	.word	.L346-.L73,.L239-.L73
	.half	2
	.byte	138,32
	.word	.L239-.L73,.L239-.L73
	.half	2
	.byte	138,0
	.word	0,0
.L268:
	.word	0,0
.L259:
	.word	-1,.L73,.L360-.L73,.L349-.L73
	.half	1
	.byte	93
	.word	.L361-.L73,.L230-.L73
	.half	1
	.byte	93
	.word	.L363-.L73,.L364-.L73
	.half	1
	.byte	93
	.word	.L83-.L73,.L200-.L73
	.half	1
	.byte	93
	.word	.L81-.L73,.L205-.L73
	.half	1
	.byte	93
	.word	.L368-.L73,.L369-.L73
	.half	1
	.byte	84
	.word	.L370-.L73,.L371-.L73
	.half	1
	.byte	84
	.word	.L79-.L73,.L215-.L73
	.half	1
	.byte	93
	.word	.L77-.L73,.L220-.L73
	.half	1
	.byte	93
	.word	.L85-.L73,.L372-.L73
	.half	1
	.byte	93
	.word	.L373-.L73,.L200-.L73
	.half	1
	.byte	84
	.word	.L374-.L73,.L375-.L73
	.half	1
	.byte	84
	.word	.L377-.L73,.L378-.L73
	.half	1
	.byte	84
	.word	.L379-.L73,.L380-.L73
	.half	1
	.byte	84
	.word	.L85-.L73,.L195-.L73
	.half	1
	.byte	93
	.word	.L366-.L73,.L9-.L73
	.half	1
	.byte	93
	.word	0,0
.L249:
	.word	-1,.L73,.L10-.L73,.L349-.L73
	.half	1
	.byte	92
	.word	.L361-.L73,.L230-.L73
	.half	1
	.byte	92
	.word	.L363-.L73,.L364-.L73
	.half	1
	.byte	92
	.word	.L83-.L73,.L200-.L73
	.half	1
	.byte	92
	.word	.L81-.L73,.L205-.L73
	.half	1
	.byte	92
	.word	.L79-.L73,.L215-.L73
	.half	1
	.byte	92
	.word	.L77-.L73,.L220-.L73
	.half	1
	.byte	92
	.word	.L85-.L73,.L372-.L73
	.half	1
	.byte	92
	.word	.L85-.L73,.L195-.L73
	.half	1
	.byte	92
	.word	.L366-.L73,.L381-.L73
	.half	1
	.byte	92
	.word	.L381-.L73,.L239-.L73
	.half	1
	.byte	95
	.word	0,0
.L246:
	.word	-1,.L73,.L362-.L73,.L349-.L73
	.half	1
	.byte	94
	.word	.L361-.L73,.L230-.L73
	.half	1
	.byte	94
	.word	.L363-.L73,.L364-.L73
	.half	1
	.byte	94
	.word	.L83-.L73,.L200-.L73
	.half	1
	.byte	94
	.word	.L81-.L73,.L205-.L73
	.half	1
	.byte	94
	.word	.L365-.L73,.L205-.L73
	.half	1
	.byte	84
	.word	.L366-.L73,.L367-.L73
	.half	1
	.byte	84
	.word	.L79-.L73,.L215-.L73
	.half	1
	.byte	94
	.word	.L77-.L73,.L220-.L73
	.half	1
	.byte	94
	.word	.L85-.L73,.L372-.L73
	.half	1
	.byte	94
	.word	.L375-.L73,.L376-.L73
	.half	1
	.byte	84
	.word	.L85-.L73,.L195-.L73
	.half	1
	.byte	94
	.word	.L366-.L73,.L9-.L73
	.half	1
	.byte	94
	.word	0,0
.L247:
	.word	-1,.L73,.L352-.L73,.L349-.L73
	.half	1
	.byte	88
	.word	.L361-.L73,.L230-.L73
	.half	1
	.byte	88
	.word	.L363-.L73,.L364-.L73
	.half	1
	.byte	88
	.word	.L83-.L73,.L200-.L73
	.half	1
	.byte	88
	.word	.L81-.L73,.L205-.L73
	.half	1
	.byte	88
	.word	.L79-.L73,.L215-.L73
	.half	1
	.byte	88
	.word	.L77-.L73,.L220-.L73
	.half	1
	.byte	88
	.word	.L85-.L73,.L372-.L73
	.half	1
	.byte	88
	.word	.L85-.L73,.L195-.L73
	.half	1
	.byte	88
	.word	.L366-.L73,.L239-.L73
	.half	1
	.byte	88
	.word	.L385-.L73,.L386-.L73
	.half	1
	.byte	84
	.word	.L387-.L73,.L388-.L73
	.half	1
	.byte	85
	.word	0,0
.L255:
	.word	-1,.L73,.L358-.L73,.L10-.L73
	.half	1
	.byte	82
	.word	.L359-.L73,.L349-.L73
	.half	1
	.byte	91
	.word	.L361-.L73,.L230-.L73
	.half	1
	.byte	91
	.word	.L363-.L73,.L364-.L73
	.half	1
	.byte	91
	.word	.L83-.L73,.L200-.L73
	.half	1
	.byte	91
	.word	.L81-.L73,.L205-.L73
	.half	1
	.byte	91
	.word	.L79-.L73,.L215-.L73
	.half	1
	.byte	91
	.word	.L77-.L73,.L220-.L73
	.half	1
	.byte	91
	.word	.L85-.L73,.L372-.L73
	.half	1
	.byte	91
	.word	.L85-.L73,.L195-.L73
	.half	1
	.byte	91
	.word	.L366-.L73,.L239-.L73
	.half	1
	.byte	91
	.word	0,0
.L243:
	.word	-1,.L73,0,.L347-.L73
	.half	1
	.byte	101
	.word	.L350-.L73,.L349-.L73
	.half	1
	.byte	108
	.word	.L361-.L73,.L230-.L73
	.half	1
	.byte	108
	.word	.L363-.L73,.L364-.L73
	.half	1
	.byte	108
	.word	.L83-.L73,.L200-.L73
	.half	1
	.byte	108
	.word	.L81-.L73,.L205-.L73
	.half	1
	.byte	108
	.word	.L79-.L73,.L215-.L73
	.half	1
	.byte	108
	.word	.L77-.L73,.L220-.L73
	.half	1
	.byte	108
	.word	.L85-.L73,.L372-.L73
	.half	1
	.byte	108
	.word	.L85-.L73,.L195-.L73
	.half	1
	.byte	108
	.word	.L366-.L73,.L381-.L73
	.half	1
	.byte	108
	.word	0,0
.L241:
	.word	-1,.L73,0,.L348-.L73
	.half	1
	.byte	100
	.word	.L352-.L73,.L349-.L73
	.half	1
	.byte	111
	.word	.L353-.L73,.L354-.L73
	.half	1
	.byte	100
	.word	.L355-.L73,.L356-.L73
	.half	1
	.byte	100
	.word	.L361-.L73,.L230-.L73
	.half	1
	.byte	111
	.word	.L363-.L73,.L364-.L73
	.half	1
	.byte	111
	.word	.L83-.L73,.L200-.L73
	.half	1
	.byte	111
	.word	.L81-.L73,.L205-.L73
	.half	1
	.byte	111
	.word	.L79-.L73,.L215-.L73
	.half	1
	.byte	111
	.word	.L77-.L73,.L220-.L73
	.half	1
	.byte	111
	.word	.L85-.L73,.L372-.L73
	.half	1
	.byte	111
	.word	.L85-.L73,.L195-.L73
	.half	1
	.byte	111
	.word	.L366-.L73,.L239-.L73
	.half	1
	.byte	111
	.word	.L382-.L73,.L272-.L73
	.half	1
	.byte	100
	.word	.L383-.L73,.L384-.L73
	.half	1
	.byte	100
	.word	0,0
.L250:
	.word	-1,.L73,.L357-.L73,.L349-.L73
	.half	1
	.byte	90
	.word	.L361-.L73,.L230-.L73
	.half	1
	.byte	90
	.word	.L363-.L73,.L364-.L73
	.half	1
	.byte	90
	.word	.L83-.L73,.L200-.L73
	.half	1
	.byte	90
	.word	.L81-.L73,.L205-.L73
	.half	1
	.byte	90
	.word	.L79-.L73,.L215-.L73
	.half	1
	.byte	90
	.word	.L77-.L73,.L220-.L73
	.half	1
	.byte	90
	.word	.L85-.L73,.L372-.L73
	.half	1
	.byte	90
	.word	.L85-.L73,.L195-.L73
	.half	1
	.byte	90
	.word	.L366-.L73,.L239-.L73
	.half	1
	.byte	90
	.word	0,0
.L266:
	.word	0,0
.L264:
	.word	0,0
.L244:
	.word	-1,.L73,.L346-.L73,.L349-.L73
	.half	1
	.byte	89
	.word	.L361-.L73,.L230-.L73
	.half	1
	.byte	89
	.word	.L363-.L73,.L364-.L73
	.half	1
	.byte	89
	.word	.L83-.L73,.L200-.L73
	.half	1
	.byte	89
	.word	.L81-.L73,.L205-.L73
	.half	1
	.byte	89
	.word	.L79-.L73,.L215-.L73
	.half	1
	.byte	89
	.word	.L77-.L73,.L220-.L73
	.half	1
	.byte	89
	.word	.L85-.L73,.L372-.L73
	.half	1
	.byte	89
	.word	.L85-.L73,.L195-.L73
	.half	1
	.byte	89
	.word	.L366-.L73,.L239-.L73
	.half	1
	.byte	89
	.word	0,0
.L274:
	.word	-1,.L73,0,.L349-.L73
	.half	2
	.byte	145,116
	.word	.L361-.L73,.L230-.L73
	.half	2
	.byte	145,116
	.word	.L363-.L73,.L364-.L73
	.half	2
	.byte	145,116
	.word	.L83-.L73,.L200-.L73
	.half	2
	.byte	145,116
	.word	.L81-.L73,.L205-.L73
	.half	2
	.byte	145,116
	.word	.L79-.L73,.L215-.L73
	.half	2
	.byte	145,116
	.word	.L77-.L73,.L220-.L73
	.half	2
	.byte	145,116
	.word	.L85-.L73,.L372-.L73
	.half	2
	.byte	145,116
	.word	.L85-.L73,.L195-.L73
	.half	2
	.byte	145,116
	.word	.L366-.L73,.L239-.L73
	.half	2
	.byte	145,116
	.word	0,0
.L252:
	.word	-1,.L73,.L351-.L73,.L349-.L73
	.half	1
	.byte	109
	.word	.L348-.L73,.L347-.L73
	.half	1
	.byte	100
	.word	.L361-.L73,.L230-.L73
	.half	1
	.byte	109
	.word	.L363-.L73,.L364-.L73
	.half	1
	.byte	109
	.word	.L83-.L73,.L200-.L73
	.half	1
	.byte	109
	.word	.L81-.L73,.L205-.L73
	.half	1
	.byte	109
	.word	.L79-.L73,.L215-.L73
	.half	1
	.byte	109
	.word	.L77-.L73,.L220-.L73
	.half	1
	.byte	109
	.word	.L85-.L73,.L372-.L73
	.half	1
	.byte	109
	.word	.L85-.L73,.L195-.L73
	.half	1
	.byte	109
	.word	.L366-.L73,.L239-.L73
	.half	1
	.byte	109
	.word	.L389-.L73,.L390-.L73
	.half	1
	.byte	100
	.word	.L391-.L73,.L392-.L73
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_loc'
.L86:
	.word	-1,.L87,0,.L275-.L87
	.half	2
	.byte	138,0
	.word	0,0
.L277:
	.word	-1,.L87,0,.L393-.L87
	.half	1
	.byte	100
	.word	.L394-.L87,.L275-.L87
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_loc'
.L88:
	.word	-1,.L89,0,.L287-.L89
	.half	2
	.byte	138,0
	.word	0,0
.L289:
	.word	-1,.L89,.L91-.L89,.L225-.L89
	.half	1
	.byte	84
	.word	.L395-.L89,.L287-.L89
	.half	1
	.byte	84
	.word	0,0
.L288:
	.word	-1,.L89,.L91-.L89,.L225-.L89
	.half	1
	.byte	100
	.word	.L395-.L89,.L287-.L89
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L291-.L93
	.half	2
	.byte	138,0
	.word	0,0
.L292:
	.word	-1,.L93,.L91-.L93,.L225-.L93
	.half	1
	.byte	100
	.word	.L396-.L93,.L291-.L93
	.half	1
	.byte	100
	.word	0,0
.L293:
	.word	-1,.L93,.L91-.L93,.L225-.L93
	.half	1
	.byte	84
	.word	.L396-.L93,.L291-.L93
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L294-.L95
	.half	2
	.byte	138,0
	.word	0,0
.L299:
	.word	0,0
.L303:
	.word	-1,.L95,.L401-.L95,.L402-.L95
	.half	1
	.byte	84
	.word	.L403-.L95,.L302-.L95
	.half	1
	.byte	84
	.word	0,0
.L301:
	.word	-1,.L95,.L400-.L95,.L27-.L95
	.half	1
	.byte	88
	.word	0,0
.L295:
	.word	-1,.L95,0,.L397-.L95
	.half	1
	.byte	100
	.word	.L398-.L95,.L294-.L95
	.half	1
	.byte	111
	.word	0,0
.L296:
	.word	-1,.L95,0,.L33-.L95
	.half	1
	.byte	84
	.word	0,0
.L297:
	.word	-1,.L95,.L399-.L95,.L294-.L95
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L304-.L97
	.half	2
	.byte	138,0
	.word	0,0
.L305:
	.word	-1,.L97,0,.L304-.L97
	.half	1
	.byte	100
	.word	0,0
.L307:
	.word	-1,.L97,0,.L304-.L97
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L308-.L99
	.half	2
	.byte	138,0
	.word	0,0
.L311:
	.word	-1,.L99,0,.L308-.L99
	.half	1
	.byte	101
	.word	0,0
.L309:
	.word	-1,.L99,0,.L308-.L99
	.half	1
	.byte	100
	.word	0,0
.L312:
	.word	-1,.L99,0,.L308-.L99
	.half	1
	.byte	102
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L313-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L316:
	.word	-1,.L101,0,.L404-.L101
	.half	1
	.byte	101
	.word	0,0
.L315:
	.word	-1,.L101,0,.L405-.L101
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L317-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L321:
	.word	-1,.L103,.L407-.L103,.L235-.L103
	.half	1
	.byte	90
	.word	.L107-.L103,.L190-.L103
	.half	1
	.byte	90
	.word	.L409-.L103,.L418-.L103
	.half	1
	.byte	90
	.word	.L40-.L103,.L317-.L103
	.half	1
	.byte	90
	.word	0,0
.L327:
	.word	-1,.L103,.L414-.L103,.L49-.L103
	.half	1
	.byte	91
	.word	.L417-.L103,.L48-.L103
	.half	1
	.byte	91
	.word	0,0
.L328:
	.word	-1,.L103,.L415-.L103,.L49-.L103
	.half	1
	.byte	95
	.word	.L416-.L103,.L48-.L103
	.half	1
	.byte	95
	.word	.L419-.L103,.L190-.L103
	.half	1
	.byte	86
	.word	.L420-.L103,.L325-.L103
	.half	1
	.byte	86
	.word	0,0
.L323:
	.word	-1,.L103,.L408-.L103,.L235-.L103
	.half	1
	.byte	88
	.word	.L107-.L103,.L190-.L103
	.half	1
	.byte	88
	.word	.L409-.L103,.L317-.L103
	.half	1
	.byte	88
	.word	0,0
.L318:
	.word	-1,.L103,.L105-.L103,.L235-.L103
	.half	1
	.byte	100
	.word	.L406-.L103,.L235-.L103
	.half	1
	.byte	111
	.word	.L409-.L103,.L41-.L103
	.half	1
	.byte	100
	.word	.L107-.L103,.L190-.L103
	.half	1
	.byte	111
	.word	.L409-.L103,.L317-.L103
	.half	1
	.byte	111
	.word	0,0
.L322:
	.word	-1,.L103,.L410-.L103,.L235-.L103
	.half	1
	.byte	89
	.word	.L107-.L103,.L190-.L103
	.half	1
	.byte	89
	.word	.L409-.L103,.L317-.L103
	.half	1
	.byte	89
	.word	0,0
.L319:
	.word	-1,.L103,.L105-.L103,.L235-.L103
	.half	1
	.byte	101
	.word	.L407-.L103,.L235-.L103
	.half	1
	.byte	108
	.word	.L409-.L103,.L41-.L103
	.half	1
	.byte	101
	.word	.L107-.L103,.L190-.L103
	.half	1
	.byte	108
	.word	.L409-.L103,.L317-.L103
	.half	1
	.byte	108
	.word	0,0
.L326:
	.word	-1,.L103,.L107-.L103,.L190-.L103
	.half	5
	.byte	144,32,157,32,0
	.word	.L411-.L103,.L412-.L103
	.half	5
	.byte	144,32,157,32,0
	.word	.L47-.L103,.L413-.L103
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L329-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L332:
	.word	-1,.L109,.L421-.L109,.L235-.L109
	.half	1
	.byte	90
	.word	.L107-.L109,.L190-.L109
	.half	1
	.byte	90
	.word	.L422-.L109,.L425-.L109
	.half	1
	.byte	90
	.word	.L51-.L109,.L329-.L109
	.half	1
	.byte	90
	.word	0,0
.L337:
	.word	0,0
.L338:
	.word	-1,.L109,.L423-.L109,.L60-.L109
	.half	1
	.byte	95
	.word	.L424-.L109,.L59-.L109
	.half	1
	.byte	95
	.word	.L419-.L109,.L190-.L109
	.half	1
	.byte	86
	.word	.L426-.L109,.L335-.L109
	.half	1
	.byte	86
	.word	0,0
.L334:
	.word	-1,.L109,.L408-.L109,.L235-.L109
	.half	1
	.byte	88
	.word	.L107-.L109,.L190-.L109
	.half	1
	.byte	88
	.word	.L422-.L109,.L329-.L109
	.half	1
	.byte	88
	.word	0,0
.L330:
	.word	-1,.L109,.L105-.L109,.L235-.L109
	.half	1
	.byte	100
	.word	.L406-.L109,.L235-.L109
	.half	1
	.byte	111
	.word	.L422-.L109,.L52-.L109
	.half	1
	.byte	100
	.word	.L107-.L109,.L190-.L109
	.half	1
	.byte	111
	.word	.L422-.L109,.L329-.L109
	.half	1
	.byte	111
	.word	0,0
.L333:
	.word	-1,.L109,.L410-.L109,.L235-.L109
	.half	1
	.byte	89
	.word	.L107-.L109,.L190-.L109
	.half	1
	.byte	89
	.word	.L422-.L109,.L329-.L109
	.half	1
	.byte	89
	.word	0,0
.L331:
	.word	-1,.L109,.L105-.L109,.L235-.L109
	.half	1
	.byte	101
	.word	.L407-.L109,.L235-.L109
	.half	1
	.byte	108
	.word	.L422-.L109,.L52-.L109
	.half	1
	.byte	101
	.word	.L107-.L109,.L190-.L109
	.half	1
	.byte	108
	.word	.L422-.L109,.L329-.L109
	.half	1
	.byte	108
	.word	0,0
.L336:
	.word	-1,.L109,.L107-.L109,.L190-.L109
	.half	1
	.byte	91
	.word	.L427-.L109,.L51-.L109
	.half	1
	.byte	91
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L339-.L111
	.half	2
	.byte	138,0
	.word	0,0
.L342:
	.word	-1,.L111,.L429-.L111,.L430-.L111
	.half	1
	.byte	95
	.word	.L62-.L111,.L339-.L111
	.half	1
	.byte	95
	.word	0,0
.L340:
	.word	-1,.L111,0,.L63-.L111
	.half	1
	.byte	100
	.word	.L428-.L111,.L339-.L111
	.half	1
	.byte	111
	.word	0,0
.L343:
	.word	-1,.L111,.L431-.L111,.L339-.L111
	.half	1
	.byte	88
	.word	0,0
.L341:
	.word	-1,.L111,0,.L63-.L111
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L745:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_frame'
	.word	24
	.word	.L745,.L65,.L279-.L65
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_frame'
	.word	24
	.word	.L745,.L69,.L282-.L69
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_frame'
	.word	24
	.word	.L745,.L71,.L285-.L71
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L745,.L73,.L239-.L73
	.byte	4
	.word	(.L346-.L73)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L239-.L346)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_frame'
	.word	12
	.word	.L745,.L87,.L275-.L87
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_frame'
	.word	24
	.word	.L745,.L89,.L287-.L89
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_frame'
	.word	24
	.word	.L745,.L93,.L291-.L93
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L745,.L95,.L294-.L95
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_frame'
	.word	12
	.word	.L745,.L97,.L304-.L97
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_frame'
	.word	24
	.word	.L745,.L99,.L308-.L99
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L745,.L101,.L313-.L101
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_frame'
	.word	12
	.word	.L745,.L103,.L317-.L103
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_frame'
	.word	12
	.word	.L745,.L109,.L329-.L109
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L745,.L111,.L339-.L111
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L746:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_11')
	.sect	'.debug_frame'
	.word	24
	.word	.L746,.L67,.L210-.L67
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_15')
	.sect	'.debug_frame'
	.word	24
	.word	.L746,.L75,.L230-.L75
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_13')
	.sect	'.debug_frame'
	.word	24
	.word	.L746,.L77,.L220-.L77
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_12')
	.sect	'.debug_frame'
	.word	24
	.word	.L746,.L79,.L215-.L79
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_10')
	.sect	'.debug_frame'
	.word	24
	.word	.L746,.L81,.L205-.L81
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_9')
	.sect	'.debug_frame'
	.word	24
	.word	.L746,.L83,.L200-.L83
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_8')
	.sect	'.debug_frame'
	.word	24
	.word	.L746,.L85,.L195-.L85
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_14')
	.sect	'.debug_frame'
	.word	24
	.word	.L746,.L91,.L225-.L91
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_16')
	.sect	'.debug_frame'
	.word	24
	.word	.L746,.L105,.L235-.L105
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L746,.L107,.L190-.L107
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
