	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc15148a --dep-file=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\.IfxGtm_Tom_Timer.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -DNDEBUG -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --no-warnings=542 --make-target=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.src ..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c"
	.compiler_name		"ctc"
	;source	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c'

	
$TC16X
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_acknowledgeTimerIrq',code,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_acknowledgeTimerIrq'
	.align	2
	
	.global	IfxGtm_Tom_Timer_acknowledgeTimerIrq

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     2   * \file IfxGtm_Tom_Timer.c
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     3   * \brief GTM TIMER details
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     4   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     5   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     7   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     9   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    10   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    15   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    16   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    22   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    23   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    24  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    25  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    26  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    27  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    28  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    29  #include "IfxGtm_Tom_Timer.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    30  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    31  #include "IfxGtm_bf.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    32  #include "stddef.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    33  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    34  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    35  /*-------------------------Function Implementations---------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    36  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    37  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    38  boolean IfxGtm_Tom_Timer_acknowledgeTimerIrq(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_acknowledgeTimerIrq
.L57:
IfxGtm_Tom_Timer_acknowledgeTimerIrq:	.type	func
	mov.aa	a15,a4
.L381:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    39  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    40      boolean event;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    41  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    42      event = IfxGtm_Tom_Ch_isZeroNotification(driver->tom, driver->timerChannel);
	fcall	.cocofun_7
.L379:
	call	IfxGtm_Tom_Ch_isZeroNotification
.L383:
	mov	d15,d2
.L382:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    43  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    44      if (event)
	jeq	d15,#0,.L2
.L609:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    45      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    46          IfxGtm_Tom_Ch_clearZeroNotification(driver->tom, driver->timerChannel);
	fcall	.cocofun_7
.L610:
	call	IfxGtm_Tom_Ch_clearZeroNotification
.L2:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    47      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    48      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    49      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    50  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    51      return event;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    52  }
	mov	d2,d15
	ret
.L316:
	
__IfxGtm_Tom_Timer_acknowledgeTimerIrq_function_end:
	.size	IfxGtm_Tom_Timer_acknowledgeTimerIrq,__IfxGtm_Tom_Timer_acknowledgeTimerIrq_function_end-IfxGtm_Tom_Timer_acknowledgeTimerIrq
.L147:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.IfxGtm_Tom_Timer..cocofun_7'
	.align	2
; Function .cocofun_7
.L59:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	ld.a	a4,[a15]16
.L380:
	ld.b	d4,[a15]29
.L801:
	fret
.L247:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_acknowledgeTriggerIrq',code,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_acknowledgeTriggerIrq'
	.align	2
	
	.global	IfxGtm_Tom_Timer_acknowledgeTriggerIrq

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    54  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    55  boolean IfxGtm_Tom_Timer_acknowledgeTriggerIrq(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_acknowledgeTriggerIrq
.L61:
IfxGtm_Tom_Timer_acknowledgeTriggerIrq:	.type	func
	mov.aa	a15,a4
.L385:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    56  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    57      boolean event;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    58  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    59      event = IfxGtm_Tom_Ch_isOneNotification(driver->tom, driver->triggerChannel);
	ld.a	a4,[a15]16
.L384:
	ld.b	d4,[a15]30
	call	IfxGtm_Tom_Ch_isOneNotification
.L386:
	mov	d15,d2
.L387:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    60  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    61      if (event)
	jeq	d15,#0,.L4
.L615:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    62      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    63          IfxGtm_Tom_Ch_clearOneNotification(driver->tom, driver->triggerChannel);
	ld.a	a4,[a15]16
.L616:
	ld.b	d4,[a15]30
	call	IfxGtm_Tom_Ch_clearOneNotification
.L4:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    64      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    65      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    66      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    67  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    68      return event;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    69  }
	mov	d2,d15
	ret
.L320:
	
__IfxGtm_Tom_Timer_acknowledgeTriggerIrq_function_end:
	.size	IfxGtm_Tom_Timer_acknowledgeTriggerIrq,__IfxGtm_Tom_Timer_acknowledgeTriggerIrq_function_end-IfxGtm_Tom_Timer_acknowledgeTriggerIrq
.L152:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_addToChannelMask',code,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_addToChannelMask'
	.align	2
	
	.global	IfxGtm_Tom_Timer_addToChannelMask

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    70  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    72  void IfxGtm_Tom_Timer_addToChannelMask(IfxGtm_Tom_Timer *driver, IfxGtm_Tom_Ch channel)
; Function IfxGtm_Tom_Timer_addToChannelMask
.L63:
IfxGtm_Tom_Timer_addToChannelMask:	.type	func
	mov.aa	a15,a4
.L390:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    73  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    74      if (driver->timerChannel <= IfxGtm_Tom_Ch_7)
	ld.b	d15,[a15]29
.L621:
	mov	d0,#7
.L622:
	jlt	d0,d15,.L6
.L623:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    75      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    76          if (channel <= IfxGtm_Tom_Ch_7)
	jlt	d0,d4,.L7
.L624:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    77          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    78              driver->channelsMask[0]                 |= 1 << channel;
	mov	d0,#1
	ld.hu	d15,[a15]32
.L625:
	sha	d0,d0,d4
.L626:
	or	d15,d0
	st.h	[a15]32,d15
.L627:
	j	.L8
.L7:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    79              driver->tgcGlobalControlDisableUpdate[0] = IfxGtm_Tom_Tgc_buildFeature(0, driver->channelsMask[0], IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    80              driver->tgcGlobalControlApplyUpdate[0]   = IfxGtm_Tom_Tgc_buildFeature(driver->channelsMask[0], 0, IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    81          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    82          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    83          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    84              driver->channelsMask[1]                 |= 1 << (channel - IfxGtm_Tom_Ch_8);
	mov	d0,#1
	ld.hu	d15,[a15]34
.L628:
	add	d4,#-8
.L388:
	sha	d0,d0,d4
.L629:
	or	d15,d0
	st.h	[a15]34,d15
.L630:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    85              driver->tgcGlobalControlDisableUpdate[1] = IfxGtm_Tom_Tgc_buildFeature(0, driver->channelsMask[1], IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
	mov	d4,#0
.L631:
	ld.hu	d5,[a15]34
.L632:
	mov	d6,#16
	call	IfxGtm_Tom_Tgc_buildFeature
.L389:
	st.w	[a15]44,d2
.L633:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    86              driver->tgcGlobalControlApplyUpdate[1]   = IfxGtm_Tom_Tgc_buildFeature(driver->channelsMask[1], 0, IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
	mov	d5,#0
.L634:
	ld.hu	d4,[a15]34
.L635:
	mov	d6,#16
	call	IfxGtm_Tom_Tgc_buildFeature
.L636:
	st.w	[a15]52,d2
.L637:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    87          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    88      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    89      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    90      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    91          driver->channelsMask[0]                 |= 1 << (channel - IfxGtm_Tom_Ch_8);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    92          driver->tgcGlobalControlDisableUpdate[0] = IfxGtm_Tom_Tgc_buildFeature(0, driver->channelsMask[0], IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    93          driver->tgcGlobalControlApplyUpdate[0]   = IfxGtm_Tom_Tgc_buildFeature(driver->channelsMask[0], 0, IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    94      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    95  }
	ret
.L6:
	mov	d0,#1
	ld.hu	d15,[a15]32
.L638:
	add	d4,#-8
.L391:
	sha	d0,d0,d4
.L639:
	or	d15,d0
	st.h	[a15]32,d15
.L8:
	mov	d4,#0
	ld.hu	d5,[a15]32
.L640:
	mov	d6,#16
	call	IfxGtm_Tom_Tgc_buildFeature
.L392:
	st.w	[a15]40,d2
.L641:
	mov	d5,#0
.L642:
	ld.hu	d4,[a15]32
.L643:
	mov	d6,#16
	call	IfxGtm_Tom_Tgc_buildFeature
.L644:
	st.w	[a15]48,d2
.L645:
	ret
.L323:
	
__IfxGtm_Tom_Timer_addToChannelMask_function_end:
	.size	IfxGtm_Tom_Timer_addToChannelMask,__IfxGtm_Tom_Timer_addToChannelMask_function_end-IfxGtm_Tom_Timer_addToChannelMask
.L157:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_applyUpdate',code,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_applyUpdate'
	.align	2
	
	.global	IfxGtm_Tom_Timer_applyUpdate

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    96  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    97  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    98  void IfxGtm_Tom_Timer_applyUpdate(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_applyUpdate
.L65:
IfxGtm_Tom_Timer_applyUpdate:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    99  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   100      IfxGtm_Tom_Tgc_writeGlobalControl(driver->tgc[0], driver->tgcGlobalControlApplyUpdate[0]);
	ld.a	a15,[a4]20
.L650:
	ld.w	d15,[a4]48
.L651:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     2   * \file IfxGtm_Tom.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     3   * \brief GTM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     4   * \ingroup IfxLld_Gtm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    26   * \defgroup IfxLld_Gtm_Std_Tom Tom Basic Functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    27   * \ingroup IfxLld_Gtm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    28   * \defgroup IfxLld_Gtm_Std_Tom_Enumerations TOM Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    29   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    30   * \defgroup IfxLld_Gtm_Std_Tom_Channel_Functions TOM Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    31   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    32   * \defgroup IfxLld_Gtm_Std_Tom_TGC_Functions TOM TGC Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    33   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    36  #ifndef IFXGTM_TOM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    37  #define IFXGTM_TOM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    43  #include "_Impl/IfxGtm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    44  #include "IfxGtm.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    45  #include "IfxGtm_Tbu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    47  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    49  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    50  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    51  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    52  /** \addtogroup IfxLld_Gtm_Std_Tom_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    53   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    54  /** \brief Clock source for the TOM channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    55   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    56  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    57  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    58      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0 = 0,  /**< \brief div 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    59      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1 = 1,  /**< \brief div 16 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    60      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2 = 2,  /**< \brief div 256 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    61      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3 = 3,  /**< \brief div 4096 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    62      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4 = 4,  /**< \brief div 32768 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    63      IfxGtm_Tom_Ch_ClkSrc_noClock   = 5   /**< \brief no clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    64  } IfxGtm_Tom_Ch_ClkSrc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    65  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    66  /** \brief Reset source for channel counter CN0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    70      IfxGtm_Tom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    71      IfxGtm_Tom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    72  } IfxGtm_Tom_Ch_OutputTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    74  /** \brief Reset event for channel counter CN0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    75   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    76  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    77  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    78      IfxGtm_Tom_Ch_ResetEvent_onCm0     = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    79      IfxGtm_Tom_Ch_ResetEvent_onTrigger = 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    80  } IfxGtm_Tom_Ch_ResetEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    81  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    82  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    84  /** \addtogroup IfxLld_Gtm_Std_Tom_Channel_Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    85   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    86  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    87  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    88  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    89  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    90  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    91  /** \brief Returns the base addredd of selected Tom channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    92   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    93   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    94   * \return Pointer to channel base address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    95   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    96  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    97  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    98  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    99  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   100  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   102  /** \brief Clears the channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   103   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   104   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   105   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   106   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   107  IFX_EXTERN void IfxGtm_Tom_Ch_clearOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   108  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   109  /** \brief Clears the channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   110   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   111   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   114  IFX_EXTERN void IfxGtm_Tom_Ch_clearZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   116  /** \brief Returns the TOM channel input clock frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   117   * \param gtm Pointer to GTM module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   118   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   119   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   120   * \return TOM channel input clock frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   121   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   122  IFX_EXTERN float32 IfxGtm_Tom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   123  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   124  /** \brief Returns the channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   125   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   126   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   127   * \return The clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   129  IFX_EXTERN IfxGtm_Tom_Ch_ClkSrc IfxGtm_Tom_Ch_getClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   130  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   131  /** \brief Returns the compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   132   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   133   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   134   * \return compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   135   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   136  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   137  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   138  /** \brief Returns the compare one pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   139   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   140   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   141   * \return compare one pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   143  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareOnePointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   145  /** \brief Returns the compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   146   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   147   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   148   * \return compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   149   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   150  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   151  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   152  /** \brief Returns the compare zero pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   153   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   154   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   155   * \return compare zero pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   157  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareZeroPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   159  /** \brief Gets the TOM output level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   160   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   161   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   162   * \return TRUE the output is high, FALSE the output is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   163   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   164  IFX_EXTERN boolean IfxGtm_Tom_Ch_getOutputLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   165  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   166  /** \brief Returns a pointer to the TOM channel SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   167   * \param gtm Pointer to GTM module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   168   * \param tom Specifies the tom object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   169   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   170   * \return Pointer to the TOM channel SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   171   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   172  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Tom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Tom tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   174  /** \brief Returns the TGC pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   175   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   176   * \param tgcIndex TGC index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   177   * \return TOM TGC object pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   178   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   179  IFX_EXTERN Ifx_GTM_TOM_TGC *IfxGtm_Tom_Ch_getTgcPointer(Ifx_GTM_TOM *tom, uint32 tgcIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   181  /** \brief Returns the Timer pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   182   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   183   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   184   * \return Timer pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   186  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getTimerPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   188  /** \brief Returns the status of channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   189   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   190   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   191   * \return Status of channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   192   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   193  IFX_EXTERN boolean IfxGtm_Tom_Ch_isOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   194  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   195  /** \brief Returns the status of channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   196   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   197   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   198   * \return Status of channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   199   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   200  IFX_EXTERN boolean IfxGtm_Tom_Ch_isZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   201  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   202  /** \brief Raises the interrupt for Compare 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   203   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   204   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   205   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   207  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   208  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   209  /** \brief Raises the interrupt for Compare 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   210   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   211   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   212   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   214  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   215  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   216  /** \brief Sets the channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   217   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   218   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   219   * \param clock Channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   220   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   221   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   222  IFX_EXTERN void IfxGtm_Tom_Ch_setClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ClkSrc clock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   223  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   224  /** \brief Sets the compare 0 and 1 values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   225   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   226   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   227   * \param compareZero Compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   228   * \param compareOne Compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   229   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   231  IFX_EXTERN void IfxGtm_Tom_Ch_setCompare(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero, uint32 compareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   233  /** \brief Sets the compare 1 value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   234   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   235   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   236   * \param compareOne Compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   237   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   238   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   239  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   241  /** \brief Sets the compare 1 shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   242   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   243   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   244   * \param shadowOne Compare one shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   245   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   246   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   247  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOneShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   249  /** \brief Sets the compare 0 and 1 shadow values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   250   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   251   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   252   * \param shadowZero Compare zero shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   253   * \param shadowOne Compare one shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   254   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   255   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   256  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   257  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   258  /** \brief Sets the compare 0 value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   259   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   260   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   261   * \param compareZero Compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   262   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   264  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   266  /** \brief Sets the compare 0 shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   267   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   268   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   269   * \param shadowZero Compare zero shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   272  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZeroShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   274  /** \brief Sets the counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   275   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   276   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   277   * \param value Counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   280  IFX_EXTERN void IfxGtm_Tom_Ch_setCounterValue(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   282  /** \brief Sets the channel notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   283   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   284   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   285   * \param mode Interrupt mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   286   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   287   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   288   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   290  IFX_EXTERN void IfxGtm_Tom_Ch_setNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   292  /** \brief Enable/disable the one shot mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   293   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   294   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   295   * \param enabled If TRUE, the feature is enabled, else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   296   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   297   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   298  IFX_EXTERN void IfxGtm_Tom_Ch_setOneShotMode(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   299  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   300  /** \brief Enable/disable the PCM mode (channel 15 only)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   301   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   302   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   303   * \param enabled If TRUE, the feature is enabled, else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   304   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   305   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   306  IFX_EXTERN void IfxGtm_Tom_Ch_setPcm(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   307  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   308  /** \brief Sets the channel clock source either from local or from previous channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   309   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   310   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   311   * \param event Channel reset event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   312   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   313   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   314  IFX_EXTERN void IfxGtm_Tom_Ch_setResetSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ResetEvent event);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   315  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   316  /** \brief Sets the signal level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   317   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   318   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   319   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   322  IFX_EXTERN void IfxGtm_Tom_Ch_setSignalLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, Ifx_ActiveState activeState);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   324  /** \brief Sets the channel trigger output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   325   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   326   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   327   * \param trigger Channel trigger output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   328   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   329   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   330  IFX_EXTERN void IfxGtm_Tom_Ch_setTriggerOutput(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_OutputTrigger trigger);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   332  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   333  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   334  /** \addtogroup IfxLld_Gtm_Std_Tom_TGC_Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   335   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   336  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   337  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   338  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   341  /** \brief Sets the tgc global control value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   342   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   343   * \param control global control value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   344   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   345   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   346  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   347  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   348  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   349  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   350  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   352  /** \brief Builds the register value for the feature enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   353   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   354   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   355   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   356   * \return The register value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   357   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   358  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   360  /** \brief Builds the register value for the feature enable/disable for a single channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   361   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   362   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   363   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   364   * \return The register value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   366  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeatureForChannel(IfxGtm_Tom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   368  /** \brief Enable/disable one channel (ENDIS)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   369   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   370   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   371   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   372   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   373   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   375  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannel(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   377  /** \brief Enable/disable one channel output (OUTEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   378   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   379   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   380   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   381   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   382   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   383   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   384  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelOutput(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   385  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   386  /** \brief Enable/disable one channel for update (UPEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   387   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   388   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   389   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   390   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   392  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   394  /** \brief Enable/disable one or more channels (ENDIS)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   395   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   396   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   397   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   398   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   399   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   400   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   401  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannels(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   402  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   403  /** \brief Enable/disable one or more channels output (OUTEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   404   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   405   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   406   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   407   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   408   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   410  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsOutput(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   412  /** \brief Enable/disable the TGC channels trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   413   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   414   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   415   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   418  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsTrigger(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   420  /** \brief Enable/disable one or more channels for update (UPEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   421   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   422   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   423   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   424   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   425   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   426  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   428  /** \brief Enable/disable the time base trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   429   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   430   * \param enabled If TRUE, the trigger is enabled else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   431   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   432   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   433  IFX_EXTERN void IfxGtm_Tom_Tgc_enableTimeTrigger(Ifx_GTM_TOM_TGC *tgc, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   434  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   435  /** \brief Reset one or more channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   436   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   437   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   438   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   439   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   440  IFX_EXTERN void IfxGtm_Tom_Tgc_resetChannels(Ifx_GTM_TOM_TGC *tgc, uint32 resetMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   442  /** \brief Enable/disable one channel for update (FUPD)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   443   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   444   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   445   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   446   * \param resetEnabled Enable/ Disable reset choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   447   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   448   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   449  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelForceUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean resetEnabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   451  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   452   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   453   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   454   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   455   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   456   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   457   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   458   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   459  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelsForceUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   460  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   461  /** \brief Sets the trigger time base and time base value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   462   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   463   * \param base Time base used for comparison
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   464   * \param value Compare value that raise the trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   465   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   466   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   467  IFX_EXTERN void IfxGtm_Tom_Tgc_setTimeTrigger(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tbu_Ts base, uint32 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   468  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   469  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   470   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   473  IFX_EXTERN void IfxGtm_Tom_Tgc_trigger(Ifx_GTM_TOM_TGC *tgc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   475  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   476  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   477  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   478  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   479  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   481  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   482  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   483      return (Ifx_GTM_TOM_CH *)((uint32)&tom->CH0.CTRL.U + 0x40 * channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   484  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   485  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   486  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   487  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   488  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   489      tgc->GLB_CTRL.U = control;
	st.w	[a15],d15
.L329:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   101  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   102      if (driver->tgc[1])
	ld.a	a15,[a4]24
.L652:
	jz.a	a15,.L10
.L335:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   103      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   104          IfxGtm_Tom_Tgc_writeGlobalControl(driver->tgc[1], driver->tgcGlobalControlApplyUpdate[1]);  /* Note: Write of 0 value has no effect */
	ld.w	d15,[a4]52
.L653:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     2   * \file IfxGtm_Tom.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     3   * \brief GTM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     4   * \ingroup IfxLld_Gtm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    26   * \defgroup IfxLld_Gtm_Std_Tom Tom Basic Functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    27   * \ingroup IfxLld_Gtm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    28   * \defgroup IfxLld_Gtm_Std_Tom_Enumerations TOM Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    29   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    30   * \defgroup IfxLld_Gtm_Std_Tom_Channel_Functions TOM Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    31   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    32   * \defgroup IfxLld_Gtm_Std_Tom_TGC_Functions TOM TGC Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    33   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    36  #ifndef IFXGTM_TOM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    37  #define IFXGTM_TOM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    43  #include "_Impl/IfxGtm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    44  #include "IfxGtm.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    45  #include "IfxGtm_Tbu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    47  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    49  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    50  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    51  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    52  /** \addtogroup IfxLld_Gtm_Std_Tom_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    53   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    54  /** \brief Clock source for the TOM channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    55   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    56  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    57  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    58      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0 = 0,  /**< \brief div 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    59      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1 = 1,  /**< \brief div 16 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    60      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2 = 2,  /**< \brief div 256 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    61      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3 = 3,  /**< \brief div 4096 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    62      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4 = 4,  /**< \brief div 32768 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    63      IfxGtm_Tom_Ch_ClkSrc_noClock   = 5   /**< \brief no clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    64  } IfxGtm_Tom_Ch_ClkSrc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    65  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    66  /** \brief Reset source for channel counter CN0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    70      IfxGtm_Tom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    71      IfxGtm_Tom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    72  } IfxGtm_Tom_Ch_OutputTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    74  /** \brief Reset event for channel counter CN0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    75   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    76  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    77  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    78      IfxGtm_Tom_Ch_ResetEvent_onCm0     = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    79      IfxGtm_Tom_Ch_ResetEvent_onTrigger = 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    80  } IfxGtm_Tom_Ch_ResetEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    81  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    82  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    84  /** \addtogroup IfxLld_Gtm_Std_Tom_Channel_Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    85   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    86  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    87  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    88  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    89  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    90  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    91  /** \brief Returns the base addredd of selected Tom channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    92   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    93   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    94   * \return Pointer to channel base address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    95   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    96  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    97  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    98  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    99  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   100  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   102  /** \brief Clears the channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   103   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   104   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   105   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   106   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   107  IFX_EXTERN void IfxGtm_Tom_Ch_clearOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   108  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   109  /** \brief Clears the channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   110   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   111   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   114  IFX_EXTERN void IfxGtm_Tom_Ch_clearZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   116  /** \brief Returns the TOM channel input clock frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   117   * \param gtm Pointer to GTM module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   118   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   119   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   120   * \return TOM channel input clock frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   121   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   122  IFX_EXTERN float32 IfxGtm_Tom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   123  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   124  /** \brief Returns the channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   125   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   126   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   127   * \return The clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   129  IFX_EXTERN IfxGtm_Tom_Ch_ClkSrc IfxGtm_Tom_Ch_getClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   130  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   131  /** \brief Returns the compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   132   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   133   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   134   * \return compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   135   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   136  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   137  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   138  /** \brief Returns the compare one pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   139   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   140   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   141   * \return compare one pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   143  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareOnePointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   145  /** \brief Returns the compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   146   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   147   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   148   * \return compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   149   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   150  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   151  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   152  /** \brief Returns the compare zero pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   153   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   154   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   155   * \return compare zero pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   157  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareZeroPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   159  /** \brief Gets the TOM output level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   160   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   161   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   162   * \return TRUE the output is high, FALSE the output is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   163   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   164  IFX_EXTERN boolean IfxGtm_Tom_Ch_getOutputLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   165  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   166  /** \brief Returns a pointer to the TOM channel SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   167   * \param gtm Pointer to GTM module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   168   * \param tom Specifies the tom object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   169   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   170   * \return Pointer to the TOM channel SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   171   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   172  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Tom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Tom tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   174  /** \brief Returns the TGC pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   175   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   176   * \param tgcIndex TGC index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   177   * \return TOM TGC object pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   178   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   179  IFX_EXTERN Ifx_GTM_TOM_TGC *IfxGtm_Tom_Ch_getTgcPointer(Ifx_GTM_TOM *tom, uint32 tgcIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   181  /** \brief Returns the Timer pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   182   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   183   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   184   * \return Timer pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   186  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getTimerPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   188  /** \brief Returns the status of channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   189   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   190   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   191   * \return Status of channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   192   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   193  IFX_EXTERN boolean IfxGtm_Tom_Ch_isOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   194  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   195  /** \brief Returns the status of channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   196   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   197   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   198   * \return Status of channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   199   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   200  IFX_EXTERN boolean IfxGtm_Tom_Ch_isZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   201  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   202  /** \brief Raises the interrupt for Compare 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   203   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   204   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   205   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   207  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   208  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   209  /** \brief Raises the interrupt for Compare 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   210   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   211   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   212   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   214  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   215  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   216  /** \brief Sets the channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   217   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   218   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   219   * \param clock Channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   220   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   221   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   222  IFX_EXTERN void IfxGtm_Tom_Ch_setClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ClkSrc clock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   223  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   224  /** \brief Sets the compare 0 and 1 values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   225   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   226   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   227   * \param compareZero Compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   228   * \param compareOne Compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   229   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   231  IFX_EXTERN void IfxGtm_Tom_Ch_setCompare(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero, uint32 compareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   233  /** \brief Sets the compare 1 value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   234   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   235   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   236   * \param compareOne Compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   237   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   238   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   239  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   241  /** \brief Sets the compare 1 shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   242   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   243   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   244   * \param shadowOne Compare one shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   245   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   246   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   247  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOneShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   249  /** \brief Sets the compare 0 and 1 shadow values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   250   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   251   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   252   * \param shadowZero Compare zero shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   253   * \param shadowOne Compare one shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   254   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   255   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   256  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   257  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   258  /** \brief Sets the compare 0 value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   259   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   260   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   261   * \param compareZero Compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   262   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   264  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   266  /** \brief Sets the compare 0 shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   267   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   268   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   269   * \param shadowZero Compare zero shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   272  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZeroShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   274  /** \brief Sets the counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   275   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   276   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   277   * \param value Counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   280  IFX_EXTERN void IfxGtm_Tom_Ch_setCounterValue(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   282  /** \brief Sets the channel notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   283   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   284   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   285   * \param mode Interrupt mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   286   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   287   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   288   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   290  IFX_EXTERN void IfxGtm_Tom_Ch_setNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   292  /** \brief Enable/disable the one shot mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   293   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   294   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   295   * \param enabled If TRUE, the feature is enabled, else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   296   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   297   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   298  IFX_EXTERN void IfxGtm_Tom_Ch_setOneShotMode(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   299  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   300  /** \brief Enable/disable the PCM mode (channel 15 only)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   301   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   302   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   303   * \param enabled If TRUE, the feature is enabled, else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   304   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   305   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   306  IFX_EXTERN void IfxGtm_Tom_Ch_setPcm(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   307  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   308  /** \brief Sets the channel clock source either from local or from previous channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   309   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   310   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   311   * \param event Channel reset event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   312   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   313   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   314  IFX_EXTERN void IfxGtm_Tom_Ch_setResetSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ResetEvent event);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   315  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   316  /** \brief Sets the signal level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   317   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   318   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   319   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   322  IFX_EXTERN void IfxGtm_Tom_Ch_setSignalLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, Ifx_ActiveState activeState);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   324  /** \brief Sets the channel trigger output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   325   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   326   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   327   * \param trigger Channel trigger output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   328   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   329   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   330  IFX_EXTERN void IfxGtm_Tom_Ch_setTriggerOutput(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_OutputTrigger trigger);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   332  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   333  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   334  /** \addtogroup IfxLld_Gtm_Std_Tom_TGC_Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   335   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   336  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   337  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   338  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   341  /** \brief Sets the tgc global control value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   342   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   343   * \param control global control value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   344   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   345   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   346  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   347  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   348  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   349  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   350  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   352  /** \brief Builds the register value for the feature enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   353   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   354   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   355   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   356   * \return The register value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   357   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   358  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   360  /** \brief Builds the register value for the feature enable/disable for a single channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   361   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   362   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   363   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   364   * \return The register value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   366  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeatureForChannel(IfxGtm_Tom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   368  /** \brief Enable/disable one channel (ENDIS)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   369   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   370   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   371   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   372   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   373   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   375  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannel(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   377  /** \brief Enable/disable one channel output (OUTEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   378   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   379   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   380   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   381   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   382   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   383   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   384  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelOutput(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   385  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   386  /** \brief Enable/disable one channel for update (UPEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   387   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   388   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   389   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   390   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   392  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   394  /** \brief Enable/disable one or more channels (ENDIS)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   395   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   396   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   397   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   398   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   399   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   400   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   401  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannels(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   402  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   403  /** \brief Enable/disable one or more channels output (OUTEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   404   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   405   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   406   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   407   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   408   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   410  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsOutput(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   412  /** \brief Enable/disable the TGC channels trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   413   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   414   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   415   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   418  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsTrigger(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   420  /** \brief Enable/disable one or more channels for update (UPEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   421   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   422   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   423   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   424   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   425   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   426  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   428  /** \brief Enable/disable the time base trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   429   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   430   * \param enabled If TRUE, the trigger is enabled else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   431   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   432   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   433  IFX_EXTERN void IfxGtm_Tom_Tgc_enableTimeTrigger(Ifx_GTM_TOM_TGC *tgc, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   434  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   435  /** \brief Reset one or more channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   436   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   437   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   438   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   439   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   440  IFX_EXTERN void IfxGtm_Tom_Tgc_resetChannels(Ifx_GTM_TOM_TGC *tgc, uint32 resetMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   442  /** \brief Enable/disable one channel for update (FUPD)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   443   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   444   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   445   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   446   * \param resetEnabled Enable/ Disable reset choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   447   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   448   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   449  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelForceUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean resetEnabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   451  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   452   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   453   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   454   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   455   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   456   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   457   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   458   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   459  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelsForceUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   460  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   461  /** \brief Sets the trigger time base and time base value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   462   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   463   * \param base Time base used for comparison
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   464   * \param value Compare value that raise the trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   465   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   466   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   467  IFX_EXTERN void IfxGtm_Tom_Tgc_setTimeTrigger(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tbu_Ts base, uint32 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   468  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   469  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   470   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   473  IFX_EXTERN void IfxGtm_Tom_Tgc_trigger(Ifx_GTM_TOM_TGC *tgc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   475  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   476  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   477  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   478  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   479  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   481  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   482  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   483      return (Ifx_GTM_TOM_CH *)((uint32)&tom->CH0.CTRL.U + 0x40 * channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   484  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   485  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   486  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   487  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   488  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   489      tgc->GLB_CTRL.U = control;
	st.w	[a15],d15
.L10:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   105      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   106  }
	ret
.L326:
	
__IfxGtm_Tom_Timer_applyUpdate_function_end:
	.size	IfxGtm_Tom_Timer_applyUpdate,__IfxGtm_Tom_Timer_applyUpdate_function_end-IfxGtm_Tom_Timer_applyUpdate
.L162:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_disableUpdate',code,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_disableUpdate'
	.align	2
	
	.global	IfxGtm_Tom_Timer_disableUpdate

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   107  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   108  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   109  void IfxGtm_Tom_Timer_disableUpdate(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_disableUpdate
.L67:
IfxGtm_Tom_Timer_disableUpdate:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   110  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   111      IfxGtm_Tom_Tgc_writeGlobalControl(driver->tgc[0], driver->tgcGlobalControlDisableUpdate[0]);
	ld.a	a15,[a4]20
.L658:
	ld.w	d15,[a4]40
.L659:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     2   * \file IfxGtm_Tom.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     3   * \brief GTM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     4   * \ingroup IfxLld_Gtm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    26   * \defgroup IfxLld_Gtm_Std_Tom Tom Basic Functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    27   * \ingroup IfxLld_Gtm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    28   * \defgroup IfxLld_Gtm_Std_Tom_Enumerations TOM Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    29   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    30   * \defgroup IfxLld_Gtm_Std_Tom_Channel_Functions TOM Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    31   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    32   * \defgroup IfxLld_Gtm_Std_Tom_TGC_Functions TOM TGC Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    33   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    36  #ifndef IFXGTM_TOM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    37  #define IFXGTM_TOM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    43  #include "_Impl/IfxGtm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    44  #include "IfxGtm.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    45  #include "IfxGtm_Tbu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    47  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    49  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    50  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    51  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    52  /** \addtogroup IfxLld_Gtm_Std_Tom_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    53   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    54  /** \brief Clock source for the TOM channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    55   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    56  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    57  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    58      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0 = 0,  /**< \brief div 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    59      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1 = 1,  /**< \brief div 16 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    60      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2 = 2,  /**< \brief div 256 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    61      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3 = 3,  /**< \brief div 4096 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    62      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4 = 4,  /**< \brief div 32768 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    63      IfxGtm_Tom_Ch_ClkSrc_noClock   = 5   /**< \brief no clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    64  } IfxGtm_Tom_Ch_ClkSrc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    65  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    66  /** \brief Reset source for channel counter CN0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    70      IfxGtm_Tom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    71      IfxGtm_Tom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    72  } IfxGtm_Tom_Ch_OutputTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    74  /** \brief Reset event for channel counter CN0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    75   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    76  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    77  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    78      IfxGtm_Tom_Ch_ResetEvent_onCm0     = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    79      IfxGtm_Tom_Ch_ResetEvent_onTrigger = 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    80  } IfxGtm_Tom_Ch_ResetEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    81  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    82  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    84  /** \addtogroup IfxLld_Gtm_Std_Tom_Channel_Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    85   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    86  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    87  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    88  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    89  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    90  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    91  /** \brief Returns the base addredd of selected Tom channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    92   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    93   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    94   * \return Pointer to channel base address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    95   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    96  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    97  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    98  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    99  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   100  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   102  /** \brief Clears the channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   103   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   104   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   105   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   106   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   107  IFX_EXTERN void IfxGtm_Tom_Ch_clearOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   108  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   109  /** \brief Clears the channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   110   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   111   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   114  IFX_EXTERN void IfxGtm_Tom_Ch_clearZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   116  /** \brief Returns the TOM channel input clock frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   117   * \param gtm Pointer to GTM module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   118   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   119   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   120   * \return TOM channel input clock frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   121   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   122  IFX_EXTERN float32 IfxGtm_Tom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   123  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   124  /** \brief Returns the channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   125   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   126   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   127   * \return The clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   129  IFX_EXTERN IfxGtm_Tom_Ch_ClkSrc IfxGtm_Tom_Ch_getClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   130  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   131  /** \brief Returns the compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   132   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   133   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   134   * \return compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   135   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   136  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   137  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   138  /** \brief Returns the compare one pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   139   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   140   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   141   * \return compare one pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   143  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareOnePointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   145  /** \brief Returns the compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   146   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   147   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   148   * \return compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   149   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   150  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   151  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   152  /** \brief Returns the compare zero pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   153   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   154   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   155   * \return compare zero pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   157  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareZeroPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   159  /** \brief Gets the TOM output level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   160   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   161   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   162   * \return TRUE the output is high, FALSE the output is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   163   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   164  IFX_EXTERN boolean IfxGtm_Tom_Ch_getOutputLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   165  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   166  /** \brief Returns a pointer to the TOM channel SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   167   * \param gtm Pointer to GTM module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   168   * \param tom Specifies the tom object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   169   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   170   * \return Pointer to the TOM channel SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   171   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   172  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Tom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Tom tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   174  /** \brief Returns the TGC pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   175   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   176   * \param tgcIndex TGC index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   177   * \return TOM TGC object pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   178   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   179  IFX_EXTERN Ifx_GTM_TOM_TGC *IfxGtm_Tom_Ch_getTgcPointer(Ifx_GTM_TOM *tom, uint32 tgcIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   181  /** \brief Returns the Timer pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   182   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   183   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   184   * \return Timer pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   186  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getTimerPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   188  /** \brief Returns the status of channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   189   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   190   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   191   * \return Status of channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   192   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   193  IFX_EXTERN boolean IfxGtm_Tom_Ch_isOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   194  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   195  /** \brief Returns the status of channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   196   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   197   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   198   * \return Status of channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   199   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   200  IFX_EXTERN boolean IfxGtm_Tom_Ch_isZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   201  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   202  /** \brief Raises the interrupt for Compare 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   203   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   204   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   205   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   207  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   208  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   209  /** \brief Raises the interrupt for Compare 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   210   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   211   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   212   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   214  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   215  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   216  /** \brief Sets the channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   217   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   218   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   219   * \param clock Channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   220   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   221   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   222  IFX_EXTERN void IfxGtm_Tom_Ch_setClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ClkSrc clock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   223  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   224  /** \brief Sets the compare 0 and 1 values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   225   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   226   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   227   * \param compareZero Compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   228   * \param compareOne Compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   229   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   231  IFX_EXTERN void IfxGtm_Tom_Ch_setCompare(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero, uint32 compareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   233  /** \brief Sets the compare 1 value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   234   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   235   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   236   * \param compareOne Compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   237   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   238   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   239  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   241  /** \brief Sets the compare 1 shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   242   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   243   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   244   * \param shadowOne Compare one shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   245   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   246   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   247  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOneShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   249  /** \brief Sets the compare 0 and 1 shadow values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   250   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   251   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   252   * \param shadowZero Compare zero shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   253   * \param shadowOne Compare one shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   254   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   255   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   256  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   257  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   258  /** \brief Sets the compare 0 value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   259   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   260   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   261   * \param compareZero Compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   262   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   264  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   266  /** \brief Sets the compare 0 shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   267   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   268   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   269   * \param shadowZero Compare zero shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   272  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZeroShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   274  /** \brief Sets the counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   275   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   276   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   277   * \param value Counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   280  IFX_EXTERN void IfxGtm_Tom_Ch_setCounterValue(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   282  /** \brief Sets the channel notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   283   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   284   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   285   * \param mode Interrupt mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   286   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   287   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   288   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   290  IFX_EXTERN void IfxGtm_Tom_Ch_setNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   292  /** \brief Enable/disable the one shot mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   293   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   294   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   295   * \param enabled If TRUE, the feature is enabled, else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   296   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   297   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   298  IFX_EXTERN void IfxGtm_Tom_Ch_setOneShotMode(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   299  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   300  /** \brief Enable/disable the PCM mode (channel 15 only)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   301   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   302   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   303   * \param enabled If TRUE, the feature is enabled, else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   304   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   305   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   306  IFX_EXTERN void IfxGtm_Tom_Ch_setPcm(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   307  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   308  /** \brief Sets the channel clock source either from local or from previous channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   309   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   310   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   311   * \param event Channel reset event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   312   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   313   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   314  IFX_EXTERN void IfxGtm_Tom_Ch_setResetSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ResetEvent event);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   315  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   316  /** \brief Sets the signal level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   317   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   318   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   319   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   322  IFX_EXTERN void IfxGtm_Tom_Ch_setSignalLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, Ifx_ActiveState activeState);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   324  /** \brief Sets the channel trigger output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   325   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   326   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   327   * \param trigger Channel trigger output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   328   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   329   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   330  IFX_EXTERN void IfxGtm_Tom_Ch_setTriggerOutput(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_OutputTrigger trigger);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   332  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   333  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   334  /** \addtogroup IfxLld_Gtm_Std_Tom_TGC_Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   335   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   336  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   337  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   338  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   341  /** \brief Sets the tgc global control value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   342   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   343   * \param control global control value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   344   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   345   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   346  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   347  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   348  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   349  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   350  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   352  /** \brief Builds the register value for the feature enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   353   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   354   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   355   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   356   * \return The register value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   357   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   358  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   360  /** \brief Builds the register value for the feature enable/disable for a single channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   361   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   362   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   363   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   364   * \return The register value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   366  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeatureForChannel(IfxGtm_Tom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   368  /** \brief Enable/disable one channel (ENDIS)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   369   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   370   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   371   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   372   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   373   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   375  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannel(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   377  /** \brief Enable/disable one channel output (OUTEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   378   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   379   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   380   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   381   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   382   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   383   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   384  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelOutput(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   385  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   386  /** \brief Enable/disable one channel for update (UPEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   387   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   388   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   389   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   390   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   392  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   394  /** \brief Enable/disable one or more channels (ENDIS)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   395   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   396   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   397   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   398   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   399   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   400   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   401  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannels(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   402  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   403  /** \brief Enable/disable one or more channels output (OUTEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   404   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   405   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   406   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   407   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   408   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   410  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsOutput(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   412  /** \brief Enable/disable the TGC channels trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   413   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   414   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   415   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   418  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsTrigger(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   420  /** \brief Enable/disable one or more channels for update (UPEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   421   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   422   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   423   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   424   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   425   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   426  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   428  /** \brief Enable/disable the time base trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   429   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   430   * \param enabled If TRUE, the trigger is enabled else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   431   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   432   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   433  IFX_EXTERN void IfxGtm_Tom_Tgc_enableTimeTrigger(Ifx_GTM_TOM_TGC *tgc, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   434  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   435  /** \brief Reset one or more channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   436   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   437   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   438   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   439   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   440  IFX_EXTERN void IfxGtm_Tom_Tgc_resetChannels(Ifx_GTM_TOM_TGC *tgc, uint32 resetMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   442  /** \brief Enable/disable one channel for update (FUPD)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   443   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   444   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   445   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   446   * \param resetEnabled Enable/ Disable reset choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   447   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   448   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   449  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelForceUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean resetEnabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   451  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   452   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   453   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   454   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   455   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   456   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   457   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   458   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   459  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelsForceUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   460  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   461  /** \brief Sets the trigger time base and time base value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   462   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   463   * \param base Time base used for comparison
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   464   * \param value Compare value that raise the trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   465   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   466   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   467  IFX_EXTERN void IfxGtm_Tom_Tgc_setTimeTrigger(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tbu_Ts base, uint32 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   468  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   469  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   470   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   473  IFX_EXTERN void IfxGtm_Tom_Tgc_trigger(Ifx_GTM_TOM_TGC *tgc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   475  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   476  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   477  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   478  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   479  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   481  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   482  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   483      return (Ifx_GTM_TOM_CH *)((uint32)&tom->CH0.CTRL.U + 0x40 * channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   484  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   485  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   486  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   487  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   488  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   489      tgc->GLB_CTRL.U = control;
	st.w	[a15],d15
.L338:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   113      if (driver->tgc[1])
	ld.a	a15,[a4]24
.L660:
	jz.a	a15,.L11
.L341:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   114      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   115          IfxGtm_Tom_Tgc_writeGlobalControl(driver->tgc[1], driver->tgcGlobalControlDisableUpdate[1]); /* Note: Write of 0 value has no effect */
	ld.w	d15,[a4]44
.L661:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     2   * \file IfxGtm_Tom.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     3   * \brief GTM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     4   * \ingroup IfxLld_Gtm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    26   * \defgroup IfxLld_Gtm_Std_Tom Tom Basic Functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    27   * \ingroup IfxLld_Gtm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    28   * \defgroup IfxLld_Gtm_Std_Tom_Enumerations TOM Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    29   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    30   * \defgroup IfxLld_Gtm_Std_Tom_Channel_Functions TOM Channel Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    31   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    32   * \defgroup IfxLld_Gtm_Std_Tom_TGC_Functions TOM TGC Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    33   * \ingroup IfxLld_Gtm_Std_Tom
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    36  #ifndef IFXGTM_TOM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    37  #define IFXGTM_TOM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    43  #include "_Impl/IfxGtm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    44  #include "IfxGtm.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    45  #include "IfxGtm_Tbu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    47  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    49  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    50  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    51  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    52  /** \addtogroup IfxLld_Gtm_Std_Tom_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    53   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    54  /** \brief Clock source for the TOM channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    55   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    56  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    57  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    58      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0 = 0,  /**< \brief div 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    59      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1 = 1,  /**< \brief div 16 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    60      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2 = 2,  /**< \brief div 256 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    61      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3 = 3,  /**< \brief div 4096 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    62      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4 = 4,  /**< \brief div 32768 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    63      IfxGtm_Tom_Ch_ClkSrc_noClock   = 5   /**< \brief no clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    64  } IfxGtm_Tom_Ch_ClkSrc;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    65  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    66  /** \brief Reset source for channel counter CN0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    67   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    70      IfxGtm_Tom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    71      IfxGtm_Tom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    72  } IfxGtm_Tom_Ch_OutputTrigger;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    74  /** \brief Reset event for channel counter CN0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    75   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    76  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    77  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    78      IfxGtm_Tom_Ch_ResetEvent_onCm0     = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    79      IfxGtm_Tom_Ch_ResetEvent_onTrigger = 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    80  } IfxGtm_Tom_Ch_ResetEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    81  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    82  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    84  /** \addtogroup IfxLld_Gtm_Std_Tom_Channel_Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    85   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    86  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    87  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    88  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    89  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    90  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    91  /** \brief Returns the base addredd of selected Tom channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    92   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    93   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    94   * \return Pointer to channel base address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    95   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    96  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    97  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    98  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	    99  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   100  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   102  /** \brief Clears the channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   103   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   104   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   105   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   106   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   107  IFX_EXTERN void IfxGtm_Tom_Ch_clearOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   108  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   109  /** \brief Clears the channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   110   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   111   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   114  IFX_EXTERN void IfxGtm_Tom_Ch_clearZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   116  /** \brief Returns the TOM channel input clock frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   117   * \param gtm Pointer to GTM module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   118   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   119   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   120   * \return TOM channel input clock frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   121   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   122  IFX_EXTERN float32 IfxGtm_Tom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   123  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   124  /** \brief Returns the channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   125   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   126   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   127   * \return The clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   129  IFX_EXTERN IfxGtm_Tom_Ch_ClkSrc IfxGtm_Tom_Ch_getClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   130  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   131  /** \brief Returns the compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   132   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   133   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   134   * \return compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   135   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   136  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   137  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   138  /** \brief Returns the compare one pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   139   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   140   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   141   * \return compare one pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   143  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareOnePointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   145  /** \brief Returns the compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   146   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   147   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   148   * \return compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   149   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   150  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   151  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   152  /** \brief Returns the compare zero pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   153   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   154   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   155   * \return compare zero pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   157  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareZeroPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   159  /** \brief Gets the TOM output level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   160   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   161   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   162   * \return TRUE the output is high, FALSE the output is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   163   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   164  IFX_EXTERN boolean IfxGtm_Tom_Ch_getOutputLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   165  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   166  /** \brief Returns a pointer to the TOM channel SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   167   * \param gtm Pointer to GTM module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   168   * \param tom Specifies the tom object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   169   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   170   * \return Pointer to the TOM channel SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   171   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   172  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Tom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Tom tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   174  /** \brief Returns the TGC pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   175   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   176   * \param tgcIndex TGC index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   177   * \return TOM TGC object pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   178   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   179  IFX_EXTERN Ifx_GTM_TOM_TGC *IfxGtm_Tom_Ch_getTgcPointer(Ifx_GTM_TOM *tom, uint32 tgcIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   180  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   181  /** \brief Returns the Timer pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   182   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   183   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   184   * \return Timer pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   186  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getTimerPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   188  /** \brief Returns the status of channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   189   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   190   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   191   * \return Status of channel One notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   192   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   193  IFX_EXTERN boolean IfxGtm_Tom_Ch_isOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   194  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   195  /** \brief Returns the status of channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   196   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   197   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   198   * \return Status of channel Zero notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   199   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   200  IFX_EXTERN boolean IfxGtm_Tom_Ch_isZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   201  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   202  /** \brief Raises the interrupt for Compare 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   203   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   204   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   205   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   206   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   207  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   208  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   209  /** \brief Raises the interrupt for Compare 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   210   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   211   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   212   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   214  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   215  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   216  /** \brief Sets the channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   217   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   218   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   219   * \param clock Channel clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   220   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   221   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   222  IFX_EXTERN void IfxGtm_Tom_Ch_setClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ClkSrc clock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   223  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   224  /** \brief Sets the compare 0 and 1 values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   225   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   226   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   227   * \param compareZero Compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   228   * \param compareOne Compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   229   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   231  IFX_EXTERN void IfxGtm_Tom_Ch_setCompare(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero, uint32 compareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   233  /** \brief Sets the compare 1 value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   234   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   235   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   236   * \param compareOne Compare one value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   237   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   238   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   239  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   241  /** \brief Sets the compare 1 shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   242   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   243   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   244   * \param shadowOne Compare one shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   245   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   246   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   247  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOneShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   249  /** \brief Sets the compare 0 and 1 shadow values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   250   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   251   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   252   * \param shadowZero Compare zero shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   253   * \param shadowOne Compare one shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   254   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   255   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   256  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   257  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   258  /** \brief Sets the compare 0 value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   259   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   260   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   261   * \param compareZero Compare zero value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   262   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   264  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   266  /** \brief Sets the compare 0 shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   267   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   268   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   269   * \param shadowZero Compare zero shadow value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   272  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZeroShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   274  /** \brief Sets the counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   275   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   276   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   277   * \param value Counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   280  IFX_EXTERN void IfxGtm_Tom_Ch_setCounterValue(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   282  /** \brief Sets the channel notification
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   283   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   284   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   285   * \param mode Interrupt mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   286   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   287   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   288   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   290  IFX_EXTERN void IfxGtm_Tom_Ch_setNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   292  /** \brief Enable/disable the one shot mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   293   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   294   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   295   * \param enabled If TRUE, the feature is enabled, else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   296   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   297   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   298  IFX_EXTERN void IfxGtm_Tom_Ch_setOneShotMode(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   299  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   300  /** \brief Enable/disable the PCM mode (channel 15 only)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   301   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   302   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   303   * \param enabled If TRUE, the feature is enabled, else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   304   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   305   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   306  IFX_EXTERN void IfxGtm_Tom_Ch_setPcm(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   307  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   308  /** \brief Sets the channel clock source either from local or from previous channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   309   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   310   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   311   * \param event Channel reset event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   312   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   313   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   314  IFX_EXTERN void IfxGtm_Tom_Ch_setResetSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ResetEvent event);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   315  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   316  /** \brief Sets the signal level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   317   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   318   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   319   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   320   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   322  IFX_EXTERN void IfxGtm_Tom_Ch_setSignalLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, Ifx_ActiveState activeState);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   324  /** \brief Sets the channel trigger output
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   325   * \param tom Pointer to the TOM object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   326   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   327   * \param trigger Channel trigger output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   328   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   329   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   330  IFX_EXTERN void IfxGtm_Tom_Ch_setTriggerOutput(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_OutputTrigger trigger);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   332  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   333  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   334  /** \addtogroup IfxLld_Gtm_Std_Tom_TGC_Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   335   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   336  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   337  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   338  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   340  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   341  /** \brief Sets the tgc global control value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   342   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   343   * \param control global control value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   344   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   345   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   346  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   347  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   348  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   349  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   350  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   352  /** \brief Builds the register value for the feature enable/disable
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   353   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   354   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   355   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   356   * \return The register value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   357   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   358  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   360  /** \brief Builds the register value for the feature enable/disable for a single channel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   361   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   362   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   363   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   364   * \return The register value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   366  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeatureForChannel(IfxGtm_Tom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   368  /** \brief Enable/disable one channel (ENDIS)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   369   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   370   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   371   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   372   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   373   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   375  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannel(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   377  /** \brief Enable/disable one channel output (OUTEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   378   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   379   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   380   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   381   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   382   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   383   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   384  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelOutput(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   385  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   386  /** \brief Enable/disable one channel for update (UPEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   387   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   388   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   389   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   390   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   392  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   394  /** \brief Enable/disable one or more channels (ENDIS)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   395   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   396   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   397   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   398   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   399   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   400   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   401  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannels(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   402  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   403  /** \brief Enable/disable one or more channels output (OUTEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   404   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   405   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   406   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   407   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   408   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   409   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   410  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsOutput(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   411  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   412  /** \brief Enable/disable the TGC channels trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   413   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   414   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   415   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   418  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsTrigger(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   420  /** \brief Enable/disable one or more channels for update (UPEN)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   421   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   422   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   423   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   424   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   425   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   426  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   427  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   428  /** \brief Enable/disable the time base trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   429   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   430   * \param enabled If TRUE, the trigger is enabled else disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   431   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   432   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   433  IFX_EXTERN void IfxGtm_Tom_Tgc_enableTimeTrigger(Ifx_GTM_TOM_TGC *tgc, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   434  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   435  /** \brief Reset one or more channels
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   436   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   437   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   438   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   439   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   440  IFX_EXTERN void IfxGtm_Tom_Tgc_resetChannels(Ifx_GTM_TOM_TGC *tgc, uint32 resetMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   442  /** \brief Enable/disable one channel for update (FUPD)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   443   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   444   * \param channel Channel index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   445   * \param enabled Enable/ Disable choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   446   * \param resetEnabled Enable/ Disable reset choise of the feature
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   447   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   448   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   449  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelForceUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean resetEnabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   451  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   452   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   453   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   454   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   455   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   456   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   457   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   458   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   459  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelsForceUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   460  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   461  /** \brief Sets the trigger time base and time base value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   462   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   463   * \param base Time base used for comparison
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   464   * \param value Compare value that raise the trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   465   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   466   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   467  IFX_EXTERN void IfxGtm_Tom_Tgc_setTimeTrigger(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tbu_Ts base, uint32 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   468  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   469  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   470   * \param tgc Pointer to the TGC object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   473  IFX_EXTERN void IfxGtm_Tom_Tgc_trigger(Ifx_GTM_TOM_TGC *tgc);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   475  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   476  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   477  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   478  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   479  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   481  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   482  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   483      return (Ifx_GTM_TOM_CH *)((uint32)&tom->CH0.CTRL.U + 0x40 * channel);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   484  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   485  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   486  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   487  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   488  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Std\IfxGtm_Tom.h	   489      tgc->GLB_CTRL.U = control;
	st.w	[a15],d15
.L11:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   116      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   117  }
	ret
.L336:
	
__IfxGtm_Tom_Timer_disableUpdate_function_end:
	.size	IfxGtm_Tom_Timer_disableUpdate,__IfxGtm_Tom_Timer_disableUpdate_function_end-IfxGtm_Tom_Timer_disableUpdate
.L167:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getFrequency',code,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getFrequency'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getFrequency

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   118  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   119  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   120  float32 IfxGtm_Tom_Timer_getFrequency(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_getFrequency
.L69:
IfxGtm_Tom_Timer_getFrequency:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   121  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   122      return 1.0 / IfxStdIf_Timer_tickToS(driver->base.clockFreq, driver->base.period);
	ld.w	d0,[a4]
.L666:
	ld.w	d1,[a4]6
.L667:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    25   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    28   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    29   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    31   * The figure below shows the standard timer interface.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    33   * \image html "Timer.png" "Standard timer interface"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    34   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    35   * This interface defines the following features:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    36   * - Timer with configurable frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    37   * - Configurable counting direction
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    38   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    39   * - Optional trigger signal with:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    40   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    41   *   - Configurable trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    42   *   - Configurable trigger edge
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    43   *   - trigger signal can be internal only or forwarded to a port pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    46  #ifndef IFXSTDIF_TIMER_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    47  #define IFXSTDIF_TIMER_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    49  #include "Cpu/Std/Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    50  #include "Src/Std/IfxSrc.h"     /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    51  #include "Port/Std/IfxPort.h"   /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */ /*FIXME introduce generic IF for ports. ex: IfxPort_OutputMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    52  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    53  /** \brief Output event enable / disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    56      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    57      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    58                                                    *          the output is set to active between time 0 to the trigger point,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    59                                                    *          and is set to inactive between the trigger point and the period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    60                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    61                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    62                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    63                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    64                                                    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    65  } IfxStdIf_Timer_OutputEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    66  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    67  /** \brief Timer increment direction */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    70      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    71      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    72      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    73  } IfxStdIf_Timer_CountDir;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    74  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    75  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    76  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    78  /** \brief Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    80   * \return Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    81   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    82  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    85   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    86   * \return Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    88  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    90  /** \brief Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    92   * \return Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    93   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    94  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    95  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    96  /** \brief Return the timer trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    98   * \return Return the timer timer point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    99   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   100  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   102  /** \brief Set the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   104   * \param frequency Requested timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   105   * \retval TRUE The requested frequency could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   106   * \retval FALSE The requested frequency is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   107   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   108  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver driver, float32 frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   110  /** \brief Indicates the driver that the imput frequency has changed and that it should be taken in account
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   111   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   114  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   116  /** \brief Apply requested updates.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   118   * Such requested update are calls to:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   119   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   120   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   121   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   122   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   123   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   124   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   125   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   126   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   127   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   128   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   129   * one timer period!!!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   130   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   132   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   135  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   137  /** \brief Disable updates
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   139   * The following API action will not be taken in account before applyUpdate is called:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   143   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   147   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   155   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   156   * \return Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   158  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   160  /** \brief Immediately start the timer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   161   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   162   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   163   * global (input) clock to the timer block is inactive.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   164   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   165   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   167  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   169  /** \brief Set the timer period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   170   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   171   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \param period Period value in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   174   * \retval TRUE The requested period could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   175   * \retval FALSE The requested period is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   176   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   177  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   179  /** \brief Stop timer at the end of the period
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   181   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   183   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   184   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   186  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver driver, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   188  /** \brief Set trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   189   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \see Timer_OutputEvent for the definition of the output level.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   191   * Active state is defined by Timer_Config::outputActiveState.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   193   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   194   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   195   * \param triggerPoint Trigger point in ticks from the period start.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   196   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   198  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   200  /** \brief Immediately stops the timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   202   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   203   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   204  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   206  /** \brief Return the timer interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   208   * \return Return the timer interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   210  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   212  /** \brief Return the trigger interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   214   * \return Return the trigger interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   216  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   218  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   219   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   220  struct IfxStdIf_Timer_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   222      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   223      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   224      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   225      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   226      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   227      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   228      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   229      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   230      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   231      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   232      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   233      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   234      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   235      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   236      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   237      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   238      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   239  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   241  /** \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   242  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   244      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   245      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   246      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxPort_OutputMode outputMode;          /**< \brief Output mode *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   250      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   251      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   252  } IfxStdIf_Timer_TrigConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   254  /** \brief Timer configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   255  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   256  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   257      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   258      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   259      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   260      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   261      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   262      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   263      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   264  } IfxStdIf_Timer_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   266  /** \addtogroup library_srvsw_stdif_timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   267   *  \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   269  /** \copydoc IfxStdIf_Timer_GetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   270  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   272      return stdIf->getFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   273  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   276  /** \copydoc IfxStdIf_Timer_GetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   277  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   279      return stdIf->getPeriod(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   280  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \copydoc IfxStdIf_Timer_GetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   284  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   285  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   286      return stdIf->getTrigger(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   287  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   288  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   290  /** \copydoc IfxStdIf_Timer_GetResolution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   291  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   292  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   293      return stdIf->getResolution(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   294  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   297  /** \copydoc IfxStdIf_Timer_SetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   305  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   306  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   307      stdIf->updateInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   308  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   310  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   311  /** \copydoc IfxStdIf_Timer_ApplyUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   312  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   314      stdIf->applyUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   315  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   316  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   318  /** \copydoc IfxStdIf_Timer_DisableUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   320  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   321      stdIf->disableUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   322  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   324  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_GetInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   326  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   327  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   328      return stdIf->getInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   329  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   332  /** \copydoc IfxStdIf_Timer_Run */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   333  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   334  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   335      stdIf->run(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   336  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   337  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   339  /** \copydoc IfxStdIf_Timer_SetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   340  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   341  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   342      return stdIf->setPeriod(stdIf->driver, period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   343  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   346  /** \copydoc IfxStdIf_Timer_SetSingleMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   347  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   348  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   349      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   350  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   353  /** \copydoc IfxStdIf_Timer_SetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   354  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   355  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   356      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   357  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   360  /** \copydoc IfxStdIf_Timer_Stop */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   363      stdIf->stop(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_AckTimerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   368  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   369  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   370      return stdIf->ackTimerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   371  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   372  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   374  /** \copydoc IfxStdIf_Timer_AckTriggerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   375  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   376  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   377      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   378  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   381  /** \brief Convert timer ticks to seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   382   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   383   * \param  ticks time value in ticks to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   384   * \return Return the converted time in s
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   385   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   386  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   387  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   388      return ticks / clockFreq;
	utof	d0,d0
.L668:
	movh	d15,#16256
.L669:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    25   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    28   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    29   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    31   * The figure below shows the standard timer interface.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    33   * \image html "Timer.png" "Standard timer interface"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    34   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    35   * This interface defines the following features:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    36   * - Timer with configurable frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    37   * - Configurable counting direction
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    38   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    39   * - Optional trigger signal with:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    40   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    41   *   - Configurable trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    42   *   - Configurable trigger edge
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    43   *   - trigger signal can be internal only or forwarded to a port pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    46  #ifndef IFXSTDIF_TIMER_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    47  #define IFXSTDIF_TIMER_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    49  #include "Cpu/Std/Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    50  #include "Src/Std/IfxSrc.h"     /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    51  #include "Port/Std/IfxPort.h"   /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */ /*FIXME introduce generic IF for ports. ex: IfxPort_OutputMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    52  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    53  /** \brief Output event enable / disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    56      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    57      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    58                                                    *          the output is set to active between time 0 to the trigger point,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    59                                                    *          and is set to inactive between the trigger point and the period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    60                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    61                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    62                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    63                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    64                                                    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    65  } IfxStdIf_Timer_OutputEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    66  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    67  /** \brief Timer increment direction */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    70      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    71      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    72      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    73  } IfxStdIf_Timer_CountDir;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    74  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    75  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    76  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    78  /** \brief Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    80   * \return Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    81   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    82  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    85   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    86   * \return Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    88  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    90  /** \brief Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    92   * \return Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    93   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    94  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    95  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    96  /** \brief Return the timer trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    98   * \return Return the timer timer point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    99   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   100  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   102  /** \brief Set the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   104   * \param frequency Requested timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   105   * \retval TRUE The requested frequency could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   106   * \retval FALSE The requested frequency is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   107   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   108  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver driver, float32 frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   110  /** \brief Indicates the driver that the imput frequency has changed and that it should be taken in account
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   111   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   114  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   116  /** \brief Apply requested updates.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   118   * Such requested update are calls to:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   119   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   120   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   121   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   122   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   123   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   124   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   125   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   126   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   127   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   128   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   129   * one timer period!!!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   130   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   132   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   135  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   137  /** \brief Disable updates
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   139   * The following API action will not be taken in account before applyUpdate is called:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   143   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   147   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   155   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   156   * \return Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   158  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   160  /** \brief Immediately start the timer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   161   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   162   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   163   * global (input) clock to the timer block is inactive.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   164   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   165   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   167  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   169  /** \brief Set the timer period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   170   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   171   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \param period Period value in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   174   * \retval TRUE The requested period could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   175   * \retval FALSE The requested period is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   176   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   177  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   179  /** \brief Stop timer at the end of the period
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   181   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   183   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   184   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   186  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver driver, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   188  /** \brief Set trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   189   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \see Timer_OutputEvent for the definition of the output level.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   191   * Active state is defined by Timer_Config::outputActiveState.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   193   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   194   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   195   * \param triggerPoint Trigger point in ticks from the period start.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   196   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   198  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   200  /** \brief Immediately stops the timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   202   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   203   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   204  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   206  /** \brief Return the timer interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   208   * \return Return the timer interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   210  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   212  /** \brief Return the trigger interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   214   * \return Return the trigger interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   216  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   218  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   219   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   220  struct IfxStdIf_Timer_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   222      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   223      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   224      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   225      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   226      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   227      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   228      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   229      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   230      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   231      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   232      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   233      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   234      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   235      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   236      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   237      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   238      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   239  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   241  /** \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   242  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   244      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   245      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   246      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxPort_OutputMode outputMode;          /**< \brief Output mode *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   250      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   251      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   252  } IfxStdIf_Timer_TrigConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   254  /** \brief Timer configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   255  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   256  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   257      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   258      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   259      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   260      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   261      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   262      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   263      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   264  } IfxStdIf_Timer_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   266  /** \addtogroup library_srvsw_stdif_timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   267   *  \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   269  /** \copydoc IfxStdIf_Timer_GetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   270  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   272      return stdIf->getFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   273  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   276  /** \copydoc IfxStdIf_Timer_GetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   277  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   279      return stdIf->getPeriod(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   280  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \copydoc IfxStdIf_Timer_GetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   284  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   285  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   286      return stdIf->getTrigger(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   287  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   288  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   290  /** \copydoc IfxStdIf_Timer_GetResolution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   291  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   292  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   293      return stdIf->getResolution(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   294  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   297  /** \copydoc IfxStdIf_Timer_SetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   305  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   306  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   307      stdIf->updateInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   308  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   310  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   311  /** \copydoc IfxStdIf_Timer_ApplyUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   312  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   314      stdIf->applyUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   315  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   316  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   318  /** \copydoc IfxStdIf_Timer_DisableUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   320  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   321      stdIf->disableUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   322  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   324  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_GetInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   326  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   327  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   328      return stdIf->getInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   329  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   332  /** \copydoc IfxStdIf_Timer_Run */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   333  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   334  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   335      stdIf->run(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   336  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   337  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   339  /** \copydoc IfxStdIf_Timer_SetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   340  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   341  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   342      return stdIf->setPeriod(stdIf->driver, period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   343  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   346  /** \copydoc IfxStdIf_Timer_SetSingleMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   347  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   348  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   349      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   350  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   353  /** \copydoc IfxStdIf_Timer_SetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   354  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   355  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   356      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   357  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   360  /** \copydoc IfxStdIf_Timer_Stop */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   363      stdIf->stop(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_AckTimerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   368  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   369  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   370      return stdIf->ackTimerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   371  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   372  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   374  /** \copydoc IfxStdIf_Timer_AckTriggerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   375  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   376  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   377      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   378  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   381  /** \brief Convert timer ticks to seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   382   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   383   * \param  ticks time value in ticks to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   384   * \return Return the converted time in s
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   385   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   386  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   387  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   388      return ticks / clockFreq;
	div.f	d0,d0,d1
.L670:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   123  }
	div.f	d2,d15,d0
	ret
.L343:
	
__IfxGtm_Tom_Timer_getFrequency_function_end:
	.size	IfxGtm_Tom_Timer_getFrequency,__IfxGtm_Tom_Timer_getFrequency_function_end-IfxGtm_Tom_Timer_getFrequency
.L172:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getInputFrequency',code,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getInputFrequency'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getInputFrequency

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   124  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   125  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   126  float32 IfxGtm_Tom_Timer_getInputFrequency(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_getInputFrequency
.L71:
IfxGtm_Tom_Timer_getInputFrequency:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   127  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   128      return driver->base.clockFreq;
	ld.w	d2,[a4]6
.L675:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   129  }
	ret
.L345:
	
__IfxGtm_Tom_Timer_getInputFrequency_function_end:
	.size	IfxGtm_Tom_Timer_getInputFrequency,__IfxGtm_Tom_Timer_getInputFrequency_function_end-IfxGtm_Tom_Timer_getInputFrequency
.L177:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getOffset',code,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getOffset'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getOffset

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   130  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   131  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   132  Ifx_TimerValue IfxGtm_Tom_Timer_getOffset(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_getOffset
.L73:
IfxGtm_Tom_Timer_getOffset:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   133  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   134      return driver->offset;
	ld.w	d2,[a4]36
.L471:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   135  }
	ret
.L264:
	
__IfxGtm_Tom_Timer_getOffset_function_end:
	.size	IfxGtm_Tom_Timer_getOffset,__IfxGtm_Tom_Timer_getOffset_function_end-IfxGtm_Tom_Timer_getOffset
.L122:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getPeriod',code,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getPeriod'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getPeriod

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   136  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   137  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   138  Ifx_TimerValue IfxGtm_Tom_Timer_getPeriod(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_getPeriod
.L75:
IfxGtm_Tom_Timer_getPeriod:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   139  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   140      return driver->base.period;
	ld.w	d2,[a4]
.L680:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   141  }
	ret
.L347:
	
__IfxGtm_Tom_Timer_getPeriod_function_end:
	.size	IfxGtm_Tom_Timer_getPeriod,__IfxGtm_Tom_Timer_getPeriod_function_end-IfxGtm_Tom_Timer_getPeriod
.L182:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getPointer',code,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getPointer'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getPointer

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   142  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   144  volatile uint32 *IfxGtm_Tom_Timer_getPointer(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_getPointer
.L77:
IfxGtm_Tom_Timer_getPointer:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   145  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   146      return IfxGtm_Tom_Ch_getTimerPointer(driver->tom, driver->timerChannel);
	ld.a	a15,[a4]16
.L476:
	ld.b	d4,[a4]29
	mov.aa	a4,a15
.L393:
	j	IfxGtm_Tom_Ch_getTimerPointer
.L268:
	
__IfxGtm_Tom_Timer_getPointer_function_end:
	.size	IfxGtm_Tom_Timer_getPointer,__IfxGtm_Tom_Timer_getPointer_function_end-IfxGtm_Tom_Timer_getPointer
.L127:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getResolution',code,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getResolution'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getResolution

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   147  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   149  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   150  float32 IfxGtm_Tom_Timer_getResolution(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_getResolution
.L79:
IfxGtm_Tom_Timer_getResolution:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   151  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   152      return 1.0 / driver->base.clockFreq;
	movh	d15,#16256
	ld.w	d0,[a4]6
.L685:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   153  }
	div.f	d2,d15,d0
	ret
.L349:
	
__IfxGtm_Tom_Timer_getResolution_function_end:
	.size	IfxGtm_Tom_Timer_getResolution,__IfxGtm_Tom_Timer_getResolution_function_end-IfxGtm_Tom_Timer_getResolution
.L187:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getTrigger',code,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getTrigger'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getTrigger

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   155  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   156  Ifx_TimerValue IfxGtm_Tom_Timer_getTrigger(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_getTrigger
.L81:
IfxGtm_Tom_Timer_getTrigger:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   157  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   158      return IfxGtm_Tom_Ch_getCompareOne(driver->tom, driver->triggerChannel) - 1;
	ld.a	a15,[a4]16
.L690:
	ld.b	d4,[a4]30
	mov.aa	a4,a15
.L394:
	call	IfxGtm_Tom_Ch_getCompareOne
.L691:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   159  }
	add	d2,#-1
	ret
.L351:
	
__IfxGtm_Tom_Timer_getTrigger_function_end:
	.size	IfxGtm_Tom_Timer_getTrigger,__IfxGtm_Tom_Timer_getTrigger_function_end-IfxGtm_Tom_Timer_getTrigger
.L192:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getTriggerPointer',code,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getTriggerPointer'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getTriggerPointer

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   161  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   162  volatile uint32 *IfxGtm_Tom_Timer_getTriggerPointer(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_getTriggerPointer
.L83:
IfxGtm_Tom_Timer_getTriggerPointer:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   164      return IfxGtm_Tom_Ch_getCompareOnePointer(driver->tom, driver->triggerChannel);
	ld.a	a15,[a4]16
.L481:
	ld.b	d4,[a4]30
	mov.aa	a4,a15
.L395:
	j	IfxGtm_Tom_Ch_getCompareOnePointer
.L270:
	
__IfxGtm_Tom_Timer_getTriggerPointer_function_end:
	.size	IfxGtm_Tom_Timer_getTriggerPointer,__IfxGtm_Tom_Timer_getTriggerPointer_function_end-IfxGtm_Tom_Timer_getTriggerPointer
.L132:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_init',code,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_init'
	.align	2
	
	.global	IfxGtm_Tom_Timer_init

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   165  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   166  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   167  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   168  boolean IfxGtm_Tom_Timer_init(IfxGtm_Tom_Timer *driver, const IfxGtm_Tom_Timer_Config *config)
; Function IfxGtm_Tom_Timer_init
.L85:
IfxGtm_Tom_Timer_init:	.type	func
	mov.aa	a12,a5
.L398:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   169  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   170      boolean                result = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   171      IfxGtm_Tom_Timer_Base *base   = &driver->base;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   172      uint16                 maskShift;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   173  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   174      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, config->base.countDir == IfxStdIf_Timer_CountDir_up);    /* only this mode is supported */
	ld.bu	d15,[a12]28
.L486:
	mov	d8,#1
	mov.aa	a15,a4
.L399:
	sub.a	a10,#24
.L396:
	jeq	d15,#0,.L20
.L487:
	fcall	.cocofun_8
	st.a	[a10],a2
	movh.a	a2,#@his(.2.str)
	lea	a2,[a2]@los(.2.str)
	st.a	[a10]4,a2
	fcall	.cocofun_9
	st.a	[a10]8,a2
	mov	d15,#174
	st.w	[a10]12,d15
.L397:
	fcall	.cocofun_10
.L400:
	st.a	[a10]16,a2
	fcall	.cocofun_5
.L401:
	call	printf
.L20:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   175  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   176      driver->gtm          = config->gtm;
	ld.a	a2,[a12]36
.L488:
	st.a	[a15]12,a2
.L489:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   177      driver->tomIndex     = config->tom;
	ld.bu	d15,[a12]40
.L490:
	st.b	[a15]28,d15
.L491:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   178      driver->tom          = &config->gtm->TOM[config->tom];
	ld.a	a2,[a12]36
.L492:
	ld.bu	d15,[a12]40
	sha	d15,d15,#11
.L493:
	addsc.a	a2,a2,d15,#0
	movh.a	a3,#1
	add.a	a3,a2
	lea	a2,[a3]-32768
.L494:
	st.a	[a15]16,a2
.L495:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   179      driver->timerChannel = config->timerChannel;
	ld.b	d15,[a12]41
.L496:
	st.b	[a15]29,d15
.L497:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   181      base->triggerEnabled = config->base.trigger.enabled;
	ld.bu	d15,[a12]12
.L498:
	st.b	[a15]4,d15
.L499:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   182  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   183      if (base->triggerEnabled)
	jeq	d15,#0,.L21
.L500:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   184      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   185          driver->triggerChannel = config->triggerOut->channel;
	ld.a	a2,[a12]44
.L501:
	ld.b	d15,[a2]1
.L502:
	j	.L22
.L21:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   186      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   187      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   188      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   189          driver->triggerChannel = driver->timerChannel; // Set to timer channel to disable its use
	ld.b	d15,[a15]29
.L22:
	st.b	[a15]30,d15
.L503:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   190      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   191  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   192      if (config->timerChannel <= 7)
	mov	d0,#7
.L504:
	ld.b	d15,[a12]41
.L505:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   193      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   194          driver->tgc[0] = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 0);
	ld.a	a4,[a15]16
.L506:
	jlt	d0,d15,.L23
.L507:
	mov	d4,#0
	call	IfxGtm_Tom_Ch_getTgcPointer
.L508:
	st.a	[a15]20,a2
.L509:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   195          driver->tgc[1] = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 1);
	mov	d4,#1
.L510:
	ld.a	a4,[a15]16
.L511:
	call	IfxGtm_Tom_Ch_getTgcPointer
.L512:
	j	.L24
.L23:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   196      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   197      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   198      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   199          driver->tgc[0] = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 1);
	mov	d4,#1
	call	IfxGtm_Tom_Ch_getTgcPointer
.L513:
	st.a	[a15]20,a2
.L514:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   200          driver->tgc[1] = NULL_PTR; /* NOTE currently no concatenation between TOMs */
	mov.a	a2,#0
.L24:
	st.a	[a15]24,a2
.L515:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   201      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   203      driver->channelsMask[1]                  = 0;
	mov	d15,#0
	st.h	[a15]34,d15
.L516:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   204      driver->tgcGlobalControlApplyUpdate[1]   = 0;
	st.w	[a15]52,d15
.L517:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   205      driver->tgcGlobalControlDisableUpdate[1] = 0;
	st.w	[a15]44,d15
.L518:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   206  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   207      /* Initialize the timer part */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   208      /* FIXME add IfxGtm_Tom_Ch_configurePwmMode() and use it */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   209      IfxGtm_Tom_Ch_setClockSource(driver->tom, driver->timerChannel, config->clock);
	fcall	.cocofun_7
.L519:
	ld.bu	d5,[a12]48
	call	IfxGtm_Tom_Ch_setClockSource
.L520:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   210      IfxGtm_Tom_Ch_setTriggerOutput(driver->tom, driver->timerChannel, IfxGtm_Tom_Ch_OutputTrigger_generate);
	fcall	.cocofun_7
.L521:
	mov	d5,#1
	call	IfxGtm_Tom_Ch_setTriggerOutput
.L522:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   211  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   212      IfxGtm_Tom_Timer_updateInputFrequency(driver);
	mov.aa	a4,a15
.L404:
	call	IfxGtm_Tom_Timer_updateInputFrequency
.L405:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   214      if ((config->base.minResolution > 0) && ((1.0 / base->clockFreq) > config->base.minResolution))
	ld.w	d15,[a12]8
.L523:
	mov	d0,#0
.L403:
	cmp.f	d1,d15,d0
.L524:
	jz.t	d1:2,.L25
.L525:
	movh	d1,#16256
	ld.w	d2,[a15]6
.L526:
	div.f	d1,d1,d2
.L527:
	cmp.f	d15,d1,d15
	jz.t	d15:2,.L26
.L408:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   215      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   216          result = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   217          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, FALSE);
	mov	d8,d0
	fcall	.cocofun_8
	st.a	[a10],a2
	lea	a2,.4.str
	st.a	[a10]4,a2
	fcall	.cocofun_9
	st.a	[a10]8,a2
	mov	d15,#217
	st.w	[a10]12,d15
.L407:
	fcall	.cocofun_10
.L409:
	st.a	[a10]16,a2
	fcall	.cocofun_5
	call	printf
.L26:
.L25:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   218      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   220      result        &= IfxGtm_Tom_Timer_setFrequency(driver, config->base.frequency);
	ld.w	d4,[a12]
	mov.aa	a4,a15
.L410:
	call	IfxGtm_Tom_Timer_setFrequency
.L411:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   221      driver->offset = IfxStdIf_Timer_sToTick(driver->base.clockFreq, 1.0 / config->base.frequency * config->base.startOffset);
	movh	d0,#16256
	ld.w	d1,[a12]
.L528:
	ld.w	d15,[a15]6
.L529:
	div.f	d0,d0,d1
	ld.w	d1,[a12]30
.L413:
	and	d8,d2
.L530:
	mul.f	d0,d0,d1
.L285:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    25   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    28   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    29   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    31   * The figure below shows the standard timer interface.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    33   * \image html "Timer.png" "Standard timer interface"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    34   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    35   * This interface defines the following features:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    36   * - Timer with configurable frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    37   * - Configurable counting direction
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    38   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    39   * - Optional trigger signal with:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    40   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    41   *   - Configurable trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    42   *   - Configurable trigger edge
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    43   *   - trigger signal can be internal only or forwarded to a port pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    46  #ifndef IFXSTDIF_TIMER_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    47  #define IFXSTDIF_TIMER_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    49  #include "Cpu/Std/Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    50  #include "Src/Std/IfxSrc.h"     /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    51  #include "Port/Std/IfxPort.h"   /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */ /*FIXME introduce generic IF for ports. ex: IfxPort_OutputMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    52  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    53  /** \brief Output event enable / disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    56      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    57      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    58                                                    *          the output is set to active between time 0 to the trigger point,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    59                                                    *          and is set to inactive between the trigger point and the period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    60                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    61                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    62                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    63                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    64                                                    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    65  } IfxStdIf_Timer_OutputEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    66  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    67  /** \brief Timer increment direction */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    70      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    71      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    72      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    73  } IfxStdIf_Timer_CountDir;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    74  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    75  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    76  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    78  /** \brief Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    80   * \return Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    81   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    82  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    85   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    86   * \return Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    88  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    90  /** \brief Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    92   * \return Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    93   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    94  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    95  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    96  /** \brief Return the timer trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    98   * \return Return the timer timer point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    99   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   100  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   102  /** \brief Set the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   104   * \param frequency Requested timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   105   * \retval TRUE The requested frequency could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   106   * \retval FALSE The requested frequency is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   107   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   108  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver driver, float32 frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   110  /** \brief Indicates the driver that the imput frequency has changed and that it should be taken in account
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   111   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   114  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   116  /** \brief Apply requested updates.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   118   * Such requested update are calls to:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   119   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   120   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   121   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   122   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   123   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   124   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   125   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   126   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   127   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   128   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   129   * one timer period!!!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   130   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   132   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   135  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   137  /** \brief Disable updates
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   139   * The following API action will not be taken in account before applyUpdate is called:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   143   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   147   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   155   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   156   * \return Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   158  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   160  /** \brief Immediately start the timer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   161   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   162   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   163   * global (input) clock to the timer block is inactive.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   164   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   165   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   167  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   169  /** \brief Set the timer period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   170   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   171   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \param period Period value in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   174   * \retval TRUE The requested period could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   175   * \retval FALSE The requested period is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   176   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   177  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   179  /** \brief Stop timer at the end of the period
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   181   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   183   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   184   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   186  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver driver, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   188  /** \brief Set trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   189   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \see Timer_OutputEvent for the definition of the output level.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   191   * Active state is defined by Timer_Config::outputActiveState.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   193   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   194   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   195   * \param triggerPoint Trigger point in ticks from the period start.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   196   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   198  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   200  /** \brief Immediately stops the timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   202   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   203   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   204  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   206  /** \brief Return the timer interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   208   * \return Return the timer interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   210  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   212  /** \brief Return the trigger interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   214   * \return Return the trigger interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   216  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   218  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   219   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   220  struct IfxStdIf_Timer_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   222      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   223      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   224      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   225      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   226      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   227      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   228      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   229      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   230      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   231      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   232      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   233      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   234      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   235      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   236      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   237      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   238      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   239  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   241  /** \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   242  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   244      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   245      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   246      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxPort_OutputMode outputMode;          /**< \brief Output mode *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   250      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   251      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   252  } IfxStdIf_Timer_TrigConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   254  /** \brief Timer configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   255  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   256  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   257      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   258      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   259      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   260      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   261      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   262      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   263      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   264  } IfxStdIf_Timer_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   266  /** \addtogroup library_srvsw_stdif_timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   267   *  \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   269  /** \copydoc IfxStdIf_Timer_GetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   270  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   272      return stdIf->getFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   273  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   276  /** \copydoc IfxStdIf_Timer_GetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   277  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   279      return stdIf->getPeriod(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   280  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \copydoc IfxStdIf_Timer_GetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   284  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   285  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   286      return stdIf->getTrigger(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   287  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   288  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   290  /** \copydoc IfxStdIf_Timer_GetResolution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   291  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   292  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   293      return stdIf->getResolution(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   294  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   297  /** \copydoc IfxStdIf_Timer_SetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   305  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   306  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   307      stdIf->updateInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   308  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   310  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   311  /** \copydoc IfxStdIf_Timer_ApplyUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   312  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   314      stdIf->applyUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   315  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   316  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   318  /** \copydoc IfxStdIf_Timer_DisableUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   320  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   321      stdIf->disableUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   322  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   324  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_GetInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   326  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   327  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   328      return stdIf->getInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   329  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   332  /** \copydoc IfxStdIf_Timer_Run */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   333  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   334  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   335      stdIf->run(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   336  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   337  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   339  /** \copydoc IfxStdIf_Timer_SetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   340  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   341  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   342      return stdIf->setPeriod(stdIf->driver, period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   343  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   346  /** \copydoc IfxStdIf_Timer_SetSingleMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   347  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   348  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   349      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   350  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   353  /** \copydoc IfxStdIf_Timer_SetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   354  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   355  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   356      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   357  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   360  /** \copydoc IfxStdIf_Timer_Stop */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   363      stdIf->stop(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_AckTimerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   368  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   369  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   370      return stdIf->ackTimerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   371  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   372  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   374  /** \copydoc IfxStdIf_Timer_AckTriggerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   375  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   376  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   377      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   378  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   381  /** \brief Convert timer ticks to seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   382   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   383   * \param  ticks time value in ticks to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   384   * \return Return the converted time in s
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   385   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   386  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   387  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   388      return ticks / clockFreq;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   389  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   392  /** \brief Convert seconds to timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   393   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   394   * \param  seconds time value in seconds to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   395   * \return Return the converted time in timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   397  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   398  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   399      return seconds * clockFreq;
	mul.f	d15,d0,d15
.L531:
	ftouz	d5,d15
	st.w	[a15]36,d5
.L286:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   222  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   223      /* check that driver->offset is not more than 16 bits */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   224      if (driver->offset <= 0xFFFF)
	mov.u	d15,#65535
.L532:
	jlt.u	d15,d5,.L27
.L533:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   225      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   226          IfxGtm_Tom_Ch_setCounterValue(driver->tom, driver->timerChannel, driver->offset);
	fcall	.cocofun_7
.L534:
	call	IfxGtm_Tom_Ch_setCounterValue
.L535:
	j	.L28
.L27:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   227      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   228      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   229      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   230          result = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   231          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, FALSE);
	mov	d8,#0
	fcall	.cocofun_8
	st.a	[a10],a2
	lea	a2,.4.str
	st.a	[a10]4,a2
	fcall	.cocofun_9
	st.a	[a10]8,a2
	mov	d15,#231
	st.w	[a10]12,d15
.L412:
	fcall	.cocofun_10
.L436:
	st.a	[a10]16,a2
	fcall	.cocofun_5
	call	printf
.L28:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   232      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   233  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   234      /* Initialize the trigger part */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   235      maskShift = (config->timerChannel <= 7) ? 0 : 8;
	ld.b	d15,[a12]41
.L536:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   236      IfxGtm_Tom_Timer_addToChannelMask(driver, driver->timerChannel);
	ld.b	d4,[a15]29
.L537:
	ge	d9,d15,#8
	mov.aa	a4,a15
.L414:
	sha	d9,#3
	call	IfxGtm_Tom_Timer_addToChannelMask
.L415:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   237  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   238      if (base->triggerEnabled)
	ld.bu	d15,[a15]4
.L538:
	jeq	d15,#0,.L29
.L292:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   239      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   240          IfxGtm_Tom_Ch triggerChannel     = driver->triggerChannel;
	ld.b	d15,[a15]30
.L417:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   241          uint16        triggerChannelMask = 1 << (triggerChannel - maskShift);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   242          /* TO DO: enable the trigger to be not in the same TGC group as the timer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   244          IfxGtm_Tom_Ch_setSignalLevel(driver->tom, triggerChannel, config->base.trigger.risingEdgeAtPeriod ? Ifx_ActiveState_high : Ifx_ActiveState_low);
	mov	d0,#1
	ld.a	a4,[a15]16
.L539:
	sub	d1,d15,d9
.L540:
	sha	d0,d0,d1
.L541:
	extr.u	d9,d0,#0,#16
	ld.bu	d0,[a12]23
.L416:
	mov	d4,d15
.L419:
	ne	d5,d0,#0
	call	IfxGtm_Tom_Ch_setSignalLevel
.L420:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   245          IfxGtm_Tom_Ch_setCounterValue(driver->tom, triggerChannel, driver->offset);
	ld.a	a4,[a15]16
.L542:
	ld.w	d5,[a15]36
	mov	d4,d15
	call	IfxGtm_Tom_Ch_setCounterValue
.L543:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   246  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   247          if (triggerChannel != driver->timerChannel)
	ld.b	d0,[a15]29
.L544:
	jeq	d15,d0,.L30
.L545:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   248          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   249              /* FIXME add IfxGtm_Tom_Ch_configurePwmMode() and use it */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   250              IfxGtm_Tom_Ch_setResetSource(driver->tom, triggerChannel, IfxGtm_Tom_Ch_ResetEvent_onTrigger);
	mov	d4,d15
	ld.a	a4,[a15]16
.L421:
	mov	d5,#1
	call	IfxGtm_Tom_Ch_setResetSource
.L422:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   251              IfxGtm_Tom_Ch_setClockSource(driver->tom, triggerChannel, config->clock);
	ld.a	a4,[a15]16
.L546:
	ld.bu	d5,[a12]48
	mov	d4,d15
	call	IfxGtm_Tom_Ch_setClockSource
.L547:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   252              IfxGtm_Tom_Ch_setTriggerOutput(driver->tom, triggerChannel, IfxGtm_Tom_Ch_OutputTrigger_forward);
	mov	d4,d15
	ld.a	a4,[a15]16
.L423:
	mov	d5,#0
	call	IfxGtm_Tom_Ch_setTriggerOutput
.L424:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   253              IfxGtm_Tom_Tgc_enableChannels(driver->tgc[0], triggerChannelMask, 0, FALSE);
	mov	d5,#0
	ld.a	a4,[a15]20
.L548:
	mov	d4,d9
.L425:
	mov	d6,d5
	call	IfxGtm_Tom_Tgc_enableChannels
.L426:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   254              IfxGtm_Tom_Timer_addToChannelMask(driver, driver->triggerChannel);
	ld.b	d4,[a15]30
	mov.aa	a4,a15
.L427:
	call	IfxGtm_Tom_Timer_addToChannelMask
.L30:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   255          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   256  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   257          /* Signal must go out of the GTM even if the port outpout is not enabled */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   258          IfxGtm_Tom_Tgc_enableChannelsOutput(driver->tgc[0], triggerChannelMask, 0, FALSE);
	mov	d5,#0
	ld.a	a4,[a15]20
.L549:
	mov	d4,d9
.L428:
	mov	d6,d5
	call	IfxGtm_Tom_Tgc_enableChannelsOutput
.L429:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   260          if (config->base.trigger.outputEnabled)
	ld.bu	d15,[a12]24
.L418:
	jeq	d15,#0,.L31
.L550:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   261          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   262              /* Initialize the port */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   263              IfxGtm_PinMap_setTomTout(config->triggerOut, config->base.trigger.outputMode, config->base.trigger.outputDriver);
	ld.a	a4,[a12]44
.L551:
	ld.bu	d4,[a12]21
.L552:
	ld.bu	d5,[a12]22
	call	IfxGtm_PinMap_setTomTout
.L31:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   264          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   265  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   266          result &= IfxGtm_Tom_Timer_setTrigger(driver, config->base.trigger.triggerPoint);
	ld.w	d4,[a12]14
	mov.aa	a4,a15
.L430:
	call	IfxGtm_Tom_Timer_setTrigger
.L431:
	and	d8,d2
.L29:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   267      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   268  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   269      /* Interrupt configuration */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   270      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   271          volatile Ifx_SRC_SRCR *src;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   272          boolean                timerHasIrq   = config->base.isrPriority > 0;
	ld.hu	d15,[a12]4
.L553:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   273          boolean                triggerHasIrq = (config->base.trigger.isrPriority > 0) && base->triggerEnabled;
	mov	d10,#0
.L438:
	ne	d9,d15,#0
	ld.hu	d15,[a12]18
.L437:
	jeq	d15,#0,.L32
.L554:
	ld.bu	d15,[a15]4
.L555:
	cmov	d10,d15,#1
.L32:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   274  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   275          if (driver->triggerChannel == driver->timerChannel)
	ld.b	d4,[a15]29
.L556:
	ld.b	d0,[a15]30
.L557:
	jne	d0,d4,.L34
.L558:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   276          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   277              IfxGtm_Tom_Ch_setNotification(driver->tom, driver->timerChannel, timerHasIrq ? config->irqModeTimer : config->irqModeTrigger, timerHasIrq, triggerHasIrq);
	jeq	d9,#0,.L35
.L559:
	ld.bu	d5,[a12]49
.L560:
	j	.L36
.L35:
	ld.bu	d5,[a12]50
.L36:
	ld.a	a4,[a15]16
.L561:
	mov	e6,d10,d9
	call	IfxGtm_Tom_Ch_setNotification
.L562:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   278              src = IfxGtm_Tom_Ch_getSrcPointer(driver->gtm, config->tom, driver->timerChannel);
	ld.a	a4,[a15]12
.L563:
	ld.bu	d4,[a12]40
.L564:
	ld.b	d5,[a15]29
	call	IfxGtm_Tom_Ch_getSrcPointer
.L432:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   279              IfxSrc_init(src, timerHasIrq ? config->base.isrProvider : config->base.trigger.isrProvider, timerHasIrq ? config->base.isrPriority : config->base.trigger.isrPriority);
	jeq	d9,#0,.L37
.L565:
	ld.bu	d0,[a12]6
.L566:
	j	.L38
.L37:
	ld.bu	d0,[a12]20
.L38:
	jeq	d9,#0,.L39
.L567:
	ld.hu	d15,[a12]4
.L568:
	j	.L41
.L39:
	ld.hu	d15,[a12]18
.L569:
	j	.L41
.L34:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   280              /* FIXME ADD warning on interrupt setting in case timer and trigger uses the same channels or different channels, and in case only timer or trigger or both generates interrupts */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   281              IfxSrc_enable(src);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   282          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   283          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   284          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   285              IfxGtm_IrqMode irqMode = IfxGtm_IrqMode_pulseNotify;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   286  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   287              if (timerHasIrq)
	jeq	d9,#0,.L42
.L570:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   288              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   289                  IfxGtm_Tom_Ch_setNotification(driver->tom, driver->timerChannel, irqMode, TRUE, FALSE);
	mov	d5,#2
	ld.a	a4,[a15]16
.L571:
	mov	d6,#1
.L572:
	mov	d7,#0
	call	IfxGtm_Tom_Ch_setNotification
.L573:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   290                  src = IfxGtm_Tom_Ch_getSrcPointer(driver->gtm, config->tom, driver->timerChannel);
	ld.a	a4,[a15]12
.L574:
	ld.bu	d4,[a12]40
.L575:
	ld.b	d5,[a15]29
	call	IfxGtm_Tom_Ch_getSrcPointer
.L433:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   291                  IfxSrc_init(src, config->base.isrProvider, config->base.isrPriority);
	ld.bu	d0,[a12]6
.L301:
	ld.hu	d1,[a12]4
.L576:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     2   * \file IfxSrc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     3   * \brief SRC  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     4   * \ingroup IfxLld_Src
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    24   * \defgroup IfxLld_Src SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    25   * \addtogroup IfxLld_Src
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    26   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    27   * \defgroup IfxLld_Src_Usage How to use Service Request Mechanism?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    28   * \addtogroup IfxLld_Src_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    29   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    31   * For Aurix controller peripherals that can generate service requests is connected to one
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    32   * or more Service Request Nodes (SRNs) in the central Interrupt Router(IR) module. Refer to Controller User Manual for more details\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    34   * IfxSrc driver provides the APIs to configure and control service requests. Refer \ref IfxLld_Src_Usage for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    35   * details of these APIs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    36   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    38   * \section Ifx_Src_UsageInit Initialize the Service Request Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    40   * Service request node is initialized to configure the following,\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    41   * 1) Route the interrupt trigger to service provider, which are:\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    42   *  __a. One of the available CPUs or\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    43   *  __b. DMA controller\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    44   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    45   * 2) Priority of CPU Interrupt or DMA Trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    47   * For Interrupt or DMA to be correctly triggered, following steps are to be done in the user code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    49   * \subsection Ifx_Src_UsageInitStep1 Step1: Configure the Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    51   * User must configure the service request node in the application / driver files.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    52   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    53   * \subsection Ifx_Src_UsageInitStep2 Step2: Enable the Trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    54   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    55   * Enable the service request node to connect the trigger event from the hardware to service provider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    57   * Example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    58   * Following example show the configuration for STM0 Service request 0 trigger configured to trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    59   * CPU1 with the priority specified by IFX_INTPRIO_STM0 (from the example at IfxCpu_Irq)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    61   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    62   * //file: myApplication.c
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    64   * #include "Ifx_IntPrioDef.h" // to get the priority numbers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    65   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    66   * void myDriverInitFunction(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    67   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    68   *    // driver init code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    69   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    70   *    // Step1: Call the function to route the trigger from for SRC_STM0_SR0 to CPU1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    71   *    // and priority specified at Ifx_IntPrioDef.h globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    72   *    IfxSrc_init(&MODULE_SRC.STM.STM[0].SR[0], IfxSrc_Tos_cpu1, IFX_INTPRIO_STM0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    73   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    74   *    // Step2: Enable the service request node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    75   *    IfxSrc_enable(&MODULE_SRC.STM.STM[0].SR[0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    76   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    77   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    79   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    80   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    81   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    82   * \defgroup IfxLld_Src_Std_Service_Request Service Request Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    83   * \ingroup IfxLld_Src_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    84   * \defgroup IfxLld_Src_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    85   * \ingroup IfxLld_Src_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    87  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    88  #ifndef IFXSRC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    89  #define IFXSRC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    90  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    91  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    92  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    93  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    95  #include "_Impl/IfxSrc_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    96  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    97  #include "IfxSrc_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    98  /** \addtogroup IfxLld_Src_Std_Service_Request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    99   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   100  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   101  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   102  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   103  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   105  /** \brief Resets the overrun flag of the Service Request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   106   * \param src pointer to the Service Request Control register which the overrun flag should be cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   107   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   109   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   110   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   111   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   112  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   113  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   114  /** \brief Resets a specific interrupt service by software.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   115   * \param src pointer to the Service Request Control register which the request should be cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   116   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   118   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   119   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   120   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   121  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   123  /** \brief Gets the current overrun status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   124   * \param src pointer to the Service Request Control register for which the overrun status should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   125   * \return current service request control overrun status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   126   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   127   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   129   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   130  IFX_INLINE boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   131  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   132  /** \brief Gets the current request status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   133   * \param src pointer to the Service Request Control register for which the request status should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   134   * \return current service request control request status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   135   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   136   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   137   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   139  IFX_INLINE boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   141  /** \brief Requests a specific interrupt service by software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   142   * \param src pointer to the Service Request Control register which the interrupt has to be requested.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   143   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   144   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   145   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   146   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   147   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   148  IFX_INLINE void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   150  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   151  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   152  /** \addtogroup IfxLld_Src_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   153   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   155  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   156  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   157  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   159  /** \brief DeInitializes the service request control register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   160   * \param src pointer to the Service Request Control register which should be deinitialised.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   161   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   162   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   163   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   164   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   166  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   168  /** \brief Disables a specific interrupt service request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   169   * \param src pointer to the Service Request Control register for which the interrupt has to be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   170   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   171   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   172   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   173   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   175  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   176  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   177  /** \brief Enables a specific interrupt service request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   178   * \param src pointer to the Service Request Control register for which the interrupt has to be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   179   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   181   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   182   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   183   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   184  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   185  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   186  /** \brief Initializes the service request control register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   187   * \param src pointer to the Service Request Control register which should be initialised.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   188   * \param typOfService type of interrupt service provider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   189   * \param priority Interrupt priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   190   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   191   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   192   * Get the peripheral service control register which request need to be serviced and assign this service to any of service providers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   193   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   194   * //define the interrupt priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   195   * #define IFXASCLIN0_TX_INTPRIO 2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   196   * //get the service request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   197   * volatile Ifx_SRC_SRCR *src = IfxAsclin_getSrcPointerRx( &MODULE_ASCLIN0 );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   198   * //initlaise the service request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   199   * IfxSrc_init( src, IfxSrc_Tos_cpu0, IFXASCLIN0_TX_INTPRIO );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   200   * // enable the service
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   201   * IfxSrc_enable( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   202   * //check for service request flags and clear if they occur
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   203   * if ( IfxSrc_isRequested( src ) == TRUE )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   204   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   205   *    IfxSrc_clearRequest( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   206   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   207   * if ( IfxSrc_isOverrun( src ) == TRUE )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   208   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   209   *      IfxSrc_clearOverrun( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   210   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   211   * // Atlast deinitialise the service control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   212   * IfxSrc_deinit( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   213   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   214   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   216  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   218  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   219  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   220  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   221  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   222  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   223  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   224  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   226      src->B.IOVCLR = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   227  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   228  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   230  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   231  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   232      src->B.CLRR = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   233  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   234  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   236  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   237  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   238      src->U = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   239  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   241  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   242  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   244      src->B.SRE = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   245  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   248  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   249  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   250      src->B.SRE = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   251  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   254  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   255  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   256      src->B.SRPN = priority;
	st.b	[a2],d1
.L577:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   257      src->B.TOS  = typOfService;
	fcall	.cocofun_6
.L42:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   292                  IfxSrc_enable(src);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   293              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   294  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   295              if (triggerHasIrq)
	jeq	d10,#0,.L43
.L578:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   296              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   297                  IfxGtm_Tom_Ch_setNotification(driver->tom, driver->triggerChannel, irqMode, FALSE, TRUE);
	mov	d5,#2
	ld.a	a4,[a15]16
.L579:
	mov	d6,#0
	ld.b	d4,[a15]30
.L580:
	mov	d7,#1
	call	IfxGtm_Tom_Ch_setNotification
.L581:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   298                  src = IfxGtm_Tom_Ch_getSrcPointer(driver->gtm, config->tom, driver->triggerChannel);
	ld.a	a4,[a15]12
.L582:
	ld.bu	d4,[a12]40
.L583:
	ld.b	d5,[a15]30
	call	IfxGtm_Tom_Ch_getSrcPointer
.L435:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   299                  IfxSrc_init(src, config->base.trigger.isrProvider, config->base.trigger.isrPriority);
	ld.bu	d0,[a12]20
.L310:
	ld.hu	d15,[a12]18
.L41:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     2   * \file IfxSrc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     3   * \brief SRC  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     4   * \ingroup IfxLld_Src
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    24   * \defgroup IfxLld_Src SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    25   * \addtogroup IfxLld_Src
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    26   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    27   * \defgroup IfxLld_Src_Usage How to use Service Request Mechanism?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    28   * \addtogroup IfxLld_Src_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    29   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    31   * For Aurix controller peripherals that can generate service requests is connected to one
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    32   * or more Service Request Nodes (SRNs) in the central Interrupt Router(IR) module. Refer to Controller User Manual for more details\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    34   * IfxSrc driver provides the APIs to configure and control service requests. Refer \ref IfxLld_Src_Usage for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    35   * details of these APIs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    36   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    38   * \section Ifx_Src_UsageInit Initialize the Service Request Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    40   * Service request node is initialized to configure the following,\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    41   * 1) Route the interrupt trigger to service provider, which are:\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    42   *  __a. One of the available CPUs or\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    43   *  __b. DMA controller\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    44   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    45   * 2) Priority of CPU Interrupt or DMA Trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    47   * For Interrupt or DMA to be correctly triggered, following steps are to be done in the user code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    49   * \subsection Ifx_Src_UsageInitStep1 Step1: Configure the Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    51   * User must configure the service request node in the application / driver files.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    52   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    53   * \subsection Ifx_Src_UsageInitStep2 Step2: Enable the Trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    54   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    55   * Enable the service request node to connect the trigger event from the hardware to service provider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    57   * Example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    58   * Following example show the configuration for STM0 Service request 0 trigger configured to trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    59   * CPU1 with the priority specified by IFX_INTPRIO_STM0 (from the example at IfxCpu_Irq)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    61   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    62   * //file: myApplication.c
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    64   * #include "Ifx_IntPrioDef.h" // to get the priority numbers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    65   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    66   * void myDriverInitFunction(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    67   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    68   *    // driver init code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    69   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    70   *    // Step1: Call the function to route the trigger from for SRC_STM0_SR0 to CPU1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    71   *    // and priority specified at Ifx_IntPrioDef.h globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    72   *    IfxSrc_init(&MODULE_SRC.STM.STM[0].SR[0], IfxSrc_Tos_cpu1, IFX_INTPRIO_STM0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    73   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    74   *    // Step2: Enable the service request node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    75   *    IfxSrc_enable(&MODULE_SRC.STM.STM[0].SR[0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    76   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    77   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    79   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    80   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    81   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    82   * \defgroup IfxLld_Src_Std_Service_Request Service Request Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    83   * \ingroup IfxLld_Src_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    84   * \defgroup IfxLld_Src_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    85   * \ingroup IfxLld_Src_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    87  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    88  #ifndef IFXSRC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    89  #define IFXSRC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    90  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    91  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    92  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    93  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    95  #include "_Impl/IfxSrc_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    96  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    97  #include "IfxSrc_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    98  /** \addtogroup IfxLld_Src_Std_Service_Request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    99   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   100  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   101  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   102  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   103  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   105  /** \brief Resets the overrun flag of the Service Request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   106   * \param src pointer to the Service Request Control register which the overrun flag should be cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   107   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   109   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   110   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   111   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   112  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   113  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   114  /** \brief Resets a specific interrupt service by software.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   115   * \param src pointer to the Service Request Control register which the request should be cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   116   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   118   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   119   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   120   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   121  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   123  /** \brief Gets the current overrun status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   124   * \param src pointer to the Service Request Control register for which the overrun status should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   125   * \return current service request control overrun status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   126   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   127   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   129   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   130  IFX_INLINE boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   131  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   132  /** \brief Gets the current request status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   133   * \param src pointer to the Service Request Control register for which the request status should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   134   * \return current service request control request status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   135   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   136   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   137   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   139  IFX_INLINE boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   141  /** \brief Requests a specific interrupt service by software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   142   * \param src pointer to the Service Request Control register which the interrupt has to be requested.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   143   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   144   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   145   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   146   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   147   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   148  IFX_INLINE void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   150  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   151  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   152  /** \addtogroup IfxLld_Src_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   153   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   155  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   156  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   157  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   159  /** \brief DeInitializes the service request control register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   160   * \param src pointer to the Service Request Control register which should be deinitialised.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   161   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   162   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   163   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   164   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   166  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   168  /** \brief Disables a specific interrupt service request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   169   * \param src pointer to the Service Request Control register for which the interrupt has to be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   170   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   171   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   172   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   173   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   175  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   176  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   177  /** \brief Enables a specific interrupt service request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   178   * \param src pointer to the Service Request Control register for which the interrupt has to be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   179   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   181   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   182   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   183   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   184  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   185  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   186  /** \brief Initializes the service request control register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   187   * \param src pointer to the Service Request Control register which should be initialised.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   188   * \param typOfService type of interrupt service provider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   189   * \param priority Interrupt priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   190   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   191   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   192   * Get the peripheral service control register which request need to be serviced and assign this service to any of service providers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   193   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   194   * //define the interrupt priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   195   * #define IFXASCLIN0_TX_INTPRIO 2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   196   * //get the service request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   197   * volatile Ifx_SRC_SRCR *src = IfxAsclin_getSrcPointerRx( &MODULE_ASCLIN0 );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   198   * //initlaise the service request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   199   * IfxSrc_init( src, IfxSrc_Tos_cpu0, IFXASCLIN0_TX_INTPRIO );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   200   * // enable the service
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   201   * IfxSrc_enable( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   202   * //check for service request flags and clear if they occur
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   203   * if ( IfxSrc_isRequested( src ) == TRUE )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   204   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   205   *    IfxSrc_clearRequest( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   206   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   207   * if ( IfxSrc_isOverrun( src ) == TRUE )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   208   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   209   *      IfxSrc_clearOverrun( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   210   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   211   * // Atlast deinitialise the service control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   212   * IfxSrc_deinit( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   213   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   214   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   216  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   218  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   219  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   220  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   221  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   222  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   223  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   224  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   226      src->B.IOVCLR = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   227  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   228  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   230  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   231  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   232      src->B.CLRR = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   233  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   234  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   236  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   237  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   238      src->U = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   239  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   241  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   242  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   244      src->B.SRE = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   245  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   248  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   249  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   250      src->B.SRE = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   251  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   254  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   255  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   256      src->B.SRPN = priority;
	st.b	[a2],d15
.L584:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   257      src->B.TOS  = typOfService;
	fcall	.cocofun_6
.L43:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   300                  IfxSrc_enable(src);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   301              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   302          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   303      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   304  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   305      /* Transfer the shadow registers */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   306      IfxGtm_Tom_Tgc_setChannelsForceUpdate(driver->tgc[0], driver->channelsMask[0], 0, 0, 0);
	mov	d5,#0
	ld.a	a4,[a15]20
.L585:
	mov	e6,d5,d5
	ld.hu	d4,[a15]32
.L586:
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L587:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   307      IfxGtm_Tom_Tgc_trigger(driver->tgc[0]);
	ld.a	a4,[a15]20
	call	IfxGtm_Tom_Tgc_trigger
.L588:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   308      IfxGtm_Tom_Tgc_setChannelsForceUpdate(driver->tgc[0], 0, driver->channelsMask[0], 0, 0);
	ld.a	a4,[a15]20
.L589:
	mov	d4,#0
	ld.hu	d5,[a15]32
.L590:
	mov	e6,d4,d4
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L591:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   309  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   310      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   311  }
	mov	d2,d8
	ret
.L273:
	
__IfxGtm_Tom_Timer_init_function_end:
	.size	IfxGtm_Tom_Timer_init,__IfxGtm_Tom_Timer_init_function_end-IfxGtm_Tom_Timer_init
.L137:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer..cocofun_10',code,cluster('.cocofun_10')
	.sect	'.text.IfxGtm_Tom_Timer..cocofun_10'
	.align	2
; Function .cocofun_10
.L87:
.cocofun_10:	.type	func
; Function body .cocofun_10, coco_iter:0
	movh.a	a2,#@his(_999001___func__)
	lea	a2,[a2]@los(_999001___func__)
.L816:
	fret
.L262:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Timer..cocofun_9',code,cluster('.cocofun_9')
	.sect	'.text.IfxGtm_Tom_Timer..cocofun_9'
	.align	2
; Function .cocofun_9
.L89:
.cocofun_9:	.type	func
; Function body .cocofun_9, coco_iter:0
	movh.a	a2,#@his(.3.str)
	lea	a2,[a2]@los(.3.str)
.L811:
	fret
.L257:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Timer..cocofun_8',code,cluster('.cocofun_8')
	.sect	'.text.IfxGtm_Tom_Timer..cocofun_8'
	.align	2
; Function .cocofun_8
.L91:
.cocofun_8:	.type	func
; Function body .cocofun_8, coco_iter:0
	movh.a	a2,#@his(verboseLevelStr+8)
.L406:
	ld.a	a2,[a2]@los(verboseLevelStr+8)
.L806:
	fret
.L252:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Timer..cocofun_6',code,cluster('.cocofun_6')
	.sect	'.text.IfxGtm_Tom_Timer..cocofun_6'
	.align	2
; Function .cocofun_6
.L93:
.cocofun_6:	.type	func
; Function body .cocofun_6, coco_iter:0

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     2   * \file IfxSrc.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     3   * \brief SRC  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     4   * \ingroup IfxLld_Src
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    24   * \defgroup IfxLld_Src SRC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    25   * \addtogroup IfxLld_Src
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    26   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    27   * \defgroup IfxLld_Src_Usage How to use Service Request Mechanism?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    28   * \addtogroup IfxLld_Src_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    29   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    31   * For Aurix controller peripherals that can generate service requests is connected to one
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    32   * or more Service Request Nodes (SRNs) in the central Interrupt Router(IR) module. Refer to Controller User Manual for more details\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    34   * IfxSrc driver provides the APIs to configure and control service requests. Refer \ref IfxLld_Src_Usage for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    35   * details of these APIs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    36   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    38   * \section Ifx_Src_UsageInit Initialize the Service Request Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    40   * Service request node is initialized to configure the following,\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    41   * 1) Route the interrupt trigger to service provider, which are:\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    42   *  __a. One of the available CPUs or\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    43   *  __b. DMA controller\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    44   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    45   * 2) Priority of CPU Interrupt or DMA Trigger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    47   * For Interrupt or DMA to be correctly triggered, following steps are to be done in the user code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    49   * \subsection Ifx_Src_UsageInitStep1 Step1: Configure the Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    51   * User must configure the service request node in the application / driver files.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    52   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    53   * \subsection Ifx_Src_UsageInitStep2 Step2: Enable the Trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    54   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    55   * Enable the service request node to connect the trigger event from the hardware to service provider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    57   * Example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    58   * Following example show the configuration for STM0 Service request 0 trigger configured to trigger
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    59   * CPU1 with the priority specified by IFX_INTPRIO_STM0 (from the example at IfxCpu_Irq)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    61   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    62   * //file: myApplication.c
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    64   * #include "Ifx_IntPrioDef.h" // to get the priority numbers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    65   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    66   * void myDriverInitFunction(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    67   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    68   *    // driver init code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    69   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    70   *    // Step1: Call the function to route the trigger from for SRC_STM0_SR0 to CPU1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    71   *    // and priority specified at Ifx_IntPrioDef.h globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    72   *    IfxSrc_init(&MODULE_SRC.STM.STM[0].SR[0], IfxSrc_Tos_cpu1, IFX_INTPRIO_STM0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    73   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    74   *    // Step2: Enable the service request node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    75   *    IfxSrc_enable(&MODULE_SRC.STM.STM[0].SR[0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    76   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    77   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    79   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    80   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    81   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    82   * \defgroup IfxLld_Src_Std_Service_Request Service Request Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    83   * \ingroup IfxLld_Src_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    84   * \defgroup IfxLld_Src_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    85   * \ingroup IfxLld_Src_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    87  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    88  #ifndef IFXSRC_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    89  #define IFXSRC_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    90  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    91  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    92  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    93  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    94  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    95  #include "_Impl/IfxSrc_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    96  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    97  #include "IfxSrc_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    98  /** \addtogroup IfxLld_Src_Std_Service_Request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	    99   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   100  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   101  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   102  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   103  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   105  /** \brief Resets the overrun flag of the Service Request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   106   * \param src pointer to the Service Request Control register which the overrun flag should be cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   107   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   109   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   110   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   111   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   112  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   113  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   114  /** \brief Resets a specific interrupt service by software.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   115   * \param src pointer to the Service Request Control register which the request should be cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   116   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   118   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   119   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   120   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   121  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   123  /** \brief Gets the current overrun status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   124   * \param src pointer to the Service Request Control register for which the overrun status should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   125   * \return current service request control overrun status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   126   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   127   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   129   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   130  IFX_INLINE boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   131  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   132  /** \brief Gets the current request status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   133   * \param src pointer to the Service Request Control register for which the request status should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   134   * \return current service request control request status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   135   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   136   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   137   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   139  IFX_INLINE boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   141  /** \brief Requests a specific interrupt service by software
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   142   * \param src pointer to the Service Request Control register which the interrupt has to be requested.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   143   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   144   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   145   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   146   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   147   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   148  IFX_INLINE void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   149  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   150  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   151  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   152  /** \addtogroup IfxLld_Src_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   153   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   155  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   156  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   157  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   159  /** \brief DeInitializes the service request control register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   160   * \param src pointer to the Service Request Control register which should be deinitialised.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   161   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   162   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   163   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   164   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   166  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   168  /** \brief Disables a specific interrupt service request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   169   * \param src pointer to the Service Request Control register for which the interrupt has to be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   170   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   171   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   172   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   173   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   174   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   175  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   176  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   177  /** \brief Enables a specific interrupt service request.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   178   * \param src pointer to the Service Request Control register for which the interrupt has to be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   179   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   181   * Usage example: see \ref IfxSrc_init
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   182   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   183   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   184  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   185  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   186  /** \brief Initializes the service request control register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   187   * \param src pointer to the Service Request Control register which should be initialised.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   188   * \param typOfService type of interrupt service provider.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   189   * \param priority Interrupt priority.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   190   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   191   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   192   * Get the peripheral service control register which request need to be serviced and assign this service to any of service providers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   193   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   194   * //define the interrupt priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   195   * #define IFXASCLIN0_TX_INTPRIO 2
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   196   * //get the service request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   197   * volatile Ifx_SRC_SRCR *src = IfxAsclin_getSrcPointerRx( &MODULE_ASCLIN0 );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   198   * //initlaise the service request
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   199   * IfxSrc_init( src, IfxSrc_Tos_cpu0, IFXASCLIN0_TX_INTPRIO );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   200   * // enable the service
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   201   * IfxSrc_enable( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   202   * //check for service request flags and clear if they occur
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   203   * if ( IfxSrc_isRequested( src ) == TRUE )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   204   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   205   *    IfxSrc_clearRequest( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   206   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   207   * if ( IfxSrc_isOverrun( src ) == TRUE )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   208   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   209   *      IfxSrc_clearOverrun( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   210   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   211   * // Atlast deinitialise the service control
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   212   * IfxSrc_deinit( src );
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   213   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   214   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   216  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   218  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   219  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   220  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   221  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   222  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   223  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   224  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   226      src->B.IOVCLR = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   227  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   228  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   230  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   231  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   232      src->B.CLRR = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   233  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   234  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   236  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   237  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   238      src->U = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   239  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   241  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   242  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   244      src->B.SRE = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   245  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   248  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   249  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   250      src->B.SRE = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   251  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   254  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   255  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   256      src->B.SRPN = priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Src\Std\IfxSrc.h	   257      src->B.TOS  = typOfService;
	ld.bu	d15,[a2]1
.L792:
	insert	d15,d15,d0,#3,#1
	st.b	[a2]1,d15
.L793:
	ld.bu	d15,[a2]3
.L794:
	or	d15,#2
	st.b	[a2]3,d15
.L795:
	ld.bu	d15,[a2]1
.L796:
	or	d15,#4
	st.b	[a2]1,d15
.L434:
	fret
.L242:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Timer..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.IfxGtm_Tom_Timer..cocofun_5'
	.align	2
; Function .cocofun_5
.L95:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0
	movh.a	a4,#@his(.1.str)
.L402:
	lea	a4,[a4]@los(.1.str)
.L787:
	fret
.L237:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_initConfig',code,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_initConfig'
	.align	2
	
	.global	IfxGtm_Tom_Timer_initConfig

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   312  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   313  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   314  void IfxGtm_Tom_Timer_initConfig(IfxGtm_Tom_Timer_Config *config, Ifx_GTM *gtm)
; Function IfxGtm_Tom_Timer_initConfig
.L97:
IfxGtm_Tom_Timer_initConfig:	.type	func
	mov.aa	a15,a4
.L440:
	mov.aa	a12,a5
.L441:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   315  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   316      IfxStdIf_Timer_initConfig(&config->base);
	call	IfxStdIf_Timer_initConfig
.L439:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   317      config->gtm            = gtm;
	st.a	[a15]36,a12
.L596:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   318      config->tom            = IfxGtm_Tom_0;
	mov	d15,#0
	st.b	[a15]40,d15
.L597:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   319      config->timerChannel   = IfxGtm_Tom_Ch_0;
	st.b	[a15]41,d15
.L598:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   320      config->triggerOut     = NULL_PTR;
	mov.a	a2,#0
.L599:
	st.a	[a15]44,a2
.L600:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   321      config->clock          = IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0;
	st.b	[a15]48,d15
.L601:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   322      config->base.countDir  = IfxStdIf_Timer_CountDir_up;
	st.b	[a15]28,d15
.L602:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   323      config->irqModeTimer   = IfxGtm_IrqMode_level;
	st.b	[a15]49,d15
.L603:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   324      config->irqModeTrigger = IfxGtm_IrqMode_level;
	st.b	[a15]50,d15
.L604:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   325  }
	ret
.L311:
	
__IfxGtm_Tom_Timer_initConfig_function_end:
	.size	IfxGtm_Tom_Timer_initConfig,__IfxGtm_Tom_Timer_initConfig_function_end-IfxGtm_Tom_Timer_initConfig
.L142:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_run',code,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_run'
	.align	2
	
	.global	IfxGtm_Tom_Timer_run

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   326  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   327  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   328  void IfxGtm_Tom_Timer_run(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_run
.L99:
IfxGtm_Tom_Timer_run:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   329  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   330      IfxGtm_Tom_Tgc_enableChannels(driver->tgc[0], driver->channelsMask[0], 0, TRUE);
	mov	d5,#0
	mov.aa	a15,a4
.L443:
	mov	d6,#1
	ld.a	a4,[a15]20
.L442:
	ld.hu	d4,[a15]32
.L696:
	call	IfxGtm_Tom_Tgc_enableChannels
.L697:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   331  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   332      if (driver->tgc[1])
	ld.a	a4,[a15]24
.L698:
	jz.a	a4,.L45
.L699:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   333      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   334          IfxGtm_Tom_Tgc_enableChannels(driver->tgc[1], driver->channelsMask[1], 0, TRUE); /* Note: Write of 0 value has no effect */
	mov	d5,#0
	ld.hu	d4,[a15]34
.L700:
	mov	d6,#1
	j	IfxGtm_Tom_Tgc_enableChannels
.L45:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   335      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   336  }
	ret
.L353:
	
__IfxGtm_Tom_Timer_run_function_end:
	.size	IfxGtm_Tom_Timer_run,__IfxGtm_Tom_Timer_run_function_end-IfxGtm_Tom_Timer_run
.L197:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setFrequency',code,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setFrequency'
	.align	2
	
	.global	IfxGtm_Tom_Timer_setFrequency

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   337  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   338  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   339  boolean IfxGtm_Tom_Timer_setFrequency(IfxGtm_Tom_Timer *driver, float32 frequency)
; Function IfxGtm_Tom_Timer_setFrequency
.L101:
IfxGtm_Tom_Timer_setFrequency:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   340  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   341      Ifx_TimerValue period = IfxStdIf_Timer_sToTick(driver->base.clockFreq, 1.0 / frequency);
	movh	d15,#16256
.L705:
	div.f	d15,d15,d4
	ld.w	d0,[a4]6
.L706:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    25   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    28   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    29   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    31   * The figure below shows the standard timer interface.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    33   * \image html "Timer.png" "Standard timer interface"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    34   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    35   * This interface defines the following features:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    36   * - Timer with configurable frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    37   * - Configurable counting direction
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    38   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    39   * - Optional trigger signal with:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    40   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    41   *   - Configurable trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    42   *   - Configurable trigger edge
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    43   *   - trigger signal can be internal only or forwarded to a port pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    44   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    46  #ifndef IFXSTDIF_TIMER_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    47  #define IFXSTDIF_TIMER_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    48  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    49  #include "Cpu/Std/Ifx_Types.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    50  #include "Src/Std/IfxSrc.h"     /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    51  #include "Port/Std/IfxPort.h"   /* FIXME interface should not have dependencies to the HAL, an If type needs to be defined */ /*FIXME introduce generic IF for ports. ex: IfxPort_OutputMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    52  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    53  /** \brief Output event enable / disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    56      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    57      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    58                                                    *          the output is set to active between time 0 to the trigger point,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    59                                                    *          and is set to inactive between the trigger point and the period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    60                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    61                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    62                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    63                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    64                                                    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    65  } IfxStdIf_Timer_OutputEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    66  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    67  /** \brief Timer increment direction */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    68  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    69  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    70      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    71      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    72      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    73  } IfxStdIf_Timer_CountDir;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    74  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    75  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    76  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    77  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    78  /** \brief Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    80   * \return Return the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    81   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    82  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    85   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    86   * \return Return the timer period in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    87   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    88  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    90  /** \brief Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    92   * \return Return the timer resolution in seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    93   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    94  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    95  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    96  /** \brief Return the timer trigger point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    98   * \return Return the timer timer point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	    99   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   100  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   102  /** \brief Set the timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   104   * \param frequency Requested timer frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   105   * \retval TRUE The requested frequency could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   106   * \retval FALSE The requested frequency is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   107   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   108  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver driver, float32 frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   110  /** \brief Indicates the driver that the imput frequency has changed and that it should be taken in account
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   111   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   112   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   113   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   114  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   116  /** \brief Apply requested updates.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   117   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   118   * Such requested update are calls to:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   119   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   120   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   121   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   122   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   123   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   124   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   125   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   126   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   127   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   128   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   129   * one timer period!!!
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   130   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   131   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   132   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   133   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   135  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   137  /** \brief Disable updates
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   139   * The following API action will not be taken in account before applyUpdate is called:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setSingleMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setTrigger()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   143   * as well as PWM generation related calls such as:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setDeadtime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setOnTime()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   147   * - IfxStdIf_PwmHl_setupChannels()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   155   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   156   * \return Return the timer input frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   157   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   158  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   159  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   160  /** \brief Immediately start the timer.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   161   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   162   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   163   * global (input) clock to the timer block is inactive.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   164   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   165   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   167  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   169  /** \brief Set the timer period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   170   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   171   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \param period Period value in ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   174   * \retval TRUE The requested period could be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   175   * \retval FALSE The requested period is out of range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   176   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   177  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   178  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   179  /** \brief Stop timer at the end of the period
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   180   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   181   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   183   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   184   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   185   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   186  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver driver, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   187  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   188  /** \brief Set trigger point.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   189   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \see Timer_OutputEvent for the definition of the output level.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   191   * Active state is defined by Timer_Config::outputActiveState.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   193   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   194   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   195   * \param triggerPoint Trigger point in ticks from the period start.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   196   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   197   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   198  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver driver, Ifx_TimerValue triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   199  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   200  /** \brief Immediately stops the timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   202   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   203   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   204  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   206  /** \brief Return the timer interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   208   * \return Return the timer interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   209   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   210  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   212  /** \brief Return the trigger interrupt flag and reset it
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   214   * \return Return the trigger interrupt flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   215   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   216  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   218  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   219   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   220  struct IfxStdIf_Timer_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   221  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   222      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   223      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   224      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   225      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   226      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   227      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   228      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   229      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   230      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   231      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   232      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   233      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   234      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   235      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   236      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   237      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   238      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   239  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   240  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   241  /** \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   242  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   244      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   245      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   246      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxPort_OutputMode outputMode;          /**< \brief Output mode *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver *//* FIXME use generic type (No specific tricore AURIX type ) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   250      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   251      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   252  } IfxStdIf_Timer_TrigConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   253  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   254  /** \brief Timer configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   255  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   256  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   257      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   258      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   259      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   260      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   261      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   262      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   263      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   264  } IfxStdIf_Timer_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   266  /** \addtogroup library_srvsw_stdif_timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   267   *  \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   269  /** \copydoc IfxStdIf_Timer_GetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   270  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   271  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   272      return stdIf->getFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   273  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   276  /** \copydoc IfxStdIf_Timer_GetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   277  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   279      return stdIf->getPeriod(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   280  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \copydoc IfxStdIf_Timer_GetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   284  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   285  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   286      return stdIf->getTrigger(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   287  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   288  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   290  /** \copydoc IfxStdIf_Timer_GetResolution */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   291  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   292  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   293      return stdIf->getResolution(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   294  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   297  /** \copydoc IfxStdIf_Timer_SetFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   305  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   306  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   307      stdIf->updateInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   308  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   309  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   310  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   311  /** \copydoc IfxStdIf_Timer_ApplyUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   312  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   313  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   314      stdIf->applyUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   315  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   316  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   318  /** \copydoc IfxStdIf_Timer_DisableUpdate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   320  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   321      stdIf->disableUpdate(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   322  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   323  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   324  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_GetInputFrequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   326  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   327  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   328      return stdIf->getInputFrequency(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   329  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   331  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   332  /** \copydoc IfxStdIf_Timer_Run */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   333  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   334  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   335      stdIf->run(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   336  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   337  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   339  /** \copydoc IfxStdIf_Timer_SetPeriod */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   340  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   341  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   342      return stdIf->setPeriod(stdIf->driver, period);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   343  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   344  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   346  /** \copydoc IfxStdIf_Timer_SetSingleMode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   347  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   348  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   349      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   350  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   351  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   353  /** \copydoc IfxStdIf_Timer_SetTrigger */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   354  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   355  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   356      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   357  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   360  /** \copydoc IfxStdIf_Timer_Stop */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   363      stdIf->stop(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_AckTimerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   368  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   369  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   370      return stdIf->ackTimerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   371  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   372  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   373  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   374  /** \copydoc IfxStdIf_Timer_AckTriggerIrq */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   375  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   376  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   377      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   378  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   379  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   381  /** \brief Convert timer ticks to seconds
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   382   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   383   * \param  ticks time value in ticks to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   384   * \return Return the converted time in s
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   385   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   386  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   387  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   388      return ticks / clockFreq;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   389  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   390  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   392  /** \brief Convert seconds to timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   393   * \param  clockFreq Timer clock frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   394   * \param  seconds time value in seconds to be converted
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   395   * \return Return the converted time in timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   396   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   397  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   398  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_Timer.h	   399      return seconds * clockFreq;
	mul.f	d15,d15,d0
	ftouz	d4,d15
.L444:
	j	IfxGtm_Tom_Timer_setPeriod
.L355:
	
__IfxGtm_Tom_Timer_setFrequency_function_end:
	.size	IfxGtm_Tom_Timer_setFrequency,__IfxGtm_Tom_Timer_setFrequency_function_end-IfxGtm_Tom_Timer_setFrequency
.L202:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setPeriod',code,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setPeriod'
	.align	2
	
	.global	IfxGtm_Tom_Timer_setPeriod

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   342  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   343      return IfxGtm_Tom_Timer_setPeriod(driver, period);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   344  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   345  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   346  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   347  boolean IfxGtm_Tom_Timer_setPeriod(IfxGtm_Tom_Timer *driver, Ifx_TimerValue period)
; Function IfxGtm_Tom_Timer_setPeriod
.L103:
IfxGtm_Tom_Timer_setPeriod:	.type	func
	mov	d15,d4
	mov.aa	a15,a4
.L447:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   348  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   349      boolean result = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   350      driver->base.period = period;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   351  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   352      /* check that period is not more that 16 bits */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   353      if (period <= 0xFFFF)
	mov.u	d0,#65535
	st.w	[a15],d15
.L711:
	mov	d8,#1
	sub.a	a10,#24
.L445:
	jlt.u	d0,d15,.L47
.L712:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   354      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   355          IfxGtm_Tom_Ch_setCompareZeroShadow(driver->tom, driver->timerChannel, period);
	fcall	.cocofun_7
.L446:
	mov	d5,d15
	call	IfxGtm_Tom_Ch_setCompareZeroShadow
.L713:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   356  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   357          if (driver->triggerChannel != driver->timerChannel)
	ld.b	d4,[a15]30
.L714:
	ld.b	d0,[a15]29
.L715:
	jeq	d4,d0,.L48
.L716:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   358          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   359              IfxGtm_Tom_Ch_setCompareZeroShadow(driver->tom, driver->triggerChannel, period);
	ld.a	a4,[a15]16
.L717:
	mov	d5,d15
	call	IfxGtm_Tom_Ch_setCompareZeroShadow
.L718:
	j	.L49
.L47:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   360          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   361      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   362      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   363      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   364          result = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   365          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, FALSE);
	mov	d8,#0
	movh.a	a15,#@his(verboseLevelStr+8)
.L448:
	ld.a	a15,[a15]@los(verboseLevelStr+8)
	st.a	[a10],a15
	lea	a15,.4.str
	st.a	[a10]4,a15
	movh.a	a15,#@his(.3.str)
	lea	a15,[a15]@los(.3.str)
	st.a	[a10]8,a15
	mov	d15,#365
	st.w	[a10]12,d15
.L449:
	movh.a	a15,#@his(_999002___func__)
	lea	a15,[a15]@los(_999002___func__)
	st.a	[a10]16,a15
	fcall	.cocofun_5
.L450:
	call	printf
.L49:
.L48:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   366      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   367  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   368      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   369  }
	mov	d2,d8
	ret
.L358:
	
__IfxGtm_Tom_Timer_setPeriod_function_end:
	.size	IfxGtm_Tom_Timer_setPeriod,__IfxGtm_Tom_Timer_setPeriod_function_end-IfxGtm_Tom_Timer_setPeriod
.L207:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setSingleMode',code,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setSingleMode'
	.align	2
	
	.global	IfxGtm_Tom_Timer_setSingleMode

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   371  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   372  void IfxGtm_Tom_Timer_setSingleMode(IfxGtm_Tom_Timer *driver, boolean enabled)
; Function IfxGtm_Tom_Timer_setSingleMode
.L105:
IfxGtm_Tom_Timer_setSingleMode:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   373  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   374      IfxGtm_Tom_Ch_setOneShotMode(driver->tom, driver->timerChannel, enabled);
	mov	d5,d4
	ld.a	a15,[a4]16
.L453:
	ld.b	d4,[a4]29
.L452:
	mov.aa	a4,a15
.L451:
	j	IfxGtm_Tom_Ch_setOneShotMode
.L363:
	
__IfxGtm_Tom_Timer_setSingleMode_function_end:
	.size	IfxGtm_Tom_Timer_setSingleMode,__IfxGtm_Tom_Timer_setSingleMode_function_end-IfxGtm_Tom_Timer_setSingleMode
.L212:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setTrigger',code,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setTrigger'
	.align	2
	
	.global	IfxGtm_Tom_Timer_setTrigger

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   375  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   376  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   377  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   378  boolean IfxGtm_Tom_Timer_setTrigger(IfxGtm_Tom_Timer *driver, Ifx_TimerValue triggerPoint)
; Function IfxGtm_Tom_Timer_setTrigger
.L107:
IfxGtm_Tom_Timer_setTrigger:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   379  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   380      boolean result = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   381  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   382      /* check that trigger point is not more that 16 bits */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   383      if (triggerPoint <= (0xFFFF - 1))
	mov.u	d15,#65534
	sub.a	a10,#24
.L454:
	mov	d8,#1
.L458:
	jlt.u	d15,d4,.L51
.L727:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   384      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   385          IfxGtm_Tom_Ch_setCompareOneShadow(driver->tom, driver->triggerChannel, triggerPoint + 1);
	ld.a	a15,[a4]16
.L728:
	ld.b	d15,[a4]30
.L729:
	add	d5,d4,#1
	mov.aa	a4,a15
.L455:
	mov	d4,d15
	call	IfxGtm_Tom_Ch_setCompareOneShadow
.L456:
	j	.L52
.L51:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   386      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   387      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   388      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   389          result = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   390          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, FALSE);
	mov	d8,#0
	movh.a	a15,#@his(verboseLevelStr+8)
	ld.a	a15,[a15]@los(verboseLevelStr+8)
	st.a	[a10],a15
	lea	a15,.4.str
	st.a	[a10]4,a15
	movh.a	a15,#@his(.3.str)
	lea	a15,[a15]@los(.3.str)
	st.a	[a10]8,a15
	mov	d15,#390
	st.w	[a10]12,d15
	movh.a	a15,#@his(_999003___func__)
	lea	a15,[a15]@los(_999003___func__)
	st.a	[a10]16,a15
	fcall	.cocofun_5
.L457:
	call	printf
.L52:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   391      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   392  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   393      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   394  }
	mov	d2,d8
	ret
.L366:
	
__IfxGtm_Tom_Timer_setTrigger_function_end:
	.size	IfxGtm_Tom_Timer_setTrigger,__IfxGtm_Tom_Timer_setTrigger_function_end-IfxGtm_Tom_Timer_setTrigger
.L217:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_stdIfTimerInit',code,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_stdIfTimerInit'
	.align	2
	
	.global	IfxGtm_Tom_Timer_stdIfTimerInit

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   395  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   396  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   397  boolean IfxGtm_Tom_Timer_stdIfTimerInit(IfxStdIf_Timer *stdif, IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_stdIfTimerInit
.L109:
IfxGtm_Tom_Timer_stdIfTimerInit:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   398  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   399      /* *INDENT-OFF* Note: this file was indented manually by the author. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   400      /* Set the API link */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   401      stdif->driver               = driver;
	st.a	[a4],a5
.L734:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   402      stdif->getFrequency         =(IfxStdIf_Timer_GetFrequency        )&IfxGtm_Tom_Timer_getFrequency;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_getFrequency)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_getFrequency)
.L735:
	st.a	[a4]4,a15
.L736:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   403      stdif->getPeriod            =(IfxStdIf_Timer_GetPeriod           )&IfxGtm_Tom_Timer_getPeriod;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_getPeriod)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_getPeriod)
.L737:
	st.a	[a4]8,a15
.L738:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   404      stdif->getResolution        =(IfxStdIf_Timer_GetResolution       )&IfxGtm_Tom_Timer_getResolution;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_getResolution)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_getResolution)
.L739:
	st.a	[a4]12,a15
.L740:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   405      stdif->getTrigger           =(IfxStdIf_Timer_GetTrigger          )&IfxGtm_Tom_Timer_getTrigger;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_getTrigger)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_getTrigger)
.L741:
	st.a	[a4]16,a15
.L742:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   406      stdif->setFrequency         =(IfxStdIf_Timer_SetFrequency        )&IfxGtm_Tom_Timer_setFrequency;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_setFrequency)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_setFrequency)
.L743:
	st.a	[a4]20,a15
.L744:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   407      stdif->updateInputFrequency =(IfxStdIf_Timer_UpdateInputFrequency)&IfxGtm_Tom_Timer_updateInputFrequency;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_updateInputFrequency)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_updateInputFrequency)
.L745:
	st.a	[a4]24,a15
.L746:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   408      stdif->applyUpdate          =(IfxStdIf_Timer_ApplyUpdate         )&IfxGtm_Tom_Timer_applyUpdate;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_applyUpdate)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_applyUpdate)
.L747:
	st.a	[a4]28,a15
.L748:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   409      stdif->disableUpdate        =(IfxStdIf_Timer_DisableUpdate       )&IfxGtm_Tom_Timer_disableUpdate;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_disableUpdate)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_disableUpdate)
.L749:
	st.a	[a4]32,a15
.L750:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   410      stdif->getInputFrequency    =(IfxStdIf_Timer_GetInputFrequency   )&IfxGtm_Tom_Timer_getInputFrequency;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_getInputFrequency)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_getInputFrequency)
.L751:
	st.a	[a4]36,a15
.L752:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   411      stdif->run                  =(IfxStdIf_Timer_Run                 )&IfxGtm_Tom_Timer_run;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_run)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_run)
.L753:
	st.a	[a4]40,a15
.L754:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   412      stdif->setPeriod            =(IfxStdIf_Timer_SetPeriod           )&IfxGtm_Tom_Timer_setPeriod;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_setPeriod)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_setPeriod)
.L755:
	st.a	[a4]44,a15
.L756:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   413      stdif->setSingleMode        =(IfxStdIf_Timer_SetSingleMode       )&IfxGtm_Tom_Timer_setSingleMode;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_setSingleMode)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_setSingleMode)
.L757:
	st.a	[a4]48,a15
.L758:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   414      stdif->setTrigger           =(IfxStdIf_Timer_SetTrigger          )&IfxGtm_Tom_Timer_setTrigger;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_setTrigger)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_setTrigger)
.L759:
	st.a	[a4]52,a15
.L760:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   415      stdif->stop                 =(IfxStdIf_Timer_Stop                )&IfxGtm_Tom_Timer_stop;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_stop)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_stop)
.L761:
	st.a	[a4]56,a15
.L762:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   416      stdif->ackTimerIrq          =(IfxStdIf_Timer_AckTimerIrq         )&IfxGtm_Tom_Timer_acknowledgeTimerIrq;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_acknowledgeTimerIrq)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_acknowledgeTimerIrq)
.L763:
	st.a	[a4]60,a15
.L764:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   417      stdif->ackTriggerIrq        =(IfxStdIf_Timer_AckTriggerIrq       )&IfxGtm_Tom_Timer_acknowledgeTriggerIrq;
	movh.a	a15,#@his(IfxGtm_Tom_Timer_acknowledgeTriggerIrq)
	lea	a15,[a15]@los(IfxGtm_Tom_Timer_acknowledgeTriggerIrq)
.L765:
	st.a	[a4]64,a15
.L766:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   418      /* *INDENT-ON* */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   419  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   420      return TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   421  }
	mov	d2,#1
	ret
.L371:
	
__IfxGtm_Tom_Timer_stdIfTimerInit_function_end:
	.size	IfxGtm_Tom_Timer_stdIfTimerInit,__IfxGtm_Tom_Timer_stdIfTimerInit_function_end-IfxGtm_Tom_Timer_stdIfTimerInit
.L222:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_stop',code,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_stop'
	.align	2
	
	.global	IfxGtm_Tom_Timer_stop

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   422  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   423  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   424  void IfxGtm_Tom_Timer_stop(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_stop
.L111:
IfxGtm_Tom_Timer_stop:	.type	func
	mov.aa	a15,a4
.L460:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   425  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   426      IfxGtm_Tom_Tgc_enableChannels(driver->tgc[0], 0, driver->channelsMask[0], TRUE);
	ld.a	a4,[a15]20
.L459:
	mov	d4,#0
	ld.hu	d5,[a15]32
.L771:
	mov	d6,#1
	call	IfxGtm_Tom_Tgc_enableChannels
.L772:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   427  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   428      if (driver->tgc[1])
	ld.a	a4,[a15]24
.L773:
	jz.a	a4,.L55
.L774:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   429      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   430          IfxGtm_Tom_Tgc_enableChannels(driver->tgc[1], 0, driver->channelsMask[1], TRUE); /* Note: Write of 0 value has no effect */
	mov	d4,#0
	ld.hu	d5,[a15]34
.L775:
	mov	d6,#1
	j	IfxGtm_Tom_Tgc_enableChannels
.L55:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   431      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   432  }
	ret
.L375:
	
__IfxGtm_Tom_Timer_stop_function_end:
	.size	IfxGtm_Tom_Timer_stop,__IfxGtm_Tom_Timer_stop_function_end-IfxGtm_Tom_Timer_stop
.L227:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_updateInputFrequency',code,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_updateInputFrequency'
	.align	2
	
	.global	IfxGtm_Tom_Timer_updateInputFrequency

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   433  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   435  void IfxGtm_Tom_Timer_updateInputFrequency(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_updateInputFrequency
.L113:
IfxGtm_Tom_Timer_updateInputFrequency:	.type	func
	mov.aa	a15,a4
.L462:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   436  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   437      driver->base.clockFreq = IfxGtm_Tom_Ch_getClockFrequency(driver->gtm, driver->tom, driver->timerChannel);
	ld.a	a4,[a15]12
.L461:
	ld.a	a5,[a15]16
.L780:
	ld.b	d4,[a15]29
	call	IfxGtm_Tom_Ch_getClockFrequency
.L781:
	st.w	[a15]6,d2
.L782:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   438  }
	ret
.L377:
	
__IfxGtm_Tom_Timer_updateInputFrequency_function_end:
	.size	IfxGtm_Tom_Timer_updateInputFrequency,__IfxGtm_Tom_Timer_updateInputFrequency_function_end-IfxGtm_Tom_Timer_updateInputFrequency
.L232:
	; End of function
	
	.sdecl	'.rodata.IfxGtm_Tom_Timer..1.str',data,rom
	.sect	'.rodata.IfxGtm_Tom_Timer..1.str'
.1.str:	.type	object
	.size	.1.str,43
	.byte	91,65,83,83
	.byte	69,82,84,58
	.byte	37,115,93,32
	.byte	39,37,115,39
	.byte	32,105,110,32
	.byte	37,115,58,37
	.byte	100,32,40,102
	.byte	117,110,99,116
	.byte	105,111,110,32
	.byte	39,37,115,39
	.byte	41,10
	.space	1
	.sdecl	'.rodata.IfxGtm_Tom_Timer..2.str',data,rom
	.sect	'.rodata.IfxGtm_Tom_Timer..2.str'
.2.str:	.type	object
	.size	.2.str,52
	.byte	99,111,110,102
	.byte	105,103,45,62
	.byte	98,97,115,101
	.byte	46,99,111,117
	.byte	110,116,68,105
	.byte	114,32,61,61
	.byte	32,73,102,120
	.byte	83,116,100,73
	.byte	102,95,84,105
	.byte	109,101,114,95
	.byte	67,111,117,110
	.byte	116,68,105,114
	.byte	95,117,112
	.space	1
	.sdecl	'.rodata.IfxGtm_Tom_Timer..3.str',data,rom
	.sect	'.rodata.IfxGtm_Tom_Timer..3.str'
.3.str:	.type	object
	.size	.3.str,78
	.byte	46,46,92,83
	.byte	111,102,116,119
	.byte	97,114,101,80
	.byte	108,97,116,102
	.byte	111,114,109,92
	.byte	105,108,108,100
	.byte	95,116,99,50
	.byte	51,120,92,115
	.byte	114,99,92,105
	.byte	102,120,92,84
	.byte	67,50,51,120
	.byte	92,71,116,109
	.byte	92,84,111,109
	.byte	92,84,105,109
	.byte	101,114,92,73
	.byte	102,120,71,116
	.byte	109,95,84,111
	.byte	109,95,84,105
	.byte	109,101,114,46
	.byte	99
	.space	1
	.sdecl	'.rodata.IfxGtm_Tom_Timer._999001___func__',data,rom,cluster('_999001___func__')
	.sect	'.rodata.IfxGtm_Tom_Timer._999001___func__'
_999001___func__:	.type	object
	.size	_999001___func__,22
	.byte	73,102,120,71
	.byte	116,109,95,84
	.byte	111,109,95,84
	.byte	105,109,101,114
	.byte	95,105,110,105
	.byte	116
	.space	1
	.sdecl	'.zrodata.IfxGtm_Tom_Timer..4.str',data,rom
	.sect	'.zrodata.IfxGtm_Tom_Timer..4.str'
.4.str:	.type	object
	.size	.4.str,6
	.byte	70,65,76,83
	.byte	69
	.space	1
	.sdecl	'.rodata.IfxGtm_Tom_Timer._999002___func__',data,rom,cluster('_999002___func__')
	.sect	'.rodata.IfxGtm_Tom_Timer._999002___func__'
_999002___func__:	.type	object
	.size	_999002___func__,27
	.byte	73,102,120,71
	.byte	116,109,95,84
	.byte	111,109,95,84
	.byte	105,109,101,114
	.byte	95,115,101,116
	.byte	80,101,114,105
	.byte	111,100
	.space	1
	.sdecl	'.rodata.IfxGtm_Tom_Timer._999003___func__',data,rom,cluster('_999003___func__')
	.sect	'.rodata.IfxGtm_Tom_Timer._999003___func__'
_999003___func__:	.type	object
	.size	_999003___func__,28
	.byte	73,102,120,71
	.byte	116,109,95,84
	.byte	111,109,95,84
	.byte	105,109,101,114
	.byte	95,115,101,116
	.byte	84,114,105,103
	.byte	103,101,114
	.space	1
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_acknowledgeTimerIrq'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_acknowledgeTriggerIrq'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_applyUpdate'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_disableUpdate'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_getFrequency'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_getInputFrequency'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_getPeriod'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_getResolution'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_getTrigger'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_run'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_setFrequency'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_setPeriod'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_setSingleMode'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_setTrigger'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_stop'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_updateInputFrequency'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTimerIrq','IfxGtm_Tom_Ch_isZeroNotification'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTimerIrq','IfxGtm_Tom_Ch_clearZeroNotification'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTriggerIrq','IfxGtm_Tom_Ch_isOneNotification'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTriggerIrq','IfxGtm_Tom_Ch_clearOneNotification'
	.calls	'IfxGtm_Tom_Timer_addToChannelMask','IfxGtm_Tom_Tgc_buildFeature'
	.calls	'IfxGtm_Tom_Timer_getPointer','IfxGtm_Tom_Ch_getTimerPointer'
	.calls	'IfxGtm_Tom_Timer_getTrigger','IfxGtm_Tom_Ch_getCompareOne'
	.calls	'IfxGtm_Tom_Timer_getTriggerPointer','IfxGtm_Tom_Ch_getCompareOnePointer'
	.calls	'IfxGtm_Tom_Timer_init','printf'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_getTgcPointer'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setClockSource'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setTriggerOutput'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Timer_updateInputFrequency'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Timer_setFrequency'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setCounterValue'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Timer_addToChannelMask'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setSignalLevel'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setResetSource'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Tgc_enableChannels'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Tgc_enableChannelsOutput'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_PinMap_setTomTout'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Timer_setTrigger'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setNotification'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_getSrcPointer'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Tgc_setChannelsForceUpdate'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Tgc_trigger'
	.calls	'IfxGtm_Tom_Timer_initConfig','IfxStdIf_Timer_initConfig'
	.calls	'IfxGtm_Tom_Timer_run','IfxGtm_Tom_Tgc_enableChannels'
	.calls	'IfxGtm_Tom_Timer_setFrequency','IfxGtm_Tom_Timer_setPeriod'
	.calls	'IfxGtm_Tom_Timer_setPeriod','IfxGtm_Tom_Ch_setCompareZeroShadow'
	.calls	'IfxGtm_Tom_Timer_setPeriod','printf'
	.calls	'IfxGtm_Tom_Timer_setSingleMode','IfxGtm_Tom_Ch_setOneShotMode'
	.calls	'IfxGtm_Tom_Timer_setTrigger','IfxGtm_Tom_Ch_setCompareOneShadow'
	.calls	'IfxGtm_Tom_Timer_setTrigger','printf'
	.calls	'IfxGtm_Tom_Timer_stop','IfxGtm_Tom_Tgc_enableChannels'
	.calls	'IfxGtm_Tom_Timer_updateInputFrequency','IfxGtm_Tom_Ch_getClockFrequency'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTimerIrq','.cocofun_7'
	.calls	'IfxGtm_Tom_Timer_init','.cocofun_8'
	.calls	'IfxGtm_Tom_Timer_init','.cocofun_9'
	.calls	'IfxGtm_Tom_Timer_init','.cocofun_10'
	.calls	'IfxGtm_Tom_Timer_init','.cocofun_5'
	.calls	'IfxGtm_Tom_Timer_init','.cocofun_7'
	.calls	'IfxGtm_Tom_Timer_init','.cocofun_6'
	.calls	'IfxGtm_Tom_Timer_setPeriod','.cocofun_7'
	.calls	'IfxGtm_Tom_Timer_setPeriod','.cocofun_5'
	.calls	'IfxGtm_Tom_Timer_setTrigger','.cocofun_5'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTimerIrq','',0
	.calls	'.cocofun_7','',0
	.calls	'IfxGtm_Tom_Timer_acknowledgeTriggerIrq','',0
	.calls	'IfxGtm_Tom_Timer_addToChannelMask','',0
	.calls	'IfxGtm_Tom_Timer_applyUpdate','',0
	.calls	'IfxGtm_Tom_Timer_disableUpdate','',0
	.calls	'IfxGtm_Tom_Timer_getFrequency','',0
	.calls	'IfxGtm_Tom_Timer_getInputFrequency','',0
	.calls	'IfxGtm_Tom_Timer_getOffset','',0
	.calls	'IfxGtm_Tom_Timer_getPeriod','',0
	.calls	'IfxGtm_Tom_Timer_getPointer','',0
	.calls	'IfxGtm_Tom_Timer_getResolution','',0
	.calls	'IfxGtm_Tom_Timer_getTrigger','',0
	.calls	'IfxGtm_Tom_Timer_getTriggerPointer','',0
	.calls	'IfxGtm_Tom_Timer_init','',24
	.calls	'.cocofun_10','',0
	.calls	'.cocofun_9','',0
	.calls	'.cocofun_8','',0
	.calls	'.cocofun_6','',0
	.calls	'.cocofun_5','',0
	.calls	'IfxGtm_Tom_Timer_initConfig','',0
	.calls	'IfxGtm_Tom_Timer_run','',0
	.calls	'IfxGtm_Tom_Timer_setFrequency','',0
	.calls	'IfxGtm_Tom_Timer_setPeriod','',24
	.calls	'IfxGtm_Tom_Timer_setSingleMode','',0
	.calls	'IfxGtm_Tom_Timer_setTrigger','',24
	.calls	'IfxGtm_Tom_Timer_stdIfTimerInit','',0
	.calls	'IfxGtm_Tom_Timer_stop','',0
	.extern	printf
	.extern	verboseLevelStr
	.extern	IfxGtm_Tom_Ch_clearOneNotification
	.extern	IfxGtm_Tom_Ch_clearZeroNotification
	.extern	IfxGtm_Tom_Ch_getClockFrequency
	.extern	IfxGtm_Tom_Ch_getCompareOne
	.extern	IfxGtm_Tom_Ch_getCompareOnePointer
	.extern	IfxGtm_Tom_Ch_getSrcPointer
	.extern	IfxGtm_Tom_Ch_getTgcPointer
	.extern	IfxGtm_Tom_Ch_getTimerPointer
	.extern	IfxGtm_Tom_Ch_isOneNotification
	.extern	IfxGtm_Tom_Ch_isZeroNotification
	.extern	IfxGtm_Tom_Ch_setClockSource
	.extern	IfxGtm_Tom_Ch_setCompareOneShadow
	.extern	IfxGtm_Tom_Ch_setCompareZeroShadow
	.extern	IfxGtm_Tom_Ch_setCounterValue
	.extern	IfxGtm_Tom_Ch_setNotification
	.extern	IfxGtm_Tom_Ch_setOneShotMode
	.extern	IfxGtm_Tom_Ch_setResetSource
	.extern	IfxGtm_Tom_Ch_setSignalLevel
	.extern	IfxGtm_Tom_Ch_setTriggerOutput
	.extern	IfxGtm_Tom_Tgc_buildFeature
	.extern	IfxGtm_Tom_Tgc_enableChannels
	.extern	IfxGtm_Tom_Tgc_enableChannelsOutput
	.extern	IfxGtm_Tom_Tgc_setChannelsForceUpdate
	.extern	IfxGtm_Tom_Tgc_trigger
	.extern	IfxGtm_PinMap_setTomTout
	.extern	IfxStdIf_Timer_initConfig
	.extern	__printf_int
	.extern	__INDIRECT__
	.calls	'IfxGtm_Tom_Timer_updateInputFrequency','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L115:
	.word	79430
	.half	3
	.word	.L116
	.byte	4
.L114:
	.byte	1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L117
	.byte	2
	.byte	'void',0,3
	.word	200
	.byte	4
	.word	206
	.byte	5
	.byte	'unsigned int',0,4,7,6
	.byte	'__ldmst_c',0,3,1,86,17,1,1,7
	.byte	'address',0,1,86,42
	.word	211
	.byte	7
	.byte	'mask',0,1,86,60
	.word	216
	.byte	7
	.byte	'value',0,1,86,75
	.word	216
	.byte	8,0,5
	.byte	'unsigned long long int',0,8,7,4
	.word	200
	.byte	9
	.byte	'__ld64',0,3,1,110,19
	.word	294
	.byte	1,1,7
	.byte	'addr',0,1,110,32
	.word	320
	.byte	8,0,6
	.byte	'__st64',0,3,1,118,17,1,1,7
	.byte	'addr',0,1,118,30
	.word	320
	.byte	7
	.byte	'value',0,1,118,43
	.word	294
	.byte	8,0,5
	.byte	'int',0,4,5
.L272:
	.byte	5
	.byte	'unsigned char',0,1,8
.L281:
	.byte	5
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_P_OUT_Bits',0,3,231,2,16,4,11
	.byte	'P0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,12,3,239,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	447
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,3,129,2,16,4,11
	.byte	'PS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,3,191,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	763
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,3,110,16,4,11
	.byte	'MODREV',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	425
	.byte	16,0,2,35,2,0,12,3,231,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1334
	.byte	4,2,35,0,0,14,4
	.word	408
	.byte	15,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,3,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	408
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	408
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	408
	.byte	5,0,2,35,3,0,12,3,247,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1462
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,3,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	408
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	408
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	408
	.byte	5,0,2,35,3,0,12,3,135,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1677
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,3,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	408
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	408
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	408
	.byte	5,0,2,35,3,0,12,3,143,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1892
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,3,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	408
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	408
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	408
	.byte	5,0,2,35,3,0,12,3,255,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2109
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,3,118,16,4,11
	.byte	'P0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,12,3,239,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2329
	.byte	4,2,35,0,0,14,24
	.word	408
	.byte	15,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,3,160,3,16,4,11
	.byte	'PD0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	408
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	408
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	408
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	408
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,3,135,5,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2652
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,3,181,3,16,4,11
	.byte	'PD8',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	408
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	408
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	408
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	408
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	408
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,3,143,5,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2956
	.byte	4,2,35,0,0,14,8
	.word	408
	.byte	15,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,3,88,16,4,11
	.byte	'EN0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,12,3,223,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3281
	.byte	4,2,35,0,0,14,12
	.word	408
	.byte	15,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,3,138,3,16,4,11
	.byte	'PDIS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,12,3,255,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3621
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,3,253,2,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	425
	.byte	6,7,2,35,0,11
	.byte	'SEL9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	216
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,3,247,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3987
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,3,166,2,16,4,11
	.byte	'PS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	28,0,2,35,0,0,12,3,207,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4198
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,3,187,2,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	216
	.byte	24,0,2,35,0,0,12,3,223,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4345
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,3,198,2,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	216
	.byte	20,0,2,35,0,0,12,3,231,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4514
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,3,176,2,16,4,11
	.byte	'reserved_0',0,2
	.word	425
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,12,3,215,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4686
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,3,192,1,16,4,11
	.byte	'reserved_0',0,2
	.word	425
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	425
	.byte	12,0,2,35,2,0,12,3,159,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4861
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,3,213,1,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	8,0,2,35,3,0,12,3,175,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5035
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,3,224,1,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	408
	.byte	4,0,2,35,3,0,12,3,183,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5209
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,3,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,3,167,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5385
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,3,209,2,16,4,11
	.byte	'PS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,12,3,199,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5541
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,3,235,1,16,4,11
	.byte	'reserved_0',0,2
	.word	425
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,3,151,4,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5874
	.byte	4,2,35,0,0,14,96
	.word	408
	.byte	15,95,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,3,82,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	32,0,2,35,0,0,12,3,215,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6231
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,3,45,16,4,11
	.byte	'EN0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,3,207,3,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6318
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,3,159,5,25,128,2,13
	.byte	'OUT',0
	.word	723
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	1294
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	1413
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	1453
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	1637
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	1852
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	2069
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	2289
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	1453
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	2603
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	2643
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	2916
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	3232
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	3272
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	3572
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3612
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	3947
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	4158
	.byte	4,2,35,100,13
	.byte	'reserved_64',0
	.word	3272
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	4305
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	4474
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	4646
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	4821
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	4995
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	5169
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	5345
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	5501
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	5834
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	6182
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	6222
	.byte	96,3,35,152,1,13
	.byte	'ACCEN1',0
	.word	6278
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	6845
	.byte	4,3,35,252,1,0,3
	.word	6885
	.byte	4
	.word	7418
	.byte	16,2,131,1,9,4,17
	.byte	'IfxPort_State_notChanged',0,0,17
	.byte	'IfxPort_State_high',0,1,17
	.byte	'IfxPort_State_low',0,128,128,4,17
	.byte	'IfxPort_State_toggled',0,129,128,4,0,6
	.byte	'IfxPort_setPinState',0,3,2,143,4,17,1,1,7
	.byte	'port',0,2,143,4,44
	.word	7423
	.byte	7
	.byte	'pinIndex',0,2,143,4,56
	.word	408
	.byte	7
	.byte	'action',0,2,143,4,80
	.word	7428
	.byte	8,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,5,45,16,4,11
	.byte	'SRPN',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'ECC',0,1
	.word	408
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	408
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	408
	.byte	1,0,2,35,3,0,12,5,70,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7609
	.byte	4,2,35,0,0,3
	.word	7899
.L296:
	.byte	4
	.word	7938
	.byte	6
	.byte	'IfxSrc_clearRequest',0,3,4,230,1,17,1,1,7
	.byte	'src',0,4,230,1,60
	.word	7943
	.byte	8,0,6
	.byte	'IfxSrc_enable',0,3,4,248,1,17,1,1,7
	.byte	'src',0,4,248,1,54
	.word	7943
	.byte	8,0,16,6,49,9,1,17
	.byte	'IfxSrc_Tos_cpu0',0,0,17
	.byte	'IfxSrc_Tos_dma',0,1,0
.L300:
	.byte	6
	.byte	'IfxSrc_init',0,3,4,254,1,17,1,1
.L302:
	.byte	7
	.byte	'src',0,4,254,1,52
	.word	7943
.L304:
	.byte	7
	.byte	'typOfService',0,4,254,1,68
	.word	8028
.L306:
	.byte	7
	.byte	'priority',0,4,254,1,95
	.word	425
.L308:
	.byte	18,8,0,0,5
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,9,203,8,16,4,11
	.byte	'HOST_TRIG',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	8146
	.byte	7,24,2,35,0,11
	.byte	'RST_CH0',0,4
	.word	8146
	.byte	1,23,2,35,0,11
	.byte	'RST_CH1',0,4
	.word	8146
	.byte	1,22,2,35,0,11
	.byte	'RST_CH2',0,4
	.word	8146
	.byte	1,21,2,35,0,11
	.byte	'RST_CH3',0,4
	.word	8146
	.byte	1,20,2,35,0,11
	.byte	'RST_CH4',0,4
	.word	8146
	.byte	1,19,2,35,0,11
	.byte	'RST_CH5',0,4
	.word	8146
	.byte	1,18,2,35,0,11
	.byte	'RST_CH6',0,4
	.word	8146
	.byte	1,17,2,35,0,11
	.byte	'RST_CH7',0,4
	.word	8146
	.byte	1,16,2,35,0,11
	.byte	'UPEN_CTRL0',0,4
	.word	8146
	.byte	2,14,2,35,0,11
	.byte	'UPEN_CTRL1',0,4
	.word	8146
	.byte	2,12,2,35,0,11
	.byte	'UPEN_CTRL2',0,4
	.word	8146
	.byte	2,10,2,35,0,11
	.byte	'UPEN_CTRL3',0,4
	.word	8146
	.byte	2,8,2,35,0,11
	.byte	'UPEN_CTRL4',0,4
	.word	8146
	.byte	2,6,2,35,0,11
	.byte	'UPEN_CTRL5',0,4
	.word	8146
	.byte	2,4,2,35,0,11
	.byte	'UPEN_CTRL6',0,4
	.word	8146
	.byte	2,2,2,35,0,11
	.byte	'UPEN_CTRL7',0,4
	.word	8146
	.byte	2,0,2,35,0,0,12,9,244,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8162
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,9,145,8,16,4,11
	.byte	'ACT_TB',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'TB_TRIG',0,4
	.word	8146
	.byte	1,7,2,35,0,11
	.byte	'TBU_SEL',0,4
	.word	8146
	.byte	2,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	8146
	.byte	5,0,2,35,0,0,12,9,212,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8612
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,9,182,8,16,4,11
	.byte	'FUPD_CTRL0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'FUPD_CTRL1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'FUPD_CTRL2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'FUPD_CTRL3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'FUPD_CTRL4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'FUPD_CTRL5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'FUPD_CTRL6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'FUPD_CTRL7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'RSTCN0_CH0',0,4
	.word	8146
	.byte	2,14,2,35,0,11
	.byte	'RSTCN0_CH1',0,4
	.word	8146
	.byte	2,12,2,35,0,11
	.byte	'RSTCN0_CH2',0,4
	.word	8146
	.byte	2,10,2,35,0,11
	.byte	'RSTCN0_CH3',0,4
	.word	8146
	.byte	2,8,2,35,0,11
	.byte	'RSTCN0_CH4',0,4
	.word	8146
	.byte	2,6,2,35,0,11
	.byte	'RSTCN0_CH5',0,4
	.word	8146
	.byte	2,4,2,35,0,11
	.byte	'RSTCN0_CH6',0,4
	.word	8146
	.byte	2,2,2,35,0,11
	.byte	'RSTCN0_CH7',0,4
	.word	8146
	.byte	2,0,2,35,0,0,12,9,236,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8768
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,9,226,8,16,4,11
	.byte	'INT_TRIG0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'INT_TRIG1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'INT_TRIG2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'INT_TRIG3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'INT_TRIG4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'INT_TRIG5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'INT_TRIG6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'INT_TRIG7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,252,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9200
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_CTRL_Bits',0,9,203,7,16,4,11
	.byte	'reserved_0',0,4
	.word	8146
	.byte	11,21,2,35,0,11
	.byte	'SL',0,4
	.word	8146
	.byte	1,20,2,35,0,11
	.byte	'CLK_SRC_SR',0,4
	.word	8146
	.byte	3,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	8146
	.byte	5,12,2,35,0,11
	.byte	'RST_CCU0',0,4
	.word	8146
	.byte	1,11,2,35,0,11
	.byte	'OSM_TRIG',0,4
	.word	8146
	.byte	1,10,2,35,0,11
	.byte	'EXT_TRIG',0,4
	.word	8146
	.byte	1,9,2,35,0,11
	.byte	'EXTTRIGOUT',0,4
	.word	8146
	.byte	1,8,2,35,0,11
	.byte	'TRIGOUT',0,4
	.word	8146
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	8146
	.byte	1,6,2,35,0,11
	.byte	'OSM',0,4
	.word	8146
	.byte	1,5,2,35,0,11
	.byte	'BITREV',0,4
	.word	8146
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	8146
	.byte	4,0,2,35,0,0,12,9,148,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9470
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_SR0_Bits',0,9,252,7,16,4,11
	.byte	'SR0',0,4
	.word	8146
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,188,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9804
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_SR1_Bits',0,9,131,8,16,4,11
	.byte	'SR1',0,4
	.word	8146
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,196,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9914
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_CM0_Bits',0,9,182,7,16,4,11
	.byte	'CM0',0,4
	.word	8146
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,252,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10024
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_CM1_Bits',0,9,189,7,16,4,11
	.byte	'CM1',0,4
	.word	8146
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,132,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10134
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_CN0_Bits',0,9,196,7,16,4,11
	.byte	'CN0',0,4
	.word	8146
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,140,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10244
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_STAT_Bits',0,9,138,8,16,4,11
	.byte	'OL',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	8146
	.byte	31,0,2,35,0,0,12,9,204,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10354
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,9,244,7,16,4,11
	.byte	'CCU0TC',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'CCU1TC',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	30,0,2,35,0,0,12,9,180,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10463
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,9,221,7,16,4,11
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	30,0,2,35,0,0,12,9,156,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10600
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,9,229,7,16,4,11
	.byte	'TRG_CCU0TC0',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'TRG_CCU1TC0',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	30,0,2,35,0,0,12,9,164,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10747
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,9,237,7,16,4,11
	.byte	'IRQ_MODE',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	30,0,2,35,0,0,12,9,172,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10895
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_CH',0,9,164,17,25,48,13
	.byte	'CTRL',0
	.word	9764
	.byte	4,2,35,0,13
	.byte	'SR0',0
	.word	9874
	.byte	4,2,35,4,13
	.byte	'SR1',0
	.word	9984
	.byte	4,2,35,8,13
	.byte	'CM0',0
	.word	10094
	.byte	4,2,35,12,13
	.byte	'CM1',0
	.word	10204
	.byte	4,2,35,16,13
	.byte	'CN0',0
	.word	10314
	.byte	4,2,35,20,13
	.byte	'STAT',0
	.word	10423
	.byte	4,2,35,24,13
	.byte	'IRQ_NOTIFY',0
	.word	10560
	.byte	4,2,35,28,13
	.byte	'IRQ_EN',0
	.word	10707
	.byte	4,2,35,32,13
	.byte	'IRQ_FORCINT',0
	.word	10855
	.byte	4,2,35,36,13
	.byte	'IRQ_MODE',0
	.word	10974
	.byte	4,2,35,40,13
	.byte	'reserved_2C',0
	.word	1453
	.byte	4,2,35,44,0,3
	.word	11014
	.byte	10
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,9,154,8,16,4,11
	.byte	'ENDIS_CTRL0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'ENDIS_CTRL1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'ENDIS_CTRL2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'ENDIS_CTRL3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'ENDIS_CTRL4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'ENDIS_CTRL5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'ENDIS_CTRL6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'ENDIS_CTRL7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,220,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11231
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,9,168,8,16,4,11
	.byte	'ENDIS_STAT0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'ENDIS_STAT1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'ENDIS_STAT2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'ENDIS_STAT3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'ENDIS_STAT4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'ENDIS_STAT5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'ENDIS_STAT6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'ENDIS_STAT7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,228,15,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11519
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,9,240,8,16,4,11
	.byte	'OUTEN_CTRL0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'OUTEN_CTRL1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'OUTEN_CTRL2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'OUTEN_CTRL3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'OUTEN_CTRL4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'OUTEN_CTRL5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'OUTEN_CTRL6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'OUTEN_CTRL7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,132,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11807
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,9,254,8,16,4,11
	.byte	'OUTEN_STAT0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'OUTEN_STAT1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'OUTEN_STAT2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'OUTEN_STAT3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'OUTEN_STAT4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'OUTEN_STAT5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'OUTEN_STAT6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'OUTEN_STAT7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,140,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12095
	.byte	4,2,35,0,0,10
	.byte	'IfxGtm_Tom_TGC',0,8,134,2,8,80,13
	.byte	'GLB_CTRL',0
	.word	8572
	.byte	4,2,35,0,13
	.byte	'ACT_TB',0
	.word	8728
	.byte	4,2,35,4,13
	.byte	'FUPD_CTRL',0
	.word	9160
	.byte	4,2,35,8,13
	.byte	'INT_TRIG',0
	.word	9430
	.byte	4,2,35,12,13
	.byte	'xxxCH1',0
	.word	11226
	.byte	48,2,35,16,13
	.byte	'ENDIS_CTRL',0
	.word	11479
	.byte	4,2,35,64,13
	.byte	'ENDIS_STAT',0
	.word	11767
	.byte	4,2,35,68,13
	.byte	'OUTEN_CTRL',0
	.word	12055
	.byte	4,2,35,72,13
	.byte	'OUTEN_STAT',0
	.word	12343
	.byte	4,2,35,76,0,3
	.word	12383
	.byte	4
	.word	12572
.L263:
	.byte	5
	.byte	'unsigned long int',0,4,7
.L328:
	.byte	6
	.byte	'IfxGtm_Tom_Tgc_writeGlobalControl',0,3,7,231,3,17,1,1
.L330:
	.byte	7
	.byte	'tgc',0,7,231,3,68
	.word	12577
.L332:
	.byte	7
	.byte	'control',0,7,231,3,80
	.word	12582
.L334:
	.byte	8,0
.L342:
	.byte	5
	.byte	'float',0,4,4,19
	.byte	'IfxStdIf_InterfaceDriver',0,11,97,15
	.word	320
	.byte	20
	.word	12677
	.byte	1,1,21
	.word	320
	.byte	0,4
	.word	12719
	.byte	19
	.byte	'IfxStdIf_Timer_GetFrequency',0,10,82,19
	.word	12732
	.byte	20
	.word	12582
	.byte	1,1,21
	.word	320
	.byte	0,4
	.word	12773
	.byte	19
	.byte	'IfxStdIf_Timer_GetPeriod',0,10,88,26
	.word	12786
	.byte	19
	.byte	'IfxStdIf_Timer_GetResolution',0,10,94,19
	.word	12732
	.byte	19
	.byte	'IfxStdIf_Timer_GetTrigger',0,10,100,26
	.word	12786
	.byte	20
	.word	408
	.byte	1,1,21
	.word	320
	.byte	21
	.word	12677
	.byte	0,4
	.word	12895
	.byte	19
	.byte	'IfxStdIf_Timer_SetFrequency',0,10,108,19
	.word	12913
	.byte	22,1,1,21
	.word	320
	.byte	0,4
	.word	12954
	.byte	19
	.byte	'IfxStdIf_Timer_UpdateInputFrequency',0,10,114,16
	.word	12963
	.byte	19
	.byte	'IfxStdIf_Timer_ApplyUpdate',0,10,135,1,16
	.word	12963
	.byte	19
	.byte	'IfxStdIf_Timer_DisableUpdate',0,10,152,1,16
	.word	12963
	.byte	19
	.byte	'IfxStdIf_Timer_GetInputFrequency',0,10,158,1,19
	.word	12732
	.byte	19
	.byte	'IfxStdIf_Timer_Run',0,10,167,1,16
	.word	12963
	.byte	20
	.word	408
	.byte	1,1,21
	.word	320
	.byte	21
	.word	12582
	.byte	0,4
	.word	13156
	.byte	19
	.byte	'IfxStdIf_Timer_SetPeriod',0,10,177,1,19
	.word	13174
	.byte	22,1,1,21
	.word	320
	.byte	21
	.word	408
	.byte	0,4
	.word	13213
	.byte	19
	.byte	'IfxStdIf_Timer_SetSingleMode',0,10,186,1,16
	.word	13227
	.byte	22,1,1,21
	.word	320
	.byte	21
	.word	12582
	.byte	0,4
	.word	13270
	.byte	19
	.byte	'IfxStdIf_Timer_SetTrigger',0,10,198,1,16
	.word	13284
	.byte	19
	.byte	'IfxStdIf_Timer_Stop',0,10,204,1,16
	.word	12963
	.byte	20
	.word	408
	.byte	1,1,21
	.word	320
	.byte	0,4
	.word	13353
	.byte	19
	.byte	'IfxStdIf_Timer_AckTimerIrq',0,10,210,1,19
	.word	13366
	.byte	19
	.byte	'IfxStdIf_Timer_AckTriggerIrq',0,10,216,1,19
	.word	13366
	.byte	10
	.byte	'IfxStdIf_Timer_',0,10,220,1,8,68,13
	.byte	'driver',0
	.word	12686
	.byte	4,2,35,0,13
	.byte	'getFrequency',0
	.word	12737
	.byte	4,2,35,4,13
	.byte	'getPeriod',0
	.word	12791
	.byte	4,2,35,8,13
	.byte	'getResolution',0
	.word	12824
	.byte	4,2,35,12,13
	.byte	'getTrigger',0
	.word	12861
	.byte	4,2,35,16,13
	.byte	'setFrequency',0
	.word	12918
	.byte	4,2,35,20,13
	.byte	'updateInputFrequency',0
	.word	12968
	.byte	4,2,35,24,13
	.byte	'applyUpdate',0
	.word	13012
	.byte	4,2,35,28,13
	.byte	'disableUpdate',0
	.word	13048
	.byte	4,2,35,32,13
	.byte	'getInputFrequency',0
	.word	13086
	.byte	4,2,35,36,13
	.byte	'run',0
	.word	13128
	.byte	4,2,35,40,13
	.byte	'setPeriod',0
	.word	13179
	.byte	4,2,35,44,13
	.byte	'setSingleMode',0
	.word	13232
	.byte	4,2,35,48,13
	.byte	'setTrigger',0
	.word	13289
	.byte	4,2,35,52,13
	.byte	'stop',0
	.word	13324
	.byte	4,2,35,56,13
	.byte	'ackTimerIrq',0
	.word	13371
	.byte	4,2,35,60,13
	.byte	'ackTriggerIrq',0
	.word	13407
	.byte	4,2,35,64,0
.L372:
	.byte	4
	.word	13445
	.byte	9
	.byte	'IfxStdIf_Timer_getInputFrequency',0,3,10,198,2,20
	.word	12677
	.byte	1,1,7
	.byte	'stdIf',0,10,198,2,69
	.word	13824
	.byte	8,0,4
	.word	200
	.byte	4
	.word	12719
	.byte	4
	.word	12773
	.byte	4
	.word	12719
	.byte	4
	.word	12773
	.byte	4
	.word	12895
	.byte	4
	.word	12954
	.byte	4
	.word	12954
	.byte	4
	.word	12954
	.byte	4
	.word	12719
	.byte	4
	.word	12954
	.byte	4
	.word	13156
	.byte	4
	.word	13213
	.byte	4
	.word	13270
	.byte	4
	.word	12954
	.byte	4
	.word	13353
	.byte	4
	.word	13353
	.byte	9
	.byte	'IfxStdIf_Timer_tickToS',0,3,10,130,3,20
	.word	12677
	.byte	1,1,7
	.byte	'clockFreq',0,10,130,3,51
	.word	12677
	.byte	7
	.byte	'ticks',0,10,130,3,77
	.word	12582
	.byte	8,0
.L284:
	.byte	9
	.byte	'IfxStdIf_Timer_sToTick',0,3,10,141,3,27
	.word	12582
	.byte	1,1
.L287:
	.byte	7
	.byte	'clockFreq',0,10,141,3,58
	.word	12677
.L289:
	.byte	7
	.byte	'seconds',0,10,141,3,77
	.word	12677
.L291:
	.byte	8,0,5
	.byte	'char',0,1,6,23
	.word	14120
	.byte	4
	.word	14128
	.byte	24
	.word	14133
	.byte	25
	.byte	'printf',0,12,143,1,16
	.word	401
	.byte	1,1,1,1,26,12,143,1,38
	.word	14138
	.byte	27,12,143,1,50,0,28
	.word	232
	.byte	29
	.word	249
	.byte	29
	.word	265
	.byte	29
	.word	278
	.byte	8,0,28
	.word	325
	.byte	29
	.word	343
	.byte	8,0,28
	.word	358
	.byte	29
	.word	372
	.byte	29
	.word	385
	.byte	8,0,28
	.word	7531
	.byte	29
	.word	7559
	.byte	29
	.word	7573
	.byte	29
	.word	7591
	.byte	8,0,28
	.word	7948
	.byte	29
	.word	7976
	.byte	8,0,28
	.word	7991
	.byte	29
	.word	8013
	.byte	8,0,28
	.word	8069
	.byte	29
	.word	8089
	.byte	29
	.word	8102
	.byte	29
	.word	8124
	.byte	18,30
	.word	7948
	.byte	29
	.word	7976
	.byte	31
	.word	7989
	.byte	0,8,0,0,3
	.word	11014
	.byte	3
	.word	11014
	.byte	3
	.word	11014
	.byte	14,16
	.word	408
	.byte	15,15,0,3
	.word	11014
	.byte	3
	.word	11014
	.byte	3
	.word	11014
	.byte	3
	.word	11014
	.byte	3
	.word	11014
	.byte	3
	.word	11014
	.byte	10
	.byte	'_Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,9,198,9,16,4,11
	.byte	'HOST_TRIG',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	8146
	.byte	7,24,2,35,0,11
	.byte	'RST_CH0',0,4
	.word	8146
	.byte	1,23,2,35,0,11
	.byte	'RST_CH1',0,4
	.word	8146
	.byte	1,22,2,35,0,11
	.byte	'RST_CH2',0,4
	.word	8146
	.byte	1,21,2,35,0,11
	.byte	'RST_CH3',0,4
	.word	8146
	.byte	1,20,2,35,0,11
	.byte	'RST_CH4',0,4
	.word	8146
	.byte	1,19,2,35,0,11
	.byte	'RST_CH5',0,4
	.word	8146
	.byte	1,18,2,35,0,11
	.byte	'RST_CH6',0,4
	.word	8146
	.byte	1,17,2,35,0,11
	.byte	'RST_CH7',0,4
	.word	8146
	.byte	1,16,2,35,0,11
	.byte	'UPEN_CTRL0',0,4
	.word	8146
	.byte	2,14,2,35,0,11
	.byte	'UPEN_CTRL1',0,4
	.word	8146
	.byte	2,12,2,35,0,11
	.byte	'UPEN_CTRL2',0,4
	.word	8146
	.byte	2,10,2,35,0,11
	.byte	'UPEN_CTRL3',0,4
	.word	8146
	.byte	2,8,2,35,0,11
	.byte	'UPEN_CTRL4',0,4
	.word	8146
	.byte	2,6,2,35,0,11
	.byte	'UPEN_CTRL5',0,4
	.word	8146
	.byte	2,4,2,35,0,11
	.byte	'UPEN_CTRL6',0,4
	.word	8146
	.byte	2,2,2,35,0,11
	.byte	'UPEN_CTRL7',0,4
	.word	8146
	.byte	2,0,2,35,0,0,12,9,180,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14369
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,9,140,9,16,4,11
	.byte	'ACT_TB',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'TB_TRIG',0,4
	.word	8146
	.byte	1,7,2,35,0,11
	.byte	'TBU_SEL',0,4
	.word	8146
	.byte	2,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	8146
	.byte	5,0,2,35,0,0,12,9,148,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14819
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,9,177,9,16,4,11
	.byte	'FUPD_CTRL0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'FUPD_CTRL1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'FUPD_CTRL2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'FUPD_CTRL3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'FUPD_CTRL4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'FUPD_CTRL5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'FUPD_CTRL6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'FUPD_CTRL7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'RSTCN0_CH0',0,4
	.word	8146
	.byte	2,14,2,35,0,11
	.byte	'RSTCN0_CH1',0,4
	.word	8146
	.byte	2,12,2,35,0,11
	.byte	'RSTCN0_CH2',0,4
	.word	8146
	.byte	2,10,2,35,0,11
	.byte	'RSTCN0_CH3',0,4
	.word	8146
	.byte	2,8,2,35,0,11
	.byte	'RSTCN0_CH4',0,4
	.word	8146
	.byte	2,6,2,35,0,11
	.byte	'RSTCN0_CH5',0,4
	.word	8146
	.byte	2,4,2,35,0,11
	.byte	'RSTCN0_CH6',0,4
	.word	8146
	.byte	2,2,2,35,0,11
	.byte	'RSTCN0_CH7',0,4
	.word	8146
	.byte	2,0,2,35,0,0,12,9,172,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14975
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,9,221,9,16,4,11
	.byte	'INT_TRIG0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'INT_TRIG1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'INT_TRIG2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'INT_TRIG3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'INT_TRIG4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'INT_TRIG5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'INT_TRIG6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'INT_TRIG7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,188,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15407
	.byte	4,2,35,0,0,3
	.word	11014
	.byte	10
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,9,149,9,16,4,11
	.byte	'ENDIS_CTRL0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'ENDIS_CTRL1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'ENDIS_CTRL2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'ENDIS_CTRL3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'ENDIS_CTRL4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'ENDIS_CTRL5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'ENDIS_CTRL6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'ENDIS_CTRL7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,156,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15682
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,9,163,9,16,4,11
	.byte	'ENDIS_STAT0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'ENDIS_STAT1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'ENDIS_STAT2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'ENDIS_STAT3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'ENDIS_STAT4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'ENDIS_STAT5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'ENDIS_STAT6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'ENDIS_STAT7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,164,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15970
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,9,235,9,16,4,11
	.byte	'OUTEN_CTRL0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'OUTEN_CTRL1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'OUTEN_CTRL2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'OUTEN_CTRL3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'OUTEN_CTRL4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'OUTEN_CTRL5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'OUTEN_CTRL6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'OUTEN_CTRL7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,196,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16258
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,9,249,9,16,4,11
	.byte	'OUTEN_STAT0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'OUTEN_STAT1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'OUTEN_STAT2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'OUTEN_STAT3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'OUTEN_STAT4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'OUTEN_STAT5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'OUTEN_STAT6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'OUTEN_STAT7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,204,16,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16546
	.byte	4,2,35,0,0,3
	.word	11014
	.byte	3
	.word	11014
	.byte	3
	.word	11014
	.byte	3
	.word	11014
	.byte	3
	.word	11014
	.byte	3
	.word	11014
	.byte	14,144,8
	.word	408
	.byte	15,143,8,0,10
	.byte	'_Ifx_GTM_TOM',0,9,153,18,25,128,16,13
	.byte	'CH0',0
	.word	14315
	.byte	48,2,35,0,13
	.byte	'TGC0_GLB_CTRL',0
	.word	8572
	.byte	4,2,35,48,13
	.byte	'TGC0_ACT_TB',0
	.word	8728
	.byte	4,2,35,52,13
	.byte	'TGC0_FUPD_CTRL',0
	.word	9160
	.byte	4,2,35,56,13
	.byte	'TGC0_INT_TRIG',0
	.word	9430
	.byte	4,2,35,60,13
	.byte	'CH1',0
	.word	14320
	.byte	48,2,35,64,13
	.byte	'TGC0_ENDIS_CTRL',0
	.word	11479
	.byte	4,2,35,112,13
	.byte	'TGC0_ENDIS_STAT',0
	.word	11767
	.byte	4,2,35,116,13
	.byte	'TGC0_OUTEN_CTRL',0
	.word	12055
	.byte	4,2,35,120,13
	.byte	'TGC0_OUTEN_STAT',0
	.word	12343
	.byte	4,2,35,124,13
	.byte	'CH2',0
	.word	14325
	.byte	48,3,35,128,1,13
	.byte	'reserved_B0',0
	.word	14330
	.byte	16,3,35,176,1,13
	.byte	'CH3',0
	.word	14339
	.byte	48,3,35,192,1,13
	.byte	'reserved_F0',0
	.word	14330
	.byte	16,3,35,240,1,13
	.byte	'CH4',0
	.word	14344
	.byte	48,3,35,128,2,13
	.byte	'reserved_130',0
	.word	14330
	.byte	16,3,35,176,2,13
	.byte	'CH5',0
	.word	14349
	.byte	48,3,35,192,2,13
	.byte	'reserved_170',0
	.word	14330
	.byte	16,3,35,240,2,13
	.byte	'CH6',0
	.word	14354
	.byte	48,3,35,128,3,13
	.byte	'reserved_1B0',0
	.word	14330
	.byte	16,3,35,176,3,13
	.byte	'CH7',0
	.word	14359
	.byte	48,3,35,192,3,13
	.byte	'reserved_1F0',0
	.word	14330
	.byte	16,3,35,240,3,13
	.byte	'CH8',0
	.word	14364
	.byte	48,3,35,128,4,13
	.byte	'TGC1_GLB_CTRL',0
	.word	14779
	.byte	4,3,35,176,4,13
	.byte	'TGC1_ACT_TB',0
	.word	14935
	.byte	4,3,35,180,4,13
	.byte	'TGC1_FUPD_CTRL',0
	.word	15367
	.byte	4,3,35,184,4,13
	.byte	'TGC1_INT_TRIG',0
	.word	15637
	.byte	4,3,35,188,4,13
	.byte	'CH9',0
	.word	15677
	.byte	48,3,35,192,4,13
	.byte	'TGC1_ENDIS_CTRL',0
	.word	15930
	.byte	4,3,35,240,4,13
	.byte	'TGC1_ENDIS_STAT',0
	.word	16218
	.byte	4,3,35,244,4,13
	.byte	'TGC1_OUTEN_CTRL',0
	.word	16506
	.byte	4,3,35,248,4,13
	.byte	'TGC1_OUTEN_STAT',0
	.word	16794
	.byte	4,3,35,252,4,13
	.byte	'CH10',0
	.word	16834
	.byte	48,3,35,128,5,13
	.byte	'reserved_2B0',0
	.word	14330
	.byte	16,3,35,176,5,13
	.byte	'CH11',0
	.word	16839
	.byte	48,3,35,192,5,13
	.byte	'reserved_2F0',0
	.word	14330
	.byte	16,3,35,240,5,13
	.byte	'CH12',0
	.word	16844
	.byte	48,3,35,128,6,13
	.byte	'reserved_330',0
	.word	14330
	.byte	16,3,35,176,6,13
	.byte	'CH13',0
	.word	16849
	.byte	48,3,35,192,6,13
	.byte	'reserved_370',0
	.word	14330
	.byte	16,3,35,240,6,13
	.byte	'CH14',0
	.word	16854
	.byte	48,3,35,128,7,13
	.byte	'reserved_3B0',0
	.word	14330
	.byte	16,3,35,176,7,13
	.byte	'CH15',0
	.word	16859
	.byte	48,3,35,192,7,13
	.byte	'reserved_3F0',0
	.word	16864
	.byte	144,8,3,35,240,7,0,3
	.word	16875
	.byte	4
	.word	17789
.L293:
	.byte	16,8,223,1,9,1,17
	.byte	'IfxGtm_Tom_Ch_none',0,127,17
	.byte	'IfxGtm_Tom_Ch_0',0,0,17
	.byte	'IfxGtm_Tom_Ch_1',0,1,17
	.byte	'IfxGtm_Tom_Ch_2',0,2,17
	.byte	'IfxGtm_Tom_Ch_3',0,3,17
	.byte	'IfxGtm_Tom_Ch_4',0,4,17
	.byte	'IfxGtm_Tom_Ch_5',0,5,17
	.byte	'IfxGtm_Tom_Ch_6',0,6,17
	.byte	'IfxGtm_Tom_Ch_7',0,7,17
	.byte	'IfxGtm_Tom_Ch_8',0,8,17
	.byte	'IfxGtm_Tom_Ch_9',0,9,17
	.byte	'IfxGtm_Tom_Ch_10',0,10,17
	.byte	'IfxGtm_Tom_Ch_11',0,11,17
	.byte	'IfxGtm_Tom_Ch_12',0,12,17
	.byte	'IfxGtm_Tom_Ch_13',0,13,17
	.byte	'IfxGtm_Tom_Ch_14',0,14,17
	.byte	'IfxGtm_Tom_Ch_15',0,15,0,32
	.byte	'IfxGtm_Tom_Ch_clearOneNotification',0,7,107,17,1,1,1,1,7
	.byte	'tom',0,7,107,65
	.word	17794
	.byte	7
	.byte	'channel',0,7,107,84
	.word	17799
	.byte	0,32
	.byte	'IfxGtm_Tom_Ch_clearZeroNotification',0,7,114,17,1,1,1,1,7
	.byte	'tom',0,7,114,66
	.word	17794
	.byte	7
	.byte	'channel',0,7,114,85
	.word	17799
	.byte	0,10
	.byte	'_Ifx_GTM_REV_Bits',0,9,151,5,16,4,11
	.byte	'STEP',0,4
	.word	8146
	.byte	8,24,2,35,0,11
	.byte	'NO',0,4
	.word	8146
	.byte	4,20,2,35,0,11
	.byte	'MINOR',0,4
	.word	8146
	.byte	4,16,2,35,0,11
	.byte	'MAJOR',0,4
	.word	8146
	.byte	4,12,2,35,0,11
	.byte	'DEV_CODE0',0,4
	.word	8146
	.byte	4,8,2,35,0,11
	.byte	'DEV_CODE1',0,4
	.word	8146
	.byte	4,4,2,35,0,11
	.byte	'DEV_CODE2',0,4
	.word	8146
	.byte	4,0,2,35,0,0,12,9,148,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18266
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_RST_Bits',0,9,163,5,16,4,11
	.byte	'RST',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	8146
	.byte	31,0,2,35,0,0,12,9,156,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18458
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CTRL_Bits',0,9,236,1,16,4,11
	.byte	'RF_PROT',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'TO_MODE',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'TO_VAL',0,4
	.word	8146
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	8146
	.byte	23,0,2,35,0,0,12,9,156,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18560
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_AEI_ADDR_XPT_Bits',0,9,108,16,4,11
	.byte	'TO_ADDR',0,4
	.word	8146
	.byte	20,12,2,35,0,11
	.byte	'TO_W1R0',0,4
	.word	8146
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	8146
	.byte	11,0,2,35,0,0,12,9,172,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18726
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_IRQ_NOTIFY_Bits',0,9,174,4,16,4,11
	.byte	'AEI_TO_XPT',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'AEI_USP_ADDR',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'AEI_IM_ADDR',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'AEI_USP_BE',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	8146
	.byte	28,0,2,35,0,0,12,9,188,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18860
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_IRQ_EN_Bits',0,9,147,4,16,4,11
	.byte	'AEI_TO_XPT_IRQ_EN',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'AEI_USP_ADDR_IRQ_EN',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'AEI_IM_ADDR_IRQ_EN',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'AEI_USP_BE_IRQ_EN',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	8146
	.byte	28,0,2,35,0,0,12,9,164,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19045
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_IRQ_FORCINT_Bits',0,9,157,4,16,4,11
	.byte	'TRG_AEI_TO_XPT',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'TRG_AEI_USP_ADDR',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'TRG_AEI_IM_ADDR',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'TRG_AEI_USP_BE',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	8146
	.byte	28,0,2,35,0,0,12,9,172,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19254
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_IRQ_MODE_Bits',0,9,167,4,16,4,11
	.byte	'IRQ_MODE',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	30,0,2,35,0,0,12,9,180,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19456
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_EIRQ_EN_Bits',0,9,250,2,16,4,11
	.byte	'AEI_TO_XPT_EIRQ_EN',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'AEI_USP_ADDR_EIRQ_EN',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'AEI_IM_ADDR_EIRQ_EN',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'AEI_USP_BE_EIRQ_EN',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	8146
	.byte	28,0,2,35,0,0,12,9,212,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19568
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_HW_CONF_Bits',0,9,132,3,16,4,11
	.byte	'GRSTEN',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'BRIDGE_MODE_RST',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'AEI_IN',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	8146
	.byte	5,24,2,35,0,11
	.byte	'TOM_OUT_RST',0,4
	.word	8146
	.byte	1,23,2,35,0,11
	.byte	'TOM_TRIG_CHAIN',0,4
	.word	8146
	.byte	3,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	8146
	.byte	4,16,2,35,0,11
	.byte	'IRQ_MODE_LEVEL',0,4
	.word	8146
	.byte	1,15,2,35,0,11
	.byte	'IRQ_MODE_PULSE',0,4
	.word	8146
	.byte	1,14,2,35,0,11
	.byte	'IRQ_MODE_PULSE_NOTIFY',0,4
	.word	8146
	.byte	1,13,2,35,0,11
	.byte	'IRQ_MODE_SINGLE_PULSE',0,4
	.word	8146
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	8146
	.byte	12,0,2,35,0,0,12,9,220,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19782
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_BRIDGE_MODE_Bits',0,9,116,16,4,11
	.byte	'BRG_MODE',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'MSK_WR_RSP',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	6,24,2,35,0,11
	.byte	'MODE_UP_PGR',0,4
	.word	8146
	.byte	1,23,2,35,0,11
	.byte	'BUFF_OVL',0,4
	.word	8146
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'SYNC_INPUT_REG',0,4
	.word	8146
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	8146
	.byte	3,16,2,35,0,11
	.byte	'BRG_RST',0,4
	.word	8146
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	8146
	.byte	7,8,2,35,0,11
	.byte	'BUFF_DPT',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,180,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20149
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_BRIDGE_PTR1_Bits',0,9,132,1,16,4,11
	.byte	'NEW_TRAN_PTR',0,4
	.word	8146
	.byte	5,27,2,35,0,11
	.byte	'FIRST_RSP_PTR',0,4
	.word	8146
	.byte	5,22,2,35,0,11
	.byte	'TRAN_IN_PGR',0,4
	.word	8146
	.byte	5,17,2,35,0,11
	.byte	'ABT_TRAN_PGR',0,4
	.word	8146
	.byte	5,12,2,35,0,11
	.byte	'FBC',0,4
	.word	8146
	.byte	6,6,2,35,0,11
	.byte	'RSP_TRAN_RDY',0,4
	.word	8146
	.byte	6,0,2,35,0,0,12,9,188,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20462
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_BRIDGE_PTR2_Bits',0,9,143,1,16,4,11
	.byte	'TRAN_IN_PGR2',0,4
	.word	8146
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	8146
	.byte	27,0,2,35,0,0,12,9,196,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20670
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_BRIDGE',0,9,191,17,25,12,13
	.byte	'MODE',0
	.word	20422
	.byte	4,2,35,0,13
	.byte	'PTR1',0
	.word	20630
	.byte	4,2,35,4,13
	.byte	'PTR2',0
	.word	20749
	.byte	4,2,35,8,0,3
	.word	20789
	.byte	10
	.byte	'_Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,9,224,5,16,4,11
	.byte	'SRC_CH0',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'SRC_CH1',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'SRC_CH2',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'SRC_CH3',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'SRC_CH4',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'SRC_CH5',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'SRC_CH6',0,4
	.word	8146
	.byte	1,25,2,35,0,11
	.byte	'SRC_CH7',0,4
	.word	8146
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	8146
	.byte	24,0,2,35,0,0,12,9,220,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20859
	.byte	4,2,35,0,0,14,4
	.word	21069
	.byte	15,0,0,14,188,1
	.word	408
	.byte	15,187,1,0,10
	.byte	'_Ifx_GTM_TBU_CHEN_Bits',0,9,215,5,16,4,11
	.byte	'ENDIS_CH0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'ENDIS_CH1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'ENDIS_CH2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	8146
	.byte	26,0,2,35,0,0,12,9,212,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21129
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH0_CTRL_Bits',0,9,177,5,16,4,11
	.byte	'LOW_RES',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'CH_CLK_SRC',0,4
	.word	8146
	.byte	3,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	8146
	.byte	28,0,2,35,0,0,12,9,172,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21284
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH0_BASE_Bits',0,9,170,5,16,4,11
	.byte	'BASE',0,4
	.word	8146
	.byte	27,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	8146
	.byte	5,0,2,35,0,0,12,9,164,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21421
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH1_CTRL_Bits',0,9,192,5,16,4,11
	.byte	'CH_MODE',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'CH_CLK_SRC',0,4
	.word	8146
	.byte	3,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	8146
	.byte	28,0,2,35,0,0,12,9,188,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21534
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH1_BASE_Bits',0,9,185,5,16,4,11
	.byte	'BASE',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,180,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21671
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH2_CTRL_Bits',0,9,207,5,16,4,11
	.byte	'CH_MODE',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'CH_CLK_SRC',0,4
	.word	8146
	.byte	3,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	8146
	.byte	28,0,2,35,0,0,12,9,204,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21784
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU_CH2_BASE_Bits',0,9,200,5,16,4,11
	.byte	'BASE',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,196,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21921
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TBU',0,9,246,17,25,28,13
	.byte	'CHEN',0
	.word	21244
	.byte	4,2,35,0,13
	.byte	'CH0_CTRL',0
	.word	21381
	.byte	4,2,35,4,13
	.byte	'CH0_BASE',0
	.word	21494
	.byte	4,2,35,8,13
	.byte	'CH1_CTRL',0
	.word	21631
	.byte	4,2,35,12,13
	.byte	'CH1_BASE',0
	.word	21744
	.byte	4,2,35,16,13
	.byte	'CH2_CTRL',0
	.word	21881
	.byte	4,2,35,20,13
	.byte	'CH2_BASE',0
	.word	21994
	.byte	4,2,35,24,0,3
	.word	22034
	.byte	14,228,3
	.word	408
	.byte	15,227,3,0,10
	.byte	'_Ifx_GTM_CMU_CLK_EN_Bits',0,9,183,1,16,4,11
	.byte	'EN_CLK0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'EN_CLK1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'EN_CLK2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'EN_CLK3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'EN_CLK4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'EN_CLK5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'EN_CLK6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'EN_CLK7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'EN_ECLK0',0,4
	.word	8146
	.byte	2,14,2,35,0,11
	.byte	'EN_ECLK1',0,4
	.word	8146
	.byte	2,12,2,35,0,11
	.byte	'EN_ECLK2',0,4
	.word	8146
	.byte	2,10,2,35,0,11
	.byte	'EN_FXCLK',0,4
	.word	8146
	.byte	2,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,236,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22192
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_GCLK_NUM_Bits',0,9,229,1,16,4,11
	.byte	'GCLK_NUM',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,148,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22519
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_GCLK_DEN_Bits',0,9,222,1,16,4,11
	.byte	'GCLK_DEN',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,140,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22636
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,9,160,1,16,4,11
	.byte	'CLK_CNT',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,212,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22753
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_CLK0_5',0,9,220,16,25,4,13
	.byte	'CTRL',0
	.word	22832
	.byte	4,2,35,0,0,14,24
	.word	22872
	.byte	15,5,0,3
	.word	22913
	.byte	10
	.byte	'_Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,9,167,1,16,4,11
	.byte	'CLK_CNT',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'CLK6_SEL',0,4
	.word	8146
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	8146
	.byte	7,0,2,35,0,0,12,9,220,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22927
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_CLK_6',0,9,226,16,25,4,13
	.byte	'CTRL',0
	.word	23025
	.byte	4,2,35,0,0,3
	.word	23065
	.byte	10
	.byte	'_Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,9,175,1,16,4,11
	.byte	'CLK_CNT',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'CLK7_SEL',0,4
	.word	8146
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	8146
	.byte	7,0,2,35,0,0,12,9,228,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23110
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_CLK_7',0,9,232,16,25,4,13
	.byte	'CTRL',0
	.word	23208
	.byte	4,2,35,0,0,3
	.word	23248
	.byte	10
	.byte	'_Ifx_GTM_CMU_ECLK_NUM_Bits',0,9,208,1,16,4,11
	.byte	'ECLK_NUM',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,252,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23293
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_ECLK_DEN_Bits',0,9,201,1,16,4,11
	.byte	'ECLK_DEN',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,244,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23410
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_ECLK',0,9,238,16,25,8,13
	.byte	'NUM',0
	.word	23370
	.byte	4,2,35,0,13
	.byte	'DEN',0
	.word	23487
	.byte	4,2,35,4,0,14,24
	.word	23527
	.byte	15,2,0,3
	.word	23578
	.byte	10
	.byte	'_Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,9,215,1,16,4,11
	.byte	'FXCLK_SEL',0,4
	.word	8146
	.byte	4,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	8146
	.byte	28,0,2,35,0,0,12,9,132,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23592
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_CMU_FXCLK',0,9,245,16,25,4,13
	.byte	'CTRL',0
	.word	23671
	.byte	4,2,35,0,0,3
	.word	23711
	.byte	10
	.byte	'_Ifx_GTM_CMU',0,9,199,17,25,72,13
	.byte	'CLK_EN',0
	.word	22479
	.byte	4,2,35,0,13
	.byte	'GCLK_NUM',0
	.word	22596
	.byte	4,2,35,4,13
	.byte	'GCLK_DEN',0
	.word	22713
	.byte	4,2,35,8,13
	.byte	'CLK0_5',0
	.word	22922
	.byte	24,2,35,12,13
	.byte	'CLK_6',0
	.word	23105
	.byte	4,2,35,36,13
	.byte	'CLK_7',0
	.word	23288
	.byte	4,2,35,40,13
	.byte	'ECLK',0
	.word	23587
	.byte	24,2,35,44,13
	.byte	'FXCLK',0
	.word	23751
	.byte	4,2,35,68,0,3
	.word	23756
	.byte	14,184,5
	.word	408
	.byte	15,183,5,0,10
	.byte	'_Ifx_GTM_ICM_IRQG_0_Bits',0,9,149,3,16,4,11
	.byte	'reserved_0',0,4
	.word	8146
	.byte	4,28,2,35,0,11
	.byte	'AEI_IRQ',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	8146
	.byte	27,0,2,35,0,0,12,9,228,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23919
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ICM_IRQG_2_Bits',0,9,157,3,16,4,11
	.byte	'TIM0_CH0_IRQ',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'TIM0_CH1_IRQ',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'TIM0_CH2_IRQ',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'TIM0_CH3_IRQ',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'TIM0_CH4_IRQ',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'TIM0_CH5_IRQ',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'TIM0_CH6_IRQ',0,4
	.word	8146
	.byte	1,25,2,35,0,11
	.byte	'TIM0_CH7_IRQ',0,4
	.word	8146
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	8146
	.byte	24,0,2,35,0,0,12,9,236,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24054
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ICM_IRQG_6_Bits',0,9,171,3,16,4,11
	.byte	'TOM0_CH0_IRQ',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'TOM0_CH1_IRQ',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'TOM0_CH2_IRQ',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'TOM0_CH3_IRQ',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'TOM0_CH4_IRQ',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'TOM0_CH5_IRQ',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'TOM0_CH6_IRQ',0,4
	.word	8146
	.byte	1,25,2,35,0,11
	.byte	'TOM0_CH7_IRQ',0,4
	.word	8146
	.byte	1,24,2,35,0,11
	.byte	'TOM0_CH8_IRQ',0,4
	.word	8146
	.byte	1,23,2,35,0,11
	.byte	'TOM0_CH9_IRQ',0,4
	.word	8146
	.byte	1,22,2,35,0,11
	.byte	'TOM0_CH10_IRQ',0,4
	.word	8146
	.byte	1,21,2,35,0,11
	.byte	'TOM0_CH11_IRQ',0,4
	.word	8146
	.byte	1,20,2,35,0,11
	.byte	'TOM0_CH12_IRQ',0,4
	.word	8146
	.byte	1,19,2,35,0,11
	.byte	'TOM0_CH13_IRQ',0,4
	.word	8146
	.byte	1,18,2,35,0,11
	.byte	'TOM0_CH14_IRQ',0,4
	.word	8146
	.byte	1,17,2,35,0,11
	.byte	'TOM0_CH15_IRQ',0,4
	.word	8146
	.byte	1,16,2,35,0,11
	.byte	'TOM1_CH0_IRQ',0,4
	.word	8146
	.byte	1,15,2,35,0,11
	.byte	'TOM1_CH1_IRQ',0,4
	.word	8146
	.byte	1,14,2,35,0,11
	.byte	'TOM1_CH2_IRQ',0,4
	.word	8146
	.byte	1,13,2,35,0,11
	.byte	'TOM1_CH3_IRQ',0,4
	.word	8146
	.byte	1,12,2,35,0,11
	.byte	'TOM1_CH4_IRQ',0,4
	.word	8146
	.byte	1,11,2,35,0,11
	.byte	'TOM1_CH5_IRQ',0,4
	.word	8146
	.byte	1,10,2,35,0,11
	.byte	'TOM1_CH6_IRQ',0,4
	.word	8146
	.byte	1,9,2,35,0,11
	.byte	'TOM1_CH7_IRQ',0,4
	.word	8146
	.byte	1,8,2,35,0,11
	.byte	'TOM1_CH8_IRQ',0,4
	.word	8146
	.byte	1,7,2,35,0,11
	.byte	'TOM1_CH9_IRQ',0,4
	.word	8146
	.byte	1,6,2,35,0,11
	.byte	'TOM1_CH10_IRQ',0,4
	.word	8146
	.byte	1,5,2,35,0,11
	.byte	'TOM1_CH11_IRQ',0,4
	.word	8146
	.byte	1,4,2,35,0,11
	.byte	'TOM1_CH12_IRQ',0,4
	.word	8146
	.byte	1,3,2,35,0,11
	.byte	'TOM1_CH13_IRQ',0,4
	.word	8146
	.byte	1,2,2,35,0,11
	.byte	'TOM1_CH14_IRQ',0,4
	.word	8146
	.byte	1,1,2,35,0,11
	.byte	'TOM1_CH15_IRQ',0,4
	.word	8146
	.byte	1,0,2,35,0,0,12,9,244,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24340
	.byte	4,2,35,0,0,14,20
	.word	408
	.byte	15,19,0,10
	.byte	'_Ifx_GTM_ICM_IRQG_MEI_Bits',0,9,222,3,16,4,11
	.byte	'GTM_EIRQ',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	8146
	.byte	3,28,2,35,0,11
	.byte	'TIM0_EIRQ',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	8146
	.byte	27,0,2,35,0,0,12,9,132,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25201
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ICM_IRQG_CEI1_Bits',0,9,208,3,16,4,11
	.byte	'TIM0_CH0_EIRQ',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'TIM0_CH1_EIRQ',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'TIM0_CH2_EIRQ',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'TIM0_CH3_EIRQ',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'TIM0_CH4_EIRQ',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'TIM0_CH5_EIRQ',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'TIM0_CH6_EIRQ',0,4
	.word	8146
	.byte	1,25,2,35,0,11
	.byte	'TIM0_CH7_EIRQ',0,4
	.word	8146
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	8146
	.byte	24,0,2,35,0,0,12,9,252,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25360
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ICM',0,9,223,17,25,60,13
	.byte	'IRQG_0',0
	.word	24014
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	1453
	.byte	4,2,35,4,13
	.byte	'IRQG_2',0
	.word	24300
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3612
	.byte	12,2,35,12,13
	.byte	'IRQG_6',0
	.word	25152
	.byte	4,2,35,24,13
	.byte	'reserved_1C',0
	.word	25192
	.byte	20,2,35,28,13
	.byte	'IRQG_MEI',0
	.word	25320
	.byte	4,2,35,48,13
	.byte	'reserved_34',0
	.word	1453
	.byte	4,2,35,52,13
	.byte	'IRQG_CEI1',0
	.word	25617
	.byte	4,2,35,56,0,3
	.word	25657
	.byte	14,196,19
	.word	408
	.byte	15,195,19,0,10
	.byte	'_Ifx_GTM_TIM_CH_GPR0_Bits',0,9,193,6,16,4,11
	.byte	'GPR0',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'ECNT',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,164,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25860
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_GPR1_Bits',0,9,200,6,16,4,11
	.byte	'GPR1',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'ECNT',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,172,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25965
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_CNT_Bits',0,9,238,5,16,4,11
	.byte	'CNT',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,228,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26070
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_ECNT_Bits',0,9,153,6,16,4,11
	.byte	'ECNT',0,4
	.word	8146
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,252,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26180
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_CNTS_Bits',0,9,245,5,16,4,11
	.byte	'CNTS',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'ECNT',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,236,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26292
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_TDUC_Bits',0,9,250,6,16,4,11
	.byte	'TO_CNT',0,4
	.word	8146
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	8146
	.byte	24,0,2,35,0,0,12,9,212,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26397
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_TDUV_Bits',0,9,129,7,16,4,11
	.byte	'TOV',0,4
	.word	8146
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	8146
	.byte	20,4,2,35,0,11
	.byte	'TCS',0,4
	.word	8146
	.byte	3,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	8146
	.byte	1,0,2,35,0,0,12,9,220,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26510
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_FLT_RE_Bits',0,9,186,6,16,4,11
	.byte	'FLT_RE',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,156,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26658
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_FLT_FE_Bits',0,9,179,6,16,4,11
	.byte	'FLT_FE',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,148,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26774
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_CTRL_Bits',0,9,252,5,16,4,11
	.byte	'TIM_EN',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'TIM_MODE',0,4
	.word	8146
	.byte	3,28,2,35,0,11
	.byte	'OSM',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'CICTRL',0,4
	.word	8146
	.byte	1,25,2,35,0,11
	.byte	'TBU0x_SEL',0,4
	.word	8146
	.byte	1,24,2,35,0,11
	.byte	'GPR0_SEL',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'GPR1_SEL',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'CNTS_SEL',0,4
	.word	8146
	.byte	1,19,2,35,0,11
	.byte	'DSL',0,4
	.word	8146
	.byte	1,18,2,35,0,11
	.byte	'ISL',0,4
	.word	8146
	.byte	1,17,2,35,0,11
	.byte	'ECNT_RESET',0,4
	.word	8146
	.byte	1,16,2,35,0,11
	.byte	'FLT_EN',0,4
	.word	8146
	.byte	1,15,2,35,0,11
	.byte	'FLT_CNT_FRQ',0,4
	.word	8146
	.byte	2,13,2,35,0,11
	.byte	'EXT_CAP_EN',0,4
	.word	8146
	.byte	1,12,2,35,0,11
	.byte	'FLT_MODE_RE',0,4
	.word	8146
	.byte	1,11,2,35,0,11
	.byte	'FLT_CTR_RE',0,4
	.word	8146
	.byte	1,10,2,35,0,11
	.byte	'FLT_MODE_FE',0,4
	.word	8146
	.byte	1,9,2,35,0,11
	.byte	'FLT_CTR_FE',0,4
	.word	8146
	.byte	1,8,2,35,0,11
	.byte	'CLK_SEL',0,4
	.word	8146
	.byte	3,5,2,35,0,11
	.byte	'FR_ECNT_OFL',0,4
	.word	8146
	.byte	1,4,2,35,0,11
	.byte	'EGPR0_SEL',0,4
	.word	8146
	.byte	1,3,2,35,0,11
	.byte	'EGPR1_SEL',0,4
	.word	8146
	.byte	1,2,2,35,0,11
	.byte	'TOCTRL',0,4
	.word	8146
	.byte	2,0,2,35,0,0,12,9,244,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26890
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_ECTRL_Bits',0,9,160,6,16,4,11
	.byte	'EXT_CAP_SRC',0,4
	.word	8146
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	8146
	.byte	29,0,2,35,0,0,12,9,132,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27444
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,9,238,6,16,4,11
	.byte	'NEWVAL',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'ECNTOFL',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'CNTOFL',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'GPRzOFL',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'TODET',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'GLITCHDET',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	8146
	.byte	26,0,2,35,0,0,12,9,204,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27563
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,9,207,6,16,4,11
	.byte	'NEWVAL_IRQ_EN',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'ECNTOFL_IRQ_EN',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'CNTOFL_IRQ_EN',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'GPRzOFL_IRQ_EN',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'TODET_IRQ_EN',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'GLITCHDET_IRQ_EN',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	8146
	.byte	26,0,2,35,0,0,12,9,180,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27776
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,9,219,6,16,4,11
	.byte	'TRG_NEWVAL',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'TRG_ECNTOFL',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'TRG_CNTOFL',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'TRG_GPRzOFL',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'TRG_TODET',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'TRG_GLITCHDET',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	8146
	.byte	26,0,2,35,0,0,12,9,188,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28027
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,9,231,6,16,4,11
	.byte	'IRQ_MODE',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	30,0,2,35,0,0,12,9,196,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28265
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,9,167,6,16,4,11
	.byte	'NEWVAL_EIRQ_EN',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'ECNTOFL_EIRQ_EN',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'CNTOFL_EIRQ_EN',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'GPRzOFL_EIRQ_EN',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'TODET_EIRQ_EN',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'GLITCHDET_EIRQ_EN',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	8146
	.byte	26,0,2,35,0,0,12,9,140,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28384
	.byte	4,2,35,0,0,14,52
	.word	408
	.byte	15,51,0,10
	.byte	'_Ifx_GTM_TIM_CH',0,9,142,17,25,116,13
	.byte	'GPR0',0
	.word	25925
	.byte	4,2,35,0,13
	.byte	'GPR1',0
	.word	26030
	.byte	4,2,35,4,13
	.byte	'CNT',0
	.word	26140
	.byte	4,2,35,8,13
	.byte	'ECNT',0
	.word	26252
	.byte	4,2,35,12,13
	.byte	'CNTS',0
	.word	26357
	.byte	4,2,35,16,13
	.byte	'TDUC',0
	.word	26470
	.byte	4,2,35,20,13
	.byte	'TDUV',0
	.word	26618
	.byte	4,2,35,24,13
	.byte	'FLT_RE',0
	.word	26734
	.byte	4,2,35,28,13
	.byte	'FLT_FE',0
	.word	26850
	.byte	4,2,35,32,13
	.byte	'CTRL',0
	.word	27404
	.byte	4,2,35,36,13
	.byte	'ECTRL',0
	.word	27523
	.byte	4,2,35,40,13
	.byte	'IRQ_NOTIFY',0
	.word	27736
	.byte	4,2,35,44,13
	.byte	'IRQ_EN',0
	.word	27987
	.byte	4,2,35,48,13
	.byte	'IRQ_FORCINT',0
	.word	28225
	.byte	4,2,35,52,13
	.byte	'IRQ_MODE',0
	.word	28344
	.byte	4,2,35,56,13
	.byte	'EIRQ_EN',0
	.word	28602
	.byte	4,2,35,60,13
	.byte	'reserved_40',0
	.word	28642
	.byte	52,2,35,64,0,3
	.word	28651
	.byte	10
	.byte	'_Ifx_GTM_TIM_INP_VAL_Bits',0,9,159,7,16,4,11
	.byte	'F_OUT',0,4
	.word	8146
	.byte	8,24,2,35,0,11
	.byte	'F_IN',0,4
	.word	8146
	.byte	8,16,2,35,0,11
	.byte	'TIM_IN',0,4
	.word	8146
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	8,0,2,35,0,0,12,9,236,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28950
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_IN_SRC_Bits',0,9,138,7,16,4,11
	.byte	'VAL_0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'MODE_0',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'VAL_1',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'MODE_1',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'VAL_2',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'MODE_2',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'VAL_3',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'MODE_3',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'VAL_4',0,4
	.word	8146
	.byte	2,14,2,35,0,11
	.byte	'MODE_4',0,4
	.word	8146
	.byte	2,12,2,35,0,11
	.byte	'VAL_5',0,4
	.word	8146
	.byte	2,10,2,35,0,11
	.byte	'MODE_5',0,4
	.word	8146
	.byte	2,8,2,35,0,11
	.byte	'VAL_6',0,4
	.word	8146
	.byte	2,6,2,35,0,11
	.byte	'MODE_6',0,4
	.word	8146
	.byte	2,4,2,35,0,11
	.byte	'VAL_7',0,4
	.word	8146
	.byte	2,2,2,35,0,11
	.byte	'MODE_7',0,4
	.word	8146
	.byte	2,0,2,35,0,0,12,9,228,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29097
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_TIM_RST_Bits',0,9,168,7,16,4,11
	.byte	'RST_CH0',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'RST_CH1',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'RST_CH2',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'RST_CH3',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'RST_CH4',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'RST_CH5',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'RST_CH6',0,4
	.word	8146
	.byte	1,25,2,35,0,11
	.byte	'RST_CH7',0,4
	.word	8146
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	8146
	.byte	24,0,2,35,0,0,12,9,244,14,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29449
	.byte	4,2,35,0,0,3
	.word	28651
	.byte	3
	.word	28651
	.byte	3
	.word	28651
	.byte	3
	.word	28651
	.byte	3
	.word	28651
	.byte	3
	.word	28651
	.byte	3
	.word	28651
	.byte	10
	.byte	'_Ifx_GTM_TIM',0,9,130,18,25,128,8,13
	.byte	'CH0',0
	.word	28945
	.byte	116,2,35,0,13
	.byte	'INP_VAL',0
	.word	29057
	.byte	4,2,35,116,13
	.byte	'IN_SRC',0
	.word	29409
	.byte	4,2,35,120,13
	.byte	'RST',0
	.word	29652
	.byte	4,2,35,124,13
	.byte	'CH1',0
	.word	29692
	.byte	116,3,35,128,1,13
	.byte	'reserved_F4',0
	.word	3612
	.byte	12,3,35,244,1,13
	.byte	'CH2',0
	.word	29697
	.byte	116,3,35,128,2,13
	.byte	'reserved_174',0
	.word	3612
	.byte	12,3,35,244,2,13
	.byte	'CH3',0
	.word	29702
	.byte	116,3,35,128,3,13
	.byte	'reserved_1F4',0
	.word	3612
	.byte	12,3,35,244,3,13
	.byte	'CH4',0
	.word	29707
	.byte	116,3,35,128,4,13
	.byte	'reserved_274',0
	.word	3612
	.byte	12,3,35,244,4,13
	.byte	'CH5',0
	.word	29712
	.byte	116,3,35,128,5,13
	.byte	'reserved_2F4',0
	.word	3612
	.byte	12,3,35,244,5,13
	.byte	'CH6',0
	.word	29717
	.byte	116,3,35,128,6,13
	.byte	'reserved_374',0
	.word	3612
	.byte	12,3,35,244,6,13
	.byte	'CH7',0
	.word	29722
	.byte	116,3,35,128,7,13
	.byte	'reserved_3F4',0
	.word	3612
	.byte	12,3,35,244,7,0,14,128,8
	.word	29727
	.byte	15,0,0,3
	.word	30065
	.byte	14,128,216,1
	.word	408
	.byte	15,255,215,1,0,14,128,32
	.word	16875
	.byte	15,1,0,3
	.word	30093
	.byte	14,192,192,2
	.word	408
	.byte	15,191,192,2,0,10
	.byte	'_Ifx_GTM_DTM_CTRL_Bits',0,9,220,2,16,4,11
	.byte	'CLK_SEL',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'UPD_MODE',0,4
	.word	8146
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	8146
	.byte	25,0,2,35,0,0,12,9,188,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30121
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_DTM_CH_CTRL1_Bits',0,9,246,1,16,4,11
	.byte	'O1SEL_0',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	8146
	.byte	2,29,2,35,0,11
	.byte	'SWAP_0',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'O1F_0',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'O1SEL_1',0,4
	.word	8146
	.byte	1,23,2,35,0,11
	.byte	'I1SEL_1',0,4
	.word	8146
	.byte	1,22,2,35,0,11
	.byte	'SH_EN_1',0,4
	.word	8146
	.byte	1,21,2,35,0,11
	.byte	'SWAP_1',0,4
	.word	8146
	.byte	1,20,2,35,0,11
	.byte	'O1F_1',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'O1SEL_2',0,4
	.word	8146
	.byte	1,15,2,35,0,11
	.byte	'I1SEL_2',0,4
	.word	8146
	.byte	1,14,2,35,0,11
	.byte	'SH_EN_2',0,4
	.word	8146
	.byte	1,13,2,35,0,11
	.byte	'SWAP_2',0,4
	.word	8146
	.byte	1,12,2,35,0,11
	.byte	'O1F_2',0,4
	.word	8146
	.byte	2,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	8146
	.byte	2,8,2,35,0,11
	.byte	'O1SEL_3',0,4
	.word	8146
	.byte	1,7,2,35,0,11
	.byte	'I1SEL_3',0,4
	.word	8146
	.byte	1,6,2,35,0,11
	.byte	'SH_EN_3',0,4
	.word	8146
	.byte	1,5,2,35,0,11
	.byte	'SWAP_3',0,4
	.word	8146
	.byte	1,4,2,35,0,11
	.byte	'O1F_3',0,4
	.word	8146
	.byte	2,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	8146
	.byte	2,0,2,35,0,0,12,9,164,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30274
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_DTM_CH_CTRL2_Bits',0,9,146,2,16,4,11
	.byte	'POL0_0',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'OC0_0',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'SL0_0',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'DT0_0',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'POL1_0',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'OC1_0',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'SL1_0',0,4
	.word	8146
	.byte	1,25,2,35,0,11
	.byte	'DT1_0',0,4
	.word	8146
	.byte	1,24,2,35,0,11
	.byte	'POL0_1',0,4
	.word	8146
	.byte	1,23,2,35,0,11
	.byte	'OC0_1',0,4
	.word	8146
	.byte	1,22,2,35,0,11
	.byte	'SL0_1',0,4
	.word	8146
	.byte	1,21,2,35,0,11
	.byte	'DT0_1',0,4
	.word	8146
	.byte	1,20,2,35,0,11
	.byte	'POL1_1',0,4
	.word	8146
	.byte	1,19,2,35,0,11
	.byte	'OC1_1',0,4
	.word	8146
	.byte	1,18,2,35,0,11
	.byte	'SL1_1',0,4
	.word	8146
	.byte	1,17,2,35,0,11
	.byte	'DT1_1',0,4
	.word	8146
	.byte	1,16,2,35,0,11
	.byte	'POL0_2',0,4
	.word	8146
	.byte	1,15,2,35,0,11
	.byte	'OC0_2',0,4
	.word	8146
	.byte	1,14,2,35,0,11
	.byte	'SL0_2',0,4
	.word	8146
	.byte	1,13,2,35,0,11
	.byte	'DT0_2',0,4
	.word	8146
	.byte	1,12,2,35,0,11
	.byte	'POL1_2',0,4
	.word	8146
	.byte	1,11,2,35,0,11
	.byte	'OC1_2',0,4
	.word	8146
	.byte	1,10,2,35,0,11
	.byte	'SL1_2',0,4
	.word	8146
	.byte	1,9,2,35,0,11
	.byte	'DT1_2',0,4
	.word	8146
	.byte	1,8,2,35,0,11
	.byte	'POL0_3',0,4
	.word	8146
	.byte	1,7,2,35,0,11
	.byte	'OC0_3',0,4
	.word	8146
	.byte	1,6,2,35,0,11
	.byte	'SL0_3',0,4
	.word	8146
	.byte	1,5,2,35,0,11
	.byte	'DT0_3',0,4
	.word	8146
	.byte	1,4,2,35,0,11
	.byte	'POL1_3',0,4
	.word	8146
	.byte	1,3,2,35,0,11
	.byte	'OC1_3',0,4
	.word	8146
	.byte	1,2,2,35,0,11
	.byte	'SL1_3',0,4
	.word	8146
	.byte	1,1,2,35,0,11
	.byte	'DT1_3',0,4
	.word	8146
	.byte	1,0,2,35,0,0,12,9,172,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30791
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_DTM_CH_CTRL2_SR_Bits',0,9,183,2,16,4,11
	.byte	'POL0_0_SR',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'OC0_0_SR',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'SL0_0_SR',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'DT0_0_SR',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'POL1_0_SR',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'OC1_0_SR',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'SL1_0_SR',0,4
	.word	8146
	.byte	1,25,2,35,0,11
	.byte	'DT1_0_SR',0,4
	.word	8146
	.byte	1,24,2,35,0,11
	.byte	'POL0_1_SR',0,4
	.word	8146
	.byte	1,23,2,35,0,11
	.byte	'OC0_1_SR',0,4
	.word	8146
	.byte	1,22,2,35,0,11
	.byte	'SL0_1_SR',0,4
	.word	8146
	.byte	1,21,2,35,0,11
	.byte	'DT0_1_SR',0,4
	.word	8146
	.byte	1,20,2,35,0,11
	.byte	'POL1_1_SR',0,4
	.word	8146
	.byte	1,19,2,35,0,11
	.byte	'OC1_1_SR',0,4
	.word	8146
	.byte	1,18,2,35,0,11
	.byte	'SL1_1_SR',0,4
	.word	8146
	.byte	1,17,2,35,0,11
	.byte	'DT1_1_SR',0,4
	.word	8146
	.byte	1,16,2,35,0,11
	.byte	'POL0_2_SR',0,4
	.word	8146
	.byte	1,15,2,35,0,11
	.byte	'OC0_2_SR',0,4
	.word	8146
	.byte	1,14,2,35,0,11
	.byte	'SL0_2_SR',0,4
	.word	8146
	.byte	1,13,2,35,0,11
	.byte	'DT0_2_SR',0,4
	.word	8146
	.byte	1,12,2,35,0,11
	.byte	'POL1_2_SR',0,4
	.word	8146
	.byte	1,11,2,35,0,11
	.byte	'OC1_2_SR',0,4
	.word	8146
	.byte	1,10,2,35,0,11
	.byte	'SL1_2_SR',0,4
	.word	8146
	.byte	1,9,2,35,0,11
	.byte	'DT1_2_SR',0,4
	.word	8146
	.byte	1,8,2,35,0,11
	.byte	'POL0_3_SR',0,4
	.word	8146
	.byte	1,7,2,35,0,11
	.byte	'OC0_3_SR',0,4
	.word	8146
	.byte	1,6,2,35,0,11
	.byte	'SL0_3_SR',0,4
	.word	8146
	.byte	1,5,2,35,0,11
	.byte	'DT0_3_SR',0,4
	.word	8146
	.byte	1,4,2,35,0,11
	.byte	'POL1_3_SR',0,4
	.word	8146
	.byte	1,3,2,35,0,11
	.byte	'OC1_3_SR',0,4
	.word	8146
	.byte	1,2,2,35,0,11
	.byte	'SL1_3_SR',0,4
	.word	8146
	.byte	1,1,2,35,0,11
	.byte	'DT1_3_SR',0,4
	.word	8146
	.byte	1,0,2,35,0,0,12,9,180,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31417
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_DTM_PS_CTRL_Bits',0,9,238,2,16,4,11
	.byte	'RELBLK',0,4
	.word	8146
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	8146
	.byte	6,16,2,35,0,11
	.byte	'PSU_IN_SEL',0,4
	.word	8146
	.byte	1,15,2,35,0,11
	.byte	'IN_POL',0,4
	.word	8146
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	8146
	.byte	2,12,2,35,0,11
	.byte	'SHIFT_SEL',0,4
	.word	8146
	.byte	2,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	8146
	.byte	10,0,2,35,0,0,12,9,204,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32142
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_DTM_DTV_CH_Bits',0,9,229,2,16,4,11
	.byte	'RELRISE',0,4
	.word	8146
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	8146
	.byte	6,16,2,35,0,11
	.byte	'RELFALL',0,4
	.word	8146
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	8146
	.byte	6,0,2,35,0,0,12,9,196,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32363
	.byte	4,2,35,0,0,14,16
	.word	32479
	.byte	15,3,0,10
	.byte	'_Ifx_GTM_DTM',0,9,212,17,25,36,13
	.byte	'CTRL',0
	.word	30234
	.byte	4,2,35,0,13
	.byte	'CH_CTRL1',0
	.word	30751
	.byte	4,2,35,4,13
	.byte	'CH_CTRL2',0
	.word	31377
	.byte	4,2,35,8,13
	.byte	'CH_CTRL2_SR',0
	.word	32102
	.byte	4,2,35,12,13
	.byte	'PS_CTRL',0
	.word	32323
	.byte	4,2,35,16,13
	.byte	'DTV_CH',0
	.word	32519
	.byte	16,2,35,20,0,3
	.word	32528
	.byte	14,220,1
	.word	408
	.byte	15,219,1,0,3
	.word	32528
	.byte	14,156,151,35
	.word	408
	.byte	15,155,151,35,0,10
	.byte	'_Ifx_GTM_CLC_Bits',0,9,150,1,16,4,11
	.byte	'DISR',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'DISS',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'EDIS',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	8146
	.byte	28,0,2,35,0,0,12,9,204,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32686
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,9,134,4,16,4,11
	.byte	'CH0SEL',0,4
	.word	8146
	.byte	4,28,2,35,0,11
	.byte	'CH1SEL',0,4
	.word	8146
	.byte	4,24,2,35,0,11
	.byte	'CH2SEL',0,4
	.word	8146
	.byte	4,20,2,35,0,11
	.byte	'CH3SEL',0,4
	.word	8146
	.byte	4,16,2,35,0,11
	.byte	'CH4SEL',0,4
	.word	8146
	.byte	4,12,2,35,0,11
	.byte	'CH5SEL',0,4
	.word	8146
	.byte	4,8,2,35,0,11
	.byte	'CH6SEL',0,4
	.word	8146
	.byte	4,4,2,35,0,11
	.byte	'CH7SEL',0,4
	.word	8146
	.byte	4,0,2,35,0,0,12,9,156,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32843
	.byte	4,2,35,0,0,14,28
	.word	408
	.byte	15,27,0,10
	.byte	'_Ifx_GTM_INOUTSEL_TIM',0,9,135,17,25,32,13
	.byte	'INSEL',0
	.word	33027
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	33067
	.byte	28,2,35,4,0,14,32
	.word	33076
	.byte	15,0,0,3
	.word	33140
	.byte	10
	.byte	'_Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,9,241,3,16,4,11
	.byte	'SEL0',0,4
	.word	8146
	.byte	2,30,2,35,0,11
	.byte	'SEL1',0,4
	.word	8146
	.byte	2,28,2,35,0,11
	.byte	'SEL2',0,4
	.word	8146
	.byte	2,26,2,35,0,11
	.byte	'SEL3',0,4
	.word	8146
	.byte	2,24,2,35,0,11
	.byte	'SEL4',0,4
	.word	8146
	.byte	2,22,2,35,0,11
	.byte	'SEL5',0,4
	.word	8146
	.byte	2,20,2,35,0,11
	.byte	'SEL6',0,4
	.word	8146
	.byte	2,18,2,35,0,11
	.byte	'SEL7',0,4
	.word	8146
	.byte	2,16,2,35,0,11
	.byte	'SEL8',0,4
	.word	8146
	.byte	2,14,2,35,0,11
	.byte	'SEL9',0,4
	.word	8146
	.byte	2,12,2,35,0,11
	.byte	'SEL10',0,4
	.word	8146
	.byte	2,10,2,35,0,11
	.byte	'SEL11',0,4
	.word	8146
	.byte	2,8,2,35,0,11
	.byte	'SEL12',0,4
	.word	8146
	.byte	2,6,2,35,0,11
	.byte	'SEL13',0,4
	.word	8146
	.byte	2,4,2,35,0,11
	.byte	'SEL14',0,4
	.word	8146
	.byte	2,2,2,35,0,11
	.byte	'SEL15',0,4
	.word	8146
	.byte	2,0,2,35,0,0,12,9,148,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33154
	.byte	4,2,35,0,0,14,32
	.word	33455
	.byte	15,7,0,10
	.byte	'_Ifx_GTM_INOUTSEL_T',0,9,129,17,25,32,13
	.byte	'OUTSEL',0
	.word	33495
	.byte	32,2,35,0,0,3
	.word	33504
	.byte	14,80
	.word	408
	.byte	15,79,0,10
	.byte	'_Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,9,231,3,16,4,11
	.byte	'SEL0',0,4
	.word	8146
	.byte	4,28,2,35,0,11
	.byte	'SEL1',0,4
	.word	8146
	.byte	4,24,2,35,0,11
	.byte	'SEL2',0,4
	.word	8146
	.byte	4,20,2,35,0,11
	.byte	'SEL3',0,4
	.word	8146
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,140,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33561
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_INOUTSEL_CAN',0,9,251,16,25,4,13
	.byte	'OUTSEL',0
	.word	33689
	.byte	4,2,35,0,0,3
	.word	33729
	.byte	10
	.byte	'_Ifx_GTM_INOUTSEL',0,9,237,17,25,148,1,13
	.byte	'TIM',0
	.word	33149
	.byte	32,2,35,0,13
	.byte	'T',0
	.word	33547
	.byte	32,2,35,32,13
	.byte	'reserved_40',0
	.word	33552
	.byte	80,2,35,64,13
	.byte	'CAN',0
	.word	33774
	.byte	4,3,35,144,1,0,3
	.word	33779
	.byte	10
	.byte	'_Ifx_GTM_ADCTRIG0OUT0_Bits',0,9,88,16,4,11
	.byte	'SEL0',0,4
	.word	8146
	.byte	4,28,2,35,0,11
	.byte	'SEL1',0,4
	.word	8146
	.byte	4,24,2,35,0,11
	.byte	'SEL2',0,4
	.word	8146
	.byte	4,20,2,35,0,11
	.byte	'SEL3',0,4
	.word	8146
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,156,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33869
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ADCTRIG1OUT0_Bits',0,9,98,16,4,11
	.byte	'SEL0',0,4
	.word	8146
	.byte	4,28,2,35,0,11
	.byte	'SEL1',0,4
	.word	8146
	.byte	4,24,2,35,0,11
	.byte	'SEL2',0,4
	.word	8146
	.byte	4,20,2,35,0,11
	.byte	'SEL3',0,4
	.word	8146
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	8146
	.byte	16,0,2,35,0,0,12,9,164,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34029
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OTBU0T_Bits',0,9,224,4,16,4,11
	.byte	'CV',0,4
	.word	8146
	.byte	27,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	8146
	.byte	1,4,2,35,0,11
	.byte	'CM',0,4
	.word	8146
	.byte	2,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	8146
	.byte	2,0,2,35,0,0,12,9,236,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34189
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OTBU1T_Bits',0,9,233,4,16,4,11
	.byte	'CV',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	4,4,2,35,0,11
	.byte	'EN',0,4
	.word	8146
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	8146
	.byte	3,0,2,35,0,0,12,9,244,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34331
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OTBU2T_Bits',0,9,242,4,16,4,11
	.byte	'CV',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	8146
	.byte	4,4,2,35,0,11
	.byte	'EN',0,4
	.word	8146
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	8146
	.byte	3,0,2,35,0,0,12,9,252,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34473
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OTSS_Bits',0,9,140,5,16,4,11
	.byte	'OTGB0',0,4
	.word	8146
	.byte	4,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	8146
	.byte	4,24,2,35,0,11
	.byte	'OTGB1',0,4
	.word	8146
	.byte	4,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	8146
	.byte	4,16,2,35,0,11
	.byte	'OTGB2',0,4
	.word	8146
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	8146
	.byte	12,0,2,35,0,0,12,9,140,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34615
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OTSC0_Bits',0,9,251,4,16,4,11
	.byte	'B0LMT',0,4
	.word	8146
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'B0LMI',0,4
	.word	8146
	.byte	4,24,2,35,0,11
	.byte	'B0HMT',0,4
	.word	8146
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	8146
	.byte	1,20,2,35,0,11
	.byte	'B0HMI',0,4
	.word	8146
	.byte	4,16,2,35,0,11
	.byte	'B1LMT',0,4
	.word	8146
	.byte	3,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	8146
	.byte	1,12,2,35,0,11
	.byte	'B1LMI',0,4
	.word	8146
	.byte	4,8,2,35,0,11
	.byte	'B1HMT',0,4
	.word	8146
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	8146
	.byte	1,4,2,35,0,11
	.byte	'B1HMI',0,4
	.word	8146
	.byte	4,0,2,35,0,0,12,9,132,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34800
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ODA_Bits',0,9,216,4,16,4,11
	.byte	'DDREN',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'DREN',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	30,0,2,35,0,0,12,9,228,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35094
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_OCS_Bits',0,9,206,4,16,4,11
	.byte	'reserved_0',0,4
	.word	8146
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,4
	.word	8146
	.byte	4,4,2,35,0,11
	.byte	'SUS_P',0,4
	.word	8146
	.byte	1,3,2,35,0,11
	.byte	'SUSSTA',0,4
	.word	8146
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	8146
	.byte	2,0,2,35,0,0,12,9,220,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35214
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_KRSTCLR_Bits',0,9,199,4,16,4,11
	.byte	'CLR',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	8146
	.byte	31,0,2,35,0,0,12,9,212,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35374
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_KRST1_Bits',0,9,192,4,16,4,11
	.byte	'RST',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	8146
	.byte	31,0,2,35,0,0,12,9,204,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35480
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_KRST0_Bits',0,9,184,4,16,4,11
	.byte	'RST',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	8146
	.byte	30,0,2,35,0,0,12,9,196,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35584
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ACCEN1_Bits',0,9,82,16,4,11
	.byte	'reserved_0',0,4
	.word	8146
	.byte	32,0,2,35,0,0,12,9,148,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35707
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GTM_ACCEN0_Bits',0,9,45,16,4,11
	.byte	'EN0',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	8146
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	8146
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	8146
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	8146
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	8146
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	8146
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	8146
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	8146
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	8146
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	8146
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	8146
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	8146
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	8146
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	8146
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	8146
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	8146
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	8146
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	8146
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	8146
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	8146
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	8146
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	8146
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	8146
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	8146
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	8146
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	8146
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	8146
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	8146
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	8146
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	8146
	.byte	1,0,2,35,0,0,12,9,140,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35796
	.byte	4,2,35,0,0,14,128,4
	.word	408
	.byte	15,255,3,0,10
	.byte	'_Ifx_GTM',0,9,212,18,25,128,128,40,13
	.byte	'REV',0
	.word	18418
	.byte	4,2,35,0,13
	.byte	'RST',0
	.word	18520
	.byte	4,2,35,4,13
	.byte	'CTRL',0
	.word	18686
	.byte	4,2,35,8,13
	.byte	'AEI_ADDR_XPT',0
	.word	18820
	.byte	4,2,35,12,13
	.byte	'IRQ_NOTIFY',0
	.word	19005
	.byte	4,2,35,16,13
	.byte	'IRQ_EN',0
	.word	19214
	.byte	4,2,35,20,13
	.byte	'IRQ_FORCINT',0
	.word	19416
	.byte	4,2,35,24,13
	.byte	'IRQ_MODE',0
	.word	19528
	.byte	4,2,35,28,13
	.byte	'EIRQ_EN',0
	.word	19742
	.byte	4,2,35,32,13
	.byte	'HW_CONF',0
	.word	20109
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3272
	.byte	8,2,35,40,13
	.byte	'BRIDGE',0
	.word	20854
	.byte	12,2,35,48,13
	.byte	'reserved_3C',0
	.word	1453
	.byte	4,2,35,60,13
	.byte	'TIM_AUX_IN_SRC',0
	.word	21109
	.byte	4,2,35,64,13
	.byte	'reserved_44',0
	.word	21118
	.byte	188,1,2,35,68,13
	.byte	'TBU',0
	.word	22176
	.byte	28,3,35,128,2,13
	.byte	'reserved_11C',0
	.word	22181
	.byte	228,3,3,35,156,2,13
	.byte	'CMU',0
	.word	23903
	.byte	72,3,35,128,6,13
	.byte	'reserved_348',0
	.word	23908
	.byte	184,5,3,35,200,6,13
	.byte	'ICM',0
	.word	25844
	.byte	60,3,35,128,12,13
	.byte	'reserved_63C',0
	.word	25849
	.byte	196,19,3,35,188,12,13
	.byte	'TIM',0
	.word	30075
	.byte	128,8,3,35,128,32,13
	.byte	'reserved_1400',0
	.word	30080
	.byte	128,216,1,3,35,128,40,13
	.byte	'TOM',0
	.word	30103
	.byte	128,32,4,35,128,128,2,13
	.byte	'reserved_9000',0
	.word	30108
	.byte	192,192,2,4,35,128,160,2,13
	.byte	'DTM1',0
	.word	32652
	.byte	36,4,35,192,224,4,13
	.byte	'reserved_13064',0
	.word	32657
	.byte	220,1,4,35,228,224,4,13
	.byte	'DTM5',0
	.word	32668
	.byte	36,4,35,192,226,4,13
	.byte	'reserved_13164',0
	.word	32673
	.byte	156,151,35,4,35,228,226,4,13
	.byte	'CLC',0
	.word	32803
	.byte	4,4,35,128,250,39,13
	.byte	'reserved_9FD04',0
	.word	3612
	.byte	12,4,35,132,250,39,13
	.byte	'INOUTSEL',0
	.word	33864
	.byte	148,1,4,35,144,250,39,13
	.byte	'reserved_9FDA4',0
	.word	3612
	.byte	12,4,35,164,251,39,13
	.byte	'ADCTRIG0OUT0',0
	.word	33989
	.byte	4,4,35,176,251,39,13
	.byte	'reserved_9FDB4',0
	.word	1453
	.byte	4,4,35,180,251,39,13
	.byte	'ADCTRIG1OUT0',0
	.word	34149
	.byte	4,4,35,184,251,39,13
	.byte	'reserved_9FDBC',0
	.word	3272
	.byte	8,4,35,188,251,39,13
	.byte	'OTBU0T',0
	.word	34291
	.byte	4,4,35,196,251,39,13
	.byte	'OTBU1T',0
	.word	34433
	.byte	4,4,35,200,251,39,13
	.byte	'OTBU2T',0
	.word	34575
	.byte	4,4,35,204,251,39,13
	.byte	'OTSS',0
	.word	34760
	.byte	4,4,35,208,251,39,13
	.byte	'OTSC0',0
	.word	35054
	.byte	4,4,35,212,251,39,13
	.byte	'reserved_9FDD8',0
	.word	1453
	.byte	4,4,35,216,251,39,13
	.byte	'ODA',0
	.word	35174
	.byte	4,4,35,220,251,39,13
	.byte	'reserved_9FDE0',0
	.word	3272
	.byte	8,4,35,224,251,39,13
	.byte	'OCS',0
	.word	35334
	.byte	4,4,35,232,251,39,13
	.byte	'KRSTCLR',0
	.word	35440
	.byte	4,4,35,236,251,39,13
	.byte	'KRST1',0
	.word	35544
	.byte	4,4,35,240,251,39,13
	.byte	'KRST0',0
	.word	35667
	.byte	4,4,35,244,251,39,13
	.byte	'ACCEN1',0
	.word	35756
	.byte	4,4,35,248,251,39,13
	.byte	'ACCEN0',0
	.word	36325
	.byte	4,4,35,252,251,39,13
	.byte	'reserved_9FE00',0
	.word	36365
	.byte	128,4,4,35,128,252,39,0,3
	.word	36376
.L314:
	.byte	4
	.word	37427
	.byte	25
	.byte	'IfxGtm_Tom_Ch_getClockFrequency',0,7,122,20
	.word	12677
	.byte	1,1,1,1,7
	.byte	'gtm',0,7,122,61
	.word	37432
	.byte	7
	.byte	'tom',0,7,122,79
	.word	17794
	.byte	7
	.byte	'channel',0,7,122,98
	.word	17799
	.byte	0,25
	.byte	'IfxGtm_Tom_Ch_getCompareOne',0,7,136,1,19
	.word	12582
	.byte	1,1,1,1,7
	.byte	'tom',0,7,136,1,60
	.word	17794
	.byte	7
	.byte	'channel',0,7,136,1,79
	.word	17799
	.byte	0,3
	.word	12582
.L267:
	.byte	4
	.word	37594
	.byte	25
	.byte	'IfxGtm_Tom_Ch_getCompareOnePointer',0,7,143,1,29
	.word	37599
	.byte	1,1,1,1,7
	.byte	'tom',0,7,143,1,77
	.word	17794
	.byte	7
	.byte	'channel',0,7,143,1,96
	.word	17799
	.byte	0,16,8,215,1,9,1,17
	.byte	'IfxGtm_Tom_0',0,0,17
	.byte	'IfxGtm_Tom_1',0,1,0,25
	.byte	'IfxGtm_Tom_Ch_getSrcPointer',0,7,172,1,35
	.word	7943
	.byte	1,1,1,1,7
	.byte	'gtm',0,7,172,1,72
	.word	37432
	.byte	7
	.byte	'tom',0,7,172,1,88
	.word	37683
	.byte	7
	.byte	'channel',0,7,172,1,107
	.word	17799
	.byte	0,25
	.byte	'IfxGtm_Tom_Ch_getTgcPointer',0,7,179,1,29
	.word	12577
	.byte	1,1,1,1,7
	.byte	'tom',0,7,179,1,70
	.word	17794
	.byte	7
	.byte	'tgcIndex',0,7,179,1,82
	.word	12582
	.byte	0,25
	.byte	'IfxGtm_Tom_Ch_getTimerPointer',0,7,186,1,29
	.word	37599
	.byte	1,1,1,1,7
	.byte	'tom',0,7,186,1,72
	.word	17794
	.byte	7
	.byte	'channel',0,7,186,1,91
	.word	17799
	.byte	0,25
	.byte	'IfxGtm_Tom_Ch_isOneNotification',0,7,193,1,20
	.word	408
	.byte	1,1,1,1,7
	.byte	'tom',0,7,193,1,65
	.word	17794
	.byte	7
	.byte	'channel',0,7,193,1,84
	.word	17799
	.byte	0,25
	.byte	'IfxGtm_Tom_Ch_isZeroNotification',0,7,200,1,20
	.word	408
	.byte	1,1,1,1,7
	.byte	'tom',0,7,200,1,66
	.word	17794
	.byte	7
	.byte	'channel',0,7,200,1,85
	.word	17799
	.byte	0,16,7,56,9,1,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0',0,0,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1',0,1,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2',0,2,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3',0,3,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4',0,4,17
	.byte	'IfxGtm_Tom_Ch_ClkSrc_noClock',0,5,0,32
	.byte	'IfxGtm_Tom_Ch_setClockSource',0,7,222,1,17,1,1,1,1,7
	.byte	'tom',0,7,222,1,59
	.word	17794
	.byte	7
	.byte	'channel',0,7,222,1,78
	.word	17799
	.byte	7
	.byte	'clock',0,7,222,1,108
	.word	38105
	.byte	0,32
	.byte	'IfxGtm_Tom_Ch_setCompareOneShadow',0,7,247,1,17,1,1,1,1,7
	.byte	'tom',0,7,247,1,64
	.word	17794
	.byte	7
	.byte	'channel',0,7,247,1,83
	.word	17799
	.byte	7
	.byte	'shadowOne',0,7,247,1,99
	.word	12582
	.byte	0,32
	.byte	'IfxGtm_Tom_Ch_setCompareZeroShadow',0,7,144,2,17,1,1,1,1,7
	.byte	'tom',0,7,144,2,65
	.word	17794
	.byte	7
	.byte	'channel',0,7,144,2,84
	.word	17799
	.byte	7
	.byte	'shadowZero',0,7,144,2,100
	.word	12582
	.byte	0,32
	.byte	'IfxGtm_Tom_Ch_setCounterValue',0,7,152,2,17,1,1,1,1,7
	.byte	'tom',0,7,152,2,60
	.word	17794
	.byte	7
	.byte	'channel',0,7,152,2,79
	.word	17799
	.byte	7
	.byte	'value',0,7,152,2,95
	.word	12582
	.byte	0,16,13,47,9,1,17
	.byte	'IfxGtm_IrqMode_level',0,0,17
	.byte	'IfxGtm_IrqMode_pulse',0,1,17
	.byte	'IfxGtm_IrqMode_pulseNotify',0,2,17
	.byte	'IfxGtm_IrqMode_singlePulse',0,3,0,32
	.byte	'IfxGtm_Tom_Ch_setNotification',0,7,162,2,17,1,1,1,1,7
	.byte	'tom',0,7,162,2,60
	.word	17794
	.byte	7
	.byte	'channel',0,7,162,2,79
	.word	17799
	.byte	7
	.byte	'mode',0,7,162,2,103
	.word	38664
	.byte	7
	.byte	'interruptOnCompareZero',0,7,162,2,117
	.word	408
	.byte	7
	.byte	'interruptOnCompareOne',0,7,162,2,149,1
	.word	408
	.byte	0,32
	.byte	'IfxGtm_Tom_Ch_setOneShotMode',0,7,170,2,17,1,1,1,1,7
	.byte	'tom',0,7,170,2,59
	.word	17794
	.byte	7
	.byte	'channel',0,7,170,2,78
	.word	17799
	.byte	7
	.byte	'enabled',0,7,170,2,95
	.word	408
	.byte	0,16,7,76,9,1,17
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onCm0',0,0,17
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onTrigger',0,1,0,32
	.byte	'IfxGtm_Tom_Ch_setResetSource',0,7,186,2,17,1,1,1,1,7
	.byte	'tom',0,7,186,2,59
	.word	17794
	.byte	7
	.byte	'channel',0,7,186,2,78
	.word	17799
	.byte	7
	.byte	'event',0,7,186,2,112
	.word	39008
	.byte	0,16,14,80,9,1,17
	.byte	'Ifx_ActiveState_low',0,0,17
	.byte	'Ifx_ActiveState_high',0,1,0,32
	.byte	'IfxGtm_Tom_Ch_setSignalLevel',0,7,194,2,17,1,1,1,1,7
	.byte	'tom',0,7,194,2,59
	.word	17794
	.byte	7
	.byte	'channel',0,7,194,2,78
	.word	17799
	.byte	7
	.byte	'activeState',0,7,194,2,103
	.word	39168
	.byte	0,16,7,68,9,1,17
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_forward',0,0,17
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_generate',0,1,0,32
	.byte	'IfxGtm_Tom_Ch_setTriggerOutput',0,7,202,2,17,1,1,1,1,7
	.byte	'tom',0,7,202,2,61
	.word	17794
	.byte	7
	.byte	'channel',0,7,202,2,80
	.word	17799
	.byte	7
	.byte	'trigger',0,7,202,2,117
	.word	39309
	.byte	0,28
	.word	12603
	.byte	29
	.word	12645
	.byte	29
	.word	12658
	.byte	8,0,25
	.byte	'IfxGtm_Tom_Tgc_buildFeature',0,7,230,2,19
	.word	12582
	.byte	1,1,1,1,7
	.byte	'enableMask',0,7,230,2,54
	.word	425
	.byte	7
	.byte	'disableMask',0,7,230,2,73
	.word	425
	.byte	7
	.byte	'bitfieldOffset',0,7,230,2,92
	.word	408
	.byte	0,32
	.byte	'IfxGtm_Tom_Tgc_enableChannels',0,7,145,3,17,1,1,1,1,7
	.byte	'tgc',0,7,145,3,64
	.word	12577
	.byte	7
	.byte	'enableMask',0,7,145,3,76
	.word	425
	.byte	7
	.byte	'disableMask',0,7,145,3,95
	.word	425
	.byte	7
	.byte	'immediate',0,7,145,3,116
	.word	408
	.byte	0,32
	.byte	'IfxGtm_Tom_Tgc_enableChannelsOutput',0,7,154,3,17,1,1,1,1,7
	.byte	'tgc',0,7,154,3,70
	.word	12577
	.byte	7
	.byte	'enableMask',0,7,154,3,82
	.word	425
	.byte	7
	.byte	'disableMask',0,7,154,3,101
	.word	425
	.byte	7
	.byte	'immediate',0,7,154,3,122
	.word	408
	.byte	0,32
	.byte	'IfxGtm_Tom_Tgc_setChannelsForceUpdate',0,7,203,3,17,1,1,1,1,7
	.byte	'tgc',0,7,203,3,72
	.word	12577
	.byte	7
	.byte	'enableMask',0,7,203,3,84
	.word	425
	.byte	7
	.byte	'disableMask',0,7,203,3,103
	.word	425
	.byte	7
	.byte	'resetEnableMask',0,7,203,3,123
	.word	425
	.byte	7
	.byte	'resetDisableMask',0,7,203,3,147,1
	.word	425
	.byte	0,32
	.byte	'IfxGtm_Tom_Tgc_trigger',0,7,217,3,17,1,1,1,1,7
	.byte	'tgc',0,7,217,3,57
	.word	12577
	.byte	0,16,15,65,9,1,17
	.byte	'IfxGtm_ToutSel_a',0,0,17
	.byte	'IfxGtm_ToutSel_b',0,1,17
	.byte	'IfxGtm_ToutSel_c',0,2,17
	.byte	'IfxGtm_ToutSel_d',0,3,17
	.byte	'IfxGtm_ToutSel_e',0,4,0,33,2,149,1,9,8,13
	.byte	'port',0
	.word	7423
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	408
	.byte	1,2,35,4,0,16,2,91,9,1,17
	.byte	'IfxPort_OutputIdx_general',0,128,1,17
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,17
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,17
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,17
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,17
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,17
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,17
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,33,15,84,15,20,13
	.byte	'tom',0
	.word	37683
	.byte	1,2,35,0,13
	.byte	'channel',0
	.word	17799
	.byte	1,2,35,1,13
	.byte	'toutSel',0
	.word	40036
	.byte	1,2,35,2,13
	.byte	'toutn',0
	.word	12582
	.byte	4,2,35,4,13
	.byte	'pin',0
	.word	40137
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	40176
	.byte	1,2,35,16,0,23
	.word	40393
	.byte	4
	.word	40490
	.byte	16,2,105,9,1,17
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,17
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,16,2,115,9,1,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,17
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,17
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,17
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,17
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,32
	.byte	'IfxGtm_PinMap_setTomTout',0,15,106,17,1,1,1,1,7
	.byte	'config',0,15,106,62
	.word	40495
	.byte	7
	.byte	'outputMode',0,15,106,89
	.word	40500
	.byte	7
	.byte	'padDriver',0,15,106,119
	.word	40569
	.byte	0,28
	.word	13829
	.byte	29
	.word	13874
	.byte	8,0,28
	.word	13976
	.byte	29
	.word	14011
	.byte	29
	.word	14030
	.byte	8,0,28
	.word	14047
	.byte	29
	.word	14082
	.byte	29
	.word	14101
	.byte	8,0,33,10,242,1,9,16,13
	.byte	'enabled',0
	.word	408
	.byte	1,2,35,0,13
	.byte	'triggerPoint',0
	.word	12582
	.byte	4,2,35,2,13
	.byte	'isrPriority',0
	.word	425
	.byte	2,2,35,6,13
	.byte	'isrProvider',0
	.word	8028
	.byte	1,2,35,8,13
	.byte	'outputMode',0
	.word	40500
	.byte	1,2,35,9,13
	.byte	'outputDriver',0
	.word	40569
	.byte	1,2,35,10,13
	.byte	'risingEdgeAtPeriod',0
	.word	408
	.byte	1,2,35,11,13
	.byte	'outputEnabled',0
	.word	408
	.byte	1,2,35,12,0,16,10,68,9,1,17
	.byte	'IfxStdIf_Timer_CountDir_up',0,0,17
	.byte	'IfxStdIf_Timer_CountDir_upAndDown',0,1,17
	.byte	'IfxStdIf_Timer_CountDir_down',0,2,0,33,10,255,1,9,36,13
	.byte	'frequency',0
	.word	12677
	.byte	4,2,35,0,13
	.byte	'isrPriority',0
	.word	425
	.byte	2,2,35,4,13
	.byte	'isrProvider',0
	.word	8028
	.byte	1,2,35,6,13
	.byte	'minResolution',0
	.word	12677
	.byte	4,2,35,8,13
	.byte	'trigger',0
	.word	40991
	.byte	16,2,35,12,13
	.byte	'countDir',0
	.word	41172
	.byte	1,2,35,28,13
	.byte	'startOffset',0
	.word	12677
	.byte	4,2,35,30,0,4
	.word	41274
	.byte	32
	.byte	'IfxStdIf_Timer_initConfig',0,10,163,3,6,1,1,1,1,7
	.byte	'config',0,10,163,3,55
	.word	41421
	.byte	0,33,16,129,1,9,12,13
	.byte	'period',0
	.word	12582
	.byte	4,2,35,0,13
	.byte	'triggerEnabled',0
	.word	408
	.byte	1,2,35,4,13
	.byte	'clockFreq',0
	.word	12677
	.byte	4,2,35,6,13
	.byte	'countDir',0
	.word	41172
	.byte	1,2,35,10,0,14,8
	.word	12577
	.byte	15,1,0,14,4
	.word	425
	.byte	15,1,0,14,8
	.word	12582
	.byte	15,1,0,33,16,143,1,9,56,13
	.byte	'base',0
	.word	41478
	.byte	12,2,35,0,13
	.byte	'gtm',0
	.word	37432
	.byte	4,2,35,12,13
	.byte	'tom',0
	.word	17794
	.byte	4,2,35,16,13
	.byte	'tgc',0
	.word	41562
	.byte	8,2,35,20,13
	.byte	'tomIndex',0
	.word	37683
	.byte	1,2,35,28,13
	.byte	'timerChannel',0
	.word	17799
	.byte	1,2,35,29,13
	.byte	'triggerChannel',0
	.word	17799
	.byte	1,2,35,30,13
	.byte	'channelsMask',0
	.word	41571
	.byte	4,2,35,32,13
	.byte	'offset',0
	.word	12582
	.byte	4,2,35,36,13
	.byte	'tgcGlobalControlDisableUpdate',0
	.word	41580
	.byte	8,2,35,40,13
	.byte	'tgcGlobalControlApplyUpdate',0
	.word	41580
	.byte	8,2,35,48,0
.L265:
	.byte	4
	.word	41589
	.byte	33,16,160,1,9,52,13
	.byte	'base',0
	.word	41274
	.byte	36,2,35,0,13
	.byte	'gtm',0
	.word	37432
	.byte	4,2,35,36,13
	.byte	'tom',0
	.word	37683
	.byte	1,2,35,40,13
	.byte	'timerChannel',0
	.word	17799
	.byte	1,2,35,41,13
	.byte	'triggerOut',0
	.word	40495
	.byte	4,2,35,44,13
	.byte	'clock',0
	.word	38105
	.byte	1,2,35,48,13
	.byte	'irqModeTimer',0
	.word	38664
	.byte	1,2,35,49,13
	.byte	'irqModeTrigger',0
	.word	38664
	.byte	1,2,35,50,0,23
	.word	41832
.L275:
	.byte	4
	.word	41982
.L279:
	.byte	4
	.word	41478
	.byte	14,22
	.word	14120
	.byte	15,21,0
.L283:
	.byte	23
	.word	41997
.L312:
	.byte	4
	.word	41832
	.byte	14,27
	.word	14120
	.byte	15,26,0
.L362:
	.byte	23
	.word	42016
	.byte	14,28
	.word	14120
	.byte	15,27,0
.L370:
	.byte	23
	.word	42030
	.byte	34
	.byte	'__INDIRECT__',0,17,1,1,1,1,1,5
	.byte	'short int',0,2,5,19
	.byte	'__wchar_t',0,17,1,1
	.word	42064
	.byte	19
	.byte	'__size_t',0,17,1,1
	.word	216
	.byte	19
	.byte	'__ptrdiff_t',0,17,1,1
	.word	401
	.byte	35,1,4
	.word	42132
	.byte	19
	.byte	'__codeptr',0,17,1,1
	.word	42134
	.byte	19
	.byte	'__intptr_t',0,17,1,1
	.word	401
	.byte	19
	.byte	'__uintptr_t',0,17,1,1
	.word	216
	.byte	19
	.byte	'Ifx_GTM_ACCEN0_Bits',0,9,79,3
	.word	35796
	.byte	19
	.byte	'Ifx_GTM_ACCEN1_Bits',0,9,85,3
	.word	35707
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG0OUT0_Bits',0,9,95,3
	.word	33869
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG1OUT0_Bits',0,9,105,3
	.word	34029
	.byte	19
	.byte	'Ifx_GTM_AEI_ADDR_XPT_Bits',0,9,113,3
	.word	18726
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_MODE_Bits',0,9,129,1,3
	.word	20149
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR1_Bits',0,9,140,1,3
	.word	20462
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR2_Bits',0,9,147,1,3
	.word	20670
	.byte	19
	.byte	'Ifx_GTM_CLC_Bits',0,9,157,1,3
	.word	32686
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,9,164,1,3
	.word	22753
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,9,172,1,3
	.word	22927
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,9,180,1,3
	.word	23110
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_EN_Bits',0,9,198,1,3
	.word	22192
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_DEN_Bits',0,9,205,1,3
	.word	23410
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_NUM_Bits',0,9,212,1,3
	.word	23293
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,9,219,1,3
	.word	23592
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_DEN_Bits',0,9,226,1,3
	.word	22636
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_NUM_Bits',0,9,233,1,3
	.word	22519
	.byte	19
	.byte	'Ifx_GTM_CTRL_Bits',0,9,243,1,3
	.word	18560
	.byte	19
	.byte	'Ifx_GTM_DTM_CH_CTRL1_Bits',0,9,143,2,3
	.word	30274
	.byte	19
	.byte	'Ifx_GTM_DTM_CH_CTRL2_Bits',0,9,180,2,3
	.word	30791
	.byte	19
	.byte	'Ifx_GTM_DTM_CH_CTRL2_SR_Bits',0,9,217,2,3
	.word	31417
	.byte	19
	.byte	'Ifx_GTM_DTM_CTRL_Bits',0,9,226,2,3
	.word	30121
	.byte	19
	.byte	'Ifx_GTM_DTM_DTV_CH_Bits',0,9,235,2,3
	.word	32363
	.byte	19
	.byte	'Ifx_GTM_DTM_PS_CTRL_Bits',0,9,247,2,3
	.word	32142
	.byte	19
	.byte	'Ifx_GTM_EIRQ_EN_Bits',0,9,129,3,3
	.word	19568
	.byte	19
	.byte	'Ifx_GTM_HW_CONF_Bits',0,9,146,3,3
	.word	19782
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_0_Bits',0,9,154,3,3
	.word	23919
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_2_Bits',0,9,168,3,3
	.word	24054
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_6_Bits',0,9,205,3,3
	.word	24340
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI1_Bits',0,9,219,3,3
	.word	25360
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI_Bits',0,9,228,3,3
	.word	25201
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,9,238,3,3
	.word	33561
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,9,131,4,3
	.word	33154
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,9,144,4,3
	.word	32843
	.byte	19
	.byte	'Ifx_GTM_IRQ_EN_Bits',0,9,154,4,3
	.word	19045
	.byte	19
	.byte	'Ifx_GTM_IRQ_FORCINT_Bits',0,9,164,4,3
	.word	19254
	.byte	19
	.byte	'Ifx_GTM_IRQ_MODE_Bits',0,9,171,4,3
	.word	19456
	.byte	19
	.byte	'Ifx_GTM_IRQ_NOTIFY_Bits',0,9,181,4,3
	.word	18860
	.byte	19
	.byte	'Ifx_GTM_KRST0_Bits',0,9,189,4,3
	.word	35584
	.byte	19
	.byte	'Ifx_GTM_KRST1_Bits',0,9,196,4,3
	.word	35480
	.byte	19
	.byte	'Ifx_GTM_KRSTCLR_Bits',0,9,203,4,3
	.word	35374
	.byte	19
	.byte	'Ifx_GTM_OCS_Bits',0,9,213,4,3
	.word	35214
	.byte	19
	.byte	'Ifx_GTM_ODA_Bits',0,9,221,4,3
	.word	35094
	.byte	19
	.byte	'Ifx_GTM_OTBU0T_Bits',0,9,230,4,3
	.word	34189
	.byte	19
	.byte	'Ifx_GTM_OTBU1T_Bits',0,9,239,4,3
	.word	34331
	.byte	19
	.byte	'Ifx_GTM_OTBU2T_Bits',0,9,248,4,3
	.word	34473
	.byte	19
	.byte	'Ifx_GTM_OTSC0_Bits',0,9,137,5,3
	.word	34800
	.byte	19
	.byte	'Ifx_GTM_OTSS_Bits',0,9,148,5,3
	.word	34615
	.byte	19
	.byte	'Ifx_GTM_REV_Bits',0,9,160,5,3
	.word	18266
	.byte	19
	.byte	'Ifx_GTM_RST_Bits',0,9,167,5,3
	.word	18458
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_BASE_Bits',0,9,174,5,3
	.word	21421
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_CTRL_Bits',0,9,182,5,3
	.word	21284
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_BASE_Bits',0,9,189,5,3
	.word	21671
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_CTRL_Bits',0,9,197,5,3
	.word	21534
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_BASE_Bits',0,9,204,5,3
	.word	21921
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_CTRL_Bits',0,9,212,5,3
	.word	21784
	.byte	19
	.byte	'Ifx_GTM_TBU_CHEN_Bits',0,9,221,5,3
	.word	21129
	.byte	19
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,9,235,5,3
	.word	20859
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNT_Bits',0,9,242,5,3
	.word	26070
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNTS_Bits',0,9,249,5,3
	.word	26292
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CTRL_Bits',0,9,150,6,3
	.word	26890
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECNT_Bits',0,9,157,6,3
	.word	26180
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECTRL_Bits',0,9,164,6,3
	.word	27444
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,9,176,6,3
	.word	28384
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_FE_Bits',0,9,183,6,3
	.word	26774
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_RE_Bits',0,9,190,6,3
	.word	26658
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR0_Bits',0,9,197,6,3
	.word	25860
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR1_Bits',0,9,204,6,3
	.word	25965
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,9,216,6,3
	.word	27776
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,9,228,6,3
	.word	28027
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,9,235,6,3
	.word	28265
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,9,247,6,3
	.word	27563
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUC_Bits',0,9,254,6,3
	.word	26397
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUV_Bits',0,9,135,7,3
	.word	26510
	.byte	19
	.byte	'Ifx_GTM_TIM_IN_SRC_Bits',0,9,156,7,3
	.word	29097
	.byte	19
	.byte	'Ifx_GTM_TIM_INP_VAL_Bits',0,9,165,7,3
	.word	28950
	.byte	19
	.byte	'Ifx_GTM_TIM_RST_Bits',0,9,179,7,3
	.word	29449
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM0_Bits',0,9,186,7,3
	.word	10024
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM1_Bits',0,9,193,7,3
	.word	10134
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CN0_Bits',0,9,200,7,3
	.word	10244
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CTRL_Bits',0,9,218,7,3
	.word	9470
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,9,226,7,3
	.word	10600
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,9,234,7,3
	.word	10747
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,9,241,7,3
	.word	10895
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,9,249,7,3
	.word	10463
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR0_Bits',0,9,128,8,3
	.word	9804
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR1_Bits',0,9,135,8,3
	.word	9914
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_STAT_Bits',0,9,142,8,3
	.word	10354
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,9,151,8,3
	.word	8612
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,9,165,8,3
	.word	11231
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,9,179,8,3
	.word	11519
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,9,200,8,3
	.word	8768
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,9,223,8,3
	.word	8162
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,9,237,8,3
	.word	9200
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,9,251,8,3
	.word	11807
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,9,137,9,3
	.word	12095
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,9,146,9,3
	.word	14819
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,9,160,9,3
	.word	15682
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,9,174,9,3
	.word	15970
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,9,195,9,3
	.word	14975
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,9,218,9,3
	.word	14369
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,9,232,9,3
	.word	15407
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,9,246,9,3
	.word	16258
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,9,132,10,3
	.word	16546
	.byte	19
	.byte	'Ifx_GTM_ACCEN0',0,9,145,10,3
	.word	36325
	.byte	19
	.byte	'Ifx_GTM_ACCEN1',0,9,153,10,3
	.word	35756
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG0OUT0',0,9,161,10,3
	.word	33989
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG1OUT0',0,9,169,10,3
	.word	34149
	.byte	19
	.byte	'Ifx_GTM_AEI_ADDR_XPT',0,9,177,10,3
	.word	18820
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_MODE',0,9,185,10,3
	.word	20422
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR1',0,9,193,10,3
	.word	20630
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR2',0,9,201,10,3
	.word	20749
	.byte	19
	.byte	'Ifx_GTM_CLC',0,9,209,10,3
	.word	32803
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL',0,9,217,10,3
	.word	22832
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL',0,9,225,10,3
	.word	23025
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL',0,9,233,10,3
	.word	23208
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_EN',0,9,241,10,3
	.word	22479
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_DEN',0,9,249,10,3
	.word	23487
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_NUM',0,9,129,11,3
	.word	23370
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL',0,9,137,11,3
	.word	23671
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_DEN',0,9,145,11,3
	.word	22713
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_NUM',0,9,153,11,3
	.word	22596
	.byte	19
	.byte	'Ifx_GTM_CTRL',0,9,161,11,3
	.word	18686
	.byte	19
	.byte	'Ifx_GTM_DTM_CH_CTRL1',0,9,169,11,3
	.word	30751
	.byte	19
	.byte	'Ifx_GTM_DTM_CH_CTRL2',0,9,177,11,3
	.word	31377
	.byte	19
	.byte	'Ifx_GTM_DTM_CH_CTRL2_SR',0,9,185,11,3
	.word	32102
	.byte	19
	.byte	'Ifx_GTM_DTM_CTRL',0,9,193,11,3
	.word	30234
	.byte	19
	.byte	'Ifx_GTM_DTM_DTV_CH',0,9,201,11,3
	.word	32479
	.byte	19
	.byte	'Ifx_GTM_DTM_PS_CTRL',0,9,209,11,3
	.word	32323
	.byte	19
	.byte	'Ifx_GTM_EIRQ_EN',0,9,217,11,3
	.word	19742
	.byte	19
	.byte	'Ifx_GTM_HW_CONF',0,9,225,11,3
	.word	20109
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_0',0,9,233,11,3
	.word	24014
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_2',0,9,241,11,3
	.word	24300
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_6',0,9,249,11,3
	.word	25152
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI1',0,9,129,12,3
	.word	25617
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI',0,9,137,12,3
	.word	25320
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL',0,9,145,12,3
	.word	33689
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL',0,9,153,12,3
	.word	33455
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL',0,9,161,12,3
	.word	33027
	.byte	19
	.byte	'Ifx_GTM_IRQ_EN',0,9,169,12,3
	.word	19214
	.byte	19
	.byte	'Ifx_GTM_IRQ_FORCINT',0,9,177,12,3
	.word	19416
	.byte	19
	.byte	'Ifx_GTM_IRQ_MODE',0,9,185,12,3
	.word	19528
	.byte	19
	.byte	'Ifx_GTM_IRQ_NOTIFY',0,9,193,12,3
	.word	19005
	.byte	19
	.byte	'Ifx_GTM_KRST0',0,9,201,12,3
	.word	35667
	.byte	19
	.byte	'Ifx_GTM_KRST1',0,9,209,12,3
	.word	35544
	.byte	19
	.byte	'Ifx_GTM_KRSTCLR',0,9,217,12,3
	.word	35440
	.byte	19
	.byte	'Ifx_GTM_OCS',0,9,225,12,3
	.word	35334
	.byte	19
	.byte	'Ifx_GTM_ODA',0,9,233,12,3
	.word	35174
	.byte	19
	.byte	'Ifx_GTM_OTBU0T',0,9,241,12,3
	.word	34291
	.byte	19
	.byte	'Ifx_GTM_OTBU1T',0,9,249,12,3
	.word	34433
	.byte	19
	.byte	'Ifx_GTM_OTBU2T',0,9,129,13,3
	.word	34575
	.byte	19
	.byte	'Ifx_GTM_OTSC0',0,9,137,13,3
	.word	35054
	.byte	19
	.byte	'Ifx_GTM_OTSS',0,9,145,13,3
	.word	34760
	.byte	19
	.byte	'Ifx_GTM_REV',0,9,153,13,3
	.word	18418
	.byte	19
	.byte	'Ifx_GTM_RST',0,9,161,13,3
	.word	18520
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_BASE',0,9,169,13,3
	.word	21494
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_CTRL',0,9,177,13,3
	.word	21381
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_BASE',0,9,185,13,3
	.word	21744
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_CTRL',0,9,193,13,3
	.word	21631
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_BASE',0,9,201,13,3
	.word	21994
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_CTRL',0,9,209,13,3
	.word	21881
	.byte	19
	.byte	'Ifx_GTM_TBU_CHEN',0,9,217,13,3
	.word	21244
	.byte	19
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC',0,9,225,13,3
	.word	21069
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNT',0,9,233,13,3
	.word	26140
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNTS',0,9,241,13,3
	.word	26357
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CTRL',0,9,249,13,3
	.word	27404
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECNT',0,9,129,14,3
	.word	26252
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECTRL',0,9,137,14,3
	.word	27523
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN',0,9,145,14,3
	.word	28602
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_FE',0,9,153,14,3
	.word	26850
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_RE',0,9,161,14,3
	.word	26734
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR0',0,9,169,14,3
	.word	25925
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR1',0,9,177,14,3
	.word	26030
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN',0,9,185,14,3
	.word	27987
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT',0,9,193,14,3
	.word	28225
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE',0,9,201,14,3
	.word	28344
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY',0,9,209,14,3
	.word	27736
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUC',0,9,217,14,3
	.word	26470
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUV',0,9,225,14,3
	.word	26618
	.byte	19
	.byte	'Ifx_GTM_TIM_IN_SRC',0,9,233,14,3
	.word	29409
	.byte	19
	.byte	'Ifx_GTM_TIM_INP_VAL',0,9,241,14,3
	.word	29057
	.byte	19
	.byte	'Ifx_GTM_TIM_RST',0,9,249,14,3
	.word	29652
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM0',0,9,129,15,3
	.word	10094
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM1',0,9,137,15,3
	.word	10204
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CN0',0,9,145,15,3
	.word	10314
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CTRL',0,9,153,15,3
	.word	9764
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN',0,9,161,15,3
	.word	10707
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT',0,9,169,15,3
	.word	10855
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE',0,9,177,15,3
	.word	10974
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY',0,9,185,15,3
	.word	10560
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR0',0,9,193,15,3
	.word	9874
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR1',0,9,201,15,3
	.word	9984
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_STAT',0,9,209,15,3
	.word	10423
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB',0,9,217,15,3
	.word	8728
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL',0,9,225,15,3
	.word	11479
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT',0,9,233,15,3
	.word	11767
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL',0,9,241,15,3
	.word	9160
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL',0,9,249,15,3
	.word	8572
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG',0,9,129,16,3
	.word	9430
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL',0,9,137,16,3
	.word	12055
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT',0,9,145,16,3
	.word	12343
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB',0,9,153,16,3
	.word	14935
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL',0,9,161,16,3
	.word	15930
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT',0,9,169,16,3
	.word	16218
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL',0,9,177,16,3
	.word	15367
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL',0,9,185,16,3
	.word	14779
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG',0,9,193,16,3
	.word	15637
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL',0,9,201,16,3
	.word	16506
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT',0,9,209,16,3
	.word	16794
	.byte	3
	.word	22872
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5',0,9,223,16,3
	.word	48956
	.byte	3
	.word	23065
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6',0,9,229,16,3
	.word	48989
	.byte	3
	.word	23248
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7',0,9,235,16,3
	.word	49021
	.byte	3
	.word	23527
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK',0,9,242,16,3
	.word	49053
	.byte	3
	.word	23711
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK',0,9,248,16,3
	.word	49084
	.byte	3
	.word	33729
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN',0,9,254,16,3
	.word	49116
	.byte	3
	.word	33504
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T',0,9,132,17,3
	.word	49151
	.byte	3
	.word	33076
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM',0,9,139,17,3
	.word	49184
	.byte	3
	.word	28651
	.byte	19
	.byte	'Ifx_GTM_TIM_CH',0,9,161,17,3
	.word	49219
	.byte	3
	.word	11014
	.byte	19
	.byte	'Ifx_GTM_TOM_CH',0,9,178,17,3
	.word	49248
	.byte	3
	.word	20789
	.byte	19
	.byte	'Ifx_GTM_BRIDGE',0,9,196,17,3
	.word	49277
	.byte	3
	.word	23756
	.byte	19
	.byte	'Ifx_GTM_CMU',0,9,209,17,3
	.word	49306
	.byte	3
	.word	32528
	.byte	19
	.byte	'Ifx_GTM_DTM',0,9,220,17,3
	.word	49332
	.byte	3
	.word	25657
	.byte	19
	.byte	'Ifx_GTM_ICM',0,9,234,17,3
	.word	49358
	.byte	3
	.word	33779
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL',0,9,243,17,3
	.word	49384
	.byte	3
	.word	22034
	.byte	19
	.byte	'Ifx_GTM_TBU',0,9,255,17,3
	.word	49415
	.byte	3
	.word	29727
	.byte	19
	.byte	'Ifx_GTM_TIM',0,9,150,18,3
	.word	49441
	.byte	3
	.word	16875
	.byte	19
	.byte	'Ifx_GTM_TOM',0,9,199,18,3
	.word	49467
	.byte	3
	.word	36376
	.byte	19
	.byte	'Ifx_GTM',0,9,138,19,3
	.word	49493
	.byte	19
	.byte	'_iob_flag_t',0,12,82,25
	.word	425
	.byte	14,24
	.word	14133
	.byte	15,5,0,36
	.byte	'verboseLevelStr',0,18,29,20
	.word	49535
	.byte	1,1,19
	.byte	'uint8',0,19,89,24
	.word	408
	.byte	19
	.byte	'sint16',0,19,90,24
	.word	42064
	.byte	19
	.byte	'uint16',0,19,91,24
	.word	425
	.byte	5
	.byte	'long int',0,4,5,19
	.byte	'sint32',0,19,92,24
	.word	49614
	.byte	19
	.byte	'uint32',0,19,93,24
	.word	12582
	.byte	19
	.byte	'float32',0,19,94,24
	.word	12677
	.byte	19
	.byte	'boolean',0,19,104,24
	.word	408
	.byte	5
	.byte	'long long int',0,8,5,19
	.byte	'sint64',0,14,36,28
	.word	49688
	.byte	19
	.byte	'uint64',0,14,37,28
	.word	294
	.byte	19
	.byte	'pvoid',0,14,40,28
	.word	320
	.byte	19
	.byte	'Ifx_TickTime',0,14,43,28
	.word	49688
	.byte	19
	.byte	'Ifx_Priority',0,14,67,16
	.word	425
	.byte	19
	.byte	'Ifx_TimerValue',0,14,68,16
	.word	12582
	.byte	19
	.byte	'Ifx_ActiveState',0,14,84,3
	.word	39168
	.byte	19
	.byte	'Ifx_P_ACCEN0_Bits',0,3,79,3
	.word	6318
	.byte	19
	.byte	'Ifx_P_ACCEN1_Bits',0,3,85,3
	.word	6231
	.byte	19
	.byte	'Ifx_P_ESR_Bits',0,3,107,3
	.word	3281
	.byte	19
	.byte	'Ifx_P_ID_Bits',0,3,115,3
	.word	1334
	.byte	19
	.byte	'Ifx_P_IN_Bits',0,3,137,1,3
	.word	2329
	.byte	19
	.byte	'Ifx_P_IOCR0_Bits',0,3,150,1,3
	.word	1462
	.byte	19
	.byte	'Ifx_P_IOCR12_Bits',0,3,163,1,3
	.word	2109
	.byte	19
	.byte	'Ifx_P_IOCR4_Bits',0,3,176,1,3
	.word	1677
	.byte	19
	.byte	'Ifx_P_IOCR8_Bits',0,3,189,1,3
	.word	1892
	.byte	19
	.byte	'Ifx_P_OMCR0_Bits',0,3,200,1,3
	.word	4861
	.byte	19
	.byte	'Ifx_P_OMCR12_Bits',0,3,210,1,3
	.word	5385
	.byte	19
	.byte	'Ifx_P_OMCR4_Bits',0,3,221,1,3
	.word	5035
	.byte	19
	.byte	'Ifx_P_OMCR8_Bits',0,3,232,1,3
	.word	5209
	.byte	19
	.byte	'Ifx_P_OMCR_Bits',0,3,254,1,3
	.word	5874
	.byte	19
	.byte	'Ifx_P_OMR_Bits',0,3,163,2,3
	.word	763
	.byte	19
	.byte	'Ifx_P_OMSR0_Bits',0,3,173,2,3
	.word	4198
	.byte	19
	.byte	'Ifx_P_OMSR12_Bits',0,3,184,2,3
	.word	4686
	.byte	19
	.byte	'Ifx_P_OMSR4_Bits',0,3,195,2,3
	.word	4345
	.byte	19
	.byte	'Ifx_P_OMSR8_Bits',0,3,206,2,3
	.word	4514
	.byte	19
	.byte	'Ifx_P_OMSR_Bits',0,3,228,2,3
	.word	5541
	.byte	19
	.byte	'Ifx_P_OUT_Bits',0,3,250,2,3
	.word	447
	.byte	19
	.byte	'Ifx_P_PCSR_Bits',0,3,135,3,3
	.word	3987
	.byte	19
	.byte	'Ifx_P_PDISC_Bits',0,3,157,3,3
	.word	3621
	.byte	19
	.byte	'Ifx_P_PDR0_Bits',0,3,178,3,3
	.word	2652
	.byte	19
	.byte	'Ifx_P_PDR1_Bits',0,3,199,3,3
	.word	2956
	.byte	19
	.byte	'Ifx_P_ACCEN0',0,3,212,3,3
	.word	6845
	.byte	19
	.byte	'Ifx_P_ACCEN1',0,3,220,3,3
	.word	6278
	.byte	19
	.byte	'Ifx_P_ESR',0,3,228,3,3
	.word	3572
	.byte	19
	.byte	'Ifx_P_ID',0,3,236,3,3
	.word	1413
	.byte	19
	.byte	'Ifx_P_IN',0,3,244,3,3
	.word	2603
	.byte	19
	.byte	'Ifx_P_IOCR0',0,3,252,3,3
	.word	1637
	.byte	19
	.byte	'Ifx_P_IOCR12',0,3,132,4,3
	.word	2289
	.byte	19
	.byte	'Ifx_P_IOCR4',0,3,140,4,3
	.word	1852
	.byte	19
	.byte	'Ifx_P_IOCR8',0,3,148,4,3
	.word	2069
	.byte	19
	.byte	'Ifx_P_OMCR',0,3,156,4,3
	.word	6182
	.byte	19
	.byte	'Ifx_P_OMCR0',0,3,164,4,3
	.word	4995
	.byte	19
	.byte	'Ifx_P_OMCR12',0,3,172,4,3
	.word	5501
	.byte	19
	.byte	'Ifx_P_OMCR4',0,3,180,4,3
	.word	5169
	.byte	19
	.byte	'Ifx_P_OMCR8',0,3,188,4,3
	.word	5345
	.byte	19
	.byte	'Ifx_P_OMR',0,3,196,4,3
	.word	1294
	.byte	19
	.byte	'Ifx_P_OMSR',0,3,204,4,3
	.word	5834
	.byte	19
	.byte	'Ifx_P_OMSR0',0,3,212,4,3
	.word	4305
	.byte	19
	.byte	'Ifx_P_OMSR12',0,3,220,4,3
	.word	4821
	.byte	19
	.byte	'Ifx_P_OMSR4',0,3,228,4,3
	.word	4474
	.byte	19
	.byte	'Ifx_P_OMSR8',0,3,236,4,3
	.word	4646
	.byte	19
	.byte	'Ifx_P_OUT',0,3,244,4,3
	.word	723
	.byte	19
	.byte	'Ifx_P_PCSR',0,3,252,4,3
	.word	4158
	.byte	19
	.byte	'Ifx_P_PDISC',0,3,132,5,3
	.word	3947
	.byte	19
	.byte	'Ifx_P_PDR0',0,3,140,5,3
	.word	2916
	.byte	19
	.byte	'Ifx_P_PDR1',0,3,148,5,3
	.word	3232
	.byte	3
	.word	6885
	.byte	19
	.byte	'Ifx_P',0,3,193,5,3
	.word	50985
	.byte	16,20,153,10,9,1,17
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,17
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,17
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,19
	.byte	'IfxScu_WDTCON1_IR',0,20,158,10,3
	.word	51005
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,21,45,16,4,11
	.byte	'EN0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_ACCEN0_Bits',0,21,79,3
	.word	51127
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,21,82,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN1_Bits',0,21,85,3
	.word	51684
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,21,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	216
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,21,94,3
	.word	51761
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,21,97,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	408
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	408
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	408
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	408
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	408
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	408
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	408
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON0_Bits',0,21,111,3
	.word	51897
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,21,114,16,4,11
	.byte	'CANDIV',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	408
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	408
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	408
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	408
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	408
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON1_Bits',0,21,126,3
	.word	52179
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,21,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON2_Bits',0,21,135,1,3
	.word	52417
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,21,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	408
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	408
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	408
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	408
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	408
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON3_Bits',0,21,149,1,3
	.word	52545
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,21,152,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	408
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	408
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	408
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	408
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	408
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON4_Bits',0,21,163,1,3
	.word	52772
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,21,166,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON5_Bits',0,21,172,1,3
	.word	52991
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,21,175,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	408
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	216
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON6_Bits',0,21,179,1,3
	.word	53119
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,21,182,1,16,4,11
	.byte	'CHREV',0,1
	.word	408
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	408
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	408
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	408
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CHIPID_Bits',0,21,193,1,3
	.word	53219
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,21,196,1,16,4,11
	.byte	'PWD',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	216
	.byte	22,6,2,35,0,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	5,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_DTSCON_Bits',0,21,204,1,3
	.word	53427
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,21,207,1,16,4,11
	.byte	'LOWER',0,2
	.word	425
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	408
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	425
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_DTSLIM_Bits',0,21,216,1,3
	.word	53592
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,21,219,1,16,4,11
	.byte	'RESULT',0,2
	.word	425
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	408
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,21,226,1,3
	.word	53775
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,21,229,1,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	408
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	408
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	216
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	408
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	408
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	408
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EICR_Bits',0,21,248,1,3
	.word	53929
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,21,251,1,16,4,11
	.byte	'INTF0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	216
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_EIFR_Bits',0,21,134,2,3
	.word	54293
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,21,137,2,16,4,11
	.byte	'POL',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	425
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	408
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	408
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	408
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	408
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_EMSR_Bits',0,21,150,2,3
	.word	54504
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,21,153,2,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	425
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	216
	.byte	23,0,2,35,0,0,19
	.byte	'Ifx_SCU_ESRCFG_Bits',0,21,158,2,3
	.word	54756
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,21,161,2,16,4,11
	.byte	'ARI',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_ESROCFG_Bits',0,21,166,2,3
	.word	54874
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,21,169,2,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVR13CON_Bits',0,21,176,2,3
	.word	54985
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,21,179,2,16,4,11
	.byte	'ADC13V',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	408
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,21,186,2,3
	.word	55148
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,21,189,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	408
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	425
	.byte	10,0,2,35,0,11
	.byte	'SWDOVMOD',0,1
	.word	408
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	408
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	408
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	425
	.byte	8,2,2,35,2,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,21,201,2,3
	.word	55310
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,21,204,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	408
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVROVMON_Bits',0,21,212,2,3
	.word	55588
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,21,215,2,16,4,11
	.byte	'reserved_0',0,4
	.word	216
	.byte	28,4,2,35,0,11
	.byte	'RSTSWDOFF',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,21,222,2,3
	.word	55767
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,21,225,2,16,4,11
	.byte	'SD33P',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	408
	.byte	4,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	408
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	216
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,21,232,2,3
	.word	55927
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,21,235,2,16,4,11
	.byte	'SDFREQSPRD',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	408
	.byte	4,0,2,35,0,11
	.byte	'TON',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'TOFF',0,1
	.word	408
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'SYNCDIV',0,1
	.word	408
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,21,244,2,3
	.word	56088
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,21,247,2,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'STBS',0,1
	.word	408
	.byte	2,6,2,35,1,11
	.byte	'STSP',0,1
	.word	408
	.byte	2,4,2,35,1,11
	.byte	'NS',0,1
	.word	408
	.byte	2,2,2,35,1,11
	.byte	'OL',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'PIAD',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'ADCMODE',0,1
	.word	408
	.byte	4,4,2,35,2,11
	.byte	'ADCLPF',0,1
	.word	408
	.byte	2,2,2,35,2,11
	.byte	'ADCLSB',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	408
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,21,134,3,3
	.word	56280
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,21,137,3,16,4,11
	.byte	'SDOLCON',0,1
	.word	408
	.byte	7,1,2,35,0,11
	.byte	'MODSEL',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'MODLOW',0,1
	.word	408
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	408
	.byte	6,2,2,35,2,11
	.byte	'MODMAN',0,1
	.word	408
	.byte	2,0,2,35,2,11
	.byte	'MODHIGH',0,1
	.word	408
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,21,147,3,3
	.word	56576
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,21,150,3,16,4,11
	.byte	'EVR13',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	2,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'SCMOD',0,1
	.word	408
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	216
	.byte	18,0,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,21,164,3,3
	.word	56791
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,21,167,3,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	408
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,21,175,3,3
	.word	57080
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,21,178,3,16,4,11
	.byte	'EN0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	408
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	425
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	408
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	408
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	408
	.byte	8,0,2,35,3,0,19
	.byte	'Ifx_SCU_EXTCON_Bits',0,21,189,3,3
	.word	57259
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,21,192,3,16,4,11
	.byte	'STEP',0,2
	.word	425
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	408
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	425
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_FDR_Bits',0,21,200,3,3
	.word	57477
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,21,203,3,16,4,11
	.byte	'FS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	8,0,2,35,3,0,19
	.byte	'Ifx_SCU_FMR_Bits',0,21,223,3,3
	.word	57640
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,21,226,3,16,4,11
	.byte	'MODREV',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_ID_Bits',0,21,231,3,3
	.word	57976
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,21,234,3,16,4,11
	.byte	'IPEN00',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	408
	.byte	2,0,2,35,3,0,19
	.byte	'Ifx_SCU_IGCR_Bits',0,21,130,4,3
	.word	58083
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,21,133,4,16,4,11
	.byte	'P0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_IN_Bits',0,21,138,4,3
	.word	58535
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,21,141,4,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	408
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_IOCR_Bits',0,21,148,4,3
	.word	58634
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,21,151,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	425
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,21,157,4,3
	.word	58784
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,21,160,4,16,4,11
	.byte	'SEED',0,4
	.word	216
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	408
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	408
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,21,167,4,3
	.word	58933
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,21,170,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	216
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,21,175,4,3
	.word	59094
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,21,178,4,16,4,11
	.byte	'reserved_0',0,2
	.word	425
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	425
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_LCLCON0_Bits',0,21,184,4,3
	.word	59224
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,21,187,4,16,4,11
	.byte	'LCLT0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_LCLTEST_Bits',0,21,192,4,3
	.word	59358
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,21,195,4,16,4,11
	.byte	'DEPT',0,1
	.word	408
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	425
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_MANID_Bits',0,21,200,4,3
	.word	59473
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,21,203,4,16,4,11
	.byte	'PS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	425
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	425
	.byte	14,0,2,35,2,0,19
	.byte	'Ifx_SCU_OMR_Bits',0,21,211,4,3
	.word	59584
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,21,214,4,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	408
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	408
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	408
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	408
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	408
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	8,0,2,35,3,0,19
	.byte	'Ifx_SCU_OSCCON_Bits',0,21,231,4,3
	.word	59742
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,21,234,4,16,4,11
	.byte	'P0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_OUT_Bits',0,21,239,4,3
	.word	60082
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,21,242,4,16,4,11
	.byte	'CSEL0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	425
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	6,0,2,35,3,0,19
	.byte	'Ifx_SCU_OVCCON_Bits',0,21,255,4,3
	.word	60183
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,21,130,5,16,4,11
	.byte	'OVEN0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	216
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,21,136,5,3
	.word	60450
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,21,139,5,16,4,11
	.byte	'PDIS0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDISC_Bits',0,21,144,5,3
	.word	60586
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,21,147,5,16,4,11
	.byte	'PD0',0,1
	.word	408
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	408
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	216
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDR_Bits',0,21,154,5,3
	.word	60697
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,21,157,5,16,4,11
	.byte	'PDR0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	216
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDRR_Bits',0,21,168,5,3
	.word	60830
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,21,171,5,16,4,11
	.byte	'VCOBYP',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	425
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	408
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	408
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_PLLCON0_Bits',0,21,188,5,3
	.word	61033
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,21,191,5,16,4,11
	.byte	'K2DIV',0,1
	.word	408
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	408
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	408
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	425
	.byte	9,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLCON1_Bits',0,21,199,5,3
	.word	61389
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,21,202,5,16,4,11
	.byte	'MODCFG',0,2
	.word	425
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLCON2_Bits',0,21,206,5,3
	.word	61567
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,21,209,5,16,4,11
	.byte	'VCOBYP',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	425
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	408
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	408
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	408
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,21,226,5,3
	.word	61667
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,21,229,5,16,4,11
	.byte	'K2DIV',0,1
	.word	408
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	408
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	408
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	408
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	425
	.byte	9,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,21,237,5,3
	.word	62037
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,21,240,5,16,4,11
	.byte	'VCOBYST',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	216
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,21,249,5,3
	.word	62223
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,21,252,5,16,4,11
	.byte	'VCOBYST',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	216
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,21,135,6,3
	.word	62421
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,21,138,6,16,4,11
	.byte	'REQSLP',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	408
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	408
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	216
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR_Bits',0,21,145,6,3
	.word	62654
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,21,148,6,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	408
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	408
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	408
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	408
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	408
	.byte	2,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'WUTWKEN',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	408
	.byte	2,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,21,174,6,3
	.word	62806
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,21,177,6,16,4,11
	.byte	'reserved_0',0,2
	.word	425
	.byte	12,4,2,35,0,11
	.byte	'IRADIS',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	216
	.byte	14,5,2,35,0,11
	.byte	'STBYEVEN',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	408
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,21,185,6,3
	.word	63365
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR3_Bits',0,21,188,6,16,4,11
	.byte	'WUTREL',0,4
	.word	216
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	4,4,2,35,3,11
	.byte	'WUTDIV',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'WUTEN',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR3_Bits',0,21,196,6,3
	.word	63548
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,21,199,6,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	408
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	408
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	408
	.byte	2,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'WUTWKP',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'WUTOVRUN',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'WUTWKEN',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	408
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	408
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	425
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	408
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'WUTEN',0,1
	.word	408
	.byte	1,2,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	408
	.byte	1,1,2,35,3,11
	.byte	'WUTRUN',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,21,226,6,3
	.word	63717
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,21,229,6,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'WUTWKPCLR',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'WUTOVRUNCLR',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	425
	.byte	14,0,2,35,2,0,19
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,21,242,6,3
	.word	64284
	.byte	10
	.byte	'_Ifx_SCU_PMSWUTCNT_Bits',0,21,245,6,16,4,11
	.byte	'WUTCNT',0,4
	.word	216
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	408
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	408
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWUTCNT_Bits',0,21,250,6,3
	.word	64600
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,21,253,6,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	425
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	408
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	408
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	408
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_RSTCON2_Bits',0,21,135,7,3
	.word	64719
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,21,138,7,16,4,11
	.byte	'ESR0',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	408
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	408
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	408
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	408
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	408
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	408
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_RSTCON_Bits',0,21,149,7,3
	.word	64928
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,21,152,7,16,4,11
	.byte	'ESR0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	408
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	408
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	408
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	408
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	408
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	408
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	408
	.byte	3,0,2,35,3,0,19
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,21,175,7,3
	.word	65139
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,21,178,7,16,4,11
	.byte	'HBT',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	216
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_SCU_SAFECON_Bits',0,21,182,7,3
	.word	65571
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,21,185,7,16,4,11
	.byte	'HWCFG',0,1
	.word	408
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	408
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	408
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	408
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	408
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	408
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	408
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	408
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	408
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	408
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	408
	.byte	7,0,2,35,3,0,19
	.byte	'Ifx_SCU_STSTAT_Bits',0,21,198,7,3
	.word	65667
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,21,201,7,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	216
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,21,206,7,3
	.word	65927
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,21,209,7,16,4,11
	.byte	'CCTRIG0',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	408
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	408
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	216
	.byte	23,0,2,35,0,0,19
	.byte	'Ifx_SCU_SYSCON_Bits',0,21,218,7,3
	.word	66052
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,21,221,7,16,4,11
	.byte	'ESR0T',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,21,228,7,3
	.word	66249
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,21,231,7,16,4,11
	.byte	'ESR0T',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,21,238,7,3
	.word	66402
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,21,241,7,16,4,11
	.byte	'ESR0T',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSET_Bits',0,21,248,7,3
	.word	66555
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,21,251,7,16,4,11
	.byte	'ESR0T',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	216
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,21,130,8,3
	.word	66708
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,21,133,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	8146
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	8146
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,21,139,8,3
	.word	66863
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,21,142,8,16,4,11
	.byte	'reserved_0',0,1
	.word	408
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	408
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,21,154,8,3
	.word	66993
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,21,157,8,16,4,11
	.byte	'AE',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	408
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,21,170,8,3
	.word	67231
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,21,173,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	8146
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	8146
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	8146
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	8146
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,21,179,8,3
	.word	67454
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,21,182,8,16,4,11
	.byte	'CLRIRF',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	408
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,21,195,8,3
	.word	67580
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,21,198,8,16,4,11
	.byte	'AE',0,1
	.word	408
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	408
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	408
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	408
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	408
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	408
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	408
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	408
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	408
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	408
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	425
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,21,211,8,3
	.word	67832
	.byte	12,21,219,8,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51127
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN0',0,21,224,8,3
	.word	68051
	.byte	12,21,227,8,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51684
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN1',0,21,232,8,3
	.word	68115
	.byte	12,21,235,8,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51761
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ARSTDIS',0,21,240,8,3
	.word	68179
	.byte	12,21,243,8,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51897
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON0',0,21,248,8,3
	.word	68244
	.byte	12,21,251,8,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52179
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON1',0,21,128,9,3
	.word	68309
	.byte	12,21,131,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52417
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON2',0,21,136,9,3
	.word	68374
	.byte	12,21,139,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52545
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON3',0,21,144,9,3
	.word	68439
	.byte	12,21,147,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52772
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON4',0,21,152,9,3
	.word	68504
	.byte	12,21,155,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52991
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON5',0,21,160,9,3
	.word	68569
	.byte	12,21,163,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53119
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON6',0,21,168,9,3
	.word	68634
	.byte	12,21,171,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53219
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CHIPID',0,21,176,9,3
	.word	68699
	.byte	12,21,179,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53427
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSCON',0,21,184,9,3
	.word	68763
	.byte	12,21,187,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53592
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSLIM',0,21,192,9,3
	.word	68827
	.byte	12,21,195,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53775
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSSTAT',0,21,200,9,3
	.word	68891
	.byte	12,21,203,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53929
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EICR',0,21,208,9,3
	.word	68956
	.byte	12,21,211,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54293
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EIFR',0,21,216,9,3
	.word	69018
	.byte	12,21,219,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54504
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EMSR',0,21,224,9,3
	.word	69080
	.byte	12,21,227,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54756
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ESRCFG',0,21,232,9,3
	.word	69142
	.byte	12,21,235,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54874
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ESROCFG',0,21,240,9,3
	.word	69206
	.byte	12,21,243,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54985
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVR13CON',0,21,248,9,3
	.word	69271
	.byte	12,21,251,9,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55148
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRADCSTAT',0,21,128,10,3
	.word	69337
	.byte	12,21,131,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55310
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRMONCTRL',0,21,136,10,3
	.word	69405
	.byte	12,21,139,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55588
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVROVMON',0,21,144,10,3
	.word	69473
	.byte	12,21,147,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55767
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRRSTCON',0,21,152,10,3
	.word	69539
	.byte	12,21,155,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55927
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,21,160,10,3
	.word	69606
	.byte	12,21,163,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56088
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL1',0,21,168,10,3
	.word	69675
	.byte	12,21,171,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56280
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL2',0,21,176,10,3
	.word	69743
	.byte	12,21,179,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56576
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL3',0,21,184,10,3
	.word	69811
	.byte	12,21,187,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56791
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSTAT',0,21,192,10,3
	.word	69879
	.byte	12,21,195,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57080
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRUVMON',0,21,200,10,3
	.word	69944
	.byte	12,21,203,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57259
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EXTCON',0,21,208,10,3
	.word	70010
	.byte	12,21,211,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57477
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_FDR',0,21,216,10,3
	.word	70074
	.byte	12,21,219,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57640
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_FMR',0,21,224,10,3
	.word	70135
	.byte	12,21,227,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57976
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ID',0,21,232,10,3
	.word	70196
	.byte	12,21,235,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58083
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IGCR',0,21,240,10,3
	.word	70256
	.byte	12,21,243,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58535
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IN',0,21,248,10,3
	.word	70318
	.byte	12,21,251,10,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58634
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IOCR',0,21,128,11,3
	.word	70378
	.byte	12,21,131,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58784
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL0',0,21,136,11,3
	.word	70440
	.byte	12,21,139,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58933
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL1',0,21,144,11,3
	.word	70508
	.byte	12,21,147,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59094
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL2',0,21,152,11,3
	.word	70576
	.byte	12,21,155,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59224
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LCLCON0',0,21,160,11,3
	.word	70644
	.byte	12,21,163,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59358
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LCLTEST',0,21,168,11,3
	.word	70709
	.byte	12,21,171,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59473
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_MANID',0,21,176,11,3
	.word	70774
	.byte	12,21,179,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59584
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OMR',0,21,184,11,3
	.word	70837
	.byte	12,21,187,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59742
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OSCCON',0,21,192,11,3
	.word	70898
	.byte	12,21,195,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60082
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OUT',0,21,200,11,3
	.word	70962
	.byte	12,21,203,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60183
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OVCCON',0,21,208,11,3
	.word	71023
	.byte	12,21,211,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60450
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OVCENABLE',0,21,216,11,3
	.word	71087
	.byte	12,21,219,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60586
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDISC',0,21,224,11,3
	.word	71154
	.byte	12,21,227,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60697
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDR',0,21,232,11,3
	.word	71217
	.byte	12,21,235,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60830
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDRR',0,21,240,11,3
	.word	71278
	.byte	12,21,243,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61033
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON0',0,21,248,11,3
	.word	71340
	.byte	12,21,251,11,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61389
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON1',0,21,128,12,3
	.word	71405
	.byte	12,21,131,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61567
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON2',0,21,136,12,3
	.word	71470
	.byte	12,21,139,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61667
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYCON0',0,21,144,12,3
	.word	71535
	.byte	12,21,147,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62037
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYCON1',0,21,152,12,3
	.word	71604
	.byte	12,21,155,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62223
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYSTAT',0,21,160,12,3
	.word	71673
	.byte	12,21,163,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62421
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLSTAT',0,21,168,12,3
	.word	71742
	.byte	12,21,171,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62654
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR',0,21,176,12,3
	.word	71807
	.byte	12,21,179,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62806
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR0',0,21,184,12,3
	.word	71870
	.byte	12,21,187,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63365
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR1',0,21,192,12,3
	.word	71935
	.byte	12,21,195,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63548
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR3',0,21,200,12,3
	.word	72000
	.byte	12,21,203,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63717
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWSTAT',0,21,208,12,3
	.word	72065
	.byte	12,21,211,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64284
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWSTATCLR',0,21,216,12,3
	.word	72131
	.byte	12,21,219,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64600
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWUTCNT',0,21,224,12,3
	.word	72200
	.byte	12,21,227,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64928
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON',0,21,232,12,3
	.word	72267
	.byte	12,21,235,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64719
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON2',0,21,240,12,3
	.word	72331
	.byte	12,21,243,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65139
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTSTAT',0,21,248,12,3
	.word	72396
	.byte	12,21,251,12,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65571
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SAFECON',0,21,128,13,3
	.word	72461
	.byte	12,21,131,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65667
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STSTAT',0,21,136,13,3
	.word	72526
	.byte	12,21,139,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65927
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SWRSTCON',0,21,144,13,3
	.word	72590
	.byte	12,21,147,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66052
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SYSCON',0,21,152,13,3
	.word	72656
	.byte	12,21,155,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66249
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPCLR',0,21,160,13,3
	.word	72720
	.byte	12,21,163,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66402
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPDIS',0,21,168,13,3
	.word	72785
	.byte	12,21,171,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66555
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSET',0,21,176,13,3
	.word	72850
	.byte	12,21,179,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66708
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSTAT',0,21,184,13,3
	.word	72915
	.byte	12,21,187,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66863
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON0',0,21,192,13,3
	.word	72981
	.byte	12,21,195,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66993
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON1',0,21,200,13,3
	.word	73050
	.byte	12,21,203,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67231
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_SR',0,21,208,13,3
	.word	73119
	.byte	12,21,211,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67454
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON0',0,21,216,13,3
	.word	73186
	.byte	12,21,219,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67580
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON1',0,21,224,13,3
	.word	73253
	.byte	12,21,227,13,9,4,13
	.byte	'U',0
	.word	216
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	401
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67832
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_SR',0,21,232,13,3
	.word	73320
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU',0,21,243,13,25,12,13
	.byte	'CON0',0
	.word	72981
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	73050
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	73119
	.byte	4,2,35,8,0,3
	.word	73385
	.byte	19
	.byte	'Ifx_SCU_WDTCPU',0,21,248,13,3
	.word	73448
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,21,251,13,25,12,13
	.byte	'CON0',0
	.word	73186
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	73253
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	73320
	.byte	4,2,35,8,0,3
	.word	73477
	.byte	19
	.byte	'Ifx_SCU_WDTS',0,21,128,14,3
	.word	73538
	.byte	16,2,54,9,1,17
	.byte	'IfxPort_InputMode_undefined',0,127,17
	.byte	'IfxPort_InputMode_noPullDevice',0,0,17
	.byte	'IfxPort_InputMode_pullDown',0,8,17
	.byte	'IfxPort_InputMode_pullUp',0,16,0,19
	.byte	'IfxPort_InputMode',0,2,60,3
	.word	73565
	.byte	19
	.byte	'IfxPort_OutputIdx',0,2,101,3
	.word	40176
	.byte	19
	.byte	'IfxPort_OutputMode',0,2,109,3
	.word	40500
	.byte	19
	.byte	'IfxPort_PadDriver',0,2,125,3
	.word	40569
	.byte	19
	.byte	'IfxPort_State',0,2,137,1,3
	.word	7428
	.byte	19
	.byte	'IfxPort_Pin',0,2,153,1,3
	.word	40137
	.byte	3
	.word	12383
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC',0,8,166,1,40
	.word	73839
	.byte	16,8,194,1,9,1,17
	.byte	'IfxGtm_Tim_0',0,0,0,19
	.byte	'IfxGtm_Tim',0,8,197,1,3
	.word	73869
	.byte	16,8,201,1,9,1,17
	.byte	'IfxGtm_Tim_Ch_0',0,0,17
	.byte	'IfxGtm_Tim_Ch_1',0,1,17
	.byte	'IfxGtm_Tim_Ch_2',0,2,17
	.byte	'IfxGtm_Tim_Ch_3',0,3,17
	.byte	'IfxGtm_Tim_Ch_4',0,4,17
	.byte	'IfxGtm_Tim_Ch_5',0,5,17
	.byte	'IfxGtm_Tim_Ch_6',0,6,17
	.byte	'IfxGtm_Tim_Ch_7',0,7,0,19
	.byte	'IfxGtm_Tim_Ch',0,8,211,1,3
	.word	73911
	.byte	19
	.byte	'IfxGtm_Tom',0,8,219,1,3
	.word	37683
	.byte	19
	.byte	'IfxGtm_Tom_Ch',0,8,242,1,3
	.word	17799
	.byte	19
	.byte	'IfxGtm_IrqMode',0,13,53,3
	.word	38664
	.byte	16,22,49,9,1,17
	.byte	'IfxGtm_Tbu_Ts_0',0,0,17
	.byte	'IfxGtm_Tbu_Ts_1',0,1,17
	.byte	'IfxGtm_Tbu_Ts_2',0,2,0,19
	.byte	'IfxGtm_Tbu_Ts',0,22,54,3
	.word	74151
	.byte	19
	.byte	'IfxSrc_Tos',0,6,53,3
	.word	8028
	.byte	19
	.byte	'Ifx_SRC_SRCR_Bits',0,5,62,3
	.word	7609
	.byte	19
	.byte	'Ifx_SRC_SRCR',0,5,75,3
	.word	7899
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,5,86,25,12,13
	.byte	'TX',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	7899
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	7899
	.byte	4,2,35,8,0,3
	.word	74299
	.byte	19
	.byte	'Ifx_SRC_ASCLIN',0,5,91,3
	.word	74358
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,5,94,25,4,13
	.byte	'SBSRC',0
	.word	7899
	.byte	4,2,35,0,0,3
	.word	74386
	.byte	19
	.byte	'Ifx_SRC_BCUSPB',0,5,97,3
	.word	74423
	.byte	14,64
	.word	7899
	.byte	15,15,0,10
	.byte	'_Ifx_SRC_CAN',0,5,100,25,64,13
	.byte	'INT',0
	.word	74451
	.byte	64,2,35,0,0,3
	.word	74460
	.byte	19
	.byte	'Ifx_SRC_CAN',0,5,103,3
	.word	74492
	.byte	14,32
	.word	7899
	.byte	15,7,0,10
	.byte	'_Ifx_SRC_CAN1',0,5,106,25,32,13
	.byte	'INT',0
	.word	74517
	.byte	32,2,35,0,0,3
	.word	74526
	.byte	19
	.byte	'Ifx_SRC_CAN1',0,5,109,3
	.word	74559
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,5,112,25,16,13
	.byte	'SR0',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	7899
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	7899
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	7899
	.byte	4,2,35,12,0,3
	.word	74585
	.byte	19
	.byte	'Ifx_SRC_CCU6',0,5,118,3
	.word	74657
	.byte	14,8
	.word	7899
	.byte	15,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,5,121,25,8,13
	.byte	'SR',0
	.word	74683
	.byte	8,2,35,0,0,3
	.word	74692
	.byte	19
	.byte	'Ifx_SRC_CERBERUS',0,5,124,3
	.word	74728
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,5,127,25,32,13
	.byte	'SBSRC',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	33067
	.byte	28,2,35,4,0,3
	.word	74758
	.byte	19
	.byte	'Ifx_SRC_CPU',0,5,131,1,3
	.word	74812
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,5,134,1,25,80,13
	.byte	'ERR',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	3612
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	74451
	.byte	64,2,35,16,0,3
	.word	74838
	.byte	19
	.byte	'Ifx_SRC_DMA',0,5,139,1,3
	.word	74903
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,5,142,1,25,4,13
	.byte	'SR',0
	.word	7899
	.byte	4,2,35,0,0,3
	.word	74929
	.byte	19
	.byte	'Ifx_SRC_EMEM',0,5,145,1,3
	.word	74962
	.byte	14,40
	.word	408
	.byte	15,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,5,148,1,25,80,13
	.byte	'INT',0
	.word	74683
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	74683
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	74683
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	74683
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	7899
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	7899
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	74989
	.byte	40,2,35,40,0,3
	.word	74998
	.byte	19
	.byte	'Ifx_SRC_ERAY',0,5,157,1,3
	.word	75125
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,5,160,1,25,4,13
	.byte	'SR',0
	.word	7899
	.byte	4,2,35,0,0,3
	.word	75152
	.byte	19
	.byte	'Ifx_SRC_ETH',0,5,163,1,3
	.word	75184
	.byte	10
	.byte	'_Ifx_SRC_EVR',0,5,166,1,25,8,13
	.byte	'WUT',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'SCDC',0
	.word	7899
	.byte	4,2,35,4,0,3
	.word	75210
	.byte	19
	.byte	'Ifx_SRC_EVR',0,5,170,1,3
	.word	75257
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,5,173,1,25,12,13
	.byte	'DONE',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	7899
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	7899
	.byte	4,2,35,8,0,3
	.word	75283
	.byte	19
	.byte	'Ifx_SRC_FFT',0,5,178,1,3
	.word	75343
	.byte	14,240,11
	.word	408
	.byte	15,239,11,0,10
	.byte	'_Ifx_SRC_GPSR',0,5,181,1,25,128,12,13
	.byte	'SR0',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	7899
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	7899
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	7899
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	75369
	.byte	240,11,2,35,16,0,3
	.word	75380
	.byte	19
	.byte	'Ifx_SRC_GPSR',0,5,188,1,3
	.word	75476
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,5,191,1,25,48,13
	.byte	'CIRQ',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	7899
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	7899
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	7899
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	7899
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	7899
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	2643
	.byte	24,2,35,24,0,3
	.word	75503
	.byte	19
	.byte	'Ifx_SRC_GPT12',0,5,200,1,3
	.word	75620
	.byte	14,236,2
	.word	408
	.byte	15,235,2,0,14,32
	.word	74517
	.byte	15,0,0,14,224,7
	.word	408
	.byte	15,223,7,0,14,64
	.word	74517
	.byte	15,1,0,10
	.byte	'_Ifx_SRC_GTM',0,5,203,1,25,192,11,13
	.byte	'AEIIRQ',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	75648
	.byte	236,2,2,35,4,13
	.byte	'ERR',0
	.word	7899
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	3612
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	75659
	.byte	32,3,35,128,3,13
	.byte	'reserved_1A0',0
	.word	75668
	.byte	224,7,3,35,160,3,13
	.byte	'TOM',0
	.word	75679
	.byte	64,3,35,128,11,0,3
	.word	75688
	.byte	19
	.byte	'Ifx_SRC_GTM',0,5,212,1,3
	.word	75835
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,5,215,1,25,8,13
	.byte	'HSM',0
	.word	74683
	.byte	8,2,35,0,0,3
	.word	75861
	.byte	19
	.byte	'Ifx_SRC_HSM',0,5,218,1,3
	.word	75894
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,5,221,1,25,4,13
	.byte	'SR',0
	.word	7899
	.byte	4,2,35,0,0,3
	.word	75920
	.byte	19
	.byte	'Ifx_SRC_LMU',0,5,224,1,3
	.word	75952
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,5,227,1,25,4,13
	.byte	'SR',0
	.word	7899
	.byte	4,2,35,0,0,3
	.word	75978
	.byte	19
	.byte	'Ifx_SRC_PMU',0,5,230,1,3
	.word	76010
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,5,233,1,25,24,13
	.byte	'TX',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	7899
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	7899
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	7899
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	7899
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	7899
	.byte	4,2,35,20,0,3
	.word	76036
	.byte	19
	.byte	'Ifx_SRC_QSPI',0,5,241,1,3
	.word	76129
	.byte	14,16
	.word	7899
	.byte	15,3,0,10
	.byte	'_Ifx_SRC_SCU',0,5,244,1,25,20,13
	.byte	'DTS',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	76156
	.byte	16,2,35,4,0,3
	.word	76165
	.byte	19
	.byte	'Ifx_SRC_SCU',0,5,248,1,3
	.word	76211
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,5,251,1,25,16,13
	.byte	'SR',0
	.word	76156
	.byte	16,2,35,0,0,3
	.word	76237
	.byte	19
	.byte	'Ifx_SRC_SENT',0,5,254,1,3
	.word	76270
	.byte	14,12
	.word	7899
	.byte	15,2,0,10
	.byte	'_Ifx_SRC_SMU',0,5,129,2,25,12,13
	.byte	'SR',0
	.word	76297
	.byte	12,2,35,0,0,3
	.word	76306
	.byte	19
	.byte	'Ifx_SRC_SMU',0,5,132,2,3
	.word	76338
	.byte	14,88
	.word	408
	.byte	15,87,0,10
	.byte	'_Ifx_SRC_STM',0,5,135,2,25,96,13
	.byte	'SR0',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	7899
	.byte	4,2,35,4,13
	.byte	'reserved_8',0
	.word	76364
	.byte	88,2,35,8,0,3
	.word	76373
	.byte	19
	.byte	'Ifx_SRC_STM',0,5,140,2,3
	.word	76439
	.byte	14,176,2
	.word	408
	.byte	15,175,2,0,10
	.byte	'_Ifx_SRC_VADCCG',0,5,143,2,25,192,2,13
	.byte	'SR0',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	7899
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	7899
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	7899
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	76465
	.byte	176,2,2,35,16,0,3
	.word	76476
	.byte	19
	.byte	'Ifx_SRC_VADCCG',0,5,150,2,3
	.word	76574
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,5,153,2,25,16,13
	.byte	'SR0',0
	.word	7899
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	7899
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	7899
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	7899
	.byte	4,2,35,12,0,3
	.word	76603
	.byte	19
	.byte	'Ifx_SRC_VADCG',0,5,159,2,3
	.word	76677
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,5,162,2,25,4,13
	.byte	'SRC',0
	.word	7899
	.byte	4,2,35,0,0,3
	.word	76705
	.byte	19
	.byte	'Ifx_SRC_XBAR',0,5,165,2,3
	.word	76739
	.byte	14,24
	.word	74299
	.byte	15,1,0,3
	.word	76766
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,5,178,2,25,24,13
	.byte	'ASCLIN',0
	.word	76775
	.byte	24,2,35,0,0,3
	.word	76780
	.byte	19
	.byte	'Ifx_SRC_GASCLIN',0,5,181,2,3
	.word	76820
	.byte	3
	.word	74386
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,5,184,2,25,4,13
	.byte	'SPB',0
	.word	76850
	.byte	4,2,35,0,0,3
	.word	76855
	.byte	19
	.byte	'Ifx_SRC_GBCU',0,5,187,2,3
	.word	76889
	.byte	14,64
	.word	74460
	.byte	15,0,0,3
	.word	76916
	.byte	14,32
	.word	74526
	.byte	15,0,0,3
	.word	76930
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,5,190,2,25,96,13
	.byte	'CAN',0
	.word	76925
	.byte	64,2,35,0,13
	.byte	'CAN1',0
	.word	76939
	.byte	32,2,35,64,0,3
	.word	76944
	.byte	19
	.byte	'Ifx_SRC_GCAN',0,5,194,2,3
	.word	76992
	.byte	14,32
	.word	74585
	.byte	15,1,0,3
	.word	77019
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,5,197,2,25,32,13
	.byte	'CCU6',0
	.word	77028
	.byte	32,2,35,0,0,3
	.word	77033
	.byte	19
	.byte	'Ifx_SRC_GCCU6',0,5,200,2,3
	.word	77069
	.byte	3
	.word	74692
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,5,203,2,25,8,13
	.byte	'CERBERUS',0
	.word	77097
	.byte	8,2,35,0,0,3
	.word	77102
	.byte	19
	.byte	'Ifx_SRC_GCERBERUS',0,5,206,2,3
	.word	77146
	.byte	14,32
	.word	74758
	.byte	15,0,0,3
	.word	77178
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,5,209,2,25,32,13
	.byte	'CPU',0
	.word	77187
	.byte	32,2,35,0,0,3
	.word	77192
	.byte	19
	.byte	'Ifx_SRC_GCPU',0,5,212,2,3
	.word	77226
	.byte	14,80
	.word	74838
	.byte	15,0,0,3
	.word	77253
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,5,215,2,25,80,13
	.byte	'DMA',0
	.word	77262
	.byte	80,2,35,0,0,3
	.word	77267
	.byte	19
	.byte	'Ifx_SRC_GDMA',0,5,218,2,3
	.word	77301
	.byte	14,4
	.word	74929
	.byte	15,0,0,3
	.word	77328
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,5,221,2,25,4,13
	.byte	'EMEM',0
	.word	77337
	.byte	4,2,35,0,0,3
	.word	77342
	.byte	19
	.byte	'Ifx_SRC_GEMEM',0,5,224,2,3
	.word	77378
	.byte	14,80
	.word	74998
	.byte	15,0,0,3
	.word	77406
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,5,227,2,25,80,13
	.byte	'ERAY',0
	.word	77415
	.byte	80,2,35,0,0,3
	.word	77420
	.byte	19
	.byte	'Ifx_SRC_GERAY',0,5,230,2,3
	.word	77456
	.byte	14,4
	.word	75152
	.byte	15,0,0,3
	.word	77484
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,5,233,2,25,4,13
	.byte	'ETH',0
	.word	77493
	.byte	4,2,35,0,0,3
	.word	77498
	.byte	19
	.byte	'Ifx_SRC_GETH',0,5,236,2,3
	.word	77532
	.byte	14,8
	.word	75210
	.byte	15,0,0,3
	.word	77559
	.byte	10
	.byte	'_Ifx_SRC_GEVR',0,5,239,2,25,8,13
	.byte	'EVR',0
	.word	77568
	.byte	8,2,35,0,0,3
	.word	77573
	.byte	19
	.byte	'Ifx_SRC_GEVR',0,5,242,2,3
	.word	77607
	.byte	14,12
	.word	75283
	.byte	15,0,0,3
	.word	77634
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,5,245,2,25,12,13
	.byte	'FFT',0
	.word	77643
	.byte	12,2,35,0,0,3
	.word	77648
	.byte	19
	.byte	'Ifx_SRC_GFFT',0,5,248,2,3
	.word	77682
	.byte	14,128,12
	.word	75380
	.byte	15,0,0,3
	.word	77709
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,5,251,2,25,128,12,13
	.byte	'GPSR',0
	.word	77719
	.byte	128,12,2,35,0,0,3
	.word	77724
	.byte	19
	.byte	'Ifx_SRC_GGPSR',0,5,254,2,3
	.word	77762
	.byte	14,48
	.word	75503
	.byte	15,0,0,3
	.word	77790
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,5,129,3,25,48,13
	.byte	'GPT12',0
	.word	77799
	.byte	48,2,35,0,0,3
	.word	77804
	.byte	19
	.byte	'Ifx_SRC_GGPT12',0,5,132,3,3
	.word	77842
	.byte	14,192,11
	.word	75688
	.byte	15,0,0,3
	.word	77871
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,5,135,3,25,192,11,13
	.byte	'GTM',0
	.word	77881
	.byte	192,11,2,35,0,0,3
	.word	77886
	.byte	19
	.byte	'Ifx_SRC_GGTM',0,5,138,3,3
	.word	77922
	.byte	14,8
	.word	75861
	.byte	15,0,0,3
	.word	77949
	.byte	10
	.byte	'_Ifx_SRC_GHSM',0,5,141,3,25,8,13
	.byte	'HSM',0
	.word	77958
	.byte	8,2,35,0,0,3
	.word	77963
	.byte	19
	.byte	'Ifx_SRC_GHSM',0,5,144,3,3
	.word	77997
	.byte	14,4
	.word	75920
	.byte	15,0,0,3
	.word	78024
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,5,147,3,25,4,13
	.byte	'LMU',0
	.word	78033
	.byte	4,2,35,0,0,3
	.word	78038
	.byte	19
	.byte	'Ifx_SRC_GLMU',0,5,150,3,3
	.word	78072
	.byte	14,8
	.word	75978
	.byte	15,1,0,3
	.word	78099
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,5,153,3,25,8,13
	.byte	'PMU',0
	.word	78108
	.byte	8,2,35,0,0,3
	.word	78113
	.byte	19
	.byte	'Ifx_SRC_GPMU',0,5,156,3,3
	.word	78147
	.byte	14,96
	.word	76036
	.byte	15,3,0,3
	.word	78174
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,5,159,3,25,96,13
	.byte	'QSPI',0
	.word	78183
	.byte	96,2,35,0,0,3
	.word	78188
	.byte	19
	.byte	'Ifx_SRC_GQSPI',0,5,162,3,3
	.word	78224
	.byte	3
	.word	76165
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,5,165,3,25,20,13
	.byte	'SCU',0
	.word	78252
	.byte	20,2,35,0,0,3
	.word	78257
	.byte	19
	.byte	'Ifx_SRC_GSCU',0,5,168,3,3
	.word	78291
	.byte	14,16
	.word	76237
	.byte	15,0,0,3
	.word	78318
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,5,171,3,25,16,13
	.byte	'SENT',0
	.word	78327
	.byte	16,2,35,0,0,3
	.word	78332
	.byte	19
	.byte	'Ifx_SRC_GSENT',0,5,174,3,3
	.word	78368
	.byte	14,12
	.word	76306
	.byte	15,0,0,3
	.word	78396
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,5,177,3,25,12,13
	.byte	'SMU',0
	.word	78405
	.byte	12,2,35,0,0,3
	.word	78410
	.byte	19
	.byte	'Ifx_SRC_GSMU',0,5,180,3,3
	.word	78444
	.byte	14,96
	.word	76373
	.byte	15,0,0,3
	.word	78471
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,5,183,3,25,96,13
	.byte	'STM',0
	.word	78480
	.byte	96,2,35,0,0,3
	.word	78485
	.byte	19
	.byte	'Ifx_SRC_GSTM',0,5,186,3,3
	.word	78519
	.byte	14,64
	.word	76603
	.byte	15,3,0,3
	.word	78546
	.byte	14,224,1
	.word	408
	.byte	15,223,1,0,14,192,2
	.word	76476
	.byte	15,0,0,3
	.word	78571
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,5,189,3,25,224,4,13
	.byte	'G',0
	.word	78555
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	78560
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	78581
	.byte	192,2,3,35,160,2,0,3
	.word	78586
	.byte	19
	.byte	'Ifx_SRC_GVADC',0,5,194,3,3
	.word	78656
	.byte	3
	.word	76705
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,5,197,3,25,4,13
	.byte	'XBAR',0
	.word	78684
	.byte	4,2,35,0,0,3
	.word	78689
	.byte	19
	.byte	'Ifx_SRC_GXBAR',0,5,200,3,3
	.word	78725
	.byte	19
	.byte	'IfxGtm_Tom_Ch_ClkSrc',0,7,64,3
	.word	38105
	.byte	19
	.byte	'IfxGtm_Tom_Ch_OutputTrigger',0,7,72,3
	.word	39309
	.byte	19
	.byte	'IfxGtm_Tom_Ch_ResetEvent',0,7,80,3
	.word	39008
	.byte	16,15,41,9,1,17
	.byte	'IfxGtm_ChXSel_a',0,0,17
	.byte	'IfxGtm_ChXSel_b',0,1,17
	.byte	'IfxGtm_ChXSel_c',0,2,17
	.byte	'IfxGtm_ChXSel_d',0,3,17
	.byte	'IfxGtm_ChXSel_e',0,4,17
	.byte	'IfxGtm_ChXSel_f',0,5,17
	.byte	'IfxGtm_ChXSel_g',0,6,17
	.byte	'IfxGtm_ChXSel_h',0,7,17
	.byte	'IfxGtm_ChXSel_i',0,8,17
	.byte	'IfxGtm_ChXSel_j',0,9,17
	.byte	'IfxGtm_ChXSel_k',0,10,17
	.byte	'IfxGtm_ChXSel_l',0,11,17
	.byte	'IfxGtm_ChXSel_m',0,12,17
	.byte	'IfxGtm_ChXSel_n',0,13,17
	.byte	'IfxGtm_ChXSel_o',0,14,17
	.byte	'IfxGtm_ChXSel_p',0,15,0,19
	.byte	'IfxGtm_ChXSel',0,15,62,3
	.word	78851
	.byte	19
	.byte	'IfxGtm_ToutSel',0,15,72,3
	.word	40036
	.byte	23
	.word	40393
	.byte	19
	.byte	'IfxGtm_Tom_ToutMap',0,15,92,3
	.word	79190
	.byte	19
	.byte	'IfxStdIf_Timer_CountDir',0,10,73,3
	.word	41172
	.byte	19
	.byte	'IfxStdIf_Timer',0,10,76,32
	.word	13445
	.byte	19
	.byte	'IfxStdIf_Timer_TrigConfig',0,10,252,1,3
	.word	40991
	.byte	19
	.byte	'IfxStdIf_Timer_Config',0,10,136,2,3
	.word	41274
	.byte	19
	.byte	'IfxGtm_Tom_Timer_Base',0,16,135,1,3
	.word	41478
	.byte	19
	.byte	'IfxGtm_Tom_Timer',0,16,156,1,3
	.word	41589
	.byte	19
	.byte	'IfxGtm_Tom_Timer_Config',0,16,170,1,3
	.word	41832
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L116:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,59,0,3,8,0,0,3,53,0,73,19,0,0,4,15,0,73,19,0,0,5,36,0
	.byte	3,8,11,15,62,15,0,0,6,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,7,5,0,3,8,58,15,59,15,57,15,73
	.byte	19,0,0,8,11,0,0,0,9,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,10,19,1,3,8,58,15,59,15,57
	.byte	15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13,0
	.byte	3,8,73,19,11,15,56,9,0,0,14,1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16,4,1,58,15,59,15,57,15,11,15,0,0,17
	.byte	40,0,3,8,28,13,0,0,18,11,1,0,0,19,22,0,3,8,58,15,59,15,57,15,73,19,0,0,20,21,1,73,19,54,15,39,12,0,0,21
	.byte	5,0,73,19,0,0,22,21,1,54,15,39,12,0,0,23,38,0,73,19,0,0,24,55,0,73,19,0,0,25,46,1,3,8,58,15,59,15,57,15
	.byte	73,19,54,15,39,12,63,12,60,12,0,0,26,5,0,58,15,59,15,57,15,73,19,0,0,27,24,0,58,15,59,15,57,15,0,0,28
	.byte	46,1,49,19,0,0,29,5,0,49,19,0,0,30,29,1,49,19,0,0,31,11,0,49,19,0,0,32,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,60,12,0,0,33,19,1,58,15,59,15,57,15,11,15,0,0,34,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60
	.byte	12,0,0,35,21,0,54,15,0,0,36,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L117:
	.word	.L464-.L463
.L463:
	.half	3
	.word	.L466-.L465
.L465:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Reg',0
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_common\\ifx_cfg\\include',0
	.byte	0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxSrc_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Std\\IfxGtm_Tom.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxGtm_cfg.h',0
	.byte	0,0,0
	.byte	'IfxGtm_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf.h',0
	.byte	0,0,0
	.byte	'stdio.h',0,2,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Std\\IfxGtm.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_PinMap\\IfxGtm_PinMap.h',0
	.byte	0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.h',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'Ifx_Cfg.h',0,3,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxScu_cfg.h',0
	.byte	0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Std\\IfxGtm_Tbu.h',0
	.byte	0,0,0,0
.L466:
.L464:
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_info'
.L118:
	.word	287
	.half	3
	.word	.L119
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L121,.L120
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getOffset',0,1,132,1,16
	.word	.L263
	.byte	1,1,1
	.word	.L73,.L264,.L72
	.byte	4
	.byte	'driver',0,1,132,1,61
	.word	.L265,.L266
	.byte	5
	.word	.L73,.L264
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_abbrev'
.L119:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_line'
.L120:
	.word	.L468-.L467
.L467:
	.half	3
	.word	.L470-.L469
.L469:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L470:
	.byte	5,18,7,0,5,2
	.word	.L73
	.byte	3,133,1,1,5,1,9
	.half	.L471-.L73
	.byte	3,1,1,7,9
	.half	.L122-.L471
	.byte	0,1,1
.L468:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_ranges'
.L121:
	.word	-1,.L73,0,.L122-.L73,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_info'
.L123:
	.word	288
	.half	3
	.word	.L124
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L126,.L125
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getPointer',0,1,144,1,18
	.word	.L267
	.byte	1,1,1
	.word	.L77,.L268,.L76
	.byte	4
	.byte	'driver',0,1,144,1,64
	.word	.L265,.L269
	.byte	5
	.word	.L77,.L268
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_abbrev'
.L124:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_line'
.L125:
	.word	.L473-.L472
.L472:
	.half	3
	.word	.L475-.L474
.L474:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L475:
	.byte	5,48,7,0,5,2
	.word	.L77
	.byte	3,145,1,1,5,61,9
	.half	.L476-.L77
	.byte	1,5,1,9
	.half	.L127-.L476
	.byte	3,1,0,1,1
.L473:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_ranges'
.L126:
	.word	-1,.L77,0,.L127-.L77,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_info'
.L128:
	.word	295
	.half	3
	.word	.L129
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L131,.L130
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getTriggerPointer',0,1,162,1,18
	.word	.L267
	.byte	1,1,1
	.word	.L83,.L270,.L82
	.byte	4
	.byte	'driver',0,1,162,1,71
	.word	.L265,.L271
	.byte	5
	.word	.L83,.L270
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_abbrev'
.L129:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_line'
.L130:
	.word	.L478-.L477
.L477:
	.half	3
	.word	.L480-.L479
.L479:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L480:
	.byte	5,53,7,0,5,2
	.word	.L83
	.byte	3,163,1,1,5,66,9
	.half	.L481-.L83
	.byte	1,5,1,9
	.half	.L132-.L481
	.byte	3,1,0,1,1
.L478:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_ranges'
.L131:
	.word	-1,.L83,0,.L132-.L83,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_info'
.L133:
	.word	692
	.half	3
	.word	.L134
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L136,.L135
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_init',0,1,168,1,9
	.word	.L272
	.byte	1,1,1
	.word	.L85,.L273,.L84
	.byte	4
	.byte	'driver',0,1,168,1,49
	.word	.L265,.L274
	.byte	4
	.byte	'config',0,1,168,1,88
	.word	.L275,.L276
	.byte	5
	.word	.L277
	.byte	6
	.byte	'result',0,1,170,1,28
	.word	.L272,.L278
	.byte	6
	.byte	'base',0,1,171,1,28
	.word	.L279,.L280
	.byte	6
	.byte	'maskShift',0,1,172,1,28
	.word	.L281,.L282
	.byte	7
	.byte	'__func__',0,1,174,1,5
	.word	.L283
	.byte	5,3
	.word	_999001___func__
	.byte	8
	.word	.L284,.L285,.L286
	.byte	9
	.word	.L287,.L288
	.byte	9
	.word	.L289,.L290
	.byte	10
	.word	.L291,.L285,.L286
	.byte	0,11
	.word	.L292,.L29
	.byte	6
	.byte	'triggerChannel',0,1,240,1,23
	.word	.L293,.L294
	.byte	6
	.byte	'triggerChannelMask',0,1,241,1,23
	.word	.L281,.L295
	.byte	0,11
	.word	.L29,.L43
	.byte	6
	.byte	'src',0,1,143,2,32
	.word	.L296,.L297
	.byte	6
	.byte	'timerHasIrq',0,1,144,2,32
	.word	.L272,.L298
	.byte	6
	.byte	'triggerHasIrq',0,1,145,2,32
	.word	.L272,.L299
	.byte	11
	.word	.L34,.L43
	.byte	8
	.word	.L300,.L301,.L42
	.byte	9
	.word	.L302,.L303
	.byte	9
	.word	.L304,.L305
	.byte	9
	.word	.L306,.L307
	.byte	12
	.word	.L308,.L309
	.byte	0,8
	.word	.L300,.L310,.L43
	.byte	9
	.word	.L302,.L303
	.byte	9
	.word	.L304,.L305
	.byte	9
	.word	.L306,.L307
	.byte	10
	.word	.L308,.L310,.L43
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_abbrev'
.L134:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,8,29,1,49,16,17,1,18,1
	.byte	0,0,9,5,0,49,16,2,6,0,0,10,11,0,49,16,17,1,18,1,0,0,11,11,1,17,1,18,1,0,0,12,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_line'
.L135:
	.word	.L483-.L482
.L482:
	.half	3
	.word	.L485-.L484
.L484:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0,0
.L485:
	.byte	5,9,7,0,5,2
	.word	.L85
	.byte	3,167,1,1,5,5,9
	.half	.L398-.L85
	.byte	3,6,1,5,35,9
	.half	.L486-.L398
	.byte	3,124,1,5,9,3,126,1,5,5,9
	.half	.L396-.L486
	.byte	3,6,1,7,9
	.half	.L487-.L396
	.byte	1,5,34,9
	.half	.L20-.L487
	.byte	3,2,1,5,26,9
	.half	.L488-.L20
	.byte	1,5,34,9
	.half	.L489-.L488
	.byte	3,1,1,5,26,9
	.half	.L490-.L489
	.byte	1,5,35,9
	.half	.L491-.L490
	.byte	3,1,1,5,52,9
	.half	.L492-.L491
	.byte	1,5,45,9
	.half	.L493-.L492
	.byte	1,5,26,9
	.half	.L494-.L493
	.byte	1,5,34,9
	.half	.L495-.L494
	.byte	3,1,1,5,26,9
	.half	.L496-.L495
	.byte	1,5,48,9
	.half	.L497-.L496
	.byte	3,2,1,5,26,9
	.half	.L498-.L497
	.byte	1,5,5,9
	.half	.L499-.L498
	.byte	3,2,1,5,40,7,9
	.half	.L500-.L499
	.byte	3,2,1,5,52,9
	.half	.L501-.L500
	.byte	1,5,61,9
	.half	.L502-.L501
	.byte	1,5,40,9
	.half	.L21-.L502
	.byte	3,4,1,5,32,9
	.half	.L22-.L21
	.byte	1,5,33,9
	.half	.L503-.L22
	.byte	3,3,1,5,15,9
	.half	.L504-.L503
	.byte	1,5,60,9
	.half	.L505-.L504
	.byte	3,2,1,5,5,9
	.half	.L506-.L505
	.byte	3,126,1,5,67,7,9
	.half	.L507-.L506
	.byte	3,2,1,5,24,9
	.half	.L508-.L507
	.byte	1,5,67,9
	.half	.L509-.L508
	.byte	3,1,1,5,60,9
	.half	.L510-.L509
	.byte	1,5,67,9
	.half	.L511-.L510
	.byte	1,5,69,9
	.half	.L512-.L511
	.byte	3,127,1,5,67,9
	.half	.L23-.L512
	.byte	3,5,1,5,24,9
	.half	.L513-.L23
	.byte	1,5,26,9
	.half	.L514-.L513
	.byte	3,1,1,5,24,9
	.half	.L24-.L514
	.byte	1,5,48,9
	.half	.L515-.L24
	.byte	3,3,1,5,46,1,9
	.half	.L516-.L515
	.byte	3,1,1,9
	.half	.L517-.L516
	.byte	3,1,1,5,40,9
	.half	.L518-.L517
	.byte	3,4,1,5,75,9
	.half	.L519-.L518
	.byte	1,5,42,9
	.half	.L520-.L519
	.byte	3,1,1,5,71,9
	.half	.L521-.L520
	.byte	1,5,43,9
	.half	.L522-.L521
	.byte	3,2,1,5,22,9
	.half	.L405-.L522
	.byte	3,2,1,5,39,9
	.half	.L523-.L405
	.byte	1,5,37,9
	.half	.L403-.L523
	.byte	1,5,9,9
	.half	.L524-.L403
	.byte	1,5,47,7,9
	.half	.L525-.L524
	.byte	1,5,57,1,5,51,9
	.half	.L526-.L525
	.byte	1,5,70,9
	.half	.L527-.L526
	.byte	1,5,16,9
	.half	.L408-.L527
	.byte	3,2,1,5,9,3,1,1,5,72,9
	.half	.L25-.L408
	.byte	3,3,1,5,69,9
	.half	.L411-.L25
	.byte	3,1,1,5,87,1,5,57,9
	.half	.L528-.L411
	.byte	1,5,73,9
	.half	.L529-.L528
	.byte	1,5,112,1,5,19,9
	.half	.L413-.L529
	.byte	3,127,1,5,98,9
	.half	.L530-.L413
	.byte	3,1,1,4,2,5,20,9
	.half	.L285-.L530
	.byte	3,178,1,1,4,1,9
	.half	.L531-.L285
	.byte	3,206,126,1,5,27,9
	.half	.L286-.L531
	.byte	3,3,1,5,5,9
	.half	.L532-.L286
	.byte	1,5,45,7,9
	.half	.L533-.L532
	.byte	3,2,1,5,80,9
	.half	.L534-.L533
	.byte	1,5,89,9
	.half	.L535-.L534
	.byte	1,5,16,9
	.half	.L27-.L535
	.byte	3,4,1,5,9,3,1,1,5,24,9
	.half	.L28-.L27
	.byte	3,4,1,5,53,9
	.half	.L536-.L28
	.byte	3,1,1,5,24,9
	.half	.L537-.L536
	.byte	3,127,1,5,53,3,1,1,5,39,9
	.half	.L414-.L537
	.byte	3,127,1,5,53,3,1,1,5,13,9
	.half	.L415-.L414
	.byte	3,2,1,5,5,9
	.half	.L538-.L415
	.byte	1,5,50,7,9
	.half	.L292-.L538
	.byte	3,2,1,5,44,9
	.half	.L417-.L292
	.byte	3,1,1,3,3,1,5,65,9
	.half	.L539-.L417
	.byte	3,125,1,5,46,9
	.half	.L540-.L539
	.byte	1,5,87,9
	.half	.L541-.L540
	.byte	3,3,1,5,107,9
	.half	.L416-.L541
	.byte	1,5,67,9
	.half	.L419-.L416
	.byte	1,5,107,1,5,45,9
	.half	.L420-.L419
	.byte	3,1,1,5,74,9
	.half	.L542-.L420
	.byte	1,5,37,9
	.half	.L543-.L542
	.byte	3,2,1,5,9,9
	.half	.L544-.L543
	.byte	1,5,71,7,9
	.half	.L545-.L544
	.byte	3,3,1,5,48,1,5,71,9
	.half	.L421-.L545
	.byte	1,5,48,9
	.half	.L422-.L421
	.byte	3,1,1,5,77,9
	.half	.L546-.L422
	.byte	1,5,73,9
	.half	.L547-.L546
	.byte	3,1,1,5,50,1,5,73,9
	.half	.L423-.L547
	.byte	1,5,79,9
	.half	.L424-.L423
	.byte	3,1,1,5,54,1,5,82,9
	.half	.L548-.L424
	.byte	1,5,61,9
	.half	.L426-.L548
	.byte	3,1,1,5,81,9
	.half	.L30-.L426
	.byte	3,4,1,5,56,1,5,84,9
	.half	.L549-.L30
	.byte	1,5,33,9
	.half	.L429-.L549
	.byte	3,2,1,5,9,9
	.half	.L418-.L429
	.byte	1,5,44,7,9
	.half	.L550-.L418
	.byte	3,3,1,5,78,9
	.half	.L551-.L550
	.byte	1,5,111,9
	.half	.L552-.L551
	.byte	1,5,75,9
	.half	.L31-.L552
	.byte	3,3,1,5,16,9
	.half	.L431-.L31
	.byte	1,5,60,9
	.half	.L29-.L431
	.byte	3,6,1,5,87,9
	.half	.L553-.L29
	.byte	3,1,1,5,73,9
	.half	.L438-.L553
	.byte	3,127,1,5,69,3,1,1,5,48,9
	.half	.L437-.L438
	.byte	1,5,94,7,9
	.half	.L554-.L437
	.byte	1,5,87,9
	.half	.L555-.L554
	.byte	1,5,45,9
	.half	.L32-.L555
	.byte	3,2,1,5,19,9
	.half	.L556-.L32
	.byte	1,5,9,9
	.half	.L557-.L556
	.byte	1,5,78,7,9
	.half	.L558-.L557
	.byte	3,2,1,5,98,7,9
	.half	.L559-.L558
	.byte	1,5,113,9
	.half	.L560-.L559
	.byte	1,5,121,9
	.half	.L35-.L560
	.byte	1,5,49,9
	.half	.L36-.L35
	.byte	1,5,152,1,9
	.half	.L561-.L36
	.byte	1,5,53,9
	.half	.L562-.L561
	.byte	3,1,1,5,66,9
	.half	.L563-.L562
	.byte	1,5,79,9
	.half	.L564-.L563
	.byte	1,5,30,9
	.half	.L432-.L564
	.byte	3,1,1,5,56,7,9
	.half	.L565-.L432
	.byte	1,5,69,9
	.half	.L566-.L565
	.byte	1,5,91,9
	.half	.L37-.L566
	.byte	1,5,105,9
	.half	.L38-.L37
	.byte	1,5,131,1,7,9
	.half	.L567-.L38
	.byte	1,5,144,1,9
	.half	.L568-.L567
	.byte	1,5,166,1,9
	.half	.L39-.L568
	.byte	1,5,179,1,9
	.half	.L569-.L39
	.byte	1,5,13,9
	.half	.L34-.L569
	.byte	3,8,1,5,82,7,9
	.half	.L570-.L34
	.byte	3,2,1,5,53,1,5,91,9
	.half	.L571-.L570
	.byte	1,5,97,9
	.half	.L572-.L571
	.byte	1,5,57,9
	.half	.L573-.L572
	.byte	3,1,1,5,70,9
	.half	.L574-.L573
	.byte	1,5,83,9
	.half	.L575-.L574
	.byte	1,5,46,9
	.half	.L433-.L575
	.byte	3,1,1,5,72,9
	.half	.L301-.L433
	.byte	1,4,3,5,17,9
	.half	.L576-.L301
	.byte	3,93,1,5,11,9
	.half	.L577-.L576
	.byte	3,1,1,4,1,5,13,9
	.half	.L42-.L577
	.byte	3,38,1,5,84,7,9
	.half	.L578-.L42
	.byte	3,2,1,5,53,1,5,93,9
	.half	.L579-.L578
	.byte	1,5,66,1,5,100,9
	.half	.L580-.L579
	.byte	1,5,57,9
	.half	.L581-.L580
	.byte	3,1,1,5,70,9
	.half	.L582-.L581
	.byte	1,5,83,9
	.half	.L583-.L582
	.byte	1,5,54,9
	.half	.L435-.L583
	.byte	3,1,1,5,88,9
	.half	.L310-.L435
	.byte	1,4,3,5,17,9
	.half	.L41-.L310
	.byte	3,85,1,5,11,9
	.half	.L584-.L41
	.byte	3,1,1,4,1,5,84,9
	.half	.L43-.L584
	.byte	3,49,1,5,54,1,5,87,9
	.half	.L585-.L43
	.byte	1,5,79,1,5,90,9
	.half	.L586-.L585
	.byte	1,5,39,9
	.half	.L587-.L586
	.byte	3,1,1,5,54,9
	.half	.L588-.L587
	.byte	3,1,1,5,59,9
	.half	.L589-.L588
	.byte	1,5,82,1,5,87,9
	.half	.L590-.L589
	.byte	1,5,90,1,5,5,9
	.half	.L591-.L590
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L137-.L591
	.byte	0,1,1
.L483:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_ranges'
.L136:
	.word	-1,.L85,0,.L137-.L85,0,0
.L277:
	.word	-1,.L85,0,.L273-.L85,-1,.L87,0,.L262-.L87,-1,.L89,0,.L257-.L89,-1,.L91,0,.L252-.L91,-1,.L95,0,.L237-.L95
	.word	0,0
.L309:
	.word	-1,.L85,.L301-.L85,.L42-.L85,-1,.L93,0,.L242-.L93,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_info'
.L138:
	.word	301
	.half	3
	.word	.L139
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L141,.L140
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_initConfig',0,1,186,2,6,1,1,1
	.word	.L97,.L311,.L96
	.byte	4
	.byte	'config',0,1,186,2,59
	.word	.L312,.L313
	.byte	4
	.byte	'gtm',0,1,186,2,76
	.word	.L314,.L315
	.byte	5
	.word	.L97,.L311
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_abbrev'
.L139:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_line'
.L140:
	.word	.L593-.L592
.L592:
	.half	3
	.word	.L595-.L594
.L594:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L595:
	.byte	5,6,7,0,5,2
	.word	.L97
	.byte	3,185,2,1,5,38,9
	.half	.L441-.L97
	.byte	3,2,1,5,28,9
	.half	.L439-.L441
	.byte	3,1,1,5,30,9
	.half	.L596-.L439
	.byte	3,1,1,5,28,1,9
	.half	.L597-.L596
	.byte	3,1,1,5,30,9
	.half	.L598-.L597
	.byte	3,1,1,5,28,9
	.half	.L599-.L598
	.byte	1,9
	.half	.L600-.L599
	.byte	3,1,1,9
	.half	.L601-.L600
	.byte	3,1,1,9
	.half	.L602-.L601
	.byte	3,1,1,9
	.half	.L603-.L602
	.byte	3,1,1,5,1,9
	.half	.L604-.L603
	.byte	3,1,1,7,9
	.half	.L142-.L604
	.byte	0,1,1
.L593:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_ranges'
.L141:
	.word	-1,.L97,0,.L142-.L97,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_info'
.L143:
	.word	310
	.half	3
	.word	.L144
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L146,.L145
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_acknowledgeTimerIrq',0,1,38,9
	.word	.L272
	.byte	1,1,1
	.word	.L57,.L316,.L56
	.byte	4
	.byte	'driver',0,1,38,64
	.word	.L265,.L317
	.byte	5
	.word	.L318
	.byte	6
	.byte	'event',0,1,40,13
	.word	.L272,.L319
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_abbrev'
.L144:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_line'
.L145:
	.word	.L606-.L605
.L605:
	.half	3
	.word	.L608-.L607
.L607:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L608:
	.byte	5,9,7,0,5,2
	.word	.L57
	.byte	3,37,1,5,52,9
	.half	.L381-.L57
	.byte	3,4,1,5,65,9
	.half	.L379-.L381
	.byte	1,5,11,9
	.half	.L383-.L379
	.byte	1,5,5,9
	.half	.L382-.L383
	.byte	3,2,1,5,51,7,9
	.half	.L609-.L382
	.byte	3,2,1,5,64,9
	.half	.L610-.L609
	.byte	1,5,5,9
	.half	.L2-.L610
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L147-.L2
	.byte	0,1,1
.L606:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_ranges'
.L146:
	.word	-1,.L57,0,.L147-.L57,0,0
.L318:
	.word	-1,.L57,0,.L316-.L57,-1,.L59,0,.L247-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_info'
.L148:
	.word	316
	.half	3
	.word	.L149
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L151,.L150
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_acknowledgeTriggerIrq',0,1,55,9
	.word	.L272
	.byte	1,1,1
	.word	.L61,.L320,.L60
	.byte	4
	.byte	'driver',0,1,55,66
	.word	.L265,.L321
	.byte	5
	.word	.L61,.L320
	.byte	6
	.byte	'event',0,1,57,13
	.word	.L272,.L322
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_abbrev'
.L149:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_line'
.L150:
	.word	.L612-.L611
.L611:
	.half	3
	.word	.L614-.L613
.L613:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L614:
	.byte	5,9,7,0,5,2
	.word	.L61
	.byte	3,54,1,5,51,9
	.half	.L385-.L61
	.byte	3,4,1,5,64,9
	.half	.L384-.L385
	.byte	1,5,11,9
	.half	.L386-.L384
	.byte	1,5,5,9
	.half	.L387-.L386
	.byte	3,2,1,5,50,7,9
	.half	.L615-.L387
	.byte	3,2,1,5,63,9
	.half	.L616-.L615
	.byte	1,5,5,9
	.half	.L4-.L616
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L152-.L4
	.byte	0,1,1
.L612:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_ranges'
.L151:
	.word	-1,.L61,0,.L152-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_info'
.L153:
	.word	308
	.half	3
	.word	.L154
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L156,.L155
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_addToChannelMask',0,1,72,6,1,1,1
	.word	.L63,.L323,.L62
	.byte	4
	.byte	'driver',0,1,72,58
	.word	.L265,.L324
	.byte	4
	.byte	'channel',0,1,72,80
	.word	.L293,.L325
	.byte	5
	.word	.L63,.L323
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_abbrev'
.L154:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_line'
.L155:
	.word	.L618-.L617
.L617:
	.half	3
	.word	.L620-.L619
.L619:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L620:
	.byte	5,6,7,0,5,2
	.word	.L63
	.byte	3,199,0,1,5,15,9
	.half	.L390-.L63
	.byte	3,2,1,5,33,9
	.half	.L621-.L390
	.byte	1,5,5,9
	.half	.L622-.L621
	.byte	1,5,9,7,9
	.half	.L623-.L622
	.byte	3,2,1,5,56,7,9
	.half	.L624-.L623
	.byte	3,2,1,5,33,1,5,58,9
	.half	.L625-.L624
	.byte	1,5,53,9
	.half	.L626-.L625
	.byte	1,5,68,9
	.half	.L627-.L626
	.byte	1,5,56,9
	.half	.L7-.L627
	.byte	3,6,1,5,33,1,5,70,9
	.half	.L628-.L7
	.byte	1,5,58,9
	.half	.L388-.L628
	.byte	1,5,53,9
	.half	.L629-.L388
	.byte	1,5,84,9
	.half	.L630-.L629
	.byte	3,1,1,5,107,9
	.half	.L631-.L630
	.byte	1,5,112,9
	.half	.L632-.L631
	.byte	1,5,54,9
	.half	.L389-.L632
	.byte	1,5,109,9
	.half	.L633-.L389
	.byte	3,1,1,5,104,9
	.half	.L634-.L633
	.byte	1,5,112,9
	.half	.L635-.L634
	.byte	1,5,54,9
	.half	.L636-.L635
	.byte	1,5,1,9
	.half	.L637-.L636
	.byte	3,9,1,5,52,7,9
	.half	.L6-.L637
	.byte	3,124,1,5,29,1,5,66,9
	.half	.L638-.L6
	.byte	1,5,54,9
	.half	.L391-.L638
	.byte	1,5,49,9
	.half	.L639-.L391
	.byte	1,5,80,9
	.half	.L8-.L639
	.byte	3,1,1,5,103,1,5,108,9
	.half	.L640-.L8
	.byte	1,5,50,9
	.half	.L392-.L640
	.byte	1,5,105,9
	.half	.L641-.L392
	.byte	3,1,1,5,100,9
	.half	.L642-.L641
	.byte	1,5,108,9
	.half	.L643-.L642
	.byte	1,5,50,9
	.half	.L644-.L643
	.byte	1,5,1,9
	.half	.L645-.L644
	.byte	3,2,1,7,9
	.half	.L157-.L645
	.byte	0,1,1
.L618:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_ranges'
.L156:
	.word	-1,.L63,0,.L157-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_info'
.L158:
	.word	374
	.half	3
	.word	.L159
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L161,.L160
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_applyUpdate',0,1,98,6,1,1,1
	.word	.L65,.L326,.L64
	.byte	4
	.byte	'driver',0,1,98,53
	.word	.L265,.L327
	.byte	5
	.word	.L65,.L326
	.byte	6
	.word	.L328,.L65,.L329
	.byte	7
	.word	.L330,.L331
	.byte	7
	.word	.L332,.L333
	.byte	8
	.word	.L334,.L65,.L329
	.byte	0,6
	.word	.L328,.L335,.L10
	.byte	7
	.word	.L330,.L331
	.byte	7
	.word	.L332,.L333
	.byte	8
	.word	.L334,.L335,.L10
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_abbrev'
.L159:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_line'
.L160:
	.word	.L647-.L646
.L646:
	.half	3
	.word	.L649-.L648
.L648:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Std\\IfxGtm_Tom.h',0
	.byte	0,0,0,0
.L649:
	.byte	5,50,7,0,5,2
	.word	.L65
	.byte	3,227,0,1,5,90,9
	.half	.L650-.L65
	.byte	1,4,2,5,21,9
	.half	.L651-.L650
	.byte	3,133,3,1,4,1,5,20,9
	.half	.L329-.L651
	.byte	3,253,124,1,5,5,9
	.half	.L652-.L329
	.byte	1,5,94,7,9
	.half	.L335-.L652
	.byte	3,2,1,4,2,5,21,9
	.half	.L653-.L335
	.byte	3,129,3,1,4,1,5,1,9
	.half	.L10-.L653
	.byte	3,129,125,1,7,9
	.half	.L162-.L10
	.byte	0,1,1
.L647:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_ranges'
.L161:
	.word	-1,.L65,0,.L162-.L65,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_info'
.L163:
	.word	376
	.half	3
	.word	.L164
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L166,.L165
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_disableUpdate',0,1,109,6,1,1,1
	.word	.L67,.L336,.L66
	.byte	4
	.byte	'driver',0,1,109,55
	.word	.L265,.L337
	.byte	5
	.word	.L67,.L336
	.byte	6
	.word	.L328,.L67,.L338
	.byte	7
	.word	.L330,.L339
	.byte	7
	.word	.L332,.L340
	.byte	8
	.word	.L334,.L67,.L338
	.byte	0,6
	.word	.L328,.L341,.L11
	.byte	7
	.word	.L330,.L339
	.byte	7
	.word	.L332,.L340
	.byte	8
	.word	.L334,.L341,.L11
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_abbrev'
.L164:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_line'
.L165:
	.word	.L655-.L654
.L654:
	.half	3
	.word	.L657-.L656
.L656:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Std\\IfxGtm_Tom.h',0
	.byte	0,0,0,0
.L657:
	.byte	5,50,7,0,5,2
	.word	.L67
	.byte	3,238,0,1,5,92,9
	.half	.L658-.L67
	.byte	1,4,2,5,21,9
	.half	.L659-.L658
	.byte	3,250,2,1,4,1,5,20,9
	.half	.L338-.L659
	.byte	3,136,125,1,5,5,9
	.half	.L660-.L338
	.byte	1,5,96,7,9
	.half	.L341-.L660
	.byte	3,2,1,4,2,5,21,9
	.half	.L661-.L341
	.byte	3,246,2,1,4,1,5,1,9
	.half	.L11-.L661
	.byte	3,140,125,1,7,9
	.half	.L167-.L11
	.byte	0,1,1
.L655:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_ranges'
.L166:
	.word	-1,.L67,0,.L167-.L67,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_info'
.L168:
	.word	288
	.half	3
	.word	.L169
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L171,.L170
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getFrequency',0,1,120,9
	.word	.L342
	.byte	1,1,1
	.word	.L69,.L343,.L68
	.byte	4
	.byte	'driver',0,1,120,57
	.word	.L265,.L344
	.byte	5
	.word	.L69,.L343
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_abbrev'
.L169:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_line'
.L170:
	.word	.L663-.L662
.L662:
	.half	3
	.word	.L665-.L664
.L664:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0,0
.L665:
	.byte	5,77,7,0,5,2
	.word	.L69
	.byte	3,249,0,1,5,53,9
	.half	.L666-.L69
	.byte	1,4,2,5,12,9
	.half	.L667-.L666
	.byte	3,138,2,1,4,1,9
	.half	.L668-.L667
	.byte	3,246,125,1,4,2,5,18,9
	.half	.L669-.L668
	.byte	3,138,2,1,4,1,5,16,9
	.half	.L670-.L669
	.byte	3,246,125,1,5,1,3,1,1,7,9
	.half	.L172-.L670
	.byte	0,1,1
.L663:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_ranges'
.L171:
	.word	-1,.L69,0,.L172-.L69,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_info'
.L173:
	.word	293
	.half	3
	.word	.L174
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L176,.L175
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getInputFrequency',0,1,126,9
	.word	.L342
	.byte	1,1,1
	.word	.L71,.L345,.L70
	.byte	4
	.byte	'driver',0,1,126,62
	.word	.L265,.L346
	.byte	5
	.word	.L71,.L345
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_abbrev'
.L174:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_line'
.L175:
	.word	.L672-.L671
.L671:
	.half	3
	.word	.L674-.L673
.L673:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L674:
	.byte	5,24,7,0,5,2
	.word	.L71
	.byte	3,255,0,1,5,1,9
	.half	.L675-.L71
	.byte	3,1,1,7,9
	.half	.L177-.L675
	.byte	0,1,1
.L672:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_ranges'
.L176:
	.word	-1,.L71,0,.L177-.L71,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_info'
.L178:
	.word	287
	.half	3
	.word	.L179
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L181,.L180
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getPeriod',0,1,138,1,16
	.word	.L263
	.byte	1,1,1
	.word	.L75,.L347,.L74
	.byte	4
	.byte	'driver',0,1,138,1,61
	.word	.L265,.L348
	.byte	5
	.word	.L75,.L347
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_abbrev'
.L179:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_line'
.L180:
	.word	.L677-.L676
.L676:
	.half	3
	.word	.L679-.L678
.L678:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L679:
	.byte	5,24,7,0,5,2
	.word	.L75
	.byte	3,139,1,1,5,1,9
	.half	.L680-.L75
	.byte	3,1,1,7,9
	.half	.L182-.L680
	.byte	0,1,1
.L677:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_ranges'
.L181:
	.word	-1,.L75,0,.L182-.L75,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_info'
.L183:
	.word	291
	.half	3
	.word	.L184
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L186,.L185
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getResolution',0,1,150,1,9
	.word	.L342
	.byte	1,1,1
	.word	.L79,.L349,.L78
	.byte	4
	.byte	'driver',0,1,150,1,58
	.word	.L265,.L350
	.byte	5
	.word	.L79,.L349
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_abbrev'
.L184:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_line'
.L185:
	.word	.L682-.L681
.L681:
	.half	3
	.word	.L684-.L683
.L683:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L684:
	.byte	5,12,7,0,5,2
	.word	.L79
	.byte	3,151,1,1,5,30,1,5,16,9
	.half	.L685-.L79
	.byte	1,5,1,3,1,1,7,9
	.half	.L187-.L685
	.byte	0,1,1
.L682:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_ranges'
.L186:
	.word	-1,.L79,0,.L187-.L79,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_info'
.L188:
	.word	288
	.half	3
	.word	.L189
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L191,.L190
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getTrigger',0,1,156,1,16
	.word	.L263
	.byte	1,1,1
	.word	.L81,.L351,.L80
	.byte	4
	.byte	'driver',0,1,156,1,62
	.word	.L265,.L352
	.byte	5
	.word	.L81,.L351
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_abbrev'
.L189:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_line'
.L190:
	.word	.L687-.L686
.L686:
	.half	3
	.word	.L689-.L688
.L688:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L689:
	.byte	5,46,7,0,5,2
	.word	.L81
	.byte	3,157,1,1,5,59,9
	.half	.L690-.L81
	.byte	1,5,77,9
	.half	.L691-.L690
	.byte	1,5,1,3,1,1,7,9
	.half	.L192-.L691
	.byte	0,1,1
.L687:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_ranges'
.L191:
	.word	-1,.L81,0,.L192-.L81,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_info'
.L193:
	.word	277
	.half	3
	.word	.L194
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L196,.L195
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_run',0,1,200,2,6,1,1,1
	.word	.L99,.L353,.L98
	.byte	4
	.byte	'driver',0,1,200,2,45
	.word	.L265,.L354
	.byte	5
	.word	.L99,.L353
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_abbrev'
.L194:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_line'
.L195:
	.word	.L693-.L692
.L692:
	.half	3
	.word	.L695-.L694
.L694:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L695:
	.byte	5,76,7,0,5,2
	.word	.L99
	.byte	3,201,2,1,5,6,3,126,1,5,79,9
	.half	.L443-.L99
	.byte	3,2,1,5,46,1,5,71,9
	.half	.L442-.L443
	.byte	1,5,79,9
	.half	.L696-.L442
	.byte	1,5,20,9
	.half	.L697-.L696
	.byte	3,2,1,5,5,9
	.half	.L698-.L697
	.byte	1,5,80,7,9
	.half	.L699-.L698
	.byte	3,2,1,5,75,1,5,83,9
	.half	.L700-.L699
	.byte	1,5,1,9
	.half	.L45-.L700
	.byte	3,2,1,7,9
	.half	.L197-.L45
	.byte	0,1,1
.L693:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_ranges'
.L196:
	.word	-1,.L99,0,.L197-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_info'
.L198:
	.word	313
	.half	3
	.word	.L199
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L201,.L200
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_setFrequency',0,1,211,2,9
	.word	.L272
	.byte	1,1,1
	.word	.L101,.L355,.L100
	.byte	4
	.byte	'driver',0,1,211,2,57
	.word	.L265,.L356
	.byte	4
	.byte	'frequency',0,1,211,2,73
	.word	.L342,.L357
	.byte	5
	.word	.L101,.L355
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_abbrev'
.L199:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_line'
.L200:
	.word	.L702-.L701
.L701:
	.half	3
	.word	.L704-.L703
.L703:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_Timer.h',0
	.byte	0,0,0,0
.L704:
	.byte	5,76,7,0,5,2
	.word	.L101
	.byte	3,212,2,1,5,80,9
	.half	.L705-.L101
	.byte	1,5,64,1,4,2,5,20,9
	.half	.L706-.L705
	.byte	3,58,1,4,1,5,1,9
	.half	.L202-.L706
	.byte	3,73,0,1,1
.L702:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_ranges'
.L201:
	.word	-1,.L101,0,.L202-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_info'
.L203:
	.word	352
	.half	3
	.word	.L204
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L206,.L205
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_setPeriod',0,1,219,2,9
	.word	.L272
	.byte	1,1,1
	.word	.L103,.L358,.L102
	.byte	4
	.byte	'driver',0,1,219,2,54
	.word	.L265,.L359
	.byte	4
	.byte	'period',0,1,219,2,77
	.word	.L263,.L360
	.byte	5
	.word	.L103,.L358
	.byte	6
	.byte	'result',0,1,221,2,13
	.word	.L272,.L361
	.byte	7
	.byte	'__func__',0,1,237,2,9
	.word	.L362
	.byte	5,3
	.word	_999002___func__
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_abbrev'
.L204:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_line'
.L205:
	.word	.L708-.L707
.L707:
	.half	3
	.word	.L710-.L709
.L709:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L710:
	.byte	5,9,7,0,5,2
	.word	.L103
	.byte	3,218,2,1,5,19,9
	.half	.L447-.L103
	.byte	3,6,1,5,25,3,125,1,5,20,9
	.half	.L711-.L447
	.byte	3,127,1,5,9,3,126,1,5,5,9
	.half	.L445-.L711
	.byte	3,6,1,5,50,7,9
	.half	.L712-.L445
	.byte	3,2,1,5,79,9
	.half	.L446-.L712
	.byte	1,5,19,9
	.half	.L713-.L446
	.byte	3,2,1,5,45,9
	.half	.L714-.L713
	.byte	1,5,9,9
	.half	.L715-.L714
	.byte	1,5,54,7,9
	.half	.L716-.L715
	.byte	3,2,1,5,85,9
	.half	.L717-.L716
	.byte	1,5,9,9
	.half	.L718-.L717
	.byte	3,126,1,5,16,9
	.half	.L47-.L718
	.byte	3,7,1,5,9,3,1,1,5,5,9
	.half	.L48-.L47
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L207-.L48
	.byte	0,1,1
.L708:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_ranges'
.L206:
	.word	-1,.L103,0,.L207-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_info'
.L208:
	.word	308
	.half	3
	.word	.L209
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L211,.L210
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_setSingleMode',0,1,244,2,6,1,1,1
	.word	.L105,.L363,.L104
	.byte	4
	.byte	'driver',0,1,244,2,55
	.word	.L265,.L364
	.byte	4
	.byte	'enabled',0,1,244,2,71
	.word	.L272,.L365
	.byte	5
	.word	.L105,.L363
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_abbrev'
.L209:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_line'
.L210:
	.word	.L720-.L719
.L719:
	.half	3
	.word	.L722-.L721
.L721:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L722:
	.byte	5,6,7,0,5,2
	.word	.L105
	.byte	3,243,2,1,5,40,3,2,1,5,53,9
	.half	.L453-.L105
	.byte	1,5,69,9
	.half	.L452-.L453
	.byte	1,5,1,9
	.half	.L212-.L452
	.byte	3,1,0,1,1
.L720:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_ranges'
.L211:
	.word	-1,.L105,0,.L212-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_info'
.L213:
	.word	359
	.half	3
	.word	.L214
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L216,.L215
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_setTrigger',0,1,250,2,9
	.word	.L272
	.byte	1,1,1
	.word	.L107,.L366,.L106
	.byte	4
	.byte	'driver',0,1,250,2,55
	.word	.L265,.L367
	.byte	4
	.byte	'triggerPoint',0,1,250,2,78
	.word	.L263,.L368
	.byte	5
	.word	.L107,.L366
	.byte	6
	.byte	'result',0,1,252,2,13
	.word	.L272,.L369
	.byte	7
	.byte	'__func__',0,1,134,3,9
	.word	.L370
	.byte	5,3
	.word	_999003___func__
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_abbrev'
.L214:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_line'
.L215:
	.word	.L724-.L723
.L723:
	.half	3
	.word	.L726-.L725
.L725:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L726:
	.byte	5,33,7,0,5,2
	.word	.L107
	.byte	3,254,2,1,5,9,3,123,1,5,20,9
	.half	.L454-.L107
	.byte	3,2,1,5,5,9
	.half	.L458-.L454
	.byte	3,3,1,5,49,7,9
	.half	.L727-.L458
	.byte	3,2,1,5,62,9
	.half	.L728-.L727
	.byte	1,5,93,9
	.half	.L729-.L728
	.byte	1,5,97,9
	.half	.L456-.L729
	.byte	1,5,16,9
	.half	.L51-.L456
	.byte	3,4,1,5,9,3,1,1,5,5,9
	.half	.L52-.L51
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L217-.L52
	.byte	0,1,1
.L724:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_ranges'
.L216:
	.word	-1,.L107,0,.L217-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_info'
.L218:
	.word	311
	.half	3
	.word	.L219
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L221,.L220
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_stdIfTimerInit',0,1,141,3,9
	.word	.L272
	.byte	1,1,1
	.word	.L109,.L371,.L108
	.byte	4
	.byte	'stdif',0,1,141,3,57
	.word	.L372,.L373
	.byte	4
	.byte	'driver',0,1,141,3,82
	.word	.L265,.L374
	.byte	5
	.word	.L109,.L371
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_abbrev'
.L219:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_line'
.L220:
	.word	.L731-.L730
.L730:
	.half	3
	.word	.L733-.L732
.L732:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L733:
	.byte	5,33,7,0,5,2
	.word	.L109
	.byte	3,144,3,1,5,34,9
	.half	.L734-.L109
	.byte	3,1,1,5,33,9
	.half	.L735-.L734
	.byte	1,5,34,9
	.half	.L736-.L735
	.byte	3,1,1,5,33,9
	.half	.L737-.L736
	.byte	1,5,34,9
	.half	.L738-.L737
	.byte	3,1,1,5,33,9
	.half	.L739-.L738
	.byte	1,5,34,9
	.half	.L740-.L739
	.byte	3,1,1,5,33,9
	.half	.L741-.L740
	.byte	1,5,34,9
	.half	.L742-.L741
	.byte	3,1,1,5,33,9
	.half	.L743-.L742
	.byte	1,5,34,9
	.half	.L744-.L743
	.byte	3,1,1,5,33,9
	.half	.L745-.L744
	.byte	1,5,34,9
	.half	.L746-.L745
	.byte	3,1,1,5,33,9
	.half	.L747-.L746
	.byte	1,5,34,9
	.half	.L748-.L747
	.byte	3,1,1,5,33,9
	.half	.L749-.L748
	.byte	1,5,34,9
	.half	.L750-.L749
	.byte	3,1,1,5,33,9
	.half	.L751-.L750
	.byte	1,5,34,9
	.half	.L752-.L751
	.byte	3,1,1,5,33,9
	.half	.L753-.L752
	.byte	1,5,34,9
	.half	.L754-.L753
	.byte	3,1,1,5,33,9
	.half	.L755-.L754
	.byte	1,5,34,9
	.half	.L756-.L755
	.byte	3,1,1,5,33,9
	.half	.L757-.L756
	.byte	1,5,34,9
	.half	.L758-.L757
	.byte	3,1,1,5,33,9
	.half	.L759-.L758
	.byte	1,5,34,9
	.half	.L760-.L759
	.byte	3,1,1,5,33,9
	.half	.L761-.L760
	.byte	1,5,34,9
	.half	.L762-.L761
	.byte	3,1,1,5,33,9
	.half	.L763-.L762
	.byte	1,5,34,9
	.half	.L764-.L763
	.byte	3,1,1,5,33,9
	.half	.L765-.L764
	.byte	1,5,12,9
	.half	.L766-.L765
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L222-.L766
	.byte	0,1,1
.L731:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_ranges'
.L221:
	.word	-1,.L109,0,.L222-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_info'
.L223:
	.word	278
	.half	3
	.word	.L224
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L226,.L225
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_stop',0,1,168,3,6,1,1,1
	.word	.L111,.L375,.L110
	.byte	4
	.byte	'driver',0,1,168,3,46
	.word	.L265,.L376
	.byte	5
	.word	.L111,.L375
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_abbrev'
.L224:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_line'
.L225:
	.word	.L768-.L767
.L767:
	.half	3
	.word	.L770-.L769
.L769:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L770:
	.byte	5,6,7,0,5,2
	.word	.L111
	.byte	3,167,3,1,5,46,9
	.half	.L460-.L111
	.byte	3,2,1,5,51,9
	.half	.L459-.L460
	.byte	1,5,74,1,5,79,9
	.half	.L771-.L459
	.byte	1,5,20,9
	.half	.L772-.L771
	.byte	3,2,1,5,5,9
	.half	.L773-.L772
	.byte	1,5,55,7,9
	.half	.L774-.L773
	.byte	3,2,1,5,78,1,5,83,9
	.half	.L775-.L774
	.byte	1,5,1,9
	.half	.L55-.L775
	.byte	3,2,1,7,9
	.half	.L227-.L55
	.byte	0,1,1
.L768:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_ranges'
.L226:
	.word	-1,.L111,0,.L227-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_info'
.L228:
	.word	294
	.half	3
	.word	.L229
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L231,.L230
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxGtm_Tom_Timer_updateInputFrequency',0,1,179,3,6,1,1,1
	.word	.L113,.L377,.L112
	.byte	4
	.byte	'driver',0,1,179,3,62
	.word	.L265,.L378
	.byte	5
	.word	.L113,.L377
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_abbrev'
.L229:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_line'
.L230:
	.word	.L777-.L776
.L776:
	.half	3
	.word	.L779-.L778
.L778:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L779:
	.byte	5,6,7,0,5,2
	.word	.L113
	.byte	3,178,3,1,5,68,9
	.half	.L462-.L113
	.byte	3,2,1,5,81,9
	.half	.L461-.L462
	.byte	1,5,94,9
	.half	.L780-.L461
	.byte	1,5,28,9
	.half	.L781-.L780
	.byte	1,5,1,9
	.half	.L782-.L781
	.byte	3,1,1,7,9
	.half	.L232-.L782
	.byte	0,1,1
.L777:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_ranges'
.L231:
	.word	-1,.L113,0,.L232-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L233:
	.word	235
	.half	3
	.word	.L234
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L236,.L235
	.byte	2
	.word	.L114
	.byte	3
	.byte	'.cocofun_5',0,1,168,1,9,1
	.word	.L95,.L237,.L94
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L234:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L235:
	.word	.L784-.L783
.L783:
	.half	3
	.word	.L786-.L785
.L785:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L786:
	.byte	5,5,7,0,5,2
	.word	.L95
	.byte	3,173,1,1,9
	.half	.L237-.L95
	.byte	0,1,1,5,9,0,5,2
	.word	.L95
	.byte	3,216,1,1,5,5,9
	.half	.L787-.L95
	.byte	3,85,1,7,9
	.half	.L237-.L787
	.byte	0,1,1,5,9,0,5,2
	.word	.L95
	.byte	3,230,1,1,5,5,9
	.half	.L787-.L95
	.byte	3,71,1,7,9
	.half	.L237-.L787
	.byte	0,1,1,5,9,0,5,2
	.word	.L95
	.byte	3,236,2,1,5,5,9
	.half	.L787-.L95
	.byte	3,193,126,1,7,9
	.half	.L237-.L787
	.byte	0,1,1,5,9,0,5,2
	.word	.L95
	.byte	3,133,3,1,5,5,9
	.half	.L787-.L95
	.byte	3,168,126,1,7,9
	.half	.L237-.L787
	.byte	0,1,1
.L784:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L236:
	.word	-1,.L95,0,.L237-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_6')
	.sect	'.debug_info'
.L238:
	.word	235
	.half	3
	.word	.L239
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L241,.L240
	.byte	2
	.word	.L114
	.byte	3
	.byte	'.cocofun_6',0,1,168,1,9,1
	.word	.L93,.L242,.L92
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_6')
	.sect	'.debug_abbrev'
.L239:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_6')
	.sect	'.debug_line'
.L240:
	.word	.L789-.L788
.L788:
	.half	3
	.word	.L791-.L790
.L790:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0,0
.L791:
	.byte	4,2,5,11,7,0,5,2
	.word	.L93
	.byte	3,128,2,1,5,17,9
	.half	.L792-.L93
	.byte	1,5,11,9
	.half	.L793-.L792
	.byte	3,103,1,5,17,9
	.half	.L794-.L793
	.byte	1,5,11,9
	.half	.L795-.L794
	.byte	3,18,1,5,16,9
	.half	.L796-.L795
	.byte	1,9
	.half	.L242-.L796
	.byte	0,1,1,4,2,5,11,0,5,2
	.word	.L93
	.byte	3,128,2,1,5,17,9
	.half	.L792-.L93
	.byte	1,5,11,9
	.half	.L793-.L792
	.byte	3,103,1,5,17,9
	.half	.L794-.L793
	.byte	1,5,11,9
	.half	.L795-.L794
	.byte	3,18,1,5,16,9
	.half	.L796-.L795
	.byte	1,9
	.half	.L242-.L796
	.byte	0,1,1
.L789:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_6')
	.sect	'.debug_ranges'
.L241:
	.word	-1,.L93,0,.L242-.L93,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L243:
	.word	234
	.half	3
	.word	.L244
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L246,.L245
	.byte	2
	.word	.L114
	.byte	3
	.byte	'.cocofun_7',0,1,38,9,1
	.word	.L59,.L247,.L58
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L244:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L245:
	.word	.L798-.L797
.L797:
	.half	3
	.word	.L800-.L799
.L799:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L800:
	.byte	5,52,7,0,5,2
	.word	.L59
	.byte	3,41,1,5,65,9
	.half	.L380-.L59
	.byte	1,9
	.half	.L247-.L380
	.byte	0,1,1,5,51,0,5,2
	.word	.L59
	.byte	3,45,1,5,64,9
	.half	.L380-.L59
	.byte	1,5,65,9
	.half	.L801-.L380
	.byte	3,124,1,7,9
	.half	.L247-.L801
	.byte	0,1,1,5,40,0,5,2
	.word	.L59
	.byte	3,208,1,1,5,53,9
	.half	.L380-.L59
	.byte	1,5,65,9
	.half	.L801-.L380
	.byte	3,217,126,1,7,9
	.half	.L247-.L801
	.byte	0,1,1,5,42,0,5,2
	.word	.L59
	.byte	3,209,1,1,5,55,9
	.half	.L380-.L59
	.byte	1,5,65,9
	.half	.L801-.L380
	.byte	3,216,126,1,7,9
	.half	.L247-.L801
	.byte	0,1,1,5,45,0,5,2
	.word	.L59
	.byte	3,225,1,1,5,58,9
	.half	.L380-.L59
	.byte	1,5,65,9
	.half	.L801-.L380
	.byte	3,200,126,1,7,9
	.half	.L247-.L801
	.byte	0,1,1,5,50,0,5,2
	.word	.L59
	.byte	3,226,2,1,5,63,9
	.half	.L380-.L59
	.byte	1,5,65,9
	.half	.L801-.L380
	.byte	3,199,125,1,7,9
	.half	.L247-.L801
	.byte	0,1,1
.L798:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L246:
	.word	-1,.L59,0,.L247-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_8')
	.sect	'.debug_info'
.L248:
	.word	235
	.half	3
	.word	.L249
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L251,.L250
	.byte	2
	.word	.L114
	.byte	3
	.byte	'.cocofun_8',0,1,168,1,9,1
	.word	.L91,.L252,.L90
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_8')
	.sect	'.debug_abbrev'
.L249:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_8')
	.sect	'.debug_line'
.L250:
	.word	.L803-.L802
.L802:
	.half	3
	.word	.L805-.L804
.L804:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L805:
	.byte	5,5,7,0,5,2
	.word	.L91
	.byte	3,173,1,1,9
	.half	.L252-.L91
	.byte	0,1,1,5,9,0,5,2
	.word	.L91
	.byte	3,216,1,1,5,5,9
	.half	.L806-.L91
	.byte	3,85,1,7,9
	.half	.L252-.L806
	.byte	0,1,1,5,9,0,5,2
	.word	.L91
	.byte	3,230,1,1,5,5,9
	.half	.L806-.L91
	.byte	3,71,1,7,9
	.half	.L252-.L806
	.byte	0,1,1
.L803:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_8')
	.sect	'.debug_ranges'
.L251:
	.word	-1,.L91,0,.L252-.L91,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_9')
	.sect	'.debug_info'
.L253:
	.word	235
	.half	3
	.word	.L254
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L256,.L255
	.byte	2
	.word	.L114
	.byte	3
	.byte	'.cocofun_9',0,1,168,1,9,1
	.word	.L89,.L257,.L88
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_9')
	.sect	'.debug_abbrev'
.L254:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_9')
	.sect	'.debug_line'
.L255:
	.word	.L808-.L807
.L807:
	.half	3
	.word	.L810-.L809
.L809:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L810:
	.byte	5,5,7,0,5,2
	.word	.L89
	.byte	3,173,1,1,9
	.half	.L257-.L89
	.byte	0,1,1,5,9,0,5,2
	.word	.L89
	.byte	3,216,1,1,5,5,9
	.half	.L811-.L89
	.byte	3,85,1,7,9
	.half	.L257-.L811
	.byte	0,1,1,5,9,0,5,2
	.word	.L89
	.byte	3,230,1,1,5,5,9
	.half	.L811-.L89
	.byte	3,71,1,7,9
	.half	.L257-.L811
	.byte	0,1,1
.L808:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_9')
	.sect	'.debug_ranges'
.L256:
	.word	-1,.L89,0,.L257-.L89,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_10')
	.sect	'.debug_info'
.L258:
	.word	236
	.half	3
	.word	.L259
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L261,.L260
	.byte	2
	.word	.L114
	.byte	3
	.byte	'.cocofun_10',0,1,168,1,9,1
	.word	.L87,.L262,.L86
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_10')
	.sect	'.debug_abbrev'
.L259:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_10')
	.sect	'.debug_line'
.L260:
	.word	.L813-.L812
.L812:
	.half	3
	.word	.L815-.L814
.L814:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L815:
	.byte	5,5,7,0,5,2
	.word	.L87
	.byte	3,173,1,1,9
	.half	.L262-.L87
	.byte	0,1,1,5,9,0,5,2
	.word	.L87
	.byte	3,216,1,1,5,5,9
	.half	.L816-.L87
	.byte	3,85,1,7,9
	.half	.L262-.L816
	.byte	0,1,1,5,9,0,5,2
	.word	.L87
	.byte	3,230,1,1,5,5,9
	.half	.L816-.L87
	.byte	3,71,1,7,9
	.half	.L262-.L816
	.byte	0,1,1
.L813:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_10')
	.sect	'.debug_ranges'
.L261:
	.word	-1,.L87,0,.L262-.L87,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_10')
	.sect	'.debug_loc'
.L86:
	.word	-1,.L87,0,.L262-.L87
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L237-.L95
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_6')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L242-.L93
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L58:
	.word	-1,.L59,0,.L247-.L59
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_8')
	.sect	'.debug_loc'
.L90:
	.word	-1,.L91,0,.L252-.L91
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_9')
	.sect	'.debug_loc'
.L88:
	.word	-1,.L89,0,.L257-.L89
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_loc'
.L56:
	.word	-1,.L57,0,.L316-.L57
	.half	2
	.byte	138,0
	.word	0,0
.L317:
	.word	-1,.L57,0,.L379-.L57
	.half	1
	.byte	100
	.word	.L59-.L57,.L247-.L57
	.half	1
	.byte	111
	.word	.L59-.L57,.L380-.L57
	.half	1
	.byte	100
	.word	.L381-.L57,.L316-.L57
	.half	1
	.byte	111
	.word	0,0
.L319:
	.word	-1,.L57,.L59-.L57,.L247-.L57
	.half	1
	.byte	95
	.word	.L59-.L57,.L247-.L57
	.half	1
	.byte	82
	.word	.L382-.L57,.L316-.L57
	.half	1
	.byte	95
	.word	.L383-.L57,.L2-.L57
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_loc'
.L60:
	.word	-1,.L61,0,.L320-.L61
	.half	2
	.byte	138,0
	.word	0,0
.L321:
	.word	-1,.L61,0,.L384-.L61
	.half	1
	.byte	100
	.word	.L385-.L61,.L320-.L61
	.half	1
	.byte	111
	.word	0,0
.L322:
	.word	-1,.L61,.L386-.L61,.L4-.L61
	.half	1
	.byte	82
	.word	.L387-.L61,.L320-.L61
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_loc'
.L62:
	.word	-1,.L63,0,.L323-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L325:
	.word	-1,.L63,0,.L388-.L63
	.half	1
	.byte	84
	.word	.L6-.L63,.L391-.L63
	.half	1
	.byte	84
	.word	0,0
.L324:
	.word	-1,.L63,0,.L389-.L63
	.half	1
	.byte	100
	.word	.L390-.L63,.L323-.L63
	.half	1
	.byte	111
	.word	.L6-.L63,.L392-.L63
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_loc'
.L64:
	.word	-1,.L65,0,.L326-.L65
	.half	2
	.byte	138,0
	.word	0,0
.L333:
	.word	0,0
.L327:
	.word	-1,.L65,0,.L326-.L65
	.half	1
	.byte	100
	.word	0,0
.L331:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_loc'
.L66:
	.word	-1,.L67,0,.L336-.L67
	.half	2
	.byte	138,0
	.word	0,0
.L340:
	.word	0,0
.L337:
	.word	-1,.L67,0,.L336-.L67
	.half	1
	.byte	100
	.word	0,0
.L339:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_loc'
.L68:
	.word	-1,.L69,0,.L343-.L69
	.half	2
	.byte	138,0
	.word	0,0
.L344:
	.word	-1,.L69,0,.L343-.L69
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_loc'
.L70:
	.word	-1,.L71,0,.L345-.L71
	.half	2
	.byte	138,0
	.word	0,0
.L346:
	.word	-1,.L71,0,.L345-.L71
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_loc'
.L72:
	.word	-1,.L73,0,.L264-.L73
	.half	2
	.byte	138,0
	.word	0,0
.L266:
	.word	-1,.L73,0,.L264-.L73
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_loc'
.L74:
	.word	-1,.L75,0,.L347-.L75
	.half	2
	.byte	138,0
	.word	0,0
.L348:
	.word	-1,.L75,0,.L347-.L75
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_loc'
.L76:
	.word	-1,.L77,0,.L268-.L77
	.half	2
	.byte	138,0
	.word	0,0
.L269:
	.word	-1,.L77,0,.L393-.L77
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_loc'
.L78:
	.word	-1,.L79,0,.L349-.L79
	.half	2
	.byte	138,0
	.word	0,0
.L350:
	.word	-1,.L79,0,.L349-.L79
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_loc'
.L80:
	.word	-1,.L81,0,.L351-.L81
	.half	2
	.byte	138,0
	.word	0,0
.L352:
	.word	-1,.L81,0,.L394-.L81
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_loc'
.L82:
	.word	-1,.L83,0,.L270-.L83
	.half	2
	.byte	138,0
	.word	0,0
.L271:
	.word	-1,.L83,0,.L395-.L83
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_loc'
.L84:
	.word	-1,.L85,0,.L396-.L85
	.half	2
	.byte	138,0
	.word	.L396-.L85,.L273-.L85
	.half	2
	.byte	138,24
	.word	.L273-.L85,.L273-.L85
	.half	2
	.byte	138,0
	.word	0,0
.L280:
	.word	0,0
.L288:
	.word	0,0
.L276:
	.word	-1,.L85,.L91-.L85,.L252-.L85
	.half	1
	.byte	101
	.word	.L91-.L85,.L252-.L85
	.half	1
	.byte	108
	.word	.L89-.L85,.L257-.L85
	.half	1
	.byte	101
	.word	.L89-.L85,.L257-.L85
	.half	1
	.byte	108
	.word	0,.L397-.L85
	.half	1
	.byte	101
	.word	.L398-.L85,.L397-.L85
	.half	1
	.byte	108
	.word	.L87-.L85,.L262-.L85
	.half	1
	.byte	101
	.word	.L87-.L85,.L262-.L85
	.half	1
	.byte	108
	.word	.L95-.L85,.L237-.L85
	.half	1
	.byte	101
	.word	.L95-.L85,.L237-.L85
	.half	1
	.byte	108
	.word	.L400-.L85,.L20-.L85
	.half	1
	.byte	101
	.word	.L59-.L85,.L247-.L85
	.half	1
	.byte	108
	.word	.L400-.L85,.L407-.L85
	.half	1
	.byte	108
	.word	.L409-.L85,.L412-.L85
	.half	1
	.byte	108
	.word	.L93-.L85,.L434-.L85
	.half	1
	.byte	108
	.word	.L93-.L85,.L242-.L85
	.half	1
	.byte	108
	.word	.L436-.L85,.L273-.L85
	.half	1
	.byte	108
	.word	0,0
.L274:
	.word	-1,.L85,.L91-.L85,.L252-.L85
	.half	1
	.byte	111
	.word	.L91-.L85,.L252-.L85
	.half	1
	.byte	100
	.word	.L89-.L85,.L257-.L85
	.half	1
	.byte	111
	.word	.L89-.L85,.L257-.L85
	.half	1
	.byte	100
	.word	.L399-.L85,.L397-.L85
	.half	1
	.byte	111
	.word	0,.L397-.L85
	.half	1
	.byte	100
	.word	.L87-.L85,.L262-.L85
	.half	1
	.byte	111
	.word	.L87-.L85,.L262-.L85
	.half	1
	.byte	100
	.word	.L400-.L85,.L401-.L85
	.half	1
	.byte	100
	.word	.L95-.L85,.L237-.L85
	.half	1
	.byte	111
	.word	.L95-.L85,.L402-.L85
	.half	1
	.byte	100
	.word	.L59-.L85,.L247-.L85
	.half	1
	.byte	111
	.word	.L404-.L85,.L405-.L85
	.half	1
	.byte	100
	.word	.L400-.L85,.L407-.L85
	.half	1
	.byte	111
	.word	.L410-.L85,.L411-.L85
	.half	1
	.byte	100
	.word	.L409-.L85,.L412-.L85
	.half	1
	.byte	111
	.word	.L414-.L85,.L415-.L85
	.half	1
	.byte	100
	.word	.L427-.L85,.L30-.L85
	.half	1
	.byte	100
	.word	.L430-.L85,.L431-.L85
	.half	1
	.byte	100
	.word	.L93-.L85,.L434-.L85
	.half	1
	.byte	111
	.word	.L93-.L85,.L242-.L85
	.half	1
	.byte	111
	.word	.L436-.L85,.L273-.L85
	.half	1
	.byte	111
	.word	0,0
.L282:
	.word	-1,.L85,.L414-.L85,.L416-.L85
	.half	1
	.byte	89
	.word	0,0
.L307:
	.word	0,0
.L278:
	.word	-1,.L85,.L91-.L85,.L252-.L85
	.half	1
	.byte	88
	.word	.L89-.L85,.L257-.L85
	.half	1
	.byte	88
	.word	.L399-.L85,.L397-.L85
	.half	1
	.byte	88
	.word	.L87-.L85,.L262-.L85
	.half	1
	.byte	88
	.word	.L95-.L85,.L237-.L85
	.half	1
	.byte	88
	.word	.L59-.L85,.L247-.L85
	.half	1
	.byte	88
	.word	.L400-.L85,.L403-.L85
	.half	1
	.byte	88
	.word	.L406-.L85,.L252-.L85
	.half	5
	.byte	144,32,157,32,0
	.word	.L89-.L85,.L257-.L85
	.half	5
	.byte	144,32,157,32,0
	.word	.L408-.L85,.L407-.L85
	.half	1
	.byte	88
	.word	.L403-.L85,.L407-.L85
	.half	5
	.byte	144,32,157,32,0
	.word	.L87-.L85,.L262-.L85
	.half	5
	.byte	144,32,157,32,0
	.word	.L95-.L85,.L237-.L85
	.half	5
	.byte	144,32,157,32,0
	.word	.L409-.L85,.L25-.L85
	.half	1
	.byte	88
	.word	.L409-.L85,.L25-.L85
	.half	5
	.byte	144,32,157,32,0
	.word	.L413-.L85,.L412-.L85
	.half	1
	.byte	88
	.word	.L93-.L85,.L434-.L85
	.half	1
	.byte	88
	.word	.L93-.L85,.L242-.L85
	.half	1
	.byte	88
	.word	.L436-.L85,.L273-.L85
	.half	1
	.byte	88
	.word	0,0
.L290:
	.word	0,0
.L303:
	.word	0,0
.L297:
	.word	-1,.L85,.L432-.L85,.L34-.L85
	.half	1
	.byte	98
	.word	.L433-.L85,.L42-.L85
	.half	1
	.byte	98
	.word	.L93-.L85,.L434-.L85
	.half	1
	.byte	98
	.word	.L435-.L85,.L43-.L85
	.half	1
	.byte	98
	.word	.L93-.L85,.L242-.L85
	.half	1
	.byte	98
	.word	0,0
.L298:
	.word	-1,.L85,.L93-.L85,.L434-.L85
	.half	1
	.byte	89
	.word	.L93-.L85,.L242-.L85
	.half	1
	.byte	89
	.word	.L437-.L85,.L273-.L85
	.half	1
	.byte	89
	.word	0,0
.L294:
	.word	-1,.L85,.L417-.L85,.L418-.L85
	.half	1
	.byte	95
	.word	.L419-.L85,.L420-.L85
	.half	1
	.byte	84
	.word	.L421-.L85,.L422-.L85
	.half	1
	.byte	84
	.word	.L423-.L85,.L424-.L85
	.half	1
	.byte	84
	.word	0,0
.L295:
	.word	-1,.L85,.L416-.L85,.L29-.L85
	.half	1
	.byte	89
	.word	.L425-.L85,.L426-.L85
	.half	1
	.byte	84
	.word	.L428-.L85,.L429-.L85
	.half	1
	.byte	84
	.word	0,0
.L299:
	.word	-1,.L85,.L93-.L85,.L434-.L85
	.half	1
	.byte	90
	.word	.L93-.L85,.L242-.L85
	.half	1
	.byte	90
	.word	.L438-.L85,.L273-.L85
	.half	1
	.byte	90
	.word	0,0
.L305:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L311-.L97
	.half	2
	.byte	138,0
	.word	0,0
.L313:
	.word	-1,.L97,0,.L439-.L97
	.half	1
	.byte	100
	.word	.L440-.L97,.L311-.L97
	.half	1
	.byte	111
	.word	0,0
.L315:
	.word	-1,.L97,0,.L439-.L97
	.half	1
	.byte	101
	.word	.L441-.L97,.L311-.L97
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L353-.L99
	.half	2
	.byte	138,0
	.word	0,0
.L354:
	.word	-1,.L99,0,.L442-.L99
	.half	1
	.byte	100
	.word	.L443-.L99,.L353-.L99
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L355-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L356:
	.word	-1,.L101,0,.L355-.L101
	.half	1
	.byte	100
	.word	0,0
.L357:
	.word	-1,.L101,0,.L444-.L101
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L445-.L103
	.half	2
	.byte	138,0
	.word	.L445-.L103,.L358-.L103
	.half	2
	.byte	138,24
	.word	.L358-.L103,.L358-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L359:
	.word	-1,.L103,0,.L446-.L103
	.half	1
	.byte	100
	.word	.L59-.L103,.L247-.L103
	.half	1
	.byte	111
	.word	.L59-.L103,.L380-.L103
	.half	1
	.byte	100
	.word	.L447-.L103,.L448-.L103
	.half	1
	.byte	111
	.word	.L47-.L103,.L450-.L103
	.half	1
	.byte	100
	.word	.L95-.L103,.L402-.L103
	.half	1
	.byte	100
	.word	0,0
.L360:
	.word	-1,.L103,0,.L446-.L103
	.half	1
	.byte	84
	.word	.L59-.L103,.L247-.L103
	.half	1
	.byte	95
	.word	.L59-.L103,.L247-.L103
	.half	1
	.byte	84
	.word	.L447-.L103,.L449-.L103
	.half	1
	.byte	95
	.word	.L95-.L103,.L237-.L103
	.half	1
	.byte	84
	.word	.L47-.L103,.L48-.L103
	.half	1
	.byte	84
	.word	0,0
.L361:
	.word	-1,.L103,.L59-.L103,.L247-.L103
	.half	1
	.byte	88
	.word	.L95-.L103,.L237-.L103
	.half	1
	.byte	88
	.word	.L445-.L103,.L358-.L103
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L363-.L105
	.half	2
	.byte	138,0
	.word	0,0
.L364:
	.word	-1,.L105,0,.L451-.L105
	.half	1
	.byte	100
	.word	0,0
.L365:
	.word	-1,.L105,0,.L452-.L105
	.half	1
	.byte	84
	.word	.L453-.L105,.L363-.L105
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L454-.L107
	.half	2
	.byte	138,0
	.word	.L454-.L107,.L366-.L107
	.half	2
	.byte	138,24
	.word	.L366-.L107,.L366-.L107
	.half	2
	.byte	138,0
	.word	0,0
.L367:
	.word	-1,.L107,0,.L455-.L107
	.half	1
	.byte	100
	.word	.L51-.L107,.L457-.L107
	.half	1
	.byte	100
	.word	.L95-.L107,.L402-.L107
	.half	1
	.byte	100
	.word	0,0
.L369:
	.word	-1,.L107,.L95-.L107,.L237-.L107
	.half	1
	.byte	88
	.word	.L458-.L107,.L366-.L107
	.half	1
	.byte	88
	.word	0,0
.L368:
	.word	-1,.L107,0,.L456-.L107
	.half	1
	.byte	84
	.word	.L95-.L107,.L237-.L107
	.half	1
	.byte	84
	.word	.L51-.L107,.L52-.L107
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L371-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L374:
	.word	-1,.L109,0,.L371-.L109
	.half	1
	.byte	101
	.word	0,0
.L373:
	.word	-1,.L109,0,.L371-.L109
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L375-.L111
	.half	2
	.byte	138,0
	.word	0,0
.L376:
	.word	-1,.L111,0,.L459-.L111
	.half	1
	.byte	100
	.word	.L460-.L111,.L375-.L111
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L377-.L113
	.half	2
	.byte	138,0
	.word	0,0
.L378:
	.word	-1,.L113,0,.L461-.L113
	.half	1
	.byte	100
	.word	.L462-.L113,.L377-.L113
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L817:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L57,.L316-.L57
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L61,.L320-.L61
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L63,.L323-.L63
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_frame'
	.word	24
	.word	.L817,.L65,.L326-.L65
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_frame'
	.word	24
	.word	.L817,.L67,.L336-.L67
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_frame'
	.word	24
	.word	.L817,.L69,.L343-.L69
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_frame'
	.word	24
	.word	.L817,.L71,.L345-.L71
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_frame'
	.word	24
	.word	.L817,.L73,.L264-.L73
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_frame'
	.word	24
	.word	.L817,.L75,.L347-.L75
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L77,.L268-.L77
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_frame'
	.word	24
	.word	.L817,.L79,.L349-.L79
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L81,.L351-.L81
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L83,.L270-.L83
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L817,.L85,.L273-.L85
	.byte	4
	.word	(.L396-.L85)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L273-.L396)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L97,.L311-.L97
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L99,.L353-.L99
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L101,.L355-.L101
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_frame'
	.word	36
	.word	.L817,.L103,.L358-.L103
	.byte	4
	.word	(.L445-.L103)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L358-.L445)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L105,.L363-.L105
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_frame'
	.word	36
	.word	.L817,.L107,.L366-.L107
	.byte	4
	.word	(.L454-.L107)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L366-.L454)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_frame'
	.word	20
	.word	.L817,.L109,.L371-.L109
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L111,.L375-.L111
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L817,.L113,.L377-.L113
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L818:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L818,.L59,.L247-.L59
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_10')
	.sect	'.debug_frame'
	.word	24
	.word	.L818,.L87,.L262-.L87
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_9')
	.sect	'.debug_frame'
	.word	24
	.word	.L818,.L89,.L257-.L89
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_8')
	.sect	'.debug_frame'
	.word	24
	.word	.L818,.L91,.L252-.L91
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_6')
	.sect	'.debug_frame'
	.word	24
	.word	.L818,.L93,.L242-.L93
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L818,.L95,.L237-.L95
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
